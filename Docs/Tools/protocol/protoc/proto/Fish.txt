//创建房间返回;
message GM_CREATEROOM_Return
{
//1成功，2房间数 已经满了不能创建更多房间 3服务器错误，/*4已经在房间*/,5不存在该区;
required int32 result=1;
//创建成功的房间id;
required int32 ID=2;
//区号;
required int32 areaid=3;
}


//请求匹配;
message GM_CREATEROOM_Request
{
//区号;（初级场1，高级场2，土豪场3，包场4）
required int32 areaid=1;  
}


//请求匹配返回;
message GM_LOGINROOM_Return
{
//---匹配房间 1 成功，2房间已经不能在创建;，3不存在该区;4资金不足//6 服务器错误;
//-- 花房卡创建房间  1 成功, 2房卡不够， 5服务器错误
required int32 m_result=1;
//房间id;
required int32 ID=2;
}

//请求进入房间;
message GM_LOGINROOM_Request
{
//房间id;
required int32 ID=1;
//区号id;
required int32 areaid=2;
}


//请求进入副本;
message GM_LOGINCOPY_Request
{
//房间id;
required int32 ID=1;
//区号id;
required int32 areaid=2;
}

//请求进入副本返回;
message GM_LOGINCOPY_Return
{
//1成功， 2不存在该房间，3该房间没有此人,4 服务器错误;
required int32 result=1;
}



//玩家信息;
message GM_FishData
{
//玩家id;
required int32 playerid=1;
//人物名字;
optional string name=2;
//玩家位置;
optional int32 place=3;
}

//一个房间的信息;
message GM_RoomData
{
//房间id;
required int32 ID=1;
//房主id;
optional int32 ownid=2;
//位置;
optional int32 place=3;
//每个玩家信息;
repeated GM_FishData m_fishman=4;
}


//广播该区所有玩家信息;
message GM_AreaAllinfoReturn
{
//区号id;
required int32 areaid=1;
//所有房间;
repeated GM_RoomData m_data=2;
}


//请求该区的所有房间信息;
message GM_AreaAllinfoRequest
{
//区号;
required int32 areaid=1;
}



//请求查看 房间内的全部玩家信息;
message GM_Fish_All_request
{
//区id;
required int32 areaid=1;
//房间id;
optional int32 id=2;
}




///////////////////////COPY////////////////////////////////

//被击杀者信息;
message GM_IsKilled_info
{
//怪物的自增人物id;
required int32 roleid=1;
//怪物的;
optional int32 monsterid=2;
//怪物的类型;
optional int32 monclassification=3;
}

//击杀者信息;
message GM_Killer_info
{
//人物id;
required int32 roleid=1;
}

//击杀怪物;
message GM_Kill_Return
{
//被击杀者信息;
required int32 m_iskiller=1;
//击杀者信息;
required int32 m_killer=2;
//是否 已被击杀 1是，2否;
required int32 m_is=3;
//1 普通状态，2狂暴;
optional int32 m_state=4;

//得到的物品奖励;
repeated SM_Fish_Object data=5;
}



//离开房间;
message GM_leaveRequest
{
//区号;
required int32 areaid=1;
//房间号;
required int32 roomid=2;
}

//离开房间返回;
message GM_leaveReturn
{
// 1 房间不存在，2人物不存在 ，0成功 ;
required int32 errorid=1;
//离开的人物id;
optional int32 roleid=2;
}



//玩家 请求 发射角色技能 ;
message GM_Fish_RoleAttack
{
required int32 roleid=1;//角色id;
optional float posX = 2;///动作执行的位置;
optional float posZ = 3;///动作执行的位置;
optional int32 time = 4;///时间戳;
optional int32 guntype=5;//0 正常，1狂暴;
optional int32 gunid=6; //炮的类型;
optional int32 iscan=7;//1成功， 2数据表错误，3服务器错误，4金币不足,5能量不足,6已经是暴走状态;;
}



//请求升级炮;
message GM_Fish_Gun_request
{
//炮的id  请求的自己的炮的型号;
required int32 gunid=1;
//炮的倍率;
optional int32 gunrate=2;
//是否 购买 0切换，1购买;
optional int32 buy=3;
}


//回给 客户端 炮的类型 广播 炮的类型;
message GM_Fish_Gun_return
{
//1，成功，-1转化成功， 2资产不足,3服务器错误,4未解锁,5已经解锁;
required int32 errorid=1;
//炮的id;
optional int32 gunid=2;
//炮的倍率;
optional int32 gunrate=3;
//人物id;
optional int32 roleid=4;
}




//物品信息;
message SM_Fish_Object
{
//物品id;
required int32 objectid=1;
//物品数目;
optional int32 num=2;
}




//资产变化;
message GM_FishMoney_return
{
//人物id;
required int32 roleid=1;
//资产 现在数目;
optional int32 money=2;
}



//请求炮的信息;
message GM_FishGun_Request
{
//请求者人物信息;
required int32 roleid=1;
}


//炮的信息;
message GM_Fish_Gun
{
//炮的id;
required int32 gunid=1;
}

//炮的信息返回;
message GM_FishGun_Return
{
//自己正在使用的炮id;
required int32 selfgunid=1;
//使用炮的倍率;
optional int32 selfgunrate=2;
//自己升级到的炮的倍率;  
optional int32 guntate=3;
//自己的人物id;
optional int32 roleid=4;
//能量值;
optional int32 power=5;
//自己解锁的炮的信息;
repeated GM_Fish_Gun data=6;
}




//攻击包;
message GM_Fish_attack
{
//发出攻击的人物id;
required int32 roleid=1;
//攻击到鱼 的集合;
repeated int32 fishid=2;
}




//玩家 请求 发射角色技能 ;
message GM_Fish_RoleAttack_request
{
required int32 roleid=1;//角色id;
optional int32 time = 2;///时间戳;
optional int32 guntype=3;//0 正常，1狂暴;
optional int32 iscan=4;//1成功， 2数据表错误，3服务器错误，4金币不足,5能量不足,6已经是暴走状态;
optional int32 firetime=5;//如果是发射能量 为发射能量的时间;
optional int32 firelast=6;//如果是发射能量 为持续的时间;
}




//击杀怪物;
message GM_Fish_Kill_Return
{
//击杀者信息;
required int32 m_killer=1;
//被击杀者信息;
repeated int32 m_deadid=2;

//错误id -1没有该鱼的type表信息，-2周期调整系数没有，-3金币调整系数没有，-4鱼的数量为0, 0正确;
optional int32 errorid=3;

//0 普通状态，1狂暴;
optional int32 m_state=4;

//得到的物品奖励;
repeated SM_Fish_Object data=5;
}


//客户端请求 设置能量值;
message GM_Fish_power_set_request
{
//请求 要设置成的值;
required int32 power=1;
}

//能量 设置返回;
message GM_Fish_power_set_rturn
{
//1 成功，2已经为0，3能量值不能超过 原有值,4服务器错误,5不能 为负值;
required int32 errorid=1;
}