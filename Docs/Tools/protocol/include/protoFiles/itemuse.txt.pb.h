// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: itemuse.txt

#ifndef PROTOBUF_itemuse_2etxt__INCLUDED
#define PROTOBUF_itemuse_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_itemuse_2etxt();
void protobuf_AssignDesc_itemuse_2etxt();
void protobuf_ShutdownFile_itemuse_2etxt();

class GM_ItemUse_Open_Request;
class GM_ItemUse_Open_Result;
class GM_ItemUse_GetObject;
class GM_ItemUse_Compound_Request;
class GM_ItemUse_Compound_Result;

// ===================================================================

class GM_ItemUse_Open_Request : public ::google::protobuf::Message {
 public:
  GM_ItemUse_Open_Request();
  virtual ~GM_ItemUse_Open_Request();

  GM_ItemUse_Open_Request(const GM_ItemUse_Open_Request& from);

  inline GM_ItemUse_Open_Request& operator=(const GM_ItemUse_Open_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ItemUse_Open_Request& default_instance();

  void Swap(GM_ItemUse_Open_Request* other);

  // implements Message ----------------------------------------------

  GM_ItemUse_Open_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ItemUse_Open_Request& from);
  void MergeFrom(const GM_ItemUse_Open_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objectid = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GM_ItemUse_Open_Request)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objectid_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_itemuse_2etxt();
  friend void protobuf_AssignDesc_itemuse_2etxt();
  friend void protobuf_ShutdownFile_itemuse_2etxt();

  void InitAsDefaultInstance();
  static GM_ItemUse_Open_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_ItemUse_Open_Result : public ::google::protobuf::Message {
 public:
  GM_ItemUse_Open_Result();
  virtual ~GM_ItemUse_Open_Result();

  GM_ItemUse_Open_Result(const GM_ItemUse_Open_Result& from);

  inline GM_ItemUse_Open_Result& operator=(const GM_ItemUse_Open_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ItemUse_Open_Result& default_instance();

  void Swap(GM_ItemUse_Open_Result* other);

  // implements Message ----------------------------------------------

  GM_ItemUse_Open_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ItemUse_Open_Result& from);
  void MergeFrom(const GM_ItemUse_Open_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .GM_ItemUse_GetObject item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::GM_ItemUse_GetObject& item(int index) const;
  inline ::GM_ItemUse_GetObject* mutable_item(int index);
  inline ::GM_ItemUse_GetObject* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_ItemUse_GetObject >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_ItemUse_GetObject >*
      mutable_item();

  // required int32 usedcount = 3;
  inline bool has_usedcount() const;
  inline void clear_usedcount();
  static const int kUsedcountFieldNumber = 3;
  inline ::google::protobuf::int32 usedcount() const;
  inline void set_usedcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_ItemUse_Open_Result)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_usedcount();
  inline void clear_has_usedcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_ItemUse_GetObject > item_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 usedcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_itemuse_2etxt();
  friend void protobuf_AssignDesc_itemuse_2etxt();
  friend void protobuf_ShutdownFile_itemuse_2etxt();

  void InitAsDefaultInstance();
  static GM_ItemUse_Open_Result* default_instance_;
};
// -------------------------------------------------------------------

class GM_ItemUse_GetObject : public ::google::protobuf::Message {
 public:
  GM_ItemUse_GetObject();
  virtual ~GM_ItemUse_GetObject();

  GM_ItemUse_GetObject(const GM_ItemUse_GetObject& from);

  inline GM_ItemUse_GetObject& operator=(const GM_ItemUse_GetObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ItemUse_GetObject& default_instance();

  void Swap(GM_ItemUse_GetObject* other);

  // implements Message ----------------------------------------------

  GM_ItemUse_GetObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ItemUse_GetObject& from);
  void MergeFrom(const GM_ItemUse_GetObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objectid = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GM_ItemUse_GetObject)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objectid_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_itemuse_2etxt();
  friend void protobuf_AssignDesc_itemuse_2etxt();
  friend void protobuf_ShutdownFile_itemuse_2etxt();

  void InitAsDefaultInstance();
  static GM_ItemUse_GetObject* default_instance_;
};
// -------------------------------------------------------------------

class GM_ItemUse_Compound_Request : public ::google::protobuf::Message {
 public:
  GM_ItemUse_Compound_Request();
  virtual ~GM_ItemUse_Compound_Request();

  GM_ItemUse_Compound_Request(const GM_ItemUse_Compound_Request& from);

  inline GM_ItemUse_Compound_Request& operator=(const GM_ItemUse_Compound_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ItemUse_Compound_Request& default_instance();

  void Swap(GM_ItemUse_Compound_Request* other);

  // implements Message ----------------------------------------------

  GM_ItemUse_Compound_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ItemUse_Compound_Request& from);
  void MergeFrom(const GM_ItemUse_Compound_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 chipid = 1;
  inline bool has_chipid() const;
  inline void clear_chipid();
  static const int kChipidFieldNumber = 1;
  inline ::google::protobuf::int32 chipid() const;
  inline void set_chipid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_ItemUse_Compound_Request)
 private:
  inline void set_has_chipid();
  inline void clear_has_chipid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chipid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_itemuse_2etxt();
  friend void protobuf_AssignDesc_itemuse_2etxt();
  friend void protobuf_ShutdownFile_itemuse_2etxt();

  void InitAsDefaultInstance();
  static GM_ItemUse_Compound_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_ItemUse_Compound_Result : public ::google::protobuf::Message {
 public:
  GM_ItemUse_Compound_Result();
  virtual ~GM_ItemUse_Compound_Result();

  GM_ItemUse_Compound_Result(const GM_ItemUse_Compound_Result& from);

  inline GM_ItemUse_Compound_Result& operator=(const GM_ItemUse_Compound_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ItemUse_Compound_Result& default_instance();

  void Swap(GM_ItemUse_Compound_Result* other);

  // implements Message ----------------------------------------------

  GM_ItemUse_Compound_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ItemUse_Compound_Result& from);
  void MergeFrom(const GM_ItemUse_Compound_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 objectid = 2;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 2;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // optional int32 objectnum = 3;
  inline bool has_objectnum() const;
  inline void clear_objectnum();
  static const int kObjectnumFieldNumber = 3;
  inline ::google::protobuf::int32 objectnum() const;
  inline void set_objectnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_ItemUse_Compound_Result)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_objectnum();
  inline void clear_has_objectnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 objectnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_itemuse_2etxt();
  friend void protobuf_AssignDesc_itemuse_2etxt();
  friend void protobuf_ShutdownFile_itemuse_2etxt();

  void InitAsDefaultInstance();
  static GM_ItemUse_Compound_Result* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_ItemUse_Open_Request

// required int32 objectid = 1;
inline bool GM_ItemUse_Open_Request::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ItemUse_Open_Request::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ItemUse_Open_Request::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ItemUse_Open_Request::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_ItemUse_Open_Request::objectid() const {
  return objectid_;
}
inline void GM_ItemUse_Open_Request::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// required uint32 count = 2;
inline bool GM_ItemUse_Open_Request::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_ItemUse_Open_Request::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_ItemUse_Open_Request::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_ItemUse_Open_Request::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GM_ItemUse_Open_Request::count() const {
  return count_;
}
inline void GM_ItemUse_Open_Request::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// GM_ItemUse_Open_Result

// required int32 result = 1;
inline bool GM_ItemUse_Open_Result::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ItemUse_Open_Result::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ItemUse_Open_Result::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ItemUse_Open_Result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_ItemUse_Open_Result::result() const {
  return result_;
}
inline void GM_ItemUse_Open_Result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .GM_ItemUse_GetObject item = 2;
inline int GM_ItemUse_Open_Result::item_size() const {
  return item_.size();
}
inline void GM_ItemUse_Open_Result::clear_item() {
  item_.Clear();
}
inline const ::GM_ItemUse_GetObject& GM_ItemUse_Open_Result::item(int index) const {
  return item_.Get(index);
}
inline ::GM_ItemUse_GetObject* GM_ItemUse_Open_Result::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::GM_ItemUse_GetObject* GM_ItemUse_Open_Result::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_ItemUse_GetObject >&
GM_ItemUse_Open_Result::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_ItemUse_GetObject >*
GM_ItemUse_Open_Result::mutable_item() {
  return &item_;
}

// required int32 usedcount = 3;
inline bool GM_ItemUse_Open_Result::has_usedcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_ItemUse_Open_Result::set_has_usedcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_ItemUse_Open_Result::clear_has_usedcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_ItemUse_Open_Result::clear_usedcount() {
  usedcount_ = 0;
  clear_has_usedcount();
}
inline ::google::protobuf::int32 GM_ItemUse_Open_Result::usedcount() const {
  return usedcount_;
}
inline void GM_ItemUse_Open_Result::set_usedcount(::google::protobuf::int32 value) {
  set_has_usedcount();
  usedcount_ = value;
}

// -------------------------------------------------------------------

// GM_ItemUse_GetObject

// required int32 objectid = 1;
inline bool GM_ItemUse_GetObject::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ItemUse_GetObject::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ItemUse_GetObject::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ItemUse_GetObject::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_ItemUse_GetObject::objectid() const {
  return objectid_;
}
inline void GM_ItemUse_GetObject::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// required uint32 count = 2;
inline bool GM_ItemUse_GetObject::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_ItemUse_GetObject::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_ItemUse_GetObject::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_ItemUse_GetObject::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GM_ItemUse_GetObject::count() const {
  return count_;
}
inline void GM_ItemUse_GetObject::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// GM_ItemUse_Compound_Request

// required int32 chipid = 1;
inline bool GM_ItemUse_Compound_Request::has_chipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ItemUse_Compound_Request::set_has_chipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ItemUse_Compound_Request::clear_has_chipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ItemUse_Compound_Request::clear_chipid() {
  chipid_ = 0;
  clear_has_chipid();
}
inline ::google::protobuf::int32 GM_ItemUse_Compound_Request::chipid() const {
  return chipid_;
}
inline void GM_ItemUse_Compound_Request::set_chipid(::google::protobuf::int32 value) {
  set_has_chipid();
  chipid_ = value;
}

// -------------------------------------------------------------------

// GM_ItemUse_Compound_Result

// required int32 result = 1;
inline bool GM_ItemUse_Compound_Result::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ItemUse_Compound_Result::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ItemUse_Compound_Result::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ItemUse_Compound_Result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_ItemUse_Compound_Result::result() const {
  return result_;
}
inline void GM_ItemUse_Compound_Result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 objectid = 2;
inline bool GM_ItemUse_Compound_Result::has_objectid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_ItemUse_Compound_Result::set_has_objectid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_ItemUse_Compound_Result::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_ItemUse_Compound_Result::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_ItemUse_Compound_Result::objectid() const {
  return objectid_;
}
inline void GM_ItemUse_Compound_Result::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// optional int32 objectnum = 3;
inline bool GM_ItemUse_Compound_Result::has_objectnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_ItemUse_Compound_Result::set_has_objectnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_ItemUse_Compound_Result::clear_has_objectnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_ItemUse_Compound_Result::clear_objectnum() {
  objectnum_ = 0;
  clear_has_objectnum();
}
inline ::google::protobuf::int32 GM_ItemUse_Compound_Result::objectnum() const {
  return objectnum_;
}
inline void GM_ItemUse_Compound_Result::set_objectnum(::google::protobuf::int32 value) {
  set_has_objectnum();
  objectnum_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_itemuse_2etxt__INCLUDED
