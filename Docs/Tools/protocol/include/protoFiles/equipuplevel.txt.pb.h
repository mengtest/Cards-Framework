// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: equipuplevel.txt

#ifndef PROTOBUF_equipuplevel_2etxt__INCLUDED
#define PROTOBUF_equipuplevel_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_equipuplevel_2etxt();
void protobuf_AssignDesc_equipuplevel_2etxt();
void protobuf_ShutdownFile_equipuplevel_2etxt();

class GM_EquipInfoReturn;
class GM_EquipForge;
class GM_EquipAwaken;
class GM_OneKeyInfoReturn;
class GM_ForgeRequest;
class GM_EquipNotify;
class GM_EquipAwaken_UI_Request;
class GM_EquipAwaken_UI_Return;
class GM_EquipAwaken_Hole_Detail;
class GM_EquipAwaken_Upgrade_Request;
class GM_EquipAwaken_Upgrade_Return;
class GM_EquipAwaken_Obtain_Request;
class GM_EquipAwaken_Obtain_Return;
class GM_EquipAwaken_AddSwap_Request;
class GM_EquipAwaken_AddSwap_Return;
class GM_EquipAwaken_Store_Request;
class GM_EquipAwaken_Store_Return;
class GM_EquipAwaken_Refine_Request;
class GM_EquipAwaken_Refine_Return;
class GM_EquipAwaken_Unlock_Request;
class GM_EquipAwaken_Unlock_Return;
class GM_EquipAwaken_Info_Request;
class GM_EquipAwaken_Info_Return;
class GM_EquipAwaken_Info;
class GM_EquipAwaken_Swap_Request;
class GM_EquipAwaken_Swap_Return;
class GM_EquipAwaken_Upgrade_Change;
class GM_EquipAwaken_Upgrade_Info;
class GM_EquipWing_Request;
class GM_AwakeEquip;
class GM_AwakeEquipAll;
class GM_AwakeEquipRequest;

// ===================================================================

class GM_EquipInfoReturn : public ::google::protobuf::Message {
 public:
  GM_EquipInfoReturn();
  virtual ~GM_EquipInfoReturn();

  GM_EquipInfoReturn(const GM_EquipInfoReturn& from);

  inline GM_EquipInfoReturn& operator=(const GM_EquipInfoReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipInfoReturn& default_instance();

  void Swap(GM_EquipInfoReturn* other);

  // implements Message ----------------------------------------------

  GM_EquipInfoReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipInfoReturn& from);
  void MergeFrom(const GM_EquipInfoReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional int32 m_ironcount = 2;
  inline bool has_m_ironcount() const;
  inline void clear_m_ironcount();
  static const int kMIroncountFieldNumber = 2;
  inline ::google::protobuf::int32 m_ironcount() const;
  inline void set_m_ironcount(::google::protobuf::int32 value);

  // optional int32 m_elitestone = 3;
  inline bool has_m_elitestone() const;
  inline void clear_m_elitestone();
  static const int kMElitestoneFieldNumber = 3;
  inline ::google::protobuf::int32 m_elitestone() const;
  inline void set_m_elitestone(::google::protobuf::int32 value);

  // optional int32 m_animalbone = 4;
  inline bool has_m_animalbone() const;
  inline void clear_m_animalbone();
  static const int kMAnimalboneFieldNumber = 4;
  inline ::google::protobuf::int32 m_animalbone() const;
  inline void set_m_animalbone(::google::protobuf::int32 value);

  // optional int32 m_ironid = 6;
  inline bool has_m_ironid() const;
  inline void clear_m_ironid();
  static const int kMIronidFieldNumber = 6;
  inline ::google::protobuf::int32 m_ironid() const;
  inline void set_m_ironid(::google::protobuf::int32 value);

  // repeated .GM_EquipForge m_equipinfo = 5;
  inline int m_equipinfo_size() const;
  inline void clear_m_equipinfo();
  static const int kMEquipinfoFieldNumber = 5;
  inline const ::GM_EquipForge& m_equipinfo(int index) const;
  inline ::GM_EquipForge* mutable_m_equipinfo(int index);
  inline ::GM_EquipForge* add_m_equipinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipForge >&
      m_equipinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_EquipForge >*
      mutable_m_equipinfo();

  // @@protoc_insertion_point(class_scope:GM_EquipInfoReturn)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_ironcount();
  inline void clear_has_m_ironcount();
  inline void set_has_m_elitestone();
  inline void clear_has_m_elitestone();
  inline void set_has_m_animalbone();
  inline void clear_has_m_animalbone();
  inline void set_has_m_ironid();
  inline void clear_has_m_ironid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_ironcount_;
  ::google::protobuf::int32 m_elitestone_;
  ::google::protobuf::int32 m_animalbone_;
  ::google::protobuf::RepeatedPtrField< ::GM_EquipForge > m_equipinfo_;
  ::google::protobuf::int32 m_ironid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipInfoReturn* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipForge : public ::google::protobuf::Message {
 public:
  GM_EquipForge();
  virtual ~GM_EquipForge();

  GM_EquipForge(const GM_EquipForge& from);

  inline GM_EquipForge& operator=(const GM_EquipForge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipForge& default_instance();

  void Swap(GM_EquipForge* other);

  // implements Message ----------------------------------------------

  GM_EquipForge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipForge& from);
  void MergeFrom(const GM_EquipForge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 m_gmid = 1;
  inline bool has_m_gmid() const;
  inline void clear_m_gmid();
  static const int kMGmidFieldNumber = 1;
  inline ::google::protobuf::int64 m_gmid() const;
  inline void set_m_gmid(::google::protobuf::int64 value);

  // optional int32 m_forgeLv = 2;
  inline bool has_m_forgelv() const;
  inline void clear_m_forgelv();
  static const int kMForgeLvFieldNumber = 2;
  inline ::google::protobuf::int32 m_forgelv() const;
  inline void set_m_forgelv(::google::protobuf::int32 value);

  // optional int32 m_forgeExp = 3;
  inline bool has_m_forgeexp() const;
  inline void clear_m_forgeexp();
  static const int kMForgeExpFieldNumber = 3;
  inline ::google::protobuf::int32 m_forgeexp() const;
  inline void set_m_forgeexp(::google::protobuf::int32 value);

  // optional int32 m_refinLv = 4;
  inline bool has_m_refinlv() const;
  inline void clear_m_refinlv();
  static const int kMRefinLvFieldNumber = 4;
  inline ::google::protobuf::int32 m_refinlv() const;
  inline void set_m_refinlv(::google::protobuf::int32 value);

  // optional int32 m_gradeLv = 5;
  inline bool has_m_gradelv() const;
  inline void clear_m_gradelv();
  static const int kMGradeLvFieldNumber = 5;
  inline ::google::protobuf::int32 m_gradelv() const;
  inline void set_m_gradelv(::google::protobuf::int32 value);

  // repeated .GM_EquipAwaken m_awkenInfo = 6;
  inline int m_awkeninfo_size() const;
  inline void clear_m_awkeninfo();
  static const int kMAwkenInfoFieldNumber = 6;
  inline const ::GM_EquipAwaken& m_awkeninfo(int index) const;
  inline ::GM_EquipAwaken* mutable_m_awkeninfo(int index);
  inline ::GM_EquipAwaken* add_m_awkeninfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken >&
      m_awkeninfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken >*
      mutable_m_awkeninfo();

  // optional int32 m_winglevel = 7;
  inline bool has_m_winglevel() const;
  inline void clear_m_winglevel();
  static const int kMWinglevelFieldNumber = 7;
  inline ::google::protobuf::int32 m_winglevel() const;
  inline void set_m_winglevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_EquipForge)
 private:
  inline void set_has_m_gmid();
  inline void clear_has_m_gmid();
  inline void set_has_m_forgelv();
  inline void clear_has_m_forgelv();
  inline void set_has_m_forgeexp();
  inline void clear_has_m_forgeexp();
  inline void set_has_m_refinlv();
  inline void clear_has_m_refinlv();
  inline void set_has_m_gradelv();
  inline void clear_has_m_gradelv();
  inline void set_has_m_winglevel();
  inline void clear_has_m_winglevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_gmid_;
  ::google::protobuf::int32 m_forgelv_;
  ::google::protobuf::int32 m_forgeexp_;
  ::google::protobuf::int32 m_refinlv_;
  ::google::protobuf::int32 m_gradelv_;
  ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken > m_awkeninfo_;
  ::google::protobuf::int32 m_winglevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipForge* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken();
  virtual ~GM_EquipAwaken();

  GM_EquipAwaken(const GM_EquipAwaken& from);

  inline GM_EquipAwaken& operator=(const GM_EquipAwaken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken& default_instance();

  void Swap(GM_EquipAwaken* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken& from);
  void MergeFrom(const GM_EquipAwaken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_propertyid = 1;
  inline bool has_m_propertyid() const;
  inline void clear_m_propertyid();
  static const int kMPropertyidFieldNumber = 1;
  inline ::google::protobuf::int32 m_propertyid() const;
  inline void set_m_propertyid(::google::protobuf::int32 value);

  // optional int32 m_propertyLv = 2;
  inline bool has_m_propertylv() const;
  inline void clear_m_propertylv();
  static const int kMPropertyLvFieldNumber = 2;
  inline ::google::protobuf::int32 m_propertylv() const;
  inline void set_m_propertylv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken)
 private:
  inline void set_has_m_propertyid();
  inline void clear_has_m_propertyid();
  inline void set_has_m_propertylv();
  inline void clear_has_m_propertylv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_propertyid_;
  ::google::protobuf::int32 m_propertylv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken* default_instance_;
};
// -------------------------------------------------------------------

class GM_OneKeyInfoReturn : public ::google::protobuf::Message {
 public:
  GM_OneKeyInfoReturn();
  virtual ~GM_OneKeyInfoReturn();

  GM_OneKeyInfoReturn(const GM_OneKeyInfoReturn& from);

  inline GM_OneKeyInfoReturn& operator=(const GM_OneKeyInfoReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_OneKeyInfoReturn& default_instance();

  void Swap(GM_OneKeyInfoReturn* other);

  // implements Message ----------------------------------------------

  GM_OneKeyInfoReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_OneKeyInfoReturn& from);
  void MergeFrom(const GM_OneKeyInfoReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_costGold = 1;
  inline bool has_m_costgold() const;
  inline void clear_m_costgold();
  static const int kMCostGoldFieldNumber = 1;
  inline ::google::protobuf::int32 m_costgold() const;
  inline void set_m_costgold(::google::protobuf::int32 value);

  // optional int32 m_costIron = 2;
  inline bool has_m_costiron() const;
  inline void clear_m_costiron();
  static const int kMCostIronFieldNumber = 2;
  inline ::google::protobuf::int32 m_costiron() const;
  inline void set_m_costiron(::google::protobuf::int32 value);

  // optional int32 m_maxForgeLv = 3;
  inline bool has_m_maxforgelv() const;
  inline void clear_m_maxforgelv();
  static const int kMMaxForgeLvFieldNumber = 3;
  inline ::google::protobuf::int32 m_maxforgelv() const;
  inline void set_m_maxforgelv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_OneKeyInfoReturn)
 private:
  inline void set_has_m_costgold();
  inline void clear_has_m_costgold();
  inline void set_has_m_costiron();
  inline void clear_has_m_costiron();
  inline void set_has_m_maxforgelv();
  inline void clear_has_m_maxforgelv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_costgold_;
  ::google::protobuf::int32 m_costiron_;
  ::google::protobuf::int32 m_maxforgelv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_OneKeyInfoReturn* default_instance_;
};
// -------------------------------------------------------------------

class GM_ForgeRequest : public ::google::protobuf::Message {
 public:
  GM_ForgeRequest();
  virtual ~GM_ForgeRequest();

  GM_ForgeRequest(const GM_ForgeRequest& from);

  inline GM_ForgeRequest& operator=(const GM_ForgeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ForgeRequest& default_instance();

  void Swap(GM_ForgeRequest* other);

  // implements Message ----------------------------------------------

  GM_ForgeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ForgeRequest& from);
  void MergeFrom(const GM_ForgeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 m_gmid = 1;
  inline bool has_m_gmid() const;
  inline void clear_m_gmid();
  static const int kMGmidFieldNumber = 1;
  inline ::google::protobuf::int64 m_gmid() const;
  inline void set_m_gmid(::google::protobuf::int64 value);

  // repeated int64 m_gmids = 2;
  inline int m_gmids_size() const;
  inline void clear_m_gmids();
  static const int kMGmidsFieldNumber = 2;
  inline ::google::protobuf::int64 m_gmids(int index) const;
  inline void set_m_gmids(int index, ::google::protobuf::int64 value);
  inline void add_m_gmids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      m_gmids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_m_gmids();

  // @@protoc_insertion_point(class_scope:GM_ForgeRequest)
 private:
  inline void set_has_m_gmid();
  inline void clear_has_m_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_gmid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > m_gmids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_ForgeRequest* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipNotify : public ::google::protobuf::Message {
 public:
  GM_EquipNotify();
  virtual ~GM_EquipNotify();

  GM_EquipNotify(const GM_EquipNotify& from);

  inline GM_EquipNotify& operator=(const GM_EquipNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipNotify& default_instance();

  void Swap(GM_EquipNotify* other);

  // implements Message ----------------------------------------------

  GM_EquipNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipNotify& from);
  void MergeFrom(const GM_EquipNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_type = 1;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 1;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // required .GM_EquipForge m_equipinfo = 2;
  inline bool has_m_equipinfo() const;
  inline void clear_m_equipinfo();
  static const int kMEquipinfoFieldNumber = 2;
  inline const ::GM_EquipForge& m_equipinfo() const;
  inline ::GM_EquipForge* mutable_m_equipinfo();
  inline ::GM_EquipForge* release_m_equipinfo();
  inline void set_allocated_m_equipinfo(::GM_EquipForge* m_equipinfo);

  // @@protoc_insertion_point(class_scope:GM_EquipNotify)
 private:
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_equipinfo();
  inline void clear_has_m_equipinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GM_EquipForge* m_equipinfo_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipNotify* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_UI_Request : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_UI_Request();
  virtual ~GM_EquipAwaken_UI_Request();

  GM_EquipAwaken_UI_Request(const GM_EquipAwaken_UI_Request& from);

  inline GM_EquipAwaken_UI_Request& operator=(const GM_EquipAwaken_UI_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_UI_Request& default_instance();

  void Swap(GM_EquipAwaken_UI_Request* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_UI_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_UI_Request& from);
  void MergeFrom(const GM_EquipAwaken_UI_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_UI_Request)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_UI_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_UI_Return : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_UI_Return();
  virtual ~GM_EquipAwaken_UI_Return();

  GM_EquipAwaken_UI_Return(const GM_EquipAwaken_UI_Return& from);

  inline GM_EquipAwaken_UI_Return& operator=(const GM_EquipAwaken_UI_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_UI_Return& default_instance();

  void Swap(GM_EquipAwaken_UI_Return* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_UI_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_UI_Return& from);
  void MergeFrom(const GM_EquipAwaken_UI_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int64 gmid = 2;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 2;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // optional int64 experience = 3;
  inline bool has_experience() const;
  inline void clear_experience();
  static const int kExperienceFieldNumber = 3;
  inline ::google::protobuf::int64 experience() const;
  inline void set_experience(::google::protobuf::int64 value);

  // optional int32 pillNum = 4;
  inline bool has_pillnum() const;
  inline void clear_pillnum();
  static const int kPillNumFieldNumber = 4;
  inline ::google::protobuf::int32 pillnum() const;
  inline void set_pillnum(::google::protobuf::int32 value);

  // optional int32 diamondTotal = 5;
  inline bool has_diamondtotal() const;
  inline void clear_diamondtotal();
  static const int kDiamondTotalFieldNumber = 5;
  inline ::google::protobuf::int32 diamondtotal() const;
  inline void set_diamondtotal(::google::protobuf::int32 value);

  // optional int32 diamondNeed = 6;
  inline bool has_diamondneed() const;
  inline void clear_diamondneed();
  static const int kDiamondNeedFieldNumber = 6;
  inline ::google::protobuf::int32 diamondneed() const;
  inline void set_diamondneed(::google::protobuf::int32 value);

  // optional float discount = 7;
  inline bool has_discount() const;
  inline void clear_discount();
  static const int kDiscountFieldNumber = 7;
  inline float discount() const;
  inline void set_discount(float value);

  // repeated .GM_EquipAwaken_Hole_Detail data = 8;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 8;
  inline const ::GM_EquipAwaken_Hole_Detail& data(int index) const;
  inline ::GM_EquipAwaken_Hole_Detail* mutable_data(int index);
  inline ::GM_EquipAwaken_Hole_Detail* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Hole_Detail >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Hole_Detail >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_UI_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_experience();
  inline void clear_has_experience();
  inline void set_has_pillnum();
  inline void clear_has_pillnum();
  inline void set_has_diamondtotal();
  inline void clear_has_diamondtotal();
  inline void set_has_diamondneed();
  inline void clear_has_diamondneed();
  inline void set_has_discount();
  inline void clear_has_discount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 pillnum_;
  ::google::protobuf::int64 experience_;
  ::google::protobuf::int32 diamondtotal_;
  ::google::protobuf::int32 diamondneed_;
  ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Hole_Detail > data_;
  float discount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_UI_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Hole_Detail : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Hole_Detail();
  virtual ~GM_EquipAwaken_Hole_Detail();

  GM_EquipAwaken_Hole_Detail(const GM_EquipAwaken_Hole_Detail& from);

  inline GM_EquipAwaken_Hole_Detail& operator=(const GM_EquipAwaken_Hole_Detail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Hole_Detail& default_instance();

  void Swap(GM_EquipAwaken_Hole_Detail* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Hole_Detail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Hole_Detail& from);
  void MergeFrom(const GM_EquipAwaken_Hole_Detail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 holenum = 1;
  inline bool has_holenum() const;
  inline void clear_holenum();
  static const int kHolenumFieldNumber = 1;
  inline ::google::protobuf::int32 holenum() const;
  inline void set_holenum(::google::protobuf::int32 value);

  // optional int32 propertyId = 2;
  inline bool has_propertyid() const;
  inline void clear_propertyid();
  static const int kPropertyIdFieldNumber = 2;
  inline ::google::protobuf::int32 propertyid() const;
  inline void set_propertyid(::google::protobuf::int32 value);

  // optional int32 propertyLevel = 3;
  inline bool has_propertylevel() const;
  inline void clear_propertylevel();
  static const int kPropertyLevelFieldNumber = 3;
  inline ::google::protobuf::int32 propertylevel() const;
  inline void set_propertylevel(::google::protobuf::int32 value);

  // optional int32 maxlevel = 4;
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxlevelFieldNumber = 4;
  inline ::google::protobuf::int32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::int32 value);

  // optional int32 state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Hole_Detail)
 private:
  inline void set_has_holenum();
  inline void clear_has_holenum();
  inline void set_has_propertyid();
  inline void clear_has_propertyid();
  inline void set_has_propertylevel();
  inline void clear_has_propertylevel();
  inline void set_has_maxlevel();
  inline void clear_has_maxlevel();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 holenum_;
  ::google::protobuf::int32 propertyid_;
  ::google::protobuf::int32 propertylevel_;
  ::google::protobuf::int32 maxlevel_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Hole_Detail* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Upgrade_Request : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Upgrade_Request();
  virtual ~GM_EquipAwaken_Upgrade_Request();

  GM_EquipAwaken_Upgrade_Request(const GM_EquipAwaken_Upgrade_Request& from);

  inline GM_EquipAwaken_Upgrade_Request& operator=(const GM_EquipAwaken_Upgrade_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Upgrade_Request& default_instance();

  void Swap(GM_EquipAwaken_Upgrade_Request* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Upgrade_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Upgrade_Request& from);
  void MergeFrom(const GM_EquipAwaken_Upgrade_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // optional int32 holenum = 2;
  inline bool has_holenum() const;
  inline void clear_holenum();
  static const int kHolenumFieldNumber = 2;
  inline ::google::protobuf::int32 holenum() const;
  inline void set_holenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Upgrade_Request)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_holenum();
  inline void clear_has_holenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;
  ::google::protobuf::int32 holenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Upgrade_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Upgrade_Return : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Upgrade_Return();
  virtual ~GM_EquipAwaken_Upgrade_Return();

  GM_EquipAwaken_Upgrade_Return(const GM_EquipAwaken_Upgrade_Return& from);

  inline GM_EquipAwaken_Upgrade_Return& operator=(const GM_EquipAwaken_Upgrade_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Upgrade_Return& default_instance();

  void Swap(GM_EquipAwaken_Upgrade_Return* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Upgrade_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Upgrade_Return& from);
  void MergeFrom(const GM_EquipAwaken_Upgrade_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int64 gmid = 2;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 2;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // optional int32 holenum = 3;
  inline bool has_holenum() const;
  inline void clear_holenum();
  static const int kHolenumFieldNumber = 3;
  inline ::google::protobuf::int32 holenum() const;
  inline void set_holenum(::google::protobuf::int32 value);

  // optional int32 propertyId = 4;
  inline bool has_propertyid() const;
  inline void clear_propertyid();
  static const int kPropertyIdFieldNumber = 4;
  inline ::google::protobuf::int32 propertyid() const;
  inline void set_propertyid(::google::protobuf::int32 value);

  // optional int32 propertyLevel = 5;
  inline bool has_propertylevel() const;
  inline void clear_propertylevel();
  static const int kPropertyLevelFieldNumber = 5;
  inline ::google::protobuf::int32 propertylevel() const;
  inline void set_propertylevel(::google::protobuf::int32 value);

  // optional int64 experience = 6;
  inline bool has_experience() const;
  inline void clear_experience();
  static const int kExperienceFieldNumber = 6;
  inline ::google::protobuf::int64 experience() const;
  inline void set_experience(::google::protobuf::int64 value);

  // optional int32 canupgrade = 7;
  inline bool has_canupgrade() const;
  inline void clear_canupgrade();
  static const int kCanupgradeFieldNumber = 7;
  inline ::google::protobuf::int32 canupgrade() const;
  inline void set_canupgrade(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Upgrade_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_holenum();
  inline void clear_has_holenum();
  inline void set_has_propertyid();
  inline void clear_has_propertyid();
  inline void set_has_propertylevel();
  inline void clear_has_propertylevel();
  inline void set_has_experience();
  inline void clear_has_experience();
  inline void set_has_canupgrade();
  inline void clear_has_canupgrade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 holenum_;
  ::google::protobuf::int32 propertyid_;
  ::google::protobuf::int32 propertylevel_;
  ::google::protobuf::int64 experience_;
  ::google::protobuf::int32 canupgrade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Upgrade_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Obtain_Request : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Obtain_Request();
  virtual ~GM_EquipAwaken_Obtain_Request();

  GM_EquipAwaken_Obtain_Request(const GM_EquipAwaken_Obtain_Request& from);

  inline GM_EquipAwaken_Obtain_Request& operator=(const GM_EquipAwaken_Obtain_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Obtain_Request& default_instance();

  void Swap(GM_EquipAwaken_Obtain_Request* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Obtain_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Obtain_Request& from);
  void MergeFrom(const GM_EquipAwaken_Obtain_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // optional int32 obtainType = 2;
  inline bool has_obtaintype() const;
  inline void clear_obtaintype();
  static const int kObtainTypeFieldNumber = 2;
  inline ::google::protobuf::int32 obtaintype() const;
  inline void set_obtaintype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Obtain_Request)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_obtaintype();
  inline void clear_has_obtaintype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;
  ::google::protobuf::int32 obtaintype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Obtain_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Obtain_Return : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Obtain_Return();
  virtual ~GM_EquipAwaken_Obtain_Return();

  GM_EquipAwaken_Obtain_Return(const GM_EquipAwaken_Obtain_Return& from);

  inline GM_EquipAwaken_Obtain_Return& operator=(const GM_EquipAwaken_Obtain_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Obtain_Return& default_instance();

  void Swap(GM_EquipAwaken_Obtain_Return* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Obtain_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Obtain_Return& from);
  void MergeFrom(const GM_EquipAwaken_Obtain_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int64 gmid = 2;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 2;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // optional int32 obtainType = 3;
  inline bool has_obtaintype() const;
  inline void clear_obtaintype();
  static const int kObtainTypeFieldNumber = 3;
  inline ::google::protobuf::int32 obtaintype() const;
  inline void set_obtaintype(::google::protobuf::int32 value);

  // optional int32 pillNum = 4;
  inline bool has_pillnum() const;
  inline void clear_pillnum();
  static const int kPillNumFieldNumber = 4;
  inline ::google::protobuf::int32 pillnum() const;
  inline void set_pillnum(::google::protobuf::int32 value);

  // optional int32 diamondTotal = 5;
  inline bool has_diamondtotal() const;
  inline void clear_diamondtotal();
  static const int kDiamondTotalFieldNumber = 5;
  inline ::google::protobuf::int32 diamondtotal() const;
  inline void set_diamondtotal(::google::protobuf::int32 value);

  // optional int32 diamondNeed = 6;
  inline bool has_diamondneed() const;
  inline void clear_diamondneed();
  static const int kDiamondNeedFieldNumber = 6;
  inline ::google::protobuf::int32 diamondneed() const;
  inline void set_diamondneed(::google::protobuf::int32 value);

  // optional int32 getexp = 7;
  inline bool has_getexp() const;
  inline void clear_getexp();
  static const int kGetexpFieldNumber = 7;
  inline ::google::protobuf::int32 getexp() const;
  inline void set_getexp(::google::protobuf::int32 value);

  // optional int64 experience = 8;
  inline bool has_experience() const;
  inline void clear_experience();
  static const int kExperienceFieldNumber = 8;
  inline ::google::protobuf::int64 experience() const;
  inline void set_experience(::google::protobuf::int64 value);

  // optional .GM_EquipAwaken_Hole_Detail data = 9;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 9;
  inline const ::GM_EquipAwaken_Hole_Detail& data() const;
  inline ::GM_EquipAwaken_Hole_Detail* mutable_data();
  inline ::GM_EquipAwaken_Hole_Detail* release_data();
  inline void set_allocated_data(::GM_EquipAwaken_Hole_Detail* data);

  // optional int32 realtimes = 10;
  inline bool has_realtimes() const;
  inline void clear_realtimes();
  static const int kRealtimesFieldNumber = 10;
  inline ::google::protobuf::int32 realtimes() const;
  inline void set_realtimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Obtain_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_obtaintype();
  inline void clear_has_obtaintype();
  inline void set_has_pillnum();
  inline void clear_has_pillnum();
  inline void set_has_diamondtotal();
  inline void clear_has_diamondtotal();
  inline void set_has_diamondneed();
  inline void clear_has_diamondneed();
  inline void set_has_getexp();
  inline void clear_has_getexp();
  inline void set_has_experience();
  inline void clear_has_experience();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_realtimes();
  inline void clear_has_realtimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 obtaintype_;
  ::google::protobuf::int32 pillnum_;
  ::google::protobuf::int32 diamondtotal_;
  ::google::protobuf::int32 diamondneed_;
  ::google::protobuf::int32 getexp_;
  ::google::protobuf::int64 experience_;
  ::GM_EquipAwaken_Hole_Detail* data_;
  ::google::protobuf::int32 realtimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Obtain_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_AddSwap_Request : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_AddSwap_Request();
  virtual ~GM_EquipAwaken_AddSwap_Request();

  GM_EquipAwaken_AddSwap_Request(const GM_EquipAwaken_AddSwap_Request& from);

  inline GM_EquipAwaken_AddSwap_Request& operator=(const GM_EquipAwaken_AddSwap_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_AddSwap_Request& default_instance();

  void Swap(GM_EquipAwaken_AddSwap_Request* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_AddSwap_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_AddSwap_Request& from);
  void MergeFrom(const GM_EquipAwaken_AddSwap_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // required int32 holenum = 2;
  inline bool has_holenum() const;
  inline void clear_holenum();
  static const int kHolenumFieldNumber = 2;
  inline ::google::protobuf::int32 holenum() const;
  inline void set_holenum(::google::protobuf::int32 value);

  // required int32 replaceholenum = 3;
  inline bool has_replaceholenum() const;
  inline void clear_replaceholenum();
  static const int kReplaceholenumFieldNumber = 3;
  inline ::google::protobuf::int32 replaceholenum() const;
  inline void set_replaceholenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_AddSwap_Request)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_holenum();
  inline void clear_has_holenum();
  inline void set_has_replaceholenum();
  inline void clear_has_replaceholenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;
  ::google::protobuf::int32 holenum_;
  ::google::protobuf::int32 replaceholenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_AddSwap_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_AddSwap_Return : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_AddSwap_Return();
  virtual ~GM_EquipAwaken_AddSwap_Return();

  GM_EquipAwaken_AddSwap_Return(const GM_EquipAwaken_AddSwap_Return& from);

  inline GM_EquipAwaken_AddSwap_Return& operator=(const GM_EquipAwaken_AddSwap_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_AddSwap_Return& default_instance();

  void Swap(GM_EquipAwaken_AddSwap_Return* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_AddSwap_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_AddSwap_Return& from);
  void MergeFrom(const GM_EquipAwaken_AddSwap_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int64 gmid = 2;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 2;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // optional int32 holenum = 3;
  inline bool has_holenum() const;
  inline void clear_holenum();
  static const int kHolenumFieldNumber = 3;
  inline ::google::protobuf::int32 holenum() const;
  inline void set_holenum(::google::protobuf::int32 value);

  // optional int32 replaceholenum = 4;
  inline bool has_replaceholenum() const;
  inline void clear_replaceholenum();
  static const int kReplaceholenumFieldNumber = 4;
  inline ::google::protobuf::int32 replaceholenum() const;
  inline void set_replaceholenum(::google::protobuf::int32 value);

  // optional int32 getexp = 5;
  inline bool has_getexp() const;
  inline void clear_getexp();
  static const int kGetexpFieldNumber = 5;
  inline ::google::protobuf::int32 getexp() const;
  inline void set_getexp(::google::protobuf::int32 value);

  // optional int64 experience = 6;
  inline bool has_experience() const;
  inline void clear_experience();
  static const int kExperienceFieldNumber = 6;
  inline ::google::protobuf::int64 experience() const;
  inline void set_experience(::google::protobuf::int64 value);

  // repeated .GM_EquipAwaken_Hole_Detail data = 7;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 7;
  inline const ::GM_EquipAwaken_Hole_Detail& data(int index) const;
  inline ::GM_EquipAwaken_Hole_Detail* mutable_data(int index);
  inline ::GM_EquipAwaken_Hole_Detail* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Hole_Detail >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Hole_Detail >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_AddSwap_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_holenum();
  inline void clear_has_holenum();
  inline void set_has_replaceholenum();
  inline void clear_has_replaceholenum();
  inline void set_has_getexp();
  inline void clear_has_getexp();
  inline void set_has_experience();
  inline void clear_has_experience();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 holenum_;
  ::google::protobuf::int32 replaceholenum_;
  ::google::protobuf::int32 getexp_;
  ::google::protobuf::int64 experience_;
  ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Hole_Detail > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_AddSwap_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Store_Request : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Store_Request();
  virtual ~GM_EquipAwaken_Store_Request();

  GM_EquipAwaken_Store_Request(const GM_EquipAwaken_Store_Request& from);

  inline GM_EquipAwaken_Store_Request& operator=(const GM_EquipAwaken_Store_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Store_Request& default_instance();

  void Swap(GM_EquipAwaken_Store_Request* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Store_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Store_Request& from);
  void MergeFrom(const GM_EquipAwaken_Store_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Store_Request)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Store_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Store_Return : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Store_Return();
  virtual ~GM_EquipAwaken_Store_Return();

  GM_EquipAwaken_Store_Return(const GM_EquipAwaken_Store_Return& from);

  inline GM_EquipAwaken_Store_Return& operator=(const GM_EquipAwaken_Store_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Store_Return& default_instance();

  void Swap(GM_EquipAwaken_Store_Return* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Store_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Store_Return& from);
  void MergeFrom(const GM_EquipAwaken_Store_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int64 gmid = 2;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 2;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // optional .GM_EquipAwaken_Hole_Detail data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::GM_EquipAwaken_Hole_Detail& data() const;
  inline ::GM_EquipAwaken_Hole_Detail* mutable_data();
  inline ::GM_EquipAwaken_Hole_Detail* release_data();
  inline void set_allocated_data(::GM_EquipAwaken_Hole_Detail* data);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Store_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;
  ::GM_EquipAwaken_Hole_Detail* data_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Store_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Refine_Request : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Refine_Request();
  virtual ~GM_EquipAwaken_Refine_Request();

  GM_EquipAwaken_Refine_Request(const GM_EquipAwaken_Refine_Request& from);

  inline GM_EquipAwaken_Refine_Request& operator=(const GM_EquipAwaken_Refine_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Refine_Request& default_instance();

  void Swap(GM_EquipAwaken_Refine_Request* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Refine_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Refine_Request& from);
  void MergeFrom(const GM_EquipAwaken_Refine_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // optional int32 holenum = 2;
  inline bool has_holenum() const;
  inline void clear_holenum();
  static const int kHolenumFieldNumber = 2;
  inline ::google::protobuf::int32 holenum() const;
  inline void set_holenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Refine_Request)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_holenum();
  inline void clear_has_holenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;
  ::google::protobuf::int32 holenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Refine_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Refine_Return : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Refine_Return();
  virtual ~GM_EquipAwaken_Refine_Return();

  GM_EquipAwaken_Refine_Return(const GM_EquipAwaken_Refine_Return& from);

  inline GM_EquipAwaken_Refine_Return& operator=(const GM_EquipAwaken_Refine_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Refine_Return& default_instance();

  void Swap(GM_EquipAwaken_Refine_Return* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Refine_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Refine_Return& from);
  void MergeFrom(const GM_EquipAwaken_Refine_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int64 gmid = 2;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 2;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // optional int32 holenum = 3;
  inline bool has_holenum() const;
  inline void clear_holenum();
  static const int kHolenumFieldNumber = 3;
  inline ::google::protobuf::int32 holenum() const;
  inline void set_holenum(::google::protobuf::int32 value);

  // optional int32 getexp = 4;
  inline bool has_getexp() const;
  inline void clear_getexp();
  static const int kGetexpFieldNumber = 4;
  inline ::google::protobuf::int32 getexp() const;
  inline void set_getexp(::google::protobuf::int32 value);

  // optional int64 experience = 5;
  inline bool has_experience() const;
  inline void clear_experience();
  static const int kExperienceFieldNumber = 5;
  inline ::google::protobuf::int64 experience() const;
  inline void set_experience(::google::protobuf::int64 value);

  // repeated .GM_EquipAwaken_Hole_Detail data = 6;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 6;
  inline const ::GM_EquipAwaken_Hole_Detail& data(int index) const;
  inline ::GM_EquipAwaken_Hole_Detail* mutable_data(int index);
  inline ::GM_EquipAwaken_Hole_Detail* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Hole_Detail >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Hole_Detail >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Refine_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_holenum();
  inline void clear_has_holenum();
  inline void set_has_getexp();
  inline void clear_has_getexp();
  inline void set_has_experience();
  inline void clear_has_experience();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 holenum_;
  ::google::protobuf::int64 experience_;
  ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Hole_Detail > data_;
  ::google::protobuf::int32 getexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Refine_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Unlock_Request : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Unlock_Request();
  virtual ~GM_EquipAwaken_Unlock_Request();

  GM_EquipAwaken_Unlock_Request(const GM_EquipAwaken_Unlock_Request& from);

  inline GM_EquipAwaken_Unlock_Request& operator=(const GM_EquipAwaken_Unlock_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Unlock_Request& default_instance();

  void Swap(GM_EquipAwaken_Unlock_Request* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Unlock_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Unlock_Request& from);
  void MergeFrom(const GM_EquipAwaken_Unlock_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Unlock_Request)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Unlock_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Unlock_Return : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Unlock_Return();
  virtual ~GM_EquipAwaken_Unlock_Return();

  GM_EquipAwaken_Unlock_Return(const GM_EquipAwaken_Unlock_Return& from);

  inline GM_EquipAwaken_Unlock_Return& operator=(const GM_EquipAwaken_Unlock_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Unlock_Return& default_instance();

  void Swap(GM_EquipAwaken_Unlock_Return* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Unlock_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Unlock_Return& from);
  void MergeFrom(const GM_EquipAwaken_Unlock_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 holenum = 2;
  inline bool has_holenum() const;
  inline void clear_holenum();
  static const int kHolenumFieldNumber = 2;
  inline ::google::protobuf::int32 holenum() const;
  inline void set_holenum(::google::protobuf::int32 value);

  // optional int64 gmid = 3;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 3;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Unlock_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_holenum();
  inline void clear_has_holenum();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 holenum_;
  ::google::protobuf::int64 gmid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Unlock_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Info_Request : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Info_Request();
  virtual ~GM_EquipAwaken_Info_Request();

  GM_EquipAwaken_Info_Request(const GM_EquipAwaken_Info_Request& from);

  inline GM_EquipAwaken_Info_Request& operator=(const GM_EquipAwaken_Info_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Info_Request& default_instance();

  void Swap(GM_EquipAwaken_Info_Request* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Info_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Info_Request& from);
  void MergeFrom(const GM_EquipAwaken_Info_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 nGmid = 1;
  inline bool has_ngmid() const;
  inline void clear_ngmid();
  static const int kNGmidFieldNumber = 1;
  inline ::google::protobuf::int64 ngmid() const;
  inline void set_ngmid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Info_Request)
 private:
  inline void set_has_ngmid();
  inline void clear_has_ngmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 ngmid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Info_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Info_Return : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Info_Return();
  virtual ~GM_EquipAwaken_Info_Return();

  GM_EquipAwaken_Info_Return(const GM_EquipAwaken_Info_Return& from);

  inline GM_EquipAwaken_Info_Return& operator=(const GM_EquipAwaken_Info_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Info_Return& default_instance();

  void Swap(GM_EquipAwaken_Info_Return* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Info_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Info_Return& from);
  void MergeFrom(const GM_EquipAwaken_Info_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 nresult = 1;
  inline bool has_nresult() const;
  inline void clear_nresult();
  static const int kNresultFieldNumber = 1;
  inline ::google::protobuf::int32 nresult() const;
  inline void set_nresult(::google::protobuf::int32 value);

  // required int64 nGmid = 2;
  inline bool has_ngmid() const;
  inline void clear_ngmid();
  static const int kNGmidFieldNumber = 2;
  inline ::google::protobuf::int64 ngmid() const;
  inline void set_ngmid(::google::protobuf::int64 value);

  // repeated .GM_EquipAwaken_Info data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::GM_EquipAwaken_Info& data(int index) const;
  inline ::GM_EquipAwaken_Info* mutable_data(int index);
  inline ::GM_EquipAwaken_Info* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Info >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Info >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Info_Return)
 private:
  inline void set_has_nresult();
  inline void clear_has_nresult();
  inline void set_has_ngmid();
  inline void clear_has_ngmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 ngmid_;
  ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Info > data_;
  ::google::protobuf::int32 nresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Info_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Info : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Info();
  virtual ~GM_EquipAwaken_Info();

  GM_EquipAwaken_Info(const GM_EquipAwaken_Info& from);

  inline GM_EquipAwaken_Info& operator=(const GM_EquipAwaken_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Info& default_instance();

  void Swap(GM_EquipAwaken_Info* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Info& from);
  void MergeFrom(const GM_EquipAwaken_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 awakenid = 1;
  inline bool has_awakenid() const;
  inline void clear_awakenid();
  static const int kAwakenidFieldNumber = 1;
  inline ::google::protobuf::int32 awakenid() const;
  inline void set_awakenid(::google::protobuf::int32 value);

  // optional int32 awakenlevel = 2;
  inline bool has_awakenlevel() const;
  inline void clear_awakenlevel();
  static const int kAwakenlevelFieldNumber = 2;
  inline ::google::protobuf::int32 awakenlevel() const;
  inline void set_awakenlevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Info)
 private:
  inline void set_has_awakenid();
  inline void clear_has_awakenid();
  inline void set_has_awakenlevel();
  inline void clear_has_awakenlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 awakenid_;
  ::google::protobuf::int32 awakenlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Info* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Swap_Request : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Swap_Request();
  virtual ~GM_EquipAwaken_Swap_Request();

  GM_EquipAwaken_Swap_Request(const GM_EquipAwaken_Swap_Request& from);

  inline GM_EquipAwaken_Swap_Request& operator=(const GM_EquipAwaken_Swap_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Swap_Request& default_instance();

  void Swap(GM_EquipAwaken_Swap_Request* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Swap_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Swap_Request& from);
  void MergeFrom(const GM_EquipAwaken_Swap_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 nLeftGmid = 1;
  inline bool has_nleftgmid() const;
  inline void clear_nleftgmid();
  static const int kNLeftGmidFieldNumber = 1;
  inline ::google::protobuf::int64 nleftgmid() const;
  inline void set_nleftgmid(::google::protobuf::int64 value);

  // optional int64 nRightGmid = 2;
  inline bool has_nrightgmid() const;
  inline void clear_nrightgmid();
  static const int kNRightGmidFieldNumber = 2;
  inline ::google::protobuf::int64 nrightgmid() const;
  inline void set_nrightgmid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Swap_Request)
 private:
  inline void set_has_nleftgmid();
  inline void clear_has_nleftgmid();
  inline void set_has_nrightgmid();
  inline void clear_has_nrightgmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 nleftgmid_;
  ::google::protobuf::int64 nrightgmid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Swap_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Swap_Return : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Swap_Return();
  virtual ~GM_EquipAwaken_Swap_Return();

  GM_EquipAwaken_Swap_Return(const GM_EquipAwaken_Swap_Return& from);

  inline GM_EquipAwaken_Swap_Return& operator=(const GM_EquipAwaken_Swap_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Swap_Return& default_instance();

  void Swap(GM_EquipAwaken_Swap_Return* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Swap_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Swap_Return& from);
  void MergeFrom(const GM_EquipAwaken_Swap_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 nResult = 1;
  inline bool has_nresult() const;
  inline void clear_nresult();
  static const int kNResultFieldNumber = 1;
  inline ::google::protobuf::int32 nresult() const;
  inline void set_nresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Swap_Return)
 private:
  inline void set_has_nresult();
  inline void clear_has_nresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Swap_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Upgrade_Change : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Upgrade_Change();
  virtual ~GM_EquipAwaken_Upgrade_Change();

  GM_EquipAwaken_Upgrade_Change(const GM_EquipAwaken_Upgrade_Change& from);

  inline GM_EquipAwaken_Upgrade_Change& operator=(const GM_EquipAwaken_Upgrade_Change& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Upgrade_Change& default_instance();

  void Swap(GM_EquipAwaken_Upgrade_Change* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Upgrade_Change* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Upgrade_Change& from);
  void MergeFrom(const GM_EquipAwaken_Upgrade_Change& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .GM_EquipAwaken_Upgrade_Info data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::GM_EquipAwaken_Upgrade_Info& data(int index) const;
  inline ::GM_EquipAwaken_Upgrade_Info* mutable_data(int index);
  inline ::GM_EquipAwaken_Upgrade_Info* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Upgrade_Info >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Upgrade_Info >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Upgrade_Change)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Upgrade_Info > data_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Upgrade_Change* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwaken_Upgrade_Info : public ::google::protobuf::Message {
 public:
  GM_EquipAwaken_Upgrade_Info();
  virtual ~GM_EquipAwaken_Upgrade_Info();

  GM_EquipAwaken_Upgrade_Info(const GM_EquipAwaken_Upgrade_Info& from);

  inline GM_EquipAwaken_Upgrade_Info& operator=(const GM_EquipAwaken_Upgrade_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwaken_Upgrade_Info& default_instance();

  void Swap(GM_EquipAwaken_Upgrade_Info* other);

  // implements Message ----------------------------------------------

  GM_EquipAwaken_Upgrade_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwaken_Upgrade_Info& from);
  void MergeFrom(const GM_EquipAwaken_Upgrade_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 holenum = 1;
  inline bool has_holenum() const;
  inline void clear_holenum();
  static const int kHolenumFieldNumber = 1;
  inline ::google::protobuf::int32 holenum() const;
  inline void set_holenum(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwaken_Upgrade_Info)
 private:
  inline void set_has_holenum();
  inline void clear_has_holenum();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 holenum_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwaken_Upgrade_Info* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipWing_Request : public ::google::protobuf::Message {
 public:
  GM_EquipWing_Request();
  virtual ~GM_EquipWing_Request();

  GM_EquipWing_Request(const GM_EquipWing_Request& from);

  inline GM_EquipWing_Request& operator=(const GM_EquipWing_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipWing_Request& default_instance();

  void Swap(GM_EquipWing_Request* other);

  // implements Message ----------------------------------------------

  GM_EquipWing_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipWing_Request& from);
  void MergeFrom(const GM_EquipWing_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // optional int32 winglevel = 2;
  inline bool has_winglevel() const;
  inline void clear_winglevel();
  static const int kWinglevelFieldNumber = 2;
  inline ::google::protobuf::int32 winglevel() const;
  inline void set_winglevel(::google::protobuf::int32 value);

  // required int32 issucess = 3;
  inline bool has_issucess() const;
  inline void clear_issucess();
  static const int kIssucessFieldNumber = 3;
  inline ::google::protobuf::int32 issucess() const;
  inline void set_issucess(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_EquipWing_Request)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_winglevel();
  inline void clear_has_winglevel();
  inline void set_has_issucess();
  inline void clear_has_issucess();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;
  ::google::protobuf::int32 winglevel_;
  ::google::protobuf::int32 issucess_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipWing_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_AwakeEquip : public ::google::protobuf::Message {
 public:
  GM_AwakeEquip();
  virtual ~GM_AwakeEquip();

  GM_AwakeEquip(const GM_AwakeEquip& from);

  inline GM_AwakeEquip& operator=(const GM_AwakeEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_AwakeEquip& default_instance();

  void Swap(GM_AwakeEquip* other);

  // implements Message ----------------------------------------------

  GM_AwakeEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_AwakeEquip& from);
  void MergeFrom(const GM_AwakeEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // required int32 x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // required int32 y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // required int32 isFull = 4;
  inline bool has_isfull() const;
  inline void clear_isfull();
  static const int kIsFullFieldNumber = 4;
  inline ::google::protobuf::int32 isfull() const;
  inline void set_isfull(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_AwakeEquip)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_isfull();
  inline void clear_has_isfull();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 isfull_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_AwakeEquip* default_instance_;
};
// -------------------------------------------------------------------

class GM_AwakeEquipAll : public ::google::protobuf::Message {
 public:
  GM_AwakeEquipAll();
  virtual ~GM_AwakeEquipAll();

  GM_AwakeEquipAll(const GM_AwakeEquipAll& from);

  inline GM_AwakeEquipAll& operator=(const GM_AwakeEquipAll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_AwakeEquipAll& default_instance();

  void Swap(GM_AwakeEquipAll* other);

  // implements Message ----------------------------------------------

  GM_AwakeEquipAll* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_AwakeEquipAll& from);
  void MergeFrom(const GM_AwakeEquipAll& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 return = 1;
  inline bool has_return_() const;
  inline void clear_return_();
  static const int kReturnFieldNumber = 1;
  inline ::google::protobuf::int32 return_() const;
  inline void set_return_(::google::protobuf::int32 value);

  // repeated .GM_AwakeEquip awakedata = 2;
  inline int awakedata_size() const;
  inline void clear_awakedata();
  static const int kAwakedataFieldNumber = 2;
  inline const ::GM_AwakeEquip& awakedata(int index) const;
  inline ::GM_AwakeEquip* mutable_awakedata(int index);
  inline ::GM_AwakeEquip* add_awakedata();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_AwakeEquip >&
      awakedata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_AwakeEquip >*
      mutable_awakedata();

  // @@protoc_insertion_point(class_scope:GM_AwakeEquipAll)
 private:
  inline void set_has_return_();
  inline void clear_has_return_();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_AwakeEquip > awakedata_;
  ::google::protobuf::int32 return__;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_AwakeEquipAll* default_instance_;
};
// -------------------------------------------------------------------

class GM_AwakeEquipRequest : public ::google::protobuf::Message {
 public:
  GM_AwakeEquipRequest();
  virtual ~GM_AwakeEquipRequest();

  GM_AwakeEquipRequest(const GM_AwakeEquipRequest& from);

  inline GM_AwakeEquipRequest& operator=(const GM_AwakeEquipRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_AwakeEquipRequest& default_instance();

  void Swap(GM_AwakeEquipRequest* other);

  // implements Message ----------------------------------------------

  GM_AwakeEquipRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_AwakeEquipRequest& from);
  void MergeFrom(const GM_AwakeEquipRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 awakeequipgmid = 1;
  inline bool has_awakeequipgmid() const;
  inline void clear_awakeequipgmid();
  static const int kAwakeequipgmidFieldNumber = 1;
  inline ::google::protobuf::int64 awakeequipgmid() const;
  inline void set_awakeequipgmid(::google::protobuf::int64 value);

  // required int64 equipgmid = 2;
  inline bool has_equipgmid() const;
  inline void clear_equipgmid();
  static const int kEquipgmidFieldNumber = 2;
  inline ::google::protobuf::int64 equipgmid() const;
  inline void set_equipgmid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_AwakeEquipRequest)
 private:
  inline void set_has_awakeequipgmid();
  inline void clear_has_awakeequipgmid();
  inline void set_has_equipgmid();
  inline void clear_has_equipgmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 awakeequipgmid_;
  ::google::protobuf::int64 equipgmid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipuplevel_2etxt();
  friend void protobuf_AssignDesc_equipuplevel_2etxt();
  friend void protobuf_ShutdownFile_equipuplevel_2etxt();

  void InitAsDefaultInstance();
  static GM_AwakeEquipRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_EquipInfoReturn

// required int32 m_roleid = 1;
inline bool GM_EquipInfoReturn::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipInfoReturn::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipInfoReturn::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipInfoReturn::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_EquipInfoReturn::m_roleid() const {
  return m_roleid_;
}
inline void GM_EquipInfoReturn::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional int32 m_ironcount = 2;
inline bool GM_EquipInfoReturn::has_m_ironcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipInfoReturn::set_has_m_ironcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipInfoReturn::clear_has_m_ironcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipInfoReturn::clear_m_ironcount() {
  m_ironcount_ = 0;
  clear_has_m_ironcount();
}
inline ::google::protobuf::int32 GM_EquipInfoReturn::m_ironcount() const {
  return m_ironcount_;
}
inline void GM_EquipInfoReturn::set_m_ironcount(::google::protobuf::int32 value) {
  set_has_m_ironcount();
  m_ironcount_ = value;
}

// optional int32 m_elitestone = 3;
inline bool GM_EquipInfoReturn::has_m_elitestone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_EquipInfoReturn::set_has_m_elitestone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_EquipInfoReturn::clear_has_m_elitestone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_EquipInfoReturn::clear_m_elitestone() {
  m_elitestone_ = 0;
  clear_has_m_elitestone();
}
inline ::google::protobuf::int32 GM_EquipInfoReturn::m_elitestone() const {
  return m_elitestone_;
}
inline void GM_EquipInfoReturn::set_m_elitestone(::google::protobuf::int32 value) {
  set_has_m_elitestone();
  m_elitestone_ = value;
}

// optional int32 m_animalbone = 4;
inline bool GM_EquipInfoReturn::has_m_animalbone() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_EquipInfoReturn::set_has_m_animalbone() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_EquipInfoReturn::clear_has_m_animalbone() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_EquipInfoReturn::clear_m_animalbone() {
  m_animalbone_ = 0;
  clear_has_m_animalbone();
}
inline ::google::protobuf::int32 GM_EquipInfoReturn::m_animalbone() const {
  return m_animalbone_;
}
inline void GM_EquipInfoReturn::set_m_animalbone(::google::protobuf::int32 value) {
  set_has_m_animalbone();
  m_animalbone_ = value;
}

// optional int32 m_ironid = 6;
inline bool GM_EquipInfoReturn::has_m_ironid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_EquipInfoReturn::set_has_m_ironid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_EquipInfoReturn::clear_has_m_ironid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_EquipInfoReturn::clear_m_ironid() {
  m_ironid_ = 0;
  clear_has_m_ironid();
}
inline ::google::protobuf::int32 GM_EquipInfoReturn::m_ironid() const {
  return m_ironid_;
}
inline void GM_EquipInfoReturn::set_m_ironid(::google::protobuf::int32 value) {
  set_has_m_ironid();
  m_ironid_ = value;
}

// repeated .GM_EquipForge m_equipinfo = 5;
inline int GM_EquipInfoReturn::m_equipinfo_size() const {
  return m_equipinfo_.size();
}
inline void GM_EquipInfoReturn::clear_m_equipinfo() {
  m_equipinfo_.Clear();
}
inline const ::GM_EquipForge& GM_EquipInfoReturn::m_equipinfo(int index) const {
  return m_equipinfo_.Get(index);
}
inline ::GM_EquipForge* GM_EquipInfoReturn::mutable_m_equipinfo(int index) {
  return m_equipinfo_.Mutable(index);
}
inline ::GM_EquipForge* GM_EquipInfoReturn::add_m_equipinfo() {
  return m_equipinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipForge >&
GM_EquipInfoReturn::m_equipinfo() const {
  return m_equipinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_EquipForge >*
GM_EquipInfoReturn::mutable_m_equipinfo() {
  return &m_equipinfo_;
}

// -------------------------------------------------------------------

// GM_EquipForge

// required int64 m_gmid = 1;
inline bool GM_EquipForge::has_m_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipForge::set_has_m_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipForge::clear_has_m_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipForge::clear_m_gmid() {
  m_gmid_ = GOOGLE_LONGLONG(0);
  clear_has_m_gmid();
}
inline ::google::protobuf::int64 GM_EquipForge::m_gmid() const {
  return m_gmid_;
}
inline void GM_EquipForge::set_m_gmid(::google::protobuf::int64 value) {
  set_has_m_gmid();
  m_gmid_ = value;
}

// optional int32 m_forgeLv = 2;
inline bool GM_EquipForge::has_m_forgelv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipForge::set_has_m_forgelv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipForge::clear_has_m_forgelv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipForge::clear_m_forgelv() {
  m_forgelv_ = 0;
  clear_has_m_forgelv();
}
inline ::google::protobuf::int32 GM_EquipForge::m_forgelv() const {
  return m_forgelv_;
}
inline void GM_EquipForge::set_m_forgelv(::google::protobuf::int32 value) {
  set_has_m_forgelv();
  m_forgelv_ = value;
}

// optional int32 m_forgeExp = 3;
inline bool GM_EquipForge::has_m_forgeexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_EquipForge::set_has_m_forgeexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_EquipForge::clear_has_m_forgeexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_EquipForge::clear_m_forgeexp() {
  m_forgeexp_ = 0;
  clear_has_m_forgeexp();
}
inline ::google::protobuf::int32 GM_EquipForge::m_forgeexp() const {
  return m_forgeexp_;
}
inline void GM_EquipForge::set_m_forgeexp(::google::protobuf::int32 value) {
  set_has_m_forgeexp();
  m_forgeexp_ = value;
}

// optional int32 m_refinLv = 4;
inline bool GM_EquipForge::has_m_refinlv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_EquipForge::set_has_m_refinlv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_EquipForge::clear_has_m_refinlv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_EquipForge::clear_m_refinlv() {
  m_refinlv_ = 0;
  clear_has_m_refinlv();
}
inline ::google::protobuf::int32 GM_EquipForge::m_refinlv() const {
  return m_refinlv_;
}
inline void GM_EquipForge::set_m_refinlv(::google::protobuf::int32 value) {
  set_has_m_refinlv();
  m_refinlv_ = value;
}

// optional int32 m_gradeLv = 5;
inline bool GM_EquipForge::has_m_gradelv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_EquipForge::set_has_m_gradelv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_EquipForge::clear_has_m_gradelv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_EquipForge::clear_m_gradelv() {
  m_gradelv_ = 0;
  clear_has_m_gradelv();
}
inline ::google::protobuf::int32 GM_EquipForge::m_gradelv() const {
  return m_gradelv_;
}
inline void GM_EquipForge::set_m_gradelv(::google::protobuf::int32 value) {
  set_has_m_gradelv();
  m_gradelv_ = value;
}

// repeated .GM_EquipAwaken m_awkenInfo = 6;
inline int GM_EquipForge::m_awkeninfo_size() const {
  return m_awkeninfo_.size();
}
inline void GM_EquipForge::clear_m_awkeninfo() {
  m_awkeninfo_.Clear();
}
inline const ::GM_EquipAwaken& GM_EquipForge::m_awkeninfo(int index) const {
  return m_awkeninfo_.Get(index);
}
inline ::GM_EquipAwaken* GM_EquipForge::mutable_m_awkeninfo(int index) {
  return m_awkeninfo_.Mutable(index);
}
inline ::GM_EquipAwaken* GM_EquipForge::add_m_awkeninfo() {
  return m_awkeninfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken >&
GM_EquipForge::m_awkeninfo() const {
  return m_awkeninfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken >*
GM_EquipForge::mutable_m_awkeninfo() {
  return &m_awkeninfo_;
}

// optional int32 m_winglevel = 7;
inline bool GM_EquipForge::has_m_winglevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_EquipForge::set_has_m_winglevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_EquipForge::clear_has_m_winglevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_EquipForge::clear_m_winglevel() {
  m_winglevel_ = 0;
  clear_has_m_winglevel();
}
inline ::google::protobuf::int32 GM_EquipForge::m_winglevel() const {
  return m_winglevel_;
}
inline void GM_EquipForge::set_m_winglevel(::google::protobuf::int32 value) {
  set_has_m_winglevel();
  m_winglevel_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwaken

// required int32 m_propertyid = 1;
inline bool GM_EquipAwaken::has_m_propertyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken::set_has_m_propertyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken::clear_has_m_propertyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken::clear_m_propertyid() {
  m_propertyid_ = 0;
  clear_has_m_propertyid();
}
inline ::google::protobuf::int32 GM_EquipAwaken::m_propertyid() const {
  return m_propertyid_;
}
inline void GM_EquipAwaken::set_m_propertyid(::google::protobuf::int32 value) {
  set_has_m_propertyid();
  m_propertyid_ = value;
}

// optional int32 m_propertyLv = 2;
inline bool GM_EquipAwaken::has_m_propertylv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken::set_has_m_propertylv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken::clear_has_m_propertylv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken::clear_m_propertylv() {
  m_propertylv_ = 0;
  clear_has_m_propertylv();
}
inline ::google::protobuf::int32 GM_EquipAwaken::m_propertylv() const {
  return m_propertylv_;
}
inline void GM_EquipAwaken::set_m_propertylv(::google::protobuf::int32 value) {
  set_has_m_propertylv();
  m_propertylv_ = value;
}

// -------------------------------------------------------------------

// GM_OneKeyInfoReturn

// required int32 m_costGold = 1;
inline bool GM_OneKeyInfoReturn::has_m_costgold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_OneKeyInfoReturn::set_has_m_costgold() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_OneKeyInfoReturn::clear_has_m_costgold() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_OneKeyInfoReturn::clear_m_costgold() {
  m_costgold_ = 0;
  clear_has_m_costgold();
}
inline ::google::protobuf::int32 GM_OneKeyInfoReturn::m_costgold() const {
  return m_costgold_;
}
inline void GM_OneKeyInfoReturn::set_m_costgold(::google::protobuf::int32 value) {
  set_has_m_costgold();
  m_costgold_ = value;
}

// optional int32 m_costIron = 2;
inline bool GM_OneKeyInfoReturn::has_m_costiron() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_OneKeyInfoReturn::set_has_m_costiron() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_OneKeyInfoReturn::clear_has_m_costiron() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_OneKeyInfoReturn::clear_m_costiron() {
  m_costiron_ = 0;
  clear_has_m_costiron();
}
inline ::google::protobuf::int32 GM_OneKeyInfoReturn::m_costiron() const {
  return m_costiron_;
}
inline void GM_OneKeyInfoReturn::set_m_costiron(::google::protobuf::int32 value) {
  set_has_m_costiron();
  m_costiron_ = value;
}

// optional int32 m_maxForgeLv = 3;
inline bool GM_OneKeyInfoReturn::has_m_maxforgelv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_OneKeyInfoReturn::set_has_m_maxforgelv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_OneKeyInfoReturn::clear_has_m_maxforgelv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_OneKeyInfoReturn::clear_m_maxforgelv() {
  m_maxforgelv_ = 0;
  clear_has_m_maxforgelv();
}
inline ::google::protobuf::int32 GM_OneKeyInfoReturn::m_maxforgelv() const {
  return m_maxforgelv_;
}
inline void GM_OneKeyInfoReturn::set_m_maxforgelv(::google::protobuf::int32 value) {
  set_has_m_maxforgelv();
  m_maxforgelv_ = value;
}

// -------------------------------------------------------------------

// GM_ForgeRequest

// required int64 m_gmid = 1;
inline bool GM_ForgeRequest::has_m_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ForgeRequest::set_has_m_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ForgeRequest::clear_has_m_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ForgeRequest::clear_m_gmid() {
  m_gmid_ = GOOGLE_LONGLONG(0);
  clear_has_m_gmid();
}
inline ::google::protobuf::int64 GM_ForgeRequest::m_gmid() const {
  return m_gmid_;
}
inline void GM_ForgeRequest::set_m_gmid(::google::protobuf::int64 value) {
  set_has_m_gmid();
  m_gmid_ = value;
}

// repeated int64 m_gmids = 2;
inline int GM_ForgeRequest::m_gmids_size() const {
  return m_gmids_.size();
}
inline void GM_ForgeRequest::clear_m_gmids() {
  m_gmids_.Clear();
}
inline ::google::protobuf::int64 GM_ForgeRequest::m_gmids(int index) const {
  return m_gmids_.Get(index);
}
inline void GM_ForgeRequest::set_m_gmids(int index, ::google::protobuf::int64 value) {
  m_gmids_.Set(index, value);
}
inline void GM_ForgeRequest::add_m_gmids(::google::protobuf::int64 value) {
  m_gmids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GM_ForgeRequest::m_gmids() const {
  return m_gmids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GM_ForgeRequest::mutable_m_gmids() {
  return &m_gmids_;
}

// -------------------------------------------------------------------

// GM_EquipNotify

// required int32 m_type = 1;
inline bool GM_EquipNotify::has_m_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipNotify::set_has_m_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipNotify::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipNotify::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 GM_EquipNotify::m_type() const {
  return m_type_;
}
inline void GM_EquipNotify::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// required .GM_EquipForge m_equipinfo = 2;
inline bool GM_EquipNotify::has_m_equipinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipNotify::set_has_m_equipinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipNotify::clear_has_m_equipinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipNotify::clear_m_equipinfo() {
  if (m_equipinfo_ != NULL) m_equipinfo_->::GM_EquipForge::Clear();
  clear_has_m_equipinfo();
}
inline const ::GM_EquipForge& GM_EquipNotify::m_equipinfo() const {
  return m_equipinfo_ != NULL ? *m_equipinfo_ : *default_instance_->m_equipinfo_;
}
inline ::GM_EquipForge* GM_EquipNotify::mutable_m_equipinfo() {
  set_has_m_equipinfo();
  if (m_equipinfo_ == NULL) m_equipinfo_ = new ::GM_EquipForge;
  return m_equipinfo_;
}
inline ::GM_EquipForge* GM_EquipNotify::release_m_equipinfo() {
  clear_has_m_equipinfo();
  ::GM_EquipForge* temp = m_equipinfo_;
  m_equipinfo_ = NULL;
  return temp;
}
inline void GM_EquipNotify::set_allocated_m_equipinfo(::GM_EquipForge* m_equipinfo) {
  delete m_equipinfo_;
  m_equipinfo_ = m_equipinfo;
  if (m_equipinfo) {
    set_has_m_equipinfo();
  } else {
    clear_has_m_equipinfo();
  }
}

// -------------------------------------------------------------------

// GM_EquipAwaken_UI_Request

// required int64 gmid = 1;
inline bool GM_EquipAwaken_UI_Request::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_UI_Request::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_UI_Request::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_UI_Request::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_UI_Request::gmid() const {
  return gmid_;
}
inline void GM_EquipAwaken_UI_Request::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_UI_Return

// required int32 result = 1;
inline bool GM_EquipAwaken_UI_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_UI_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_UI_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_UI_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_EquipAwaken_UI_Return::result() const {
  return result_;
}
inline void GM_EquipAwaken_UI_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int64 gmid = 2;
inline bool GM_EquipAwaken_UI_Return::has_gmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken_UI_Return::set_has_gmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken_UI_Return::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken_UI_Return::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_UI_Return::gmid() const {
  return gmid_;
}
inline void GM_EquipAwaken_UI_Return::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// optional int64 experience = 3;
inline bool GM_EquipAwaken_UI_Return::has_experience() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_EquipAwaken_UI_Return::set_has_experience() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_EquipAwaken_UI_Return::clear_has_experience() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_EquipAwaken_UI_Return::clear_experience() {
  experience_ = GOOGLE_LONGLONG(0);
  clear_has_experience();
}
inline ::google::protobuf::int64 GM_EquipAwaken_UI_Return::experience() const {
  return experience_;
}
inline void GM_EquipAwaken_UI_Return::set_experience(::google::protobuf::int64 value) {
  set_has_experience();
  experience_ = value;
}

// optional int32 pillNum = 4;
inline bool GM_EquipAwaken_UI_Return::has_pillnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_EquipAwaken_UI_Return::set_has_pillnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_EquipAwaken_UI_Return::clear_has_pillnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_EquipAwaken_UI_Return::clear_pillnum() {
  pillnum_ = 0;
  clear_has_pillnum();
}
inline ::google::protobuf::int32 GM_EquipAwaken_UI_Return::pillnum() const {
  return pillnum_;
}
inline void GM_EquipAwaken_UI_Return::set_pillnum(::google::protobuf::int32 value) {
  set_has_pillnum();
  pillnum_ = value;
}

// optional int32 diamondTotal = 5;
inline bool GM_EquipAwaken_UI_Return::has_diamondtotal() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_EquipAwaken_UI_Return::set_has_diamondtotal() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_EquipAwaken_UI_Return::clear_has_diamondtotal() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_EquipAwaken_UI_Return::clear_diamondtotal() {
  diamondtotal_ = 0;
  clear_has_diamondtotal();
}
inline ::google::protobuf::int32 GM_EquipAwaken_UI_Return::diamondtotal() const {
  return diamondtotal_;
}
inline void GM_EquipAwaken_UI_Return::set_diamondtotal(::google::protobuf::int32 value) {
  set_has_diamondtotal();
  diamondtotal_ = value;
}

// optional int32 diamondNeed = 6;
inline bool GM_EquipAwaken_UI_Return::has_diamondneed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_EquipAwaken_UI_Return::set_has_diamondneed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_EquipAwaken_UI_Return::clear_has_diamondneed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_EquipAwaken_UI_Return::clear_diamondneed() {
  diamondneed_ = 0;
  clear_has_diamondneed();
}
inline ::google::protobuf::int32 GM_EquipAwaken_UI_Return::diamondneed() const {
  return diamondneed_;
}
inline void GM_EquipAwaken_UI_Return::set_diamondneed(::google::protobuf::int32 value) {
  set_has_diamondneed();
  diamondneed_ = value;
}

// optional float discount = 7;
inline bool GM_EquipAwaken_UI_Return::has_discount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_EquipAwaken_UI_Return::set_has_discount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_EquipAwaken_UI_Return::clear_has_discount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_EquipAwaken_UI_Return::clear_discount() {
  discount_ = 0;
  clear_has_discount();
}
inline float GM_EquipAwaken_UI_Return::discount() const {
  return discount_;
}
inline void GM_EquipAwaken_UI_Return::set_discount(float value) {
  set_has_discount();
  discount_ = value;
}

// repeated .GM_EquipAwaken_Hole_Detail data = 8;
inline int GM_EquipAwaken_UI_Return::data_size() const {
  return data_.size();
}
inline void GM_EquipAwaken_UI_Return::clear_data() {
  data_.Clear();
}
inline const ::GM_EquipAwaken_Hole_Detail& GM_EquipAwaken_UI_Return::data(int index) const {
  return data_.Get(index);
}
inline ::GM_EquipAwaken_Hole_Detail* GM_EquipAwaken_UI_Return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_EquipAwaken_Hole_Detail* GM_EquipAwaken_UI_Return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Hole_Detail >&
GM_EquipAwaken_UI_Return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Hole_Detail >*
GM_EquipAwaken_UI_Return::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Hole_Detail

// required int32 holenum = 1;
inline bool GM_EquipAwaken_Hole_Detail::has_holenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Hole_Detail::set_has_holenum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Hole_Detail::clear_has_holenum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Hole_Detail::clear_holenum() {
  holenum_ = 0;
  clear_has_holenum();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Hole_Detail::holenum() const {
  return holenum_;
}
inline void GM_EquipAwaken_Hole_Detail::set_holenum(::google::protobuf::int32 value) {
  set_has_holenum();
  holenum_ = value;
}

// optional int32 propertyId = 2;
inline bool GM_EquipAwaken_Hole_Detail::has_propertyid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken_Hole_Detail::set_has_propertyid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken_Hole_Detail::clear_has_propertyid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken_Hole_Detail::clear_propertyid() {
  propertyid_ = 0;
  clear_has_propertyid();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Hole_Detail::propertyid() const {
  return propertyid_;
}
inline void GM_EquipAwaken_Hole_Detail::set_propertyid(::google::protobuf::int32 value) {
  set_has_propertyid();
  propertyid_ = value;
}

// optional int32 propertyLevel = 3;
inline bool GM_EquipAwaken_Hole_Detail::has_propertylevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_EquipAwaken_Hole_Detail::set_has_propertylevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_EquipAwaken_Hole_Detail::clear_has_propertylevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_EquipAwaken_Hole_Detail::clear_propertylevel() {
  propertylevel_ = 0;
  clear_has_propertylevel();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Hole_Detail::propertylevel() const {
  return propertylevel_;
}
inline void GM_EquipAwaken_Hole_Detail::set_propertylevel(::google::protobuf::int32 value) {
  set_has_propertylevel();
  propertylevel_ = value;
}

// optional int32 maxlevel = 4;
inline bool GM_EquipAwaken_Hole_Detail::has_maxlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_EquipAwaken_Hole_Detail::set_has_maxlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_EquipAwaken_Hole_Detail::clear_has_maxlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_EquipAwaken_Hole_Detail::clear_maxlevel() {
  maxlevel_ = 0;
  clear_has_maxlevel();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Hole_Detail::maxlevel() const {
  return maxlevel_;
}
inline void GM_EquipAwaken_Hole_Detail::set_maxlevel(::google::protobuf::int32 value) {
  set_has_maxlevel();
  maxlevel_ = value;
}

// optional int32 state = 5;
inline bool GM_EquipAwaken_Hole_Detail::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_EquipAwaken_Hole_Detail::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_EquipAwaken_Hole_Detail::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_EquipAwaken_Hole_Detail::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Hole_Detail::state() const {
  return state_;
}
inline void GM_EquipAwaken_Hole_Detail::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Upgrade_Request

// required int64 gmid = 1;
inline bool GM_EquipAwaken_Upgrade_Request::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Upgrade_Request::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Upgrade_Request::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Upgrade_Request::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Upgrade_Request::gmid() const {
  return gmid_;
}
inline void GM_EquipAwaken_Upgrade_Request::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// optional int32 holenum = 2;
inline bool GM_EquipAwaken_Upgrade_Request::has_holenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken_Upgrade_Request::set_has_holenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken_Upgrade_Request::clear_has_holenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken_Upgrade_Request::clear_holenum() {
  holenum_ = 0;
  clear_has_holenum();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Upgrade_Request::holenum() const {
  return holenum_;
}
inline void GM_EquipAwaken_Upgrade_Request::set_holenum(::google::protobuf::int32 value) {
  set_has_holenum();
  holenum_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Upgrade_Return

// required int32 result = 1;
inline bool GM_EquipAwaken_Upgrade_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Upgrade_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Upgrade_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Upgrade_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Upgrade_Return::result() const {
  return result_;
}
inline void GM_EquipAwaken_Upgrade_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int64 gmid = 2;
inline bool GM_EquipAwaken_Upgrade_Return::has_gmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken_Upgrade_Return::set_has_gmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken_Upgrade_Return::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken_Upgrade_Return::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Upgrade_Return::gmid() const {
  return gmid_;
}
inline void GM_EquipAwaken_Upgrade_Return::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// optional int32 holenum = 3;
inline bool GM_EquipAwaken_Upgrade_Return::has_holenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_EquipAwaken_Upgrade_Return::set_has_holenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_EquipAwaken_Upgrade_Return::clear_has_holenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_EquipAwaken_Upgrade_Return::clear_holenum() {
  holenum_ = 0;
  clear_has_holenum();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Upgrade_Return::holenum() const {
  return holenum_;
}
inline void GM_EquipAwaken_Upgrade_Return::set_holenum(::google::protobuf::int32 value) {
  set_has_holenum();
  holenum_ = value;
}

// optional int32 propertyId = 4;
inline bool GM_EquipAwaken_Upgrade_Return::has_propertyid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_EquipAwaken_Upgrade_Return::set_has_propertyid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_EquipAwaken_Upgrade_Return::clear_has_propertyid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_EquipAwaken_Upgrade_Return::clear_propertyid() {
  propertyid_ = 0;
  clear_has_propertyid();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Upgrade_Return::propertyid() const {
  return propertyid_;
}
inline void GM_EquipAwaken_Upgrade_Return::set_propertyid(::google::protobuf::int32 value) {
  set_has_propertyid();
  propertyid_ = value;
}

// optional int32 propertyLevel = 5;
inline bool GM_EquipAwaken_Upgrade_Return::has_propertylevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_EquipAwaken_Upgrade_Return::set_has_propertylevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_EquipAwaken_Upgrade_Return::clear_has_propertylevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_EquipAwaken_Upgrade_Return::clear_propertylevel() {
  propertylevel_ = 0;
  clear_has_propertylevel();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Upgrade_Return::propertylevel() const {
  return propertylevel_;
}
inline void GM_EquipAwaken_Upgrade_Return::set_propertylevel(::google::protobuf::int32 value) {
  set_has_propertylevel();
  propertylevel_ = value;
}

// optional int64 experience = 6;
inline bool GM_EquipAwaken_Upgrade_Return::has_experience() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_EquipAwaken_Upgrade_Return::set_has_experience() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_EquipAwaken_Upgrade_Return::clear_has_experience() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_EquipAwaken_Upgrade_Return::clear_experience() {
  experience_ = GOOGLE_LONGLONG(0);
  clear_has_experience();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Upgrade_Return::experience() const {
  return experience_;
}
inline void GM_EquipAwaken_Upgrade_Return::set_experience(::google::protobuf::int64 value) {
  set_has_experience();
  experience_ = value;
}

// optional int32 canupgrade = 7;
inline bool GM_EquipAwaken_Upgrade_Return::has_canupgrade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_EquipAwaken_Upgrade_Return::set_has_canupgrade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_EquipAwaken_Upgrade_Return::clear_has_canupgrade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_EquipAwaken_Upgrade_Return::clear_canupgrade() {
  canupgrade_ = 0;
  clear_has_canupgrade();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Upgrade_Return::canupgrade() const {
  return canupgrade_;
}
inline void GM_EquipAwaken_Upgrade_Return::set_canupgrade(::google::protobuf::int32 value) {
  set_has_canupgrade();
  canupgrade_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Obtain_Request

// required int64 gmid = 1;
inline bool GM_EquipAwaken_Obtain_Request::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Obtain_Request::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Obtain_Request::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Obtain_Request::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Obtain_Request::gmid() const {
  return gmid_;
}
inline void GM_EquipAwaken_Obtain_Request::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// optional int32 obtainType = 2;
inline bool GM_EquipAwaken_Obtain_Request::has_obtaintype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken_Obtain_Request::set_has_obtaintype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken_Obtain_Request::clear_has_obtaintype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken_Obtain_Request::clear_obtaintype() {
  obtaintype_ = 0;
  clear_has_obtaintype();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Obtain_Request::obtaintype() const {
  return obtaintype_;
}
inline void GM_EquipAwaken_Obtain_Request::set_obtaintype(::google::protobuf::int32 value) {
  set_has_obtaintype();
  obtaintype_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Obtain_Return

// required int32 result = 1;
inline bool GM_EquipAwaken_Obtain_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Obtain_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Obtain_Return::result() const {
  return result_;
}
inline void GM_EquipAwaken_Obtain_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int64 gmid = 2;
inline bool GM_EquipAwaken_Obtain_Return::has_gmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken_Obtain_Return::set_has_gmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Obtain_Return::gmid() const {
  return gmid_;
}
inline void GM_EquipAwaken_Obtain_Return::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// optional int32 obtainType = 3;
inline bool GM_EquipAwaken_Obtain_Return::has_obtaintype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_EquipAwaken_Obtain_Return::set_has_obtaintype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_has_obtaintype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_obtaintype() {
  obtaintype_ = 0;
  clear_has_obtaintype();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Obtain_Return::obtaintype() const {
  return obtaintype_;
}
inline void GM_EquipAwaken_Obtain_Return::set_obtaintype(::google::protobuf::int32 value) {
  set_has_obtaintype();
  obtaintype_ = value;
}

// optional int32 pillNum = 4;
inline bool GM_EquipAwaken_Obtain_Return::has_pillnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_EquipAwaken_Obtain_Return::set_has_pillnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_has_pillnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_pillnum() {
  pillnum_ = 0;
  clear_has_pillnum();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Obtain_Return::pillnum() const {
  return pillnum_;
}
inline void GM_EquipAwaken_Obtain_Return::set_pillnum(::google::protobuf::int32 value) {
  set_has_pillnum();
  pillnum_ = value;
}

// optional int32 diamondTotal = 5;
inline bool GM_EquipAwaken_Obtain_Return::has_diamondtotal() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_EquipAwaken_Obtain_Return::set_has_diamondtotal() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_has_diamondtotal() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_diamondtotal() {
  diamondtotal_ = 0;
  clear_has_diamondtotal();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Obtain_Return::diamondtotal() const {
  return diamondtotal_;
}
inline void GM_EquipAwaken_Obtain_Return::set_diamondtotal(::google::protobuf::int32 value) {
  set_has_diamondtotal();
  diamondtotal_ = value;
}

// optional int32 diamondNeed = 6;
inline bool GM_EquipAwaken_Obtain_Return::has_diamondneed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_EquipAwaken_Obtain_Return::set_has_diamondneed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_has_diamondneed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_diamondneed() {
  diamondneed_ = 0;
  clear_has_diamondneed();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Obtain_Return::diamondneed() const {
  return diamondneed_;
}
inline void GM_EquipAwaken_Obtain_Return::set_diamondneed(::google::protobuf::int32 value) {
  set_has_diamondneed();
  diamondneed_ = value;
}

// optional int32 getexp = 7;
inline bool GM_EquipAwaken_Obtain_Return::has_getexp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_EquipAwaken_Obtain_Return::set_has_getexp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_has_getexp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_getexp() {
  getexp_ = 0;
  clear_has_getexp();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Obtain_Return::getexp() const {
  return getexp_;
}
inline void GM_EquipAwaken_Obtain_Return::set_getexp(::google::protobuf::int32 value) {
  set_has_getexp();
  getexp_ = value;
}

// optional int64 experience = 8;
inline bool GM_EquipAwaken_Obtain_Return::has_experience() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_EquipAwaken_Obtain_Return::set_has_experience() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_has_experience() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_experience() {
  experience_ = GOOGLE_LONGLONG(0);
  clear_has_experience();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Obtain_Return::experience() const {
  return experience_;
}
inline void GM_EquipAwaken_Obtain_Return::set_experience(::google::protobuf::int64 value) {
  set_has_experience();
  experience_ = value;
}

// optional .GM_EquipAwaken_Hole_Detail data = 9;
inline bool GM_EquipAwaken_Obtain_Return::has_data() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_EquipAwaken_Obtain_Return::set_has_data() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_has_data() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_data() {
  if (data_ != NULL) data_->::GM_EquipAwaken_Hole_Detail::Clear();
  clear_has_data();
}
inline const ::GM_EquipAwaken_Hole_Detail& GM_EquipAwaken_Obtain_Return::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::GM_EquipAwaken_Hole_Detail* GM_EquipAwaken_Obtain_Return::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::GM_EquipAwaken_Hole_Detail;
  return data_;
}
inline ::GM_EquipAwaken_Hole_Detail* GM_EquipAwaken_Obtain_Return::release_data() {
  clear_has_data();
  ::GM_EquipAwaken_Hole_Detail* temp = data_;
  data_ = NULL;
  return temp;
}
inline void GM_EquipAwaken_Obtain_Return::set_allocated_data(::GM_EquipAwaken_Hole_Detail* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// optional int32 realtimes = 10;
inline bool GM_EquipAwaken_Obtain_Return::has_realtimes() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GM_EquipAwaken_Obtain_Return::set_has_realtimes() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_has_realtimes() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GM_EquipAwaken_Obtain_Return::clear_realtimes() {
  realtimes_ = 0;
  clear_has_realtimes();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Obtain_Return::realtimes() const {
  return realtimes_;
}
inline void GM_EquipAwaken_Obtain_Return::set_realtimes(::google::protobuf::int32 value) {
  set_has_realtimes();
  realtimes_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_AddSwap_Request

// required int64 gmid = 1;
inline bool GM_EquipAwaken_AddSwap_Request::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_AddSwap_Request::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_AddSwap_Request::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_AddSwap_Request::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_AddSwap_Request::gmid() const {
  return gmid_;
}
inline void GM_EquipAwaken_AddSwap_Request::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// required int32 holenum = 2;
inline bool GM_EquipAwaken_AddSwap_Request::has_holenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken_AddSwap_Request::set_has_holenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken_AddSwap_Request::clear_has_holenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken_AddSwap_Request::clear_holenum() {
  holenum_ = 0;
  clear_has_holenum();
}
inline ::google::protobuf::int32 GM_EquipAwaken_AddSwap_Request::holenum() const {
  return holenum_;
}
inline void GM_EquipAwaken_AddSwap_Request::set_holenum(::google::protobuf::int32 value) {
  set_has_holenum();
  holenum_ = value;
}

// required int32 replaceholenum = 3;
inline bool GM_EquipAwaken_AddSwap_Request::has_replaceholenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_EquipAwaken_AddSwap_Request::set_has_replaceholenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_EquipAwaken_AddSwap_Request::clear_has_replaceholenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_EquipAwaken_AddSwap_Request::clear_replaceholenum() {
  replaceholenum_ = 0;
  clear_has_replaceholenum();
}
inline ::google::protobuf::int32 GM_EquipAwaken_AddSwap_Request::replaceholenum() const {
  return replaceholenum_;
}
inline void GM_EquipAwaken_AddSwap_Request::set_replaceholenum(::google::protobuf::int32 value) {
  set_has_replaceholenum();
  replaceholenum_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_AddSwap_Return

// required int32 result = 1;
inline bool GM_EquipAwaken_AddSwap_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_AddSwap_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_AddSwap_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_AddSwap_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_EquipAwaken_AddSwap_Return::result() const {
  return result_;
}
inline void GM_EquipAwaken_AddSwap_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int64 gmid = 2;
inline bool GM_EquipAwaken_AddSwap_Return::has_gmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken_AddSwap_Return::set_has_gmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken_AddSwap_Return::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken_AddSwap_Return::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_AddSwap_Return::gmid() const {
  return gmid_;
}
inline void GM_EquipAwaken_AddSwap_Return::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// optional int32 holenum = 3;
inline bool GM_EquipAwaken_AddSwap_Return::has_holenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_EquipAwaken_AddSwap_Return::set_has_holenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_EquipAwaken_AddSwap_Return::clear_has_holenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_EquipAwaken_AddSwap_Return::clear_holenum() {
  holenum_ = 0;
  clear_has_holenum();
}
inline ::google::protobuf::int32 GM_EquipAwaken_AddSwap_Return::holenum() const {
  return holenum_;
}
inline void GM_EquipAwaken_AddSwap_Return::set_holenum(::google::protobuf::int32 value) {
  set_has_holenum();
  holenum_ = value;
}

// optional int32 replaceholenum = 4;
inline bool GM_EquipAwaken_AddSwap_Return::has_replaceholenum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_EquipAwaken_AddSwap_Return::set_has_replaceholenum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_EquipAwaken_AddSwap_Return::clear_has_replaceholenum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_EquipAwaken_AddSwap_Return::clear_replaceholenum() {
  replaceholenum_ = 0;
  clear_has_replaceholenum();
}
inline ::google::protobuf::int32 GM_EquipAwaken_AddSwap_Return::replaceholenum() const {
  return replaceholenum_;
}
inline void GM_EquipAwaken_AddSwap_Return::set_replaceholenum(::google::protobuf::int32 value) {
  set_has_replaceholenum();
  replaceholenum_ = value;
}

// optional int32 getexp = 5;
inline bool GM_EquipAwaken_AddSwap_Return::has_getexp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_EquipAwaken_AddSwap_Return::set_has_getexp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_EquipAwaken_AddSwap_Return::clear_has_getexp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_EquipAwaken_AddSwap_Return::clear_getexp() {
  getexp_ = 0;
  clear_has_getexp();
}
inline ::google::protobuf::int32 GM_EquipAwaken_AddSwap_Return::getexp() const {
  return getexp_;
}
inline void GM_EquipAwaken_AddSwap_Return::set_getexp(::google::protobuf::int32 value) {
  set_has_getexp();
  getexp_ = value;
}

// optional int64 experience = 6;
inline bool GM_EquipAwaken_AddSwap_Return::has_experience() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_EquipAwaken_AddSwap_Return::set_has_experience() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_EquipAwaken_AddSwap_Return::clear_has_experience() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_EquipAwaken_AddSwap_Return::clear_experience() {
  experience_ = GOOGLE_LONGLONG(0);
  clear_has_experience();
}
inline ::google::protobuf::int64 GM_EquipAwaken_AddSwap_Return::experience() const {
  return experience_;
}
inline void GM_EquipAwaken_AddSwap_Return::set_experience(::google::protobuf::int64 value) {
  set_has_experience();
  experience_ = value;
}

// repeated .GM_EquipAwaken_Hole_Detail data = 7;
inline int GM_EquipAwaken_AddSwap_Return::data_size() const {
  return data_.size();
}
inline void GM_EquipAwaken_AddSwap_Return::clear_data() {
  data_.Clear();
}
inline const ::GM_EquipAwaken_Hole_Detail& GM_EquipAwaken_AddSwap_Return::data(int index) const {
  return data_.Get(index);
}
inline ::GM_EquipAwaken_Hole_Detail* GM_EquipAwaken_AddSwap_Return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_EquipAwaken_Hole_Detail* GM_EquipAwaken_AddSwap_Return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Hole_Detail >&
GM_EquipAwaken_AddSwap_Return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Hole_Detail >*
GM_EquipAwaken_AddSwap_Return::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Store_Request

// required int64 gmid = 1;
inline bool GM_EquipAwaken_Store_Request::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Store_Request::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Store_Request::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Store_Request::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Store_Request::gmid() const {
  return gmid_;
}
inline void GM_EquipAwaken_Store_Request::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Store_Return

// required int32 result = 1;
inline bool GM_EquipAwaken_Store_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Store_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Store_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Store_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Store_Return::result() const {
  return result_;
}
inline void GM_EquipAwaken_Store_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int64 gmid = 2;
inline bool GM_EquipAwaken_Store_Return::has_gmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken_Store_Return::set_has_gmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken_Store_Return::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken_Store_Return::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Store_Return::gmid() const {
  return gmid_;
}
inline void GM_EquipAwaken_Store_Return::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// optional .GM_EquipAwaken_Hole_Detail data = 3;
inline bool GM_EquipAwaken_Store_Return::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_EquipAwaken_Store_Return::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_EquipAwaken_Store_Return::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_EquipAwaken_Store_Return::clear_data() {
  if (data_ != NULL) data_->::GM_EquipAwaken_Hole_Detail::Clear();
  clear_has_data();
}
inline const ::GM_EquipAwaken_Hole_Detail& GM_EquipAwaken_Store_Return::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::GM_EquipAwaken_Hole_Detail* GM_EquipAwaken_Store_Return::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::GM_EquipAwaken_Hole_Detail;
  return data_;
}
inline ::GM_EquipAwaken_Hole_Detail* GM_EquipAwaken_Store_Return::release_data() {
  clear_has_data();
  ::GM_EquipAwaken_Hole_Detail* temp = data_;
  data_ = NULL;
  return temp;
}
inline void GM_EquipAwaken_Store_Return::set_allocated_data(::GM_EquipAwaken_Hole_Detail* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Refine_Request

// required int64 gmid = 1;
inline bool GM_EquipAwaken_Refine_Request::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Refine_Request::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Refine_Request::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Refine_Request::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Refine_Request::gmid() const {
  return gmid_;
}
inline void GM_EquipAwaken_Refine_Request::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// optional int32 holenum = 2;
inline bool GM_EquipAwaken_Refine_Request::has_holenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken_Refine_Request::set_has_holenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken_Refine_Request::clear_has_holenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken_Refine_Request::clear_holenum() {
  holenum_ = 0;
  clear_has_holenum();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Refine_Request::holenum() const {
  return holenum_;
}
inline void GM_EquipAwaken_Refine_Request::set_holenum(::google::protobuf::int32 value) {
  set_has_holenum();
  holenum_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Refine_Return

// required int32 result = 1;
inline bool GM_EquipAwaken_Refine_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Refine_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Refine_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Refine_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Refine_Return::result() const {
  return result_;
}
inline void GM_EquipAwaken_Refine_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int64 gmid = 2;
inline bool GM_EquipAwaken_Refine_Return::has_gmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken_Refine_Return::set_has_gmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken_Refine_Return::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken_Refine_Return::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Refine_Return::gmid() const {
  return gmid_;
}
inline void GM_EquipAwaken_Refine_Return::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// optional int32 holenum = 3;
inline bool GM_EquipAwaken_Refine_Return::has_holenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_EquipAwaken_Refine_Return::set_has_holenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_EquipAwaken_Refine_Return::clear_has_holenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_EquipAwaken_Refine_Return::clear_holenum() {
  holenum_ = 0;
  clear_has_holenum();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Refine_Return::holenum() const {
  return holenum_;
}
inline void GM_EquipAwaken_Refine_Return::set_holenum(::google::protobuf::int32 value) {
  set_has_holenum();
  holenum_ = value;
}

// optional int32 getexp = 4;
inline bool GM_EquipAwaken_Refine_Return::has_getexp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_EquipAwaken_Refine_Return::set_has_getexp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_EquipAwaken_Refine_Return::clear_has_getexp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_EquipAwaken_Refine_Return::clear_getexp() {
  getexp_ = 0;
  clear_has_getexp();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Refine_Return::getexp() const {
  return getexp_;
}
inline void GM_EquipAwaken_Refine_Return::set_getexp(::google::protobuf::int32 value) {
  set_has_getexp();
  getexp_ = value;
}

// optional int64 experience = 5;
inline bool GM_EquipAwaken_Refine_Return::has_experience() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_EquipAwaken_Refine_Return::set_has_experience() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_EquipAwaken_Refine_Return::clear_has_experience() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_EquipAwaken_Refine_Return::clear_experience() {
  experience_ = GOOGLE_LONGLONG(0);
  clear_has_experience();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Refine_Return::experience() const {
  return experience_;
}
inline void GM_EquipAwaken_Refine_Return::set_experience(::google::protobuf::int64 value) {
  set_has_experience();
  experience_ = value;
}

// repeated .GM_EquipAwaken_Hole_Detail data = 6;
inline int GM_EquipAwaken_Refine_Return::data_size() const {
  return data_.size();
}
inline void GM_EquipAwaken_Refine_Return::clear_data() {
  data_.Clear();
}
inline const ::GM_EquipAwaken_Hole_Detail& GM_EquipAwaken_Refine_Return::data(int index) const {
  return data_.Get(index);
}
inline ::GM_EquipAwaken_Hole_Detail* GM_EquipAwaken_Refine_Return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_EquipAwaken_Hole_Detail* GM_EquipAwaken_Refine_Return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Hole_Detail >&
GM_EquipAwaken_Refine_Return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Hole_Detail >*
GM_EquipAwaken_Refine_Return::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Unlock_Request

// required int64 gmid = 1;
inline bool GM_EquipAwaken_Unlock_Request::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Unlock_Request::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Unlock_Request::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Unlock_Request::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Unlock_Request::gmid() const {
  return gmid_;
}
inline void GM_EquipAwaken_Unlock_Request::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Unlock_Return

// required int32 result = 1;
inline bool GM_EquipAwaken_Unlock_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Unlock_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Unlock_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Unlock_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Unlock_Return::result() const {
  return result_;
}
inline void GM_EquipAwaken_Unlock_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 holenum = 2;
inline bool GM_EquipAwaken_Unlock_Return::has_holenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken_Unlock_Return::set_has_holenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken_Unlock_Return::clear_has_holenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken_Unlock_Return::clear_holenum() {
  holenum_ = 0;
  clear_has_holenum();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Unlock_Return::holenum() const {
  return holenum_;
}
inline void GM_EquipAwaken_Unlock_Return::set_holenum(::google::protobuf::int32 value) {
  set_has_holenum();
  holenum_ = value;
}

// optional int64 gmid = 3;
inline bool GM_EquipAwaken_Unlock_Return::has_gmid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_EquipAwaken_Unlock_Return::set_has_gmid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_EquipAwaken_Unlock_Return::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_EquipAwaken_Unlock_Return::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Unlock_Return::gmid() const {
  return gmid_;
}
inline void GM_EquipAwaken_Unlock_Return::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Info_Request

// required int64 nGmid = 1;
inline bool GM_EquipAwaken_Info_Request::has_ngmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Info_Request::set_has_ngmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Info_Request::clear_has_ngmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Info_Request::clear_ngmid() {
  ngmid_ = GOOGLE_LONGLONG(0);
  clear_has_ngmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Info_Request::ngmid() const {
  return ngmid_;
}
inline void GM_EquipAwaken_Info_Request::set_ngmid(::google::protobuf::int64 value) {
  set_has_ngmid();
  ngmid_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Info_Return

// required int32 nresult = 1;
inline bool GM_EquipAwaken_Info_Return::has_nresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Info_Return::set_has_nresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Info_Return::clear_has_nresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Info_Return::clear_nresult() {
  nresult_ = 0;
  clear_has_nresult();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Info_Return::nresult() const {
  return nresult_;
}
inline void GM_EquipAwaken_Info_Return::set_nresult(::google::protobuf::int32 value) {
  set_has_nresult();
  nresult_ = value;
}

// required int64 nGmid = 2;
inline bool GM_EquipAwaken_Info_Return::has_ngmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken_Info_Return::set_has_ngmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken_Info_Return::clear_has_ngmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken_Info_Return::clear_ngmid() {
  ngmid_ = GOOGLE_LONGLONG(0);
  clear_has_ngmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Info_Return::ngmid() const {
  return ngmid_;
}
inline void GM_EquipAwaken_Info_Return::set_ngmid(::google::protobuf::int64 value) {
  set_has_ngmid();
  ngmid_ = value;
}

// repeated .GM_EquipAwaken_Info data = 3;
inline int GM_EquipAwaken_Info_Return::data_size() const {
  return data_.size();
}
inline void GM_EquipAwaken_Info_Return::clear_data() {
  data_.Clear();
}
inline const ::GM_EquipAwaken_Info& GM_EquipAwaken_Info_Return::data(int index) const {
  return data_.Get(index);
}
inline ::GM_EquipAwaken_Info* GM_EquipAwaken_Info_Return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_EquipAwaken_Info* GM_EquipAwaken_Info_Return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Info >&
GM_EquipAwaken_Info_Return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Info >*
GM_EquipAwaken_Info_Return::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Info

// required int32 awakenid = 1;
inline bool GM_EquipAwaken_Info::has_awakenid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Info::set_has_awakenid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Info::clear_has_awakenid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Info::clear_awakenid() {
  awakenid_ = 0;
  clear_has_awakenid();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Info::awakenid() const {
  return awakenid_;
}
inline void GM_EquipAwaken_Info::set_awakenid(::google::protobuf::int32 value) {
  set_has_awakenid();
  awakenid_ = value;
}

// optional int32 awakenlevel = 2;
inline bool GM_EquipAwaken_Info::has_awakenlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken_Info::set_has_awakenlevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken_Info::clear_has_awakenlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken_Info::clear_awakenlevel() {
  awakenlevel_ = 0;
  clear_has_awakenlevel();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Info::awakenlevel() const {
  return awakenlevel_;
}
inline void GM_EquipAwaken_Info::set_awakenlevel(::google::protobuf::int32 value) {
  set_has_awakenlevel();
  awakenlevel_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Swap_Request

// required int64 nLeftGmid = 1;
inline bool GM_EquipAwaken_Swap_Request::has_nleftgmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Swap_Request::set_has_nleftgmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Swap_Request::clear_has_nleftgmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Swap_Request::clear_nleftgmid() {
  nleftgmid_ = GOOGLE_LONGLONG(0);
  clear_has_nleftgmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Swap_Request::nleftgmid() const {
  return nleftgmid_;
}
inline void GM_EquipAwaken_Swap_Request::set_nleftgmid(::google::protobuf::int64 value) {
  set_has_nleftgmid();
  nleftgmid_ = value;
}

// optional int64 nRightGmid = 2;
inline bool GM_EquipAwaken_Swap_Request::has_nrightgmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken_Swap_Request::set_has_nrightgmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken_Swap_Request::clear_has_nrightgmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken_Swap_Request::clear_nrightgmid() {
  nrightgmid_ = GOOGLE_LONGLONG(0);
  clear_has_nrightgmid();
}
inline ::google::protobuf::int64 GM_EquipAwaken_Swap_Request::nrightgmid() const {
  return nrightgmid_;
}
inline void GM_EquipAwaken_Swap_Request::set_nrightgmid(::google::protobuf::int64 value) {
  set_has_nrightgmid();
  nrightgmid_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Swap_Return

// required int32 nResult = 1;
inline bool GM_EquipAwaken_Swap_Return::has_nresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Swap_Return::set_has_nresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Swap_Return::clear_has_nresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Swap_Return::clear_nresult() {
  nresult_ = 0;
  clear_has_nresult();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Swap_Return::nresult() const {
  return nresult_;
}
inline void GM_EquipAwaken_Swap_Return::set_nresult(::google::protobuf::int32 value) {
  set_has_nresult();
  nresult_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Upgrade_Change

// required int32 result = 1;
inline bool GM_EquipAwaken_Upgrade_Change::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Upgrade_Change::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Upgrade_Change::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Upgrade_Change::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Upgrade_Change::result() const {
  return result_;
}
inline void GM_EquipAwaken_Upgrade_Change::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .GM_EquipAwaken_Upgrade_Info data = 2;
inline int GM_EquipAwaken_Upgrade_Change::data_size() const {
  return data_.size();
}
inline void GM_EquipAwaken_Upgrade_Change::clear_data() {
  data_.Clear();
}
inline const ::GM_EquipAwaken_Upgrade_Info& GM_EquipAwaken_Upgrade_Change::data(int index) const {
  return data_.Get(index);
}
inline ::GM_EquipAwaken_Upgrade_Info* GM_EquipAwaken_Upgrade_Change::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_EquipAwaken_Upgrade_Info* GM_EquipAwaken_Upgrade_Change::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Upgrade_Info >&
GM_EquipAwaken_Upgrade_Change::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_EquipAwaken_Upgrade_Info >*
GM_EquipAwaken_Upgrade_Change::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_EquipAwaken_Upgrade_Info

// required int32 holenum = 1;
inline bool GM_EquipAwaken_Upgrade_Info::has_holenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwaken_Upgrade_Info::set_has_holenum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwaken_Upgrade_Info::clear_has_holenum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwaken_Upgrade_Info::clear_holenum() {
  holenum_ = 0;
  clear_has_holenum();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Upgrade_Info::holenum() const {
  return holenum_;
}
inline void GM_EquipAwaken_Upgrade_Info::set_holenum(::google::protobuf::int32 value) {
  set_has_holenum();
  holenum_ = value;
}

// optional int32 state = 2;
inline bool GM_EquipAwaken_Upgrade_Info::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwaken_Upgrade_Info::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwaken_Upgrade_Info::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwaken_Upgrade_Info::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GM_EquipAwaken_Upgrade_Info::state() const {
  return state_;
}
inline void GM_EquipAwaken_Upgrade_Info::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// GM_EquipWing_Request

// required int64 gmid = 1;
inline bool GM_EquipWing_Request::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipWing_Request::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipWing_Request::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipWing_Request::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_EquipWing_Request::gmid() const {
  return gmid_;
}
inline void GM_EquipWing_Request::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// optional int32 winglevel = 2;
inline bool GM_EquipWing_Request::has_winglevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipWing_Request::set_has_winglevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipWing_Request::clear_has_winglevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipWing_Request::clear_winglevel() {
  winglevel_ = 0;
  clear_has_winglevel();
}
inline ::google::protobuf::int32 GM_EquipWing_Request::winglevel() const {
  return winglevel_;
}
inline void GM_EquipWing_Request::set_winglevel(::google::protobuf::int32 value) {
  set_has_winglevel();
  winglevel_ = value;
}

// required int32 issucess = 3;
inline bool GM_EquipWing_Request::has_issucess() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_EquipWing_Request::set_has_issucess() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_EquipWing_Request::clear_has_issucess() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_EquipWing_Request::clear_issucess() {
  issucess_ = 0;
  clear_has_issucess();
}
inline ::google::protobuf::int32 GM_EquipWing_Request::issucess() const {
  return issucess_;
}
inline void GM_EquipWing_Request::set_issucess(::google::protobuf::int32 value) {
  set_has_issucess();
  issucess_ = value;
}

// -------------------------------------------------------------------

// GM_AwakeEquip

// required int64 gmid = 1;
inline bool GM_AwakeEquip::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_AwakeEquip::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_AwakeEquip::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_AwakeEquip::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_AwakeEquip::gmid() const {
  return gmid_;
}
inline void GM_AwakeEquip::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// required int32 x = 2;
inline bool GM_AwakeEquip::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_AwakeEquip::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_AwakeEquip::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_AwakeEquip::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 GM_AwakeEquip::x() const {
  return x_;
}
inline void GM_AwakeEquip::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
}

// required int32 y = 3;
inline bool GM_AwakeEquip::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_AwakeEquip::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_AwakeEquip::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_AwakeEquip::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 GM_AwakeEquip::y() const {
  return y_;
}
inline void GM_AwakeEquip::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
}

// required int32 isFull = 4;
inline bool GM_AwakeEquip::has_isfull() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_AwakeEquip::set_has_isfull() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_AwakeEquip::clear_has_isfull() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_AwakeEquip::clear_isfull() {
  isfull_ = 0;
  clear_has_isfull();
}
inline ::google::protobuf::int32 GM_AwakeEquip::isfull() const {
  return isfull_;
}
inline void GM_AwakeEquip::set_isfull(::google::protobuf::int32 value) {
  set_has_isfull();
  isfull_ = value;
}

// -------------------------------------------------------------------

// GM_AwakeEquipAll

// required int32 return = 1;
inline bool GM_AwakeEquipAll::has_return_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_AwakeEquipAll::set_has_return_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_AwakeEquipAll::clear_has_return_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_AwakeEquipAll::clear_return_() {
  return__ = 0;
  clear_has_return_();
}
inline ::google::protobuf::int32 GM_AwakeEquipAll::return_() const {
  return return__;
}
inline void GM_AwakeEquipAll::set_return_(::google::protobuf::int32 value) {
  set_has_return_();
  return__ = value;
}

// repeated .GM_AwakeEquip awakedata = 2;
inline int GM_AwakeEquipAll::awakedata_size() const {
  return awakedata_.size();
}
inline void GM_AwakeEquipAll::clear_awakedata() {
  awakedata_.Clear();
}
inline const ::GM_AwakeEquip& GM_AwakeEquipAll::awakedata(int index) const {
  return awakedata_.Get(index);
}
inline ::GM_AwakeEquip* GM_AwakeEquipAll::mutable_awakedata(int index) {
  return awakedata_.Mutable(index);
}
inline ::GM_AwakeEquip* GM_AwakeEquipAll::add_awakedata() {
  return awakedata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_AwakeEquip >&
GM_AwakeEquipAll::awakedata() const {
  return awakedata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_AwakeEquip >*
GM_AwakeEquipAll::mutable_awakedata() {
  return &awakedata_;
}

// -------------------------------------------------------------------

// GM_AwakeEquipRequest

// required int64 awakeequipgmid = 1;
inline bool GM_AwakeEquipRequest::has_awakeequipgmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_AwakeEquipRequest::set_has_awakeequipgmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_AwakeEquipRequest::clear_has_awakeequipgmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_AwakeEquipRequest::clear_awakeequipgmid() {
  awakeequipgmid_ = GOOGLE_LONGLONG(0);
  clear_has_awakeequipgmid();
}
inline ::google::protobuf::int64 GM_AwakeEquipRequest::awakeequipgmid() const {
  return awakeequipgmid_;
}
inline void GM_AwakeEquipRequest::set_awakeequipgmid(::google::protobuf::int64 value) {
  set_has_awakeequipgmid();
  awakeequipgmid_ = value;
}

// required int64 equipgmid = 2;
inline bool GM_AwakeEquipRequest::has_equipgmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_AwakeEquipRequest::set_has_equipgmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_AwakeEquipRequest::clear_has_equipgmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_AwakeEquipRequest::clear_equipgmid() {
  equipgmid_ = GOOGLE_LONGLONG(0);
  clear_has_equipgmid();
}
inline ::google::protobuf::int64 GM_AwakeEquipRequest::equipgmid() const {
  return equipgmid_;
}
inline void GM_AwakeEquipRequest::set_equipgmid(::google::protobuf::int64 value) {
  set_has_equipgmid();
  equipgmid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_equipuplevel_2etxt__INCLUDED
