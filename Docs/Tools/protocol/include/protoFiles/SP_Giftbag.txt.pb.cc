// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_Giftbag.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SP_Giftbag.txt.pb.h"
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GM_GiftBagData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_GiftBagData_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_GiftBagItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_GiftBagItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_GiftBagTypeId_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_GiftBagTypeId_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_GiftBagRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_GiftBagRecord_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_GiftBagGift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_GiftBagGift_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_GiftBagList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_GiftBagList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_SP_5fGiftbag_2etxt() {
  protobuf_AddDesc_SP_5fGiftbag_2etxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SP_Giftbag.txt");
  GOOGLE_CHECK(file != NULL);
  GM_GiftBagData_descriptor_ = file->message_type(0);
  static const int GM_GiftBagData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagData, type_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagData, giftbag_item_),
  };
  GM_GiftBagData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_GiftBagData_descriptor_,
      GM_GiftBagData::default_instance_,
      GM_GiftBagData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_GiftBagData));
  GM_GiftBagItem_descriptor_ = file->message_type(1);
  static const int GM_GiftBagItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagItem, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagItem, objcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagItem, objlevel_),
  };
  GM_GiftBagItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_GiftBagItem_descriptor_,
      GM_GiftBagItem::default_instance_,
      GM_GiftBagItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_GiftBagItem));
  GM_GiftBagTypeId_descriptor_ = file->message_type(2);
  static const int GM_GiftBagTypeId_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagTypeId, type_id_),
  };
  GM_GiftBagTypeId_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_GiftBagTypeId_descriptor_,
      GM_GiftBagTypeId::default_instance_,
      GM_GiftBagTypeId_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagTypeId, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagTypeId, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_GiftBagTypeId));
  GM_GiftBagRecord_descriptor_ = file->message_type(3);
  static const int GM_GiftBagRecord_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagRecord, type_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagRecord, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagRecord, objcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagRecord, objlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagRecord, profession_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagRecord, validtime_),
  };
  GM_GiftBagRecord_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_GiftBagRecord_descriptor_,
      GM_GiftBagRecord::default_instance_,
      GM_GiftBagRecord_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagRecord, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagRecord, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_GiftBagRecord));
  GM_GiftBagGift_descriptor_ = file->message_type(4);
  static const int GM_GiftBagGift_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagGift, giftid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagGift, gift_),
  };
  GM_GiftBagGift_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_GiftBagGift_descriptor_,
      GM_GiftBagGift::default_instance_,
      GM_GiftBagGift_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagGift, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagGift, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_GiftBagGift));
  GM_GiftBagList_descriptor_ = file->message_type(5);
  static const int GM_GiftBagList_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagList, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagList, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagList, gifts_),
  };
  GM_GiftBagList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_GiftBagList_descriptor_,
      GM_GiftBagList::default_instance_,
      GM_GiftBagList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GiftBagList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_GiftBagList));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SP_5fGiftbag_2etxt);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_GiftBagData_descriptor_, &GM_GiftBagData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_GiftBagItem_descriptor_, &GM_GiftBagItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_GiftBagTypeId_descriptor_, &GM_GiftBagTypeId::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_GiftBagRecord_descriptor_, &GM_GiftBagRecord::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_GiftBagGift_descriptor_, &GM_GiftBagGift::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_GiftBagList_descriptor_, &GM_GiftBagList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SP_5fGiftbag_2etxt() {
  delete GM_GiftBagData::default_instance_;
  delete GM_GiftBagData_reflection_;
  delete GM_GiftBagItem::default_instance_;
  delete GM_GiftBagItem_reflection_;
  delete GM_GiftBagTypeId::default_instance_;
  delete GM_GiftBagTypeId_reflection_;
  delete GM_GiftBagRecord::default_instance_;
  delete GM_GiftBagRecord_reflection_;
  delete GM_GiftBagGift::default_instance_;
  delete GM_GiftBagGift_reflection_;
  delete GM_GiftBagList::default_instance_;
  delete GM_GiftBagList_reflection_;
}

void protobuf_AddDesc_SP_5fGiftbag_2etxt() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016SP_Giftbag.txt\"H\n\016GM_GiftBagData\022\017\n\007ty"
    "pe_id\030\002 \002(\005\022%\n\014giftbag_item\030\001 \003(\0132\017.GM_G"
    "iftBagItem\"F\n\016GM_GiftBagItem\022\020\n\010objectid"
    "\030\001 \002(\005\022\020\n\010objcount\030\002 \002(\005\022\020\n\010objlevel\030\003 \002"
    "(\005\"#\n\020GM_GiftBagTypeId\022\017\n\007type_id\030\001 \002(\005\""
    "\200\001\n\020GM_GiftBagRecord\022\017\n\007type_id\030\001 \002(\005\022\020\n"
    "\010objectid\030\002 \002(\005\022\020\n\010objcount\030\003 \002(\005\022\020\n\010obj"
    "level\030\004 \002(\005\022\022\n\nprofession\030\005 \002(\005\022\021\n\tvalid"
    "time\030\006 \002(\005\"A\n\016GM_GiftBagGift\022\016\n\006giftid\030\001"
    " \002(\005\022\037\n\004gift\030\002 \003(\0132\021.GM_GiftBagRecord\"P\n"
    "\016GM_GiftBagList\022\r\n\005count\030\001 \002(\r\022\017\n\007versio"
    "n\030\002 \002(\r\022\036\n\005gifts\030\003 \003(\0132\017.GM_GiftBagGift", 479);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SP_Giftbag.txt", &protobuf_RegisterTypes);
  GM_GiftBagData::default_instance_ = new GM_GiftBagData();
  GM_GiftBagItem::default_instance_ = new GM_GiftBagItem();
  GM_GiftBagTypeId::default_instance_ = new GM_GiftBagTypeId();
  GM_GiftBagRecord::default_instance_ = new GM_GiftBagRecord();
  GM_GiftBagGift::default_instance_ = new GM_GiftBagGift();
  GM_GiftBagList::default_instance_ = new GM_GiftBagList();
  GM_GiftBagData::default_instance_->InitAsDefaultInstance();
  GM_GiftBagItem::default_instance_->InitAsDefaultInstance();
  GM_GiftBagTypeId::default_instance_->InitAsDefaultInstance();
  GM_GiftBagRecord::default_instance_->InitAsDefaultInstance();
  GM_GiftBagGift::default_instance_->InitAsDefaultInstance();
  GM_GiftBagList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SP_5fGiftbag_2etxt);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SP_5fGiftbag_2etxt {
  StaticDescriptorInitializer_SP_5fGiftbag_2etxt() {
    protobuf_AddDesc_SP_5fGiftbag_2etxt();
  }
} static_descriptor_initializer_SP_5fGiftbag_2etxt_;

// ===================================================================

#ifndef _MSC_VER
const int GM_GiftBagData::kTypeIdFieldNumber;
const int GM_GiftBagData::kGiftbagItemFieldNumber;
#endif  // !_MSC_VER

GM_GiftBagData::GM_GiftBagData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_GiftBagData::InitAsDefaultInstance() {
}

GM_GiftBagData::GM_GiftBagData(const GM_GiftBagData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_GiftBagData::SharedCtor() {
  _cached_size_ = 0;
  type_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_GiftBagData::~GM_GiftBagData() {
  SharedDtor();
}

void GM_GiftBagData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_GiftBagData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_GiftBagData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_GiftBagData_descriptor_;
}

const GM_GiftBagData& GM_GiftBagData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fGiftbag_2etxt();
  return *default_instance_;
}

GM_GiftBagData* GM_GiftBagData::default_instance_ = NULL;

GM_GiftBagData* GM_GiftBagData::New() const {
  return new GM_GiftBagData;
}

void GM_GiftBagData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_id_ = 0;
  }
  giftbag_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_GiftBagData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .GM_GiftBagItem giftbag_item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_giftbag_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_giftbag_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_giftbag_item;
        if (input->ExpectTag(16)) goto parse_type_id;
        break;
      }

      // required int32 type_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_id_)));
          set_has_type_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_GiftBagData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .GM_GiftBagItem giftbag_item = 1;
  for (int i = 0; i < this->giftbag_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->giftbag_item(i), output);
  }

  // required int32 type_id = 2;
  if (has_type_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_GiftBagData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .GM_GiftBagItem giftbag_item = 1;
  for (int i = 0; i < this->giftbag_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->giftbag_item(i), target);
  }

  // required int32 type_id = 2;
  if (has_type_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_GiftBagData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type_id = 2;
    if (has_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type_id());
    }

  }
  // repeated .GM_GiftBagItem giftbag_item = 1;
  total_size += 1 * this->giftbag_item_size();
  for (int i = 0; i < this->giftbag_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->giftbag_item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_GiftBagData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_GiftBagData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_GiftBagData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_GiftBagData::MergeFrom(const GM_GiftBagData& from) {
  GOOGLE_CHECK_NE(&from, this);
  giftbag_item_.MergeFrom(from.giftbag_item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type_id()) {
      set_type_id(from.type_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_GiftBagData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_GiftBagData::CopyFrom(const GM_GiftBagData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_GiftBagData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < giftbag_item_size(); i++) {
    if (!this->giftbag_item(i).IsInitialized()) return false;
  }
  return true;
}

void GM_GiftBagData::Swap(GM_GiftBagData* other) {
  if (other != this) {
    std::swap(type_id_, other->type_id_);
    giftbag_item_.Swap(&other->giftbag_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_GiftBagData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_GiftBagData_descriptor_;
  metadata.reflection = GM_GiftBagData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_GiftBagItem::kObjectidFieldNumber;
const int GM_GiftBagItem::kObjcountFieldNumber;
const int GM_GiftBagItem::kObjlevelFieldNumber;
#endif  // !_MSC_VER

GM_GiftBagItem::GM_GiftBagItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_GiftBagItem::InitAsDefaultInstance() {
}

GM_GiftBagItem::GM_GiftBagItem(const GM_GiftBagItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_GiftBagItem::SharedCtor() {
  _cached_size_ = 0;
  objectid_ = 0;
  objcount_ = 0;
  objlevel_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_GiftBagItem::~GM_GiftBagItem() {
  SharedDtor();
}

void GM_GiftBagItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_GiftBagItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_GiftBagItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_GiftBagItem_descriptor_;
}

const GM_GiftBagItem& GM_GiftBagItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fGiftbag_2etxt();
  return *default_instance_;
}

GM_GiftBagItem* GM_GiftBagItem::default_instance_ = NULL;

GM_GiftBagItem* GM_GiftBagItem::New() const {
  return new GM_GiftBagItem;
}

void GM_GiftBagItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    objectid_ = 0;
    objcount_ = 0;
    objlevel_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_GiftBagItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 objectid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_objcount;
        break;
      }

      // required int32 objcount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_objcount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objcount_)));
          set_has_objcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_objlevel;
        break;
      }

      // required int32 objlevel = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_objlevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objlevel_)));
          set_has_objlevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_GiftBagItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 objectid = 1;
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->objectid(), output);
  }

  // required int32 objcount = 2;
  if (has_objcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objcount(), output);
  }

  // required int32 objlevel = 3;
  if (has_objlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->objlevel(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_GiftBagItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 objectid = 1;
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->objectid(), target);
  }

  // required int32 objcount = 2;
  if (has_objcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objcount(), target);
  }

  // required int32 objlevel = 3;
  if (has_objlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->objlevel(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_GiftBagItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 objectid = 1;
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objectid());
    }

    // required int32 objcount = 2;
    if (has_objcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objcount());
    }

    // required int32 objlevel = 3;
    if (has_objlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objlevel());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_GiftBagItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_GiftBagItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_GiftBagItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_GiftBagItem::MergeFrom(const GM_GiftBagItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
    if (from.has_objcount()) {
      set_objcount(from.objcount());
    }
    if (from.has_objlevel()) {
      set_objlevel(from.objlevel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_GiftBagItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_GiftBagItem::CopyFrom(const GM_GiftBagItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_GiftBagItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GM_GiftBagItem::Swap(GM_GiftBagItem* other) {
  if (other != this) {
    std::swap(objectid_, other->objectid_);
    std::swap(objcount_, other->objcount_);
    std::swap(objlevel_, other->objlevel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_GiftBagItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_GiftBagItem_descriptor_;
  metadata.reflection = GM_GiftBagItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_GiftBagTypeId::kTypeIdFieldNumber;
#endif  // !_MSC_VER

GM_GiftBagTypeId::GM_GiftBagTypeId()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_GiftBagTypeId::InitAsDefaultInstance() {
}

GM_GiftBagTypeId::GM_GiftBagTypeId(const GM_GiftBagTypeId& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_GiftBagTypeId::SharedCtor() {
  _cached_size_ = 0;
  type_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_GiftBagTypeId::~GM_GiftBagTypeId() {
  SharedDtor();
}

void GM_GiftBagTypeId::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_GiftBagTypeId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_GiftBagTypeId::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_GiftBagTypeId_descriptor_;
}

const GM_GiftBagTypeId& GM_GiftBagTypeId::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fGiftbag_2etxt();
  return *default_instance_;
}

GM_GiftBagTypeId* GM_GiftBagTypeId::default_instance_ = NULL;

GM_GiftBagTypeId* GM_GiftBagTypeId::New() const {
  return new GM_GiftBagTypeId;
}

void GM_GiftBagTypeId::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_GiftBagTypeId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_id_)));
          set_has_type_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_GiftBagTypeId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 type_id = 1;
  if (has_type_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_GiftBagTypeId::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 type_id = 1;
  if (has_type_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_GiftBagTypeId::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type_id = 1;
    if (has_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_GiftBagTypeId::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_GiftBagTypeId* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_GiftBagTypeId*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_GiftBagTypeId::MergeFrom(const GM_GiftBagTypeId& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type_id()) {
      set_type_id(from.type_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_GiftBagTypeId::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_GiftBagTypeId::CopyFrom(const GM_GiftBagTypeId& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_GiftBagTypeId::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_GiftBagTypeId::Swap(GM_GiftBagTypeId* other) {
  if (other != this) {
    std::swap(type_id_, other->type_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_GiftBagTypeId::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_GiftBagTypeId_descriptor_;
  metadata.reflection = GM_GiftBagTypeId_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_GiftBagRecord::kTypeIdFieldNumber;
const int GM_GiftBagRecord::kObjectidFieldNumber;
const int GM_GiftBagRecord::kObjcountFieldNumber;
const int GM_GiftBagRecord::kObjlevelFieldNumber;
const int GM_GiftBagRecord::kProfessionFieldNumber;
const int GM_GiftBagRecord::kValidtimeFieldNumber;
#endif  // !_MSC_VER

GM_GiftBagRecord::GM_GiftBagRecord()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_GiftBagRecord::InitAsDefaultInstance() {
}

GM_GiftBagRecord::GM_GiftBagRecord(const GM_GiftBagRecord& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_GiftBagRecord::SharedCtor() {
  _cached_size_ = 0;
  type_id_ = 0;
  objectid_ = 0;
  objcount_ = 0;
  objlevel_ = 0;
  profession_ = 0;
  validtime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_GiftBagRecord::~GM_GiftBagRecord() {
  SharedDtor();
}

void GM_GiftBagRecord::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_GiftBagRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_GiftBagRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_GiftBagRecord_descriptor_;
}

const GM_GiftBagRecord& GM_GiftBagRecord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fGiftbag_2etxt();
  return *default_instance_;
}

GM_GiftBagRecord* GM_GiftBagRecord::default_instance_ = NULL;

GM_GiftBagRecord* GM_GiftBagRecord::New() const {
  return new GM_GiftBagRecord;
}

void GM_GiftBagRecord::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_id_ = 0;
    objectid_ = 0;
    objcount_ = 0;
    objlevel_ = 0;
    profession_ = 0;
    validtime_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_GiftBagRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_id_)));
          set_has_type_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_objectid;
        break;
      }

      // required int32 objectid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_objectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_objcount;
        break;
      }

      // required int32 objcount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_objcount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objcount_)));
          set_has_objcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_objlevel;
        break;
      }

      // required int32 objlevel = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_objlevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objlevel_)));
          set_has_objlevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_profession;
        break;
      }

      // required int32 profession = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_profession:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &profession_)));
          set_has_profession();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_validtime;
        break;
      }

      // required int32 validtime = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_validtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &validtime_)));
          set_has_validtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_GiftBagRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 type_id = 1;
  if (has_type_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type_id(), output);
  }

  // required int32 objectid = 2;
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objectid(), output);
  }

  // required int32 objcount = 3;
  if (has_objcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->objcount(), output);
  }

  // required int32 objlevel = 4;
  if (has_objlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->objlevel(), output);
  }

  // required int32 profession = 5;
  if (has_profession()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->profession(), output);
  }

  // required int32 validtime = 6;
  if (has_validtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->validtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_GiftBagRecord::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 type_id = 1;
  if (has_type_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type_id(), target);
  }

  // required int32 objectid = 2;
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objectid(), target);
  }

  // required int32 objcount = 3;
  if (has_objcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->objcount(), target);
  }

  // required int32 objlevel = 4;
  if (has_objlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->objlevel(), target);
  }

  // required int32 profession = 5;
  if (has_profession()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->profession(), target);
  }

  // required int32 validtime = 6;
  if (has_validtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->validtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_GiftBagRecord::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type_id = 1;
    if (has_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type_id());
    }

    // required int32 objectid = 2;
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objectid());
    }

    // required int32 objcount = 3;
    if (has_objcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objcount());
    }

    // required int32 objlevel = 4;
    if (has_objlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objlevel());
    }

    // required int32 profession = 5;
    if (has_profession()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->profession());
    }

    // required int32 validtime = 6;
    if (has_validtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->validtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_GiftBagRecord::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_GiftBagRecord* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_GiftBagRecord*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_GiftBagRecord::MergeFrom(const GM_GiftBagRecord& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type_id()) {
      set_type_id(from.type_id());
    }
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
    if (from.has_objcount()) {
      set_objcount(from.objcount());
    }
    if (from.has_objlevel()) {
      set_objlevel(from.objlevel());
    }
    if (from.has_profession()) {
      set_profession(from.profession());
    }
    if (from.has_validtime()) {
      set_validtime(from.validtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_GiftBagRecord::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_GiftBagRecord::CopyFrom(const GM_GiftBagRecord& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_GiftBagRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void GM_GiftBagRecord::Swap(GM_GiftBagRecord* other) {
  if (other != this) {
    std::swap(type_id_, other->type_id_);
    std::swap(objectid_, other->objectid_);
    std::swap(objcount_, other->objcount_);
    std::swap(objlevel_, other->objlevel_);
    std::swap(profession_, other->profession_);
    std::swap(validtime_, other->validtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_GiftBagRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_GiftBagRecord_descriptor_;
  metadata.reflection = GM_GiftBagRecord_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_GiftBagGift::kGiftidFieldNumber;
const int GM_GiftBagGift::kGiftFieldNumber;
#endif  // !_MSC_VER

GM_GiftBagGift::GM_GiftBagGift()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_GiftBagGift::InitAsDefaultInstance() {
}

GM_GiftBagGift::GM_GiftBagGift(const GM_GiftBagGift& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_GiftBagGift::SharedCtor() {
  _cached_size_ = 0;
  giftid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_GiftBagGift::~GM_GiftBagGift() {
  SharedDtor();
}

void GM_GiftBagGift::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_GiftBagGift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_GiftBagGift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_GiftBagGift_descriptor_;
}

const GM_GiftBagGift& GM_GiftBagGift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fGiftbag_2etxt();
  return *default_instance_;
}

GM_GiftBagGift* GM_GiftBagGift::default_instance_ = NULL;

GM_GiftBagGift* GM_GiftBagGift::New() const {
  return new GM_GiftBagGift;
}

void GM_GiftBagGift::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    giftid_ = 0;
  }
  gift_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_GiftBagGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 giftid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &giftid_)));
          set_has_giftid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_gift;
        break;
      }

      // repeated .GM_GiftBagRecord gift = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gift:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gift()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_gift;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_GiftBagGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 giftid = 1;
  if (has_giftid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->giftid(), output);
  }

  // repeated .GM_GiftBagRecord gift = 2;
  for (int i = 0; i < this->gift_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->gift(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_GiftBagGift::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 giftid = 1;
  if (has_giftid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->giftid(), target);
  }

  // repeated .GM_GiftBagRecord gift = 2;
  for (int i = 0; i < this->gift_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->gift(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_GiftBagGift::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 giftid = 1;
    if (has_giftid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->giftid());
    }

  }
  // repeated .GM_GiftBagRecord gift = 2;
  total_size += 1 * this->gift_size();
  for (int i = 0; i < this->gift_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gift(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_GiftBagGift::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_GiftBagGift* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_GiftBagGift*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_GiftBagGift::MergeFrom(const GM_GiftBagGift& from) {
  GOOGLE_CHECK_NE(&from, this);
  gift_.MergeFrom(from.gift_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_giftid()) {
      set_giftid(from.giftid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_GiftBagGift::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_GiftBagGift::CopyFrom(const GM_GiftBagGift& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_GiftBagGift::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < gift_size(); i++) {
    if (!this->gift(i).IsInitialized()) return false;
  }
  return true;
}

void GM_GiftBagGift::Swap(GM_GiftBagGift* other) {
  if (other != this) {
    std::swap(giftid_, other->giftid_);
    gift_.Swap(&other->gift_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_GiftBagGift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_GiftBagGift_descriptor_;
  metadata.reflection = GM_GiftBagGift_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_GiftBagList::kCountFieldNumber;
const int GM_GiftBagList::kVersionFieldNumber;
const int GM_GiftBagList::kGiftsFieldNumber;
#endif  // !_MSC_VER

GM_GiftBagList::GM_GiftBagList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_GiftBagList::InitAsDefaultInstance() {
}

GM_GiftBagList::GM_GiftBagList(const GM_GiftBagList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_GiftBagList::SharedCtor() {
  _cached_size_ = 0;
  count_ = 0u;
  version_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_GiftBagList::~GM_GiftBagList() {
  SharedDtor();
}

void GM_GiftBagList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_GiftBagList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_GiftBagList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_GiftBagList_descriptor_;
}

const GM_GiftBagList& GM_GiftBagList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fGiftbag_2etxt();
  return *default_instance_;
}

GM_GiftBagList* GM_GiftBagList::default_instance_ = NULL;

GM_GiftBagList* GM_GiftBagList::New() const {
  return new GM_GiftBagList;
}

void GM_GiftBagList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    count_ = 0u;
    version_ = 0u;
  }
  gifts_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_GiftBagList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 count = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_version;
        break;
      }

      // required uint32 version = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_gifts;
        break;
      }

      // repeated .GM_GiftBagGift gifts = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gifts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gifts()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_gifts;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_GiftBagList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 count = 1;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // required uint32 version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // repeated .GM_GiftBagGift gifts = 3;
  for (int i = 0; i < this->gifts_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->gifts(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_GiftBagList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 count = 1;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // required uint32 version = 2;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // repeated .GM_GiftBagGift gifts = 3;
  for (int i = 0; i < this->gifts_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->gifts(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_GiftBagList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 count = 1;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // required uint32 version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

  }
  // repeated .GM_GiftBagGift gifts = 3;
  total_size += 1 * this->gifts_size();
  for (int i = 0; i < this->gifts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gifts(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_GiftBagList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_GiftBagList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_GiftBagList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_GiftBagList::MergeFrom(const GM_GiftBagList& from) {
  GOOGLE_CHECK_NE(&from, this);
  gifts_.MergeFrom(from.gifts_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_GiftBagList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_GiftBagList::CopyFrom(const GM_GiftBagList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_GiftBagList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < gifts_size(); i++) {
    if (!this->gifts(i).IsInitialized()) return false;
  }
  return true;
}

void GM_GiftBagList::Swap(GM_GiftBagList* other) {
  if (other != this) {
    std::swap(count_, other->count_);
    std::swap(version_, other->version_);
    gifts_.Swap(&other->gifts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_GiftBagList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_GiftBagList_descriptor_;
  metadata.reflection = GM_GiftBagList_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
