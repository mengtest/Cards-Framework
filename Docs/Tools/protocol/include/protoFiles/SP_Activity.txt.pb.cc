// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_Activity.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SP_Activity.txt.pb.h"
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GM_ChargeActivityData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_ChargeActivityData_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_ChargeActivityDataList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_ChargeActivityDataList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_SP_5fActivity_2etxt() {
  protobuf_AddDesc_SP_5fActivity_2etxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SP_Activity.txt");
  GOOGLE_CHECK(file != NULL);
  GM_ChargeActivityData_descriptor_ = file->message_type(0);
  static const int GM_ChargeActivityData_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeActivityData, gmid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeActivityData, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeActivityData, chargecount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeActivityData, giftbagid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeActivityData, kind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeActivityData, status_),
  };
  GM_ChargeActivityData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_ChargeActivityData_descriptor_,
      GM_ChargeActivityData::default_instance_,
      GM_ChargeActivityData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeActivityData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeActivityData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_ChargeActivityData));
  GM_ChargeActivityDataList_descriptor_ = file->message_type(1);
  static const int GM_ChargeActivityDataList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeActivityDataList, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeActivityDataList, datalist_),
  };
  GM_ChargeActivityDataList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_ChargeActivityDataList_descriptor_,
      GM_ChargeActivityDataList::default_instance_,
      GM_ChargeActivityDataList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeActivityDataList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeActivityDataList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_ChargeActivityDataList));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SP_5fActivity_2etxt);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_ChargeActivityData_descriptor_, &GM_ChargeActivityData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_ChargeActivityDataList_descriptor_, &GM_ChargeActivityDataList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SP_5fActivity_2etxt() {
  delete GM_ChargeActivityData::default_instance_;
  delete GM_ChargeActivityData_reflection_;
  delete GM_ChargeActivityDataList::default_instance_;
  delete GM_ChargeActivityDataList_reflection_;
}

void protobuf_AddDesc_SP_5fActivity_2etxt() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017SP_Activity.txt\"{\n\025GM_ChargeActivityDa"
    "ta\022\014\n\004gmid\030\001 \002(\003\022\016\n\006roleid\030\002 \002(\005\022\023\n\013char"
    "gecount\030\003 \002(\005\022\021\n\tgiftbagid\030\004 \002(\005\022\014\n\004kind"
    "\030\005 \002(\005\022\016\n\006status\030\006 \002(\005\"T\n\031GM_ChargeActiv"
    "ityDataList\022\r\n\005count\030\001 \002(\005\022(\n\010datalist\030\002"
    " \003(\0132\026.GM_ChargeActivityData", 228);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SP_Activity.txt", &protobuf_RegisterTypes);
  GM_ChargeActivityData::default_instance_ = new GM_ChargeActivityData();
  GM_ChargeActivityDataList::default_instance_ = new GM_ChargeActivityDataList();
  GM_ChargeActivityData::default_instance_->InitAsDefaultInstance();
  GM_ChargeActivityDataList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SP_5fActivity_2etxt);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SP_5fActivity_2etxt {
  StaticDescriptorInitializer_SP_5fActivity_2etxt() {
    protobuf_AddDesc_SP_5fActivity_2etxt();
  }
} static_descriptor_initializer_SP_5fActivity_2etxt_;

// ===================================================================

#ifndef _MSC_VER
const int GM_ChargeActivityData::kGmidFieldNumber;
const int GM_ChargeActivityData::kRoleidFieldNumber;
const int GM_ChargeActivityData::kChargecountFieldNumber;
const int GM_ChargeActivityData::kGiftbagidFieldNumber;
const int GM_ChargeActivityData::kKindFieldNumber;
const int GM_ChargeActivityData::kStatusFieldNumber;
#endif  // !_MSC_VER

GM_ChargeActivityData::GM_ChargeActivityData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_ChargeActivityData::InitAsDefaultInstance() {
}

GM_ChargeActivityData::GM_ChargeActivityData(const GM_ChargeActivityData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_ChargeActivityData::SharedCtor() {
  _cached_size_ = 0;
  gmid_ = GOOGLE_LONGLONG(0);
  roleid_ = 0;
  chargecount_ = 0;
  giftbagid_ = 0;
  kind_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_ChargeActivityData::~GM_ChargeActivityData() {
  SharedDtor();
}

void GM_ChargeActivityData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_ChargeActivityData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_ChargeActivityData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_ChargeActivityData_descriptor_;
}

const GM_ChargeActivityData& GM_ChargeActivityData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fActivity_2etxt();
  return *default_instance_;
}

GM_ChargeActivityData* GM_ChargeActivityData::default_instance_ = NULL;

GM_ChargeActivityData* GM_ChargeActivityData::New() const {
  return new GM_ChargeActivityData;
}

void GM_ChargeActivityData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gmid_ = GOOGLE_LONGLONG(0);
    roleid_ = 0;
    chargecount_ = 0;
    giftbagid_ = 0;
    kind_ = 0;
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_ChargeActivityData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 gmid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gmid_)));
          set_has_gmid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_roleid;
        break;
      }

      // required int32 roleid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_chargecount;
        break;
      }

      // required int32 chargecount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_chargecount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chargecount_)));
          set_has_chargecount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_giftbagid;
        break;
      }

      // required int32 giftbagid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_giftbagid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &giftbagid_)));
          set_has_giftbagid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_kind;
        break;
      }

      // required int32 kind = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_kind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kind_)));
          set_has_kind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_status;
        break;
      }

      // required int32 status = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_ChargeActivityData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 gmid = 1;
  if (has_gmid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->gmid(), output);
  }

  // required int32 roleid = 2;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roleid(), output);
  }

  // required int32 chargecount = 3;
  if (has_chargecount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->chargecount(), output);
  }

  // required int32 giftbagid = 4;
  if (has_giftbagid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->giftbagid(), output);
  }

  // required int32 kind = 5;
  if (has_kind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->kind(), output);
  }

  // required int32 status = 6;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_ChargeActivityData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 gmid = 1;
  if (has_gmid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->gmid(), target);
  }

  // required int32 roleid = 2;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roleid(), target);
  }

  // required int32 chargecount = 3;
  if (has_chargecount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->chargecount(), target);
  }

  // required int32 giftbagid = 4;
  if (has_giftbagid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->giftbagid(), target);
  }

  // required int32 kind = 5;
  if (has_kind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->kind(), target);
  }

  // required int32 status = 6;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_ChargeActivityData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 gmid = 1;
    if (has_gmid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gmid());
    }

    // required int32 roleid = 2;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleid());
    }

    // required int32 chargecount = 3;
    if (has_chargecount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chargecount());
    }

    // required int32 giftbagid = 4;
    if (has_giftbagid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->giftbagid());
    }

    // required int32 kind = 5;
    if (has_kind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kind());
    }

    // required int32 status = 6;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_ChargeActivityData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_ChargeActivityData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_ChargeActivityData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_ChargeActivityData::MergeFrom(const GM_ChargeActivityData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gmid()) {
      set_gmid(from.gmid());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_chargecount()) {
      set_chargecount(from.chargecount());
    }
    if (from.has_giftbagid()) {
      set_giftbagid(from.giftbagid());
    }
    if (from.has_kind()) {
      set_kind(from.kind());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_ChargeActivityData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_ChargeActivityData::CopyFrom(const GM_ChargeActivityData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_ChargeActivityData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void GM_ChargeActivityData::Swap(GM_ChargeActivityData* other) {
  if (other != this) {
    std::swap(gmid_, other->gmid_);
    std::swap(roleid_, other->roleid_);
    std::swap(chargecount_, other->chargecount_);
    std::swap(giftbagid_, other->giftbagid_);
    std::swap(kind_, other->kind_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_ChargeActivityData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_ChargeActivityData_descriptor_;
  metadata.reflection = GM_ChargeActivityData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_ChargeActivityDataList::kCountFieldNumber;
const int GM_ChargeActivityDataList::kDatalistFieldNumber;
#endif  // !_MSC_VER

GM_ChargeActivityDataList::GM_ChargeActivityDataList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_ChargeActivityDataList::InitAsDefaultInstance() {
}

GM_ChargeActivityDataList::GM_ChargeActivityDataList(const GM_ChargeActivityDataList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_ChargeActivityDataList::SharedCtor() {
  _cached_size_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_ChargeActivityDataList::~GM_ChargeActivityDataList() {
  SharedDtor();
}

void GM_ChargeActivityDataList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_ChargeActivityDataList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_ChargeActivityDataList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_ChargeActivityDataList_descriptor_;
}

const GM_ChargeActivityDataList& GM_ChargeActivityDataList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fActivity_2etxt();
  return *default_instance_;
}

GM_ChargeActivityDataList* GM_ChargeActivityDataList::default_instance_ = NULL;

GM_ChargeActivityDataList* GM_ChargeActivityDataList::New() const {
  return new GM_ChargeActivityDataList;
}

void GM_ChargeActivityDataList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    count_ = 0;
  }
  datalist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_ChargeActivityDataList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 count = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_datalist;
        break;
      }

      // repeated .GM_ChargeActivityData datalist = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_datalist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datalist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_datalist;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_ChargeActivityDataList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 count = 1;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // repeated .GM_ChargeActivityData datalist = 2;
  for (int i = 0; i < this->datalist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->datalist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_ChargeActivityDataList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 count = 1;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // repeated .GM_ChargeActivityData datalist = 2;
  for (int i = 0; i < this->datalist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->datalist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_ChargeActivityDataList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 count = 1;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  // repeated .GM_ChargeActivityData datalist = 2;
  total_size += 1 * this->datalist_size();
  for (int i = 0; i < this->datalist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datalist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_ChargeActivityDataList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_ChargeActivityDataList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_ChargeActivityDataList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_ChargeActivityDataList::MergeFrom(const GM_ChargeActivityDataList& from) {
  GOOGLE_CHECK_NE(&from, this);
  datalist_.MergeFrom(from.datalist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_ChargeActivityDataList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_ChargeActivityDataList::CopyFrom(const GM_ChargeActivityDataList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_ChargeActivityDataList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < datalist_size(); i++) {
    if (!this->datalist(i).IsInitialized()) return false;
  }
  return true;
}

void GM_ChargeActivityDataList::Swap(GM_ChargeActivityDataList* other) {
  if (other != this) {
    std::swap(count_, other->count_);
    datalist_.Swap(&other->datalist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_ChargeActivityDataList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_ChargeActivityDataList_descriptor_;
  metadata.reflection = GM_ChargeActivityDataList_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
