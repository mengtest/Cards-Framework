// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_Mail.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SP_Mail.txt.pb.h"
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* DB_MailDataRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_MailDataRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_MailDataReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_MailDataReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_MailData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_MailData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_GlobalMailCount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_GlobalMailCount_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_GlobalMailReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_GlobalMailReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_GlobalMail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_GlobalMail_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_OfflineMail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_OfflineMail_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_SP_5fMail_2etxt() {
  protobuf_AddDesc_SP_5fMail_2etxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SP_Mail.txt");
  GOOGLE_CHECK(file != NULL);
  DB_MailDataRequest_descriptor_ = file->message_type(0);
  static const int DB_MailDataRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailDataRequest, m_roleid_),
  };
  DB_MailDataRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_MailDataRequest_descriptor_,
      DB_MailDataRequest::default_instance_,
      DB_MailDataRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailDataRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailDataRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_MailDataRequest));
  DB_MailDataReturn_descriptor_ = file->message_type(1);
  static const int DB_MailDataReturn_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailDataReturn, m_roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailDataReturn, m_maildata_),
  };
  DB_MailDataReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_MailDataReturn_descriptor_,
      DB_MailDataReturn::default_instance_,
      DB_MailDataReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailDataReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailDataReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_MailDataReturn));
  DB_MailData_descriptor_ = file->message_type(2);
  static const int DB_MailData_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailData, m_mailgmid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailData, m_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailData, m_source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailData, m_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailData, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailData, m_subject_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailData, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailData, m_endtime_),
  };
  DB_MailData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_MailData_descriptor_,
      DB_MailData::default_instance_,
      DB_MailData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_MailData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_MailData));
  DB_GlobalMailCount_descriptor_ = file->message_type(3);
  static const int DB_GlobalMailCount_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_GlobalMailCount, m_globalcount_),
  };
  DB_GlobalMailCount_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_GlobalMailCount_descriptor_,
      DB_GlobalMailCount::default_instance_,
      DB_GlobalMailCount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_GlobalMailCount, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_GlobalMailCount, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_GlobalMailCount));
  DB_GlobalMailReturn_descriptor_ = file->message_type(4);
  static const int DB_GlobalMailReturn_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_GlobalMailReturn, m_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_GlobalMailReturn, m_maildatas_),
  };
  DB_GlobalMailReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_GlobalMailReturn_descriptor_,
      DB_GlobalMailReturn::default_instance_,
      DB_GlobalMailReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_GlobalMailReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_GlobalMailReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_GlobalMailReturn));
  DB_GlobalMail_descriptor_ = file->message_type(5);
  static const int DB_GlobalMail_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_GlobalMail, m_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_GlobalMail, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_GlobalMail, m_subject_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_GlobalMail, m_item_),
  };
  DB_GlobalMail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_GlobalMail_descriptor_,
      DB_GlobalMail::default_instance_,
      DB_GlobalMail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_GlobalMail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_GlobalMail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_GlobalMail));
  DB_OfflineMail_descriptor_ = file->message_type(6);
  static const int DB_OfflineMail_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_OfflineMail, m_roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_OfflineMail, m_rolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_OfflineMail, m_maildata_),
  };
  DB_OfflineMail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_OfflineMail_descriptor_,
      DB_OfflineMail::default_instance_,
      DB_OfflineMail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_OfflineMail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_OfflineMail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_OfflineMail));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SP_5fMail_2etxt);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_MailDataRequest_descriptor_, &DB_MailDataRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_MailDataReturn_descriptor_, &DB_MailDataReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_MailData_descriptor_, &DB_MailData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_GlobalMailCount_descriptor_, &DB_GlobalMailCount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_GlobalMailReturn_descriptor_, &DB_GlobalMailReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_GlobalMail_descriptor_, &DB_GlobalMail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_OfflineMail_descriptor_, &DB_OfflineMail::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SP_5fMail_2etxt() {
  delete DB_MailDataRequest::default_instance_;
  delete DB_MailDataRequest_reflection_;
  delete DB_MailDataReturn::default_instance_;
  delete DB_MailDataReturn_reflection_;
  delete DB_MailData::default_instance_;
  delete DB_MailData_reflection_;
  delete DB_GlobalMailCount::default_instance_;
  delete DB_GlobalMailCount_reflection_;
  delete DB_GlobalMailReturn::default_instance_;
  delete DB_GlobalMailReturn_reflection_;
  delete DB_GlobalMail::default_instance_;
  delete DB_GlobalMail_reflection_;
  delete DB_OfflineMail::default_instance_;
  delete DB_OfflineMail_reflection_;
}

void protobuf_AddDesc_SP_5fMail_2etxt() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013SP_Mail.txt\"&\n\022DB_MailDataRequest\022\020\n\010m"
    "_roleId\030\001 \002(\005\"G\n\021DB_MailDataReturn\022\020\n\010m_"
    "roleId\030\001 \002(\005\022 \n\nm_mailData\030\002 \003(\0132\014.DB_Ma"
    "ilData\"\232\001\n\013DB_MailData\022\022\n\nm_mailgmid\030\001 \002"
    "(\003\022\017\n\007m_state\030\002 \002(\005\022\020\n\010m_source\030\003 \002(\005\022\016\n"
    "\006m_time\030\004 \002(\005\022\016\n\006m_name\030\005 \002(\t\022\021\n\tm_subje"
    "ct\030\006 \002(\t\022\016\n\006m_item\030\007 \002(\t\022\021\n\tm_endtime\030\010 "
    "\001(\005\"+\n\022DB_GlobalMailCount\022\025\n\rm_globalcou"
    "nt\030\001 \002(\005\"K\n\023DB_GlobalMailReturn\022\017\n\007m_cou"
    "nt\030\001 \002(\005\022#\n\013m_maildatas\030\002 \003(\0132\016.DB_Globa"
    "lMail\"R\n\rDB_GlobalMail\022\016\n\006m_time\030\001 \002(\005\022\016"
    "\n\006m_name\030\002 \002(\t\022\021\n\tm_subject\030\003 \002(\t\022\016\n\006m_i"
    "tem\030\004 \002(\t\"X\n\016DB_OfflineMail\022\020\n\010m_roleid\030"
    "\001 \001(\005\022\022\n\nm_rolename\030\002 \001(\t\022 \n\nm_maildata\030"
    "\003 \003(\0132\014.DB_MailData", 579);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SP_Mail.txt", &protobuf_RegisterTypes);
  DB_MailDataRequest::default_instance_ = new DB_MailDataRequest();
  DB_MailDataReturn::default_instance_ = new DB_MailDataReturn();
  DB_MailData::default_instance_ = new DB_MailData();
  DB_GlobalMailCount::default_instance_ = new DB_GlobalMailCount();
  DB_GlobalMailReturn::default_instance_ = new DB_GlobalMailReturn();
  DB_GlobalMail::default_instance_ = new DB_GlobalMail();
  DB_OfflineMail::default_instance_ = new DB_OfflineMail();
  DB_MailDataRequest::default_instance_->InitAsDefaultInstance();
  DB_MailDataReturn::default_instance_->InitAsDefaultInstance();
  DB_MailData::default_instance_->InitAsDefaultInstance();
  DB_GlobalMailCount::default_instance_->InitAsDefaultInstance();
  DB_GlobalMailReturn::default_instance_->InitAsDefaultInstance();
  DB_GlobalMail::default_instance_->InitAsDefaultInstance();
  DB_OfflineMail::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SP_5fMail_2etxt);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SP_5fMail_2etxt {
  StaticDescriptorInitializer_SP_5fMail_2etxt() {
    protobuf_AddDesc_SP_5fMail_2etxt();
  }
} static_descriptor_initializer_SP_5fMail_2etxt_;

// ===================================================================

#ifndef _MSC_VER
const int DB_MailDataRequest::kMRoleIdFieldNumber;
#endif  // !_MSC_VER

DB_MailDataRequest::DB_MailDataRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DB_MailDataRequest::InitAsDefaultInstance() {
}

DB_MailDataRequest::DB_MailDataRequest(const DB_MailDataRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DB_MailDataRequest::SharedCtor() {
  _cached_size_ = 0;
  m_roleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_MailDataRequest::~DB_MailDataRequest() {
  SharedDtor();
}

void DB_MailDataRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DB_MailDataRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DB_MailDataRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_MailDataRequest_descriptor_;
}

const DB_MailDataRequest& DB_MailDataRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fMail_2etxt();
  return *default_instance_;
}

DB_MailDataRequest* DB_MailDataRequest::default_instance_ = NULL;

DB_MailDataRequest* DB_MailDataRequest::New() const {
  return new DB_MailDataRequest;
}

void DB_MailDataRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_roleid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_MailDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_roleId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid_)));
          set_has_m_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_MailDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_roleId = 1;
  if (has_m_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_roleid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_MailDataRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_roleId = 1;
  if (has_m_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_roleid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_MailDataRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_roleId = 1;
    if (has_m_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DB_MailDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_MailDataRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_MailDataRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_MailDataRequest::MergeFrom(const DB_MailDataRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_roleid()) {
      set_m_roleid(from.m_roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_MailDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_MailDataRequest::CopyFrom(const DB_MailDataRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_MailDataRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DB_MailDataRequest::Swap(DB_MailDataRequest* other) {
  if (other != this) {
    std::swap(m_roleid_, other->m_roleid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_MailDataRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_MailDataRequest_descriptor_;
  metadata.reflection = DB_MailDataRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_MailDataReturn::kMRoleIdFieldNumber;
const int DB_MailDataReturn::kMMailDataFieldNumber;
#endif  // !_MSC_VER

DB_MailDataReturn::DB_MailDataReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DB_MailDataReturn::InitAsDefaultInstance() {
}

DB_MailDataReturn::DB_MailDataReturn(const DB_MailDataReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DB_MailDataReturn::SharedCtor() {
  _cached_size_ = 0;
  m_roleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_MailDataReturn::~DB_MailDataReturn() {
  SharedDtor();
}

void DB_MailDataReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DB_MailDataReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DB_MailDataReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_MailDataReturn_descriptor_;
}

const DB_MailDataReturn& DB_MailDataReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fMail_2etxt();
  return *default_instance_;
}

DB_MailDataReturn* DB_MailDataReturn::default_instance_ = NULL;

DB_MailDataReturn* DB_MailDataReturn::New() const {
  return new DB_MailDataReturn;
}

void DB_MailDataReturn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_roleid_ = 0;
  }
  m_maildata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_MailDataReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_roleId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid_)));
          set_has_m_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_mailData;
        break;
      }

      // repeated .DB_MailData m_mailData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_mailData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_maildata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_mailData;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_MailDataReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_roleId = 1;
  if (has_m_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_roleid(), output);
  }

  // repeated .DB_MailData m_mailData = 2;
  for (int i = 0; i < this->m_maildata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_maildata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_MailDataReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_roleId = 1;
  if (has_m_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_roleid(), target);
  }

  // repeated .DB_MailData m_mailData = 2;
  for (int i = 0; i < this->m_maildata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_maildata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_MailDataReturn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_roleId = 1;
    if (has_m_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid());
    }

  }
  // repeated .DB_MailData m_mailData = 2;
  total_size += 1 * this->m_maildata_size();
  for (int i = 0; i < this->m_maildata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_maildata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DB_MailDataReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_MailDataReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_MailDataReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_MailDataReturn::MergeFrom(const DB_MailDataReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_maildata_.MergeFrom(from.m_maildata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_roleid()) {
      set_m_roleid(from.m_roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_MailDataReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_MailDataReturn::CopyFrom(const DB_MailDataReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_MailDataReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < m_maildata_size(); i++) {
    if (!this->m_maildata(i).IsInitialized()) return false;
  }
  return true;
}

void DB_MailDataReturn::Swap(DB_MailDataReturn* other) {
  if (other != this) {
    std::swap(m_roleid_, other->m_roleid_);
    m_maildata_.Swap(&other->m_maildata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_MailDataReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_MailDataReturn_descriptor_;
  metadata.reflection = DB_MailDataReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_MailData::kMMailgmidFieldNumber;
const int DB_MailData::kMStateFieldNumber;
const int DB_MailData::kMSourceFieldNumber;
const int DB_MailData::kMTimeFieldNumber;
const int DB_MailData::kMNameFieldNumber;
const int DB_MailData::kMSubjectFieldNumber;
const int DB_MailData::kMItemFieldNumber;
const int DB_MailData::kMEndtimeFieldNumber;
#endif  // !_MSC_VER

DB_MailData::DB_MailData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DB_MailData::InitAsDefaultInstance() {
}

DB_MailData::DB_MailData(const DB_MailData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DB_MailData::SharedCtor() {
  _cached_size_ = 0;
  m_mailgmid_ = GOOGLE_LONGLONG(0);
  m_state_ = 0;
  m_source_ = 0;
  m_time_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_item_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_endtime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_MailData::~DB_MailData() {
  SharedDtor();
}

void DB_MailData::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_subject_ != &::google::protobuf::internal::kEmptyString) {
    delete m_subject_;
  }
  if (m_item_ != &::google::protobuf::internal::kEmptyString) {
    delete m_item_;
  }
  if (this != default_instance_) {
  }
}

void DB_MailData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DB_MailData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_MailData_descriptor_;
}

const DB_MailData& DB_MailData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fMail_2etxt();
  return *default_instance_;
}

DB_MailData* DB_MailData::default_instance_ = NULL;

DB_MailData* DB_MailData::New() const {
  return new DB_MailData;
}

void DB_MailData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_mailgmid_ = GOOGLE_LONGLONG(0);
    m_state_ = 0;
    m_source_ = 0;
    m_time_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    if (has_m_subject()) {
      if (m_subject_ != &::google::protobuf::internal::kEmptyString) {
        m_subject_->clear();
      }
    }
    if (has_m_item()) {
      if (m_item_ != &::google::protobuf::internal::kEmptyString) {
        m_item_->clear();
      }
    }
    m_endtime_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_MailData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 m_mailgmid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_mailgmid_)));
          set_has_m_mailgmid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_state;
        break;
      }

      // required int32 m_state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_state_)));
          set_has_m_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_source;
        break;
      }

      // required int32 m_source = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_source:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_source_)));
          set_has_m_source();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_time;
        break;
      }

      // required int32 m_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_time_)));
          set_has_m_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_name;
        break;
      }

      // required string m_name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_subject;
        break;
      }

      // required string m_subject = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_subject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_subject()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_subject().data(), this->m_subject().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_item;
        break;
      }

      // required string m_item = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_item()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_item().data(), this->m_item().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_endtime;
        break;
      }

      // optional int32 m_endtime = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_endtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_endtime_)));
          set_has_m_endtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_MailData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 m_mailgmid = 1;
  if (has_m_mailgmid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_mailgmid(), output);
  }

  // required int32 m_state = 2;
  if (has_m_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_state(), output);
  }

  // required int32 m_source = 3;
  if (has_m_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_source(), output);
  }

  // required int32 m_time = 4;
  if (has_m_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_time(), output);
  }

  // required string m_name = 5;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->m_name(), output);
  }

  // required string m_subject = 6;
  if (has_m_subject()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_subject().data(), this->m_subject().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_subject(), output);
  }

  // required string m_item = 7;
  if (has_m_item()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_item().data(), this->m_item().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->m_item(), output);
  }

  // optional int32 m_endtime = 8;
  if (has_m_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_endtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_MailData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 m_mailgmid = 1;
  if (has_m_mailgmid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_mailgmid(), target);
  }

  // required int32 m_state = 2;
  if (has_m_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_state(), target);
  }

  // required int32 m_source = 3;
  if (has_m_source()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_source(), target);
  }

  // required int32 m_time = 4;
  if (has_m_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_time(), target);
  }

  // required string m_name = 5;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->m_name(), target);
  }

  // required string m_subject = 6;
  if (has_m_subject()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_subject().data(), this->m_subject().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_subject(), target);
  }

  // required string m_item = 7;
  if (has_m_item()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_item().data(), this->m_item().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->m_item(), target);
  }

  // optional int32 m_endtime = 8;
  if (has_m_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_endtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_MailData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 m_mailgmid = 1;
    if (has_m_mailgmid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_mailgmid());
    }

    // required int32 m_state = 2;
    if (has_m_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_state());
    }

    // required int32 m_source = 3;
    if (has_m_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_source());
    }

    // required int32 m_time = 4;
    if (has_m_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_time());
    }

    // required string m_name = 5;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // required string m_subject = 6;
    if (has_m_subject()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_subject());
    }

    // required string m_item = 7;
    if (has_m_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_item());
    }

    // optional int32 m_endtime = 8;
    if (has_m_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_endtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DB_MailData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_MailData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_MailData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_MailData::MergeFrom(const DB_MailData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_mailgmid()) {
      set_m_mailgmid(from.m_mailgmid());
    }
    if (from.has_m_state()) {
      set_m_state(from.m_state());
    }
    if (from.has_m_source()) {
      set_m_source(from.m_source());
    }
    if (from.has_m_time()) {
      set_m_time(from.m_time());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_subject()) {
      set_m_subject(from.m_subject());
    }
    if (from.has_m_item()) {
      set_m_item(from.m_item());
    }
    if (from.has_m_endtime()) {
      set_m_endtime(from.m_endtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_MailData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_MailData::CopyFrom(const DB_MailData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_MailData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void DB_MailData::Swap(DB_MailData* other) {
  if (other != this) {
    std::swap(m_mailgmid_, other->m_mailgmid_);
    std::swap(m_state_, other->m_state_);
    std::swap(m_source_, other->m_source_);
    std::swap(m_time_, other->m_time_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_subject_, other->m_subject_);
    std::swap(m_item_, other->m_item_);
    std::swap(m_endtime_, other->m_endtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_MailData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_MailData_descriptor_;
  metadata.reflection = DB_MailData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_GlobalMailCount::kMGlobalcountFieldNumber;
#endif  // !_MSC_VER

DB_GlobalMailCount::DB_GlobalMailCount()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DB_GlobalMailCount::InitAsDefaultInstance() {
}

DB_GlobalMailCount::DB_GlobalMailCount(const DB_GlobalMailCount& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DB_GlobalMailCount::SharedCtor() {
  _cached_size_ = 0;
  m_globalcount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_GlobalMailCount::~DB_GlobalMailCount() {
  SharedDtor();
}

void DB_GlobalMailCount::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DB_GlobalMailCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DB_GlobalMailCount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_GlobalMailCount_descriptor_;
}

const DB_GlobalMailCount& DB_GlobalMailCount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fMail_2etxt();
  return *default_instance_;
}

DB_GlobalMailCount* DB_GlobalMailCount::default_instance_ = NULL;

DB_GlobalMailCount* DB_GlobalMailCount::New() const {
  return new DB_GlobalMailCount;
}

void DB_GlobalMailCount::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_globalcount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_GlobalMailCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_globalcount = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_globalcount_)));
          set_has_m_globalcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_GlobalMailCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_globalcount = 1;
  if (has_m_globalcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_globalcount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_GlobalMailCount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_globalcount = 1;
  if (has_m_globalcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_globalcount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_GlobalMailCount::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_globalcount = 1;
    if (has_m_globalcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_globalcount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DB_GlobalMailCount::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_GlobalMailCount* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_GlobalMailCount*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_GlobalMailCount::MergeFrom(const DB_GlobalMailCount& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_globalcount()) {
      set_m_globalcount(from.m_globalcount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_GlobalMailCount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_GlobalMailCount::CopyFrom(const DB_GlobalMailCount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_GlobalMailCount::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DB_GlobalMailCount::Swap(DB_GlobalMailCount* other) {
  if (other != this) {
    std::swap(m_globalcount_, other->m_globalcount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_GlobalMailCount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_GlobalMailCount_descriptor_;
  metadata.reflection = DB_GlobalMailCount_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_GlobalMailReturn::kMCountFieldNumber;
const int DB_GlobalMailReturn::kMMaildatasFieldNumber;
#endif  // !_MSC_VER

DB_GlobalMailReturn::DB_GlobalMailReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DB_GlobalMailReturn::InitAsDefaultInstance() {
}

DB_GlobalMailReturn::DB_GlobalMailReturn(const DB_GlobalMailReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DB_GlobalMailReturn::SharedCtor() {
  _cached_size_ = 0;
  m_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_GlobalMailReturn::~DB_GlobalMailReturn() {
  SharedDtor();
}

void DB_GlobalMailReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DB_GlobalMailReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DB_GlobalMailReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_GlobalMailReturn_descriptor_;
}

const DB_GlobalMailReturn& DB_GlobalMailReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fMail_2etxt();
  return *default_instance_;
}

DB_GlobalMailReturn* DB_GlobalMailReturn::default_instance_ = NULL;

DB_GlobalMailReturn* DB_GlobalMailReturn::New() const {
  return new DB_GlobalMailReturn;
}

void DB_GlobalMailReturn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_count_ = 0;
  }
  m_maildatas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_GlobalMailReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_count = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_count_)));
          set_has_m_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_maildatas;
        break;
      }

      // repeated .DB_GlobalMail m_maildatas = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_maildatas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_maildatas()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_maildatas;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_GlobalMailReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_count = 1;
  if (has_m_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_count(), output);
  }

  // repeated .DB_GlobalMail m_maildatas = 2;
  for (int i = 0; i < this->m_maildatas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_maildatas(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_GlobalMailReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_count = 1;
  if (has_m_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_count(), target);
  }

  // repeated .DB_GlobalMail m_maildatas = 2;
  for (int i = 0; i < this->m_maildatas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_maildatas(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_GlobalMailReturn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_count = 1;
    if (has_m_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_count());
    }

  }
  // repeated .DB_GlobalMail m_maildatas = 2;
  total_size += 1 * this->m_maildatas_size();
  for (int i = 0; i < this->m_maildatas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_maildatas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DB_GlobalMailReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_GlobalMailReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_GlobalMailReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_GlobalMailReturn::MergeFrom(const DB_GlobalMailReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_maildatas_.MergeFrom(from.m_maildatas_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_count()) {
      set_m_count(from.m_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_GlobalMailReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_GlobalMailReturn::CopyFrom(const DB_GlobalMailReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_GlobalMailReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < m_maildatas_size(); i++) {
    if (!this->m_maildatas(i).IsInitialized()) return false;
  }
  return true;
}

void DB_GlobalMailReturn::Swap(DB_GlobalMailReturn* other) {
  if (other != this) {
    std::swap(m_count_, other->m_count_);
    m_maildatas_.Swap(&other->m_maildatas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_GlobalMailReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_GlobalMailReturn_descriptor_;
  metadata.reflection = DB_GlobalMailReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_GlobalMail::kMTimeFieldNumber;
const int DB_GlobalMail::kMNameFieldNumber;
const int DB_GlobalMail::kMSubjectFieldNumber;
const int DB_GlobalMail::kMItemFieldNumber;
#endif  // !_MSC_VER

DB_GlobalMail::DB_GlobalMail()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DB_GlobalMail::InitAsDefaultInstance() {
}

DB_GlobalMail::DB_GlobalMail(const DB_GlobalMail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DB_GlobalMail::SharedCtor() {
  _cached_size_ = 0;
  m_time_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_item_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_GlobalMail::~DB_GlobalMail() {
  SharedDtor();
}

void DB_GlobalMail::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_subject_ != &::google::protobuf::internal::kEmptyString) {
    delete m_subject_;
  }
  if (m_item_ != &::google::protobuf::internal::kEmptyString) {
    delete m_item_;
  }
  if (this != default_instance_) {
  }
}

void DB_GlobalMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DB_GlobalMail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_GlobalMail_descriptor_;
}

const DB_GlobalMail& DB_GlobalMail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fMail_2etxt();
  return *default_instance_;
}

DB_GlobalMail* DB_GlobalMail::default_instance_ = NULL;

DB_GlobalMail* DB_GlobalMail::New() const {
  return new DB_GlobalMail;
}

void DB_GlobalMail::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_time_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    if (has_m_subject()) {
      if (m_subject_ != &::google::protobuf::internal::kEmptyString) {
        m_subject_->clear();
      }
    }
    if (has_m_item()) {
      if (m_item_ != &::google::protobuf::internal::kEmptyString) {
        m_item_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_GlobalMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_time_)));
          set_has_m_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_name;
        break;
      }

      // required string m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_subject;
        break;
      }

      // required string m_subject = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_subject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_subject()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_subject().data(), this->m_subject().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_item;
        break;
      }

      // required string m_item = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_item()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_item().data(), this->m_item().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_GlobalMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_time = 1;
  if (has_m_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_time(), output);
  }

  // required string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_name(), output);
  }

  // required string m_subject = 3;
  if (has_m_subject()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_subject().data(), this->m_subject().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_subject(), output);
  }

  // required string m_item = 4;
  if (has_m_item()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_item().data(), this->m_item().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_item(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_GlobalMail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_time = 1;
  if (has_m_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_time(), target);
  }

  // required string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_name(), target);
  }

  // required string m_subject = 3;
  if (has_m_subject()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_subject().data(), this->m_subject().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_subject(), target);
  }

  // required string m_item = 4;
  if (has_m_item()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_item().data(), this->m_item().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_item(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_GlobalMail::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_time = 1;
    if (has_m_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_time());
    }

    // required string m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // required string m_subject = 3;
    if (has_m_subject()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_subject());
    }

    // required string m_item = 4;
    if (has_m_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_item());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DB_GlobalMail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_GlobalMail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_GlobalMail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_GlobalMail::MergeFrom(const DB_GlobalMail& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_time()) {
      set_m_time(from.m_time());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_subject()) {
      set_m_subject(from.m_subject());
    }
    if (from.has_m_item()) {
      set_m_item(from.m_item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_GlobalMail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_GlobalMail::CopyFrom(const DB_GlobalMail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_GlobalMail::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void DB_GlobalMail::Swap(DB_GlobalMail* other) {
  if (other != this) {
    std::swap(m_time_, other->m_time_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_subject_, other->m_subject_);
    std::swap(m_item_, other->m_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_GlobalMail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_GlobalMail_descriptor_;
  metadata.reflection = DB_GlobalMail_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_OfflineMail::kMRoleidFieldNumber;
const int DB_OfflineMail::kMRolenameFieldNumber;
const int DB_OfflineMail::kMMaildataFieldNumber;
#endif  // !_MSC_VER

DB_OfflineMail::DB_OfflineMail()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DB_OfflineMail::InitAsDefaultInstance() {
}

DB_OfflineMail::DB_OfflineMail(const DB_OfflineMail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DB_OfflineMail::SharedCtor() {
  _cached_size_ = 0;
  m_roleid_ = 0;
  m_rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_OfflineMail::~DB_OfflineMail() {
  SharedDtor();
}

void DB_OfflineMail::SharedDtor() {
  if (m_rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete m_rolename_;
  }
  if (this != default_instance_) {
  }
}

void DB_OfflineMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DB_OfflineMail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_OfflineMail_descriptor_;
}

const DB_OfflineMail& DB_OfflineMail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fMail_2etxt();
  return *default_instance_;
}

DB_OfflineMail* DB_OfflineMail::default_instance_ = NULL;

DB_OfflineMail* DB_OfflineMail::New() const {
  return new DB_OfflineMail;
}

void DB_OfflineMail::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_roleid_ = 0;
    if (has_m_rolename()) {
      if (m_rolename_ != &::google::protobuf::internal::kEmptyString) {
        m_rolename_->clear();
      }
    }
  }
  m_maildata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_OfflineMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid_)));
          set_has_m_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_rolename;
        break;
      }

      // optional string m_rolename = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_rolename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_rolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_rolename().data(), this->m_rolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_maildata;
        break;
      }

      // repeated .DB_MailData m_maildata = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_maildata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_maildata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_maildata;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_OfflineMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_roleid = 1;
  if (has_m_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_roleid(), output);
  }

  // optional string m_rolename = 2;
  if (has_m_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_rolename().data(), this->m_rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_rolename(), output);
  }

  // repeated .DB_MailData m_maildata = 3;
  for (int i = 0; i < this->m_maildata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_maildata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_OfflineMail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_roleid = 1;
  if (has_m_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_roleid(), target);
  }

  // optional string m_rolename = 2;
  if (has_m_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_rolename().data(), this->m_rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_rolename(), target);
  }

  // repeated .DB_MailData m_maildata = 3;
  for (int i = 0; i < this->m_maildata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_maildata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_OfflineMail::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_roleid = 1;
    if (has_m_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid());
    }

    // optional string m_rolename = 2;
    if (has_m_rolename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_rolename());
    }

  }
  // repeated .DB_MailData m_maildata = 3;
  total_size += 1 * this->m_maildata_size();
  for (int i = 0; i < this->m_maildata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_maildata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DB_OfflineMail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_OfflineMail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_OfflineMail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_OfflineMail::MergeFrom(const DB_OfflineMail& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_maildata_.MergeFrom(from.m_maildata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_roleid()) {
      set_m_roleid(from.m_roleid());
    }
    if (from.has_m_rolename()) {
      set_m_rolename(from.m_rolename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_OfflineMail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_OfflineMail::CopyFrom(const DB_OfflineMail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_OfflineMail::IsInitialized() const {

  for (int i = 0; i < m_maildata_size(); i++) {
    if (!this->m_maildata(i).IsInitialized()) return false;
  }
  return true;
}

void DB_OfflineMail::Swap(DB_OfflineMail* other) {
  if (other != this) {
    std::swap(m_roleid_, other->m_roleid_);
    std::swap(m_rolename_, other->m_rolename_);
    m_maildata_.Swap(&other->m_maildata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_OfflineMail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_OfflineMail_descriptor_;
  metadata.reflection = DB_OfflineMail_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
