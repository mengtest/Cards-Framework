// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wedding.txt

#ifndef PROTOBUF_wedding_2etxt__INCLUDED
#define PROTOBUF_wedding_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_wedding_2etxt();
void protobuf_AssignDesc_wedding_2etxt();
void protobuf_ShutdownFile_wedding_2etxt();

class GM_Notify_JoinWedding;
class GM_JoinWedding_Return;
class GM_Notify_BeginProcess;
class GM_InviteOpen_Request;
class GM_InviteOpenFriend_Return;
class GM_InviteFriend_Request;
class GMInviteFriendItem;
class GM_InviteFriend_Return;
class GM_FlowerBless_Request;
class GM_SimilarOperate_Return;
class GM_FireWork_Request;
class GM_BlessRank_Return;
class RankItem;
class GM_TimeAndCount_Return;
class GM_ProcessData_Request;
class ColdTime;
class GM_BigMeal_Request;
class GM_BigMeal_Return;
class GM_SlotMachineObject_Return;
class SlotMachineObject;
class GM_SlotTurn_Return;
class GM_ObjectSee_Return;
class ObjectData;
class InstanceInviteFriend;
class GMKickOutRequest;
class GMReserchDataRequest;
class GMReserchDataReturn;
class RoleData;
class GMProhibitRequest;
class GMManagerProceeReturn;
class GMWeddingChat;
class GMGiftRequest;

// ===================================================================

class GM_Notify_JoinWedding : public ::google::protobuf::Message {
 public:
  GM_Notify_JoinWedding();
  virtual ~GM_Notify_JoinWedding();

  GM_Notify_JoinWedding(const GM_Notify_JoinWedding& from);

  inline GM_Notify_JoinWedding& operator=(const GM_Notify_JoinWedding& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Notify_JoinWedding& default_instance();

  void Swap(GM_Notify_JoinWedding* other);

  // implements Message ----------------------------------------------

  GM_Notify_JoinWedding* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Notify_JoinWedding& from);
  void MergeFrom(const GM_Notify_JoinWedding& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 canJoinWedding = 1;
  inline bool has_canjoinwedding() const;
  inline void clear_canjoinwedding();
  static const int kCanJoinWeddingFieldNumber = 1;
  inline ::google::protobuf::int32 canjoinwedding() const;
  inline void set_canjoinwedding(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Notify_JoinWedding)
 private:
  inline void set_has_canjoinwedding();
  inline void clear_has_canjoinwedding();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 canjoinwedding_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_Notify_JoinWedding* default_instance_;
};
// -------------------------------------------------------------------

class GM_JoinWedding_Return : public ::google::protobuf::Message {
 public:
  GM_JoinWedding_Return();
  virtual ~GM_JoinWedding_Return();

  GM_JoinWedding_Return(const GM_JoinWedding_Return& from);

  inline GM_JoinWedding_Return& operator=(const GM_JoinWedding_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_JoinWedding_Return& default_instance();

  void Swap(GM_JoinWedding_Return* other);

  // implements Message ----------------------------------------------

  GM_JoinWedding_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_JoinWedding_Return& from);
  void MergeFrom(const GM_JoinWedding_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 lastTime = 2;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 2;
  inline ::google::protobuf::int32 lasttime() const;
  inline void set_lasttime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_JoinWedding_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 lasttime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_JoinWedding_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Notify_BeginProcess : public ::google::protobuf::Message {
 public:
  GM_Notify_BeginProcess();
  virtual ~GM_Notify_BeginProcess();

  GM_Notify_BeginProcess(const GM_Notify_BeginProcess& from);

  inline GM_Notify_BeginProcess& operator=(const GM_Notify_BeginProcess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Notify_BeginProcess& default_instance();

  void Swap(GM_Notify_BeginProcess* other);

  // implements Message ----------------------------------------------

  GM_Notify_BeginProcess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Notify_BeginProcess& from);
  void MergeFrom(const GM_Notify_BeginProcess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 process = 1;
  inline bool has_process() const;
  inline void clear_process();
  static const int kProcessFieldNumber = 1;
  inline ::google::protobuf::int32 process() const;
  inline void set_process(::google::protobuf::int32 value);

  // required int32 lastTime = 2;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 2;
  inline ::google::protobuf::int32 lasttime() const;
  inline void set_lasttime(::google::protobuf::int32 value);

  // optional int32 canWorldInvite = 3;
  inline bool has_canworldinvite() const;
  inline void clear_canworldinvite();
  static const int kCanWorldInviteFieldNumber = 3;
  inline ::google::protobuf::int32 canworldinvite() const;
  inline void set_canworldinvite(::google::protobuf::int32 value);

  // optional int32 manid = 4;
  inline bool has_manid() const;
  inline void clear_manid();
  static const int kManidFieldNumber = 4;
  inline ::google::protobuf::int32 manid() const;
  inline void set_manid(::google::protobuf::int32 value);

  // optional int32 womanid = 5;
  inline bool has_womanid() const;
  inline void clear_womanid();
  static const int kWomanidFieldNumber = 5;
  inline ::google::protobuf::int32 womanid() const;
  inline void set_womanid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Notify_BeginProcess)
 private:
  inline void set_has_process();
  inline void clear_has_process();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();
  inline void set_has_canworldinvite();
  inline void clear_has_canworldinvite();
  inline void set_has_manid();
  inline void clear_has_manid();
  inline void set_has_womanid();
  inline void clear_has_womanid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 process_;
  ::google::protobuf::int32 lasttime_;
  ::google::protobuf::int32 canworldinvite_;
  ::google::protobuf::int32 manid_;
  ::google::protobuf::int32 womanid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_Notify_BeginProcess* default_instance_;
};
// -------------------------------------------------------------------

class GM_InviteOpen_Request : public ::google::protobuf::Message {
 public:
  GM_InviteOpen_Request();
  virtual ~GM_InviteOpen_Request();

  GM_InviteOpen_Request(const GM_InviteOpen_Request& from);

  inline GM_InviteOpen_Request& operator=(const GM_InviteOpen_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_InviteOpen_Request& default_instance();

  void Swap(GM_InviteOpen_Request* other);

  // implements Message ----------------------------------------------

  GM_InviteOpen_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_InviteOpen_Request& from);
  void MergeFrom(const GM_InviteOpen_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 kind = 1;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 1;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_InviteOpen_Request)
 private:
  inline void set_has_kind();
  inline void clear_has_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_InviteOpen_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_InviteOpenFriend_Return : public ::google::protobuf::Message {
 public:
  GM_InviteOpenFriend_Return();
  virtual ~GM_InviteOpenFriend_Return();

  GM_InviteOpenFriend_Return(const GM_InviteOpenFriend_Return& from);

  inline GM_InviteOpenFriend_Return& operator=(const GM_InviteOpenFriend_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_InviteOpenFriend_Return& default_instance();

  void Swap(GM_InviteOpenFriend_Return* other);

  // implements Message ----------------------------------------------

  GM_InviteOpenFriend_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_InviteOpenFriend_Return& from);
  void MergeFrom(const GM_InviteOpenFriend_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .GMInviteFriendItem item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::GMInviteFriendItem& item(int index) const;
  inline ::GMInviteFriendItem* mutable_item(int index);
  inline ::GMInviteFriendItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::GMInviteFriendItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::GMInviteFriendItem >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:GM_InviteOpenFriend_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GMInviteFriendItem > item_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_InviteOpenFriend_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_InviteFriend_Request : public ::google::protobuf::Message {
 public:
  GM_InviteFriend_Request();
  virtual ~GM_InviteFriend_Request();

  GM_InviteFriend_Request(const GM_InviteFriend_Request& from);

  inline GM_InviteFriend_Request& operator=(const GM_InviteFriend_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_InviteFriend_Request& default_instance();

  void Swap(GM_InviteFriend_Request* other);

  // implements Message ----------------------------------------------

  GM_InviteFriend_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_InviteFriend_Request& from);
  void MergeFrom(const GM_InviteFriend_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // repeated int32 item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline ::google::protobuf::int32 item(int index) const;
  inline void set_item(int index, ::google::protobuf::int32 value);
  inline void add_item(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      item() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:GM_InviteFriend_Request)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > item_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_InviteFriend_Request* default_instance_;
};
// -------------------------------------------------------------------

class GMInviteFriendItem : public ::google::protobuf::Message {
 public:
  GMInviteFriendItem();
  virtual ~GMInviteFriendItem();

  GMInviteFriendItem(const GMInviteFriendItem& from);

  inline GMInviteFriendItem& operator=(const GMInviteFriendItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMInviteFriendItem& default_instance();

  void Swap(GMInviteFriendItem* other);

  // implements Message ----------------------------------------------

  GMInviteFriendItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMInviteFriendItem& from);
  void MergeFrom(const GMInviteFriendItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 friendid = 1;
  inline bool has_friendid() const;
  inline void clear_friendid();
  static const int kFriendidFieldNumber = 1;
  inline ::google::protobuf::int32 friendid() const;
  inline void set_friendid(::google::protobuf::int32 value);

  // optional int32 friendprofession = 2;
  inline bool has_friendprofession() const;
  inline void clear_friendprofession();
  static const int kFriendprofessionFieldNumber = 2;
  inline ::google::protobuf::int32 friendprofession() const;
  inline void set_friendprofession(::google::protobuf::int32 value);

  // optional string friendname = 3;
  inline bool has_friendname() const;
  inline void clear_friendname();
  static const int kFriendnameFieldNumber = 3;
  inline const ::std::string& friendname() const;
  inline void set_friendname(const ::std::string& value);
  inline void set_friendname(const char* value);
  inline void set_friendname(const char* value, size_t size);
  inline ::std::string* mutable_friendname();
  inline ::std::string* release_friendname();
  inline void set_allocated_friendname(::std::string* friendname);

  // optional int32 hasInvite = 4;
  inline bool has_hasinvite() const;
  inline void clear_hasinvite();
  static const int kHasInviteFieldNumber = 4;
  inline ::google::protobuf::int32 hasinvite() const;
  inline void set_hasinvite(::google::protobuf::int32 value);

  // optional int32 isOnline = 5;
  inline bool has_isonline() const;
  inline void clear_isonline();
  static const int kIsOnlineFieldNumber = 5;
  inline ::google::protobuf::int32 isonline() const;
  inline void set_isonline(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMInviteFriendItem)
 private:
  inline void set_has_friendid();
  inline void clear_has_friendid();
  inline void set_has_friendprofession();
  inline void clear_has_friendprofession();
  inline void set_has_friendname();
  inline void clear_has_friendname();
  inline void set_has_hasinvite();
  inline void clear_has_hasinvite();
  inline void set_has_isonline();
  inline void clear_has_isonline();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 friendid_;
  ::google::protobuf::int32 friendprofession_;
  ::std::string* friendname_;
  ::google::protobuf::int32 hasinvite_;
  ::google::protobuf::int32 isonline_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GMInviteFriendItem* default_instance_;
};
// -------------------------------------------------------------------

class GM_InviteFriend_Return : public ::google::protobuf::Message {
 public:
  GM_InviteFriend_Return();
  virtual ~GM_InviteFriend_Return();

  GM_InviteFriend_Return(const GM_InviteFriend_Return& from);

  inline GM_InviteFriend_Return& operator=(const GM_InviteFriend_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_InviteFriend_Return& default_instance();

  void Swap(GM_InviteFriend_Return* other);

  // implements Message ----------------------------------------------

  GM_InviteFriend_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_InviteFriend_Return& from);
  void MergeFrom(const GM_InviteFriend_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // repeated int32 item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline ::google::protobuf::int32 item(int index) const;
  inline void set_item(int index, ::google::protobuf::int32 value);
  inline void add_item(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      item() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:GM_InviteFriend_Return)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > item_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_InviteFriend_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_FlowerBless_Request : public ::google::protobuf::Message {
 public:
  GM_FlowerBless_Request();
  virtual ~GM_FlowerBless_Request();

  GM_FlowerBless_Request(const GM_FlowerBless_Request& from);

  inline GM_FlowerBless_Request& operator=(const GM_FlowerBless_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_FlowerBless_Request& default_instance();

  void Swap(GM_FlowerBless_Request* other);

  // implements Message ----------------------------------------------

  GM_FlowerBless_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_FlowerBless_Request& from);
  void MergeFrom(const GM_FlowerBless_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 kind = 1;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 1;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_FlowerBless_Request)
 private:
  inline void set_has_kind();
  inline void clear_has_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_FlowerBless_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_SimilarOperate_Return : public ::google::protobuf::Message {
 public:
  GM_SimilarOperate_Return();
  virtual ~GM_SimilarOperate_Return();

  GM_SimilarOperate_Return(const GM_SimilarOperate_Return& from);

  inline GM_SimilarOperate_Return& operator=(const GM_SimilarOperate_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_SimilarOperate_Return& default_instance();

  void Swap(GM_SimilarOperate_Return* other);

  // implements Message ----------------------------------------------

  GM_SimilarOperate_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_SimilarOperate_Return& from);
  void MergeFrom(const GM_SimilarOperate_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 hasCount = 2;
  inline bool has_hascount() const;
  inline void clear_hascount();
  static const int kHasCountFieldNumber = 2;
  inline ::google::protobuf::int32 hascount() const;
  inline void set_hascount(::google::protobuf::int32 value);

  // optional int32 getDiamonds = 3;
  inline bool has_getdiamonds() const;
  inline void clear_getdiamonds();
  static const int kGetDiamondsFieldNumber = 3;
  inline ::google::protobuf::int32 getdiamonds() const;
  inline void set_getdiamonds(::google::protobuf::int32 value);

  // optional int32 objectid = 4;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 4;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // optional int32 objectnum = 5;
  inline bool has_objectnum() const;
  inline void clear_objectnum();
  static const int kObjectnumFieldNumber = 5;
  inline ::google::protobuf::int32 objectnum() const;
  inline void set_objectnum(::google::protobuf::int32 value);

  // optional int32 canHideActivity = 6;
  inline bool has_canhideactivity() const;
  inline void clear_canhideactivity();
  static const int kCanHideActivityFieldNumber = 6;
  inline ::google::protobuf::int32 canhideactivity() const;
  inline void set_canhideactivity(::google::protobuf::int32 value);

  // optional int32 celeType = 7;
  inline bool has_celetype() const;
  inline void clear_celetype();
  static const int kCeleTypeFieldNumber = 7;
  inline ::google::protobuf::int32 celetype() const;
  inline void set_celetype(::google::protobuf::int32 value);

  // optional int32 coldTime = 8;
  inline bool has_coldtime() const;
  inline void clear_coldtime();
  static const int kColdTimeFieldNumber = 8;
  inline ::google::protobuf::int32 coldtime() const;
  inline void set_coldtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_SimilarOperate_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_hascount();
  inline void clear_has_hascount();
  inline void set_has_getdiamonds();
  inline void clear_has_getdiamonds();
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_objectnum();
  inline void clear_has_objectnum();
  inline void set_has_canhideactivity();
  inline void clear_has_canhideactivity();
  inline void set_has_celetype();
  inline void clear_has_celetype();
  inline void set_has_coldtime();
  inline void clear_has_coldtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 hascount_;
  ::google::protobuf::int32 getdiamonds_;
  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 objectnum_;
  ::google::protobuf::int32 canhideactivity_;
  ::google::protobuf::int32 celetype_;
  ::google::protobuf::int32 coldtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_SimilarOperate_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_FireWork_Request : public ::google::protobuf::Message {
 public:
  GM_FireWork_Request();
  virtual ~GM_FireWork_Request();

  GM_FireWork_Request(const GM_FireWork_Request& from);

  inline GM_FireWork_Request& operator=(const GM_FireWork_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_FireWork_Request& default_instance();

  void Swap(GM_FireWork_Request* other);

  // implements Message ----------------------------------------------

  GM_FireWork_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_FireWork_Request& from);
  void MergeFrom(const GM_FireWork_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 firekind = 1;
  inline bool has_firekind() const;
  inline void clear_firekind();
  static const int kFirekindFieldNumber = 1;
  inline ::google::protobuf::int32 firekind() const;
  inline void set_firekind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_FireWork_Request)
 private:
  inline void set_has_firekind();
  inline void clear_has_firekind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 firekind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_FireWork_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_BlessRank_Return : public ::google::protobuf::Message {
 public:
  GM_BlessRank_Return();
  virtual ~GM_BlessRank_Return();

  GM_BlessRank_Return(const GM_BlessRank_Return& from);

  inline GM_BlessRank_Return& operator=(const GM_BlessRank_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_BlessRank_Return& default_instance();

  void Swap(GM_BlessRank_Return* other);

  // implements Message ----------------------------------------------

  GM_BlessRank_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_BlessRank_Return& from);
  void MergeFrom(const GM_BlessRank_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 myRank = 1;
  inline bool has_myrank() const;
  inline void clear_myrank();
  static const int kMyRankFieldNumber = 1;
  inline ::google::protobuf::int32 myrank() const;
  inline void set_myrank(::google::protobuf::int32 value);

  // optional int32 myBless = 2;
  inline bool has_mybless() const;
  inline void clear_mybless();
  static const int kMyBlessFieldNumber = 2;
  inline ::google::protobuf::int32 mybless() const;
  inline void set_mybless(::google::protobuf::int32 value);

  // repeated .RankItem item = 3;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline const ::RankItem& item(int index) const;
  inline ::RankItem* mutable_item(int index);
  inline ::RankItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::RankItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::RankItem >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:GM_BlessRank_Return)
 private:
  inline void set_has_myrank();
  inline void clear_has_myrank();
  inline void set_has_mybless();
  inline void clear_has_mybless();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 myrank_;
  ::google::protobuf::int32 mybless_;
  ::google::protobuf::RepeatedPtrField< ::RankItem > item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_BlessRank_Return* default_instance_;
};
// -------------------------------------------------------------------

class RankItem : public ::google::protobuf::Message {
 public:
  RankItem();
  virtual ~RankItem();

  RankItem(const RankItem& from);

  inline RankItem& operator=(const RankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankItem& default_instance();

  void Swap(RankItem* other);

  // implements Message ----------------------------------------------

  RankItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankItem& from);
  void MergeFrom(const RankItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 getCount = 3;
  inline bool has_getcount() const;
  inline void clear_getcount();
  static const int kGetCountFieldNumber = 3;
  inline ::google::protobuf::int32 getcount() const;
  inline void set_getcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RankItem)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_getcount();
  inline void clear_has_getcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 getcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static RankItem* default_instance_;
};
// -------------------------------------------------------------------

class GM_TimeAndCount_Return : public ::google::protobuf::Message {
 public:
  GM_TimeAndCount_Return();
  virtual ~GM_TimeAndCount_Return();

  GM_TimeAndCount_Return(const GM_TimeAndCount_Return& from);

  inline GM_TimeAndCount_Return& operator=(const GM_TimeAndCount_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_TimeAndCount_Return& default_instance();

  void Swap(GM_TimeAndCount_Return* other);

  // implements Message ----------------------------------------------

  GM_TimeAndCount_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_TimeAndCount_Return& from);
  void MergeFrom(const GM_TimeAndCount_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int32 lastTime = 2;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 2;
  inline ::google::protobuf::int32 lasttime() const;
  inline void set_lasttime(::google::protobuf::int32 value);

  // optional int32 isCompOnline = 3;
  inline bool has_iscomponline() const;
  inline void clear_iscomponline();
  static const int kIsCompOnlineFieldNumber = 3;
  inline ::google::protobuf::int32 iscomponline() const;
  inline void set_iscomponline(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_TimeAndCount_Return)
 private:
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();
  inline void set_has_iscomponline();
  inline void clear_has_iscomponline();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 lasttime_;
  ::google::protobuf::int32 iscomponline_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_TimeAndCount_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_ProcessData_Request : public ::google::protobuf::Message {
 public:
  GM_ProcessData_Request();
  virtual ~GM_ProcessData_Request();

  GM_ProcessData_Request(const GM_ProcessData_Request& from);

  inline GM_ProcessData_Request& operator=(const GM_ProcessData_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ProcessData_Request& default_instance();

  void Swap(GM_ProcessData_Request* other);

  // implements Message ----------------------------------------------

  GM_ProcessData_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ProcessData_Request& from);
  void MergeFrom(const GM_ProcessData_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lastTime = 1;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 1;
  inline ::google::protobuf::int32 lasttime() const;
  inline void set_lasttime(::google::protobuf::int32 value);

  // optional int32 process = 2;
  inline bool has_process() const;
  inline void clear_process();
  static const int kProcessFieldNumber = 2;
  inline ::google::protobuf::int32 process() const;
  inline void set_process(::google::protobuf::int32 value);

  // repeated .ColdTime item = 3;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline const ::ColdTime& item(int index) const;
  inline ::ColdTime* mutable_item(int index);
  inline ::ColdTime* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::ColdTime >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::ColdTime >*
      mutable_item();

  // optional int32 man = 4;
  inline bool has_man() const;
  inline void clear_man();
  static const int kManFieldNumber = 4;
  inline ::google::protobuf::int32 man() const;
  inline void set_man(::google::protobuf::int32 value);

  // optional int32 woman = 5;
  inline bool has_woman() const;
  inline void clear_woman();
  static const int kWomanFieldNumber = 5;
  inline ::google::protobuf::int32 woman() const;
  inline void set_woman(::google::protobuf::int32 value);

  // optional int32 hasGetRed = 6;
  inline bool has_hasgetred() const;
  inline void clear_hasgetred();
  static const int kHasGetRedFieldNumber = 6;
  inline ::google::protobuf::int32 hasgetred() const;
  inline void set_hasgetred(::google::protobuf::int32 value);

  // optional int32 isProhibit = 7;
  inline bool has_isprohibit() const;
  inline void clear_isprohibit();
  static const int kIsProhibitFieldNumber = 7;
  inline ::google::protobuf::int32 isprohibit() const;
  inline void set_isprohibit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_ProcessData_Request)
 private:
  inline void set_has_lasttime();
  inline void clear_has_lasttime();
  inline void set_has_process();
  inline void clear_has_process();
  inline void set_has_man();
  inline void clear_has_man();
  inline void set_has_woman();
  inline void clear_has_woman();
  inline void set_has_hasgetred();
  inline void clear_has_hasgetred();
  inline void set_has_isprohibit();
  inline void clear_has_isprohibit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lasttime_;
  ::google::protobuf::int32 process_;
  ::google::protobuf::RepeatedPtrField< ::ColdTime > item_;
  ::google::protobuf::int32 man_;
  ::google::protobuf::int32 woman_;
  ::google::protobuf::int32 hasgetred_;
  ::google::protobuf::int32 isprohibit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_ProcessData_Request* default_instance_;
};
// -------------------------------------------------------------------

class ColdTime : public ::google::protobuf::Message {
 public:
  ColdTime();
  virtual ~ColdTime();

  ColdTime(const ColdTime& from);

  inline ColdTime& operator=(const ColdTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ColdTime& default_instance();

  void Swap(ColdTime* other);

  // implements Message ----------------------------------------------

  ColdTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ColdTime& from);
  void MergeFrom(const ColdTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 celeType = 1;
  inline bool has_celetype() const;
  inline void clear_celetype();
  static const int kCeleTypeFieldNumber = 1;
  inline ::google::protobuf::int32 celetype() const;
  inline void set_celetype(::google::protobuf::int32 value);

  // optional int32 coldtime = 2;
  inline bool has_coldtime() const;
  inline void clear_coldtime();
  static const int kColdtimeFieldNumber = 2;
  inline ::google::protobuf::int32 coldtime() const;
  inline void set_coldtime(::google::protobuf::int32 value);

  // optional int32 hasCount = 3;
  inline bool has_hascount() const;
  inline void clear_hascount();
  static const int kHasCountFieldNumber = 3;
  inline ::google::protobuf::int32 hascount() const;
  inline void set_hascount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ColdTime)
 private:
  inline void set_has_celetype();
  inline void clear_has_celetype();
  inline void set_has_coldtime();
  inline void clear_has_coldtime();
  inline void set_has_hascount();
  inline void clear_has_hascount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 celetype_;
  ::google::protobuf::int32 coldtime_;
  ::google::protobuf::int32 hascount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static ColdTime* default_instance_;
};
// -------------------------------------------------------------------

class GM_BigMeal_Request : public ::google::protobuf::Message {
 public:
  GM_BigMeal_Request();
  virtual ~GM_BigMeal_Request();

  GM_BigMeal_Request(const GM_BigMeal_Request& from);

  inline GM_BigMeal_Request& operator=(const GM_BigMeal_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_BigMeal_Request& default_instance();

  void Swap(GM_BigMeal_Request* other);

  // implements Message ----------------------------------------------

  GM_BigMeal_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_BigMeal_Request& from);
  void MergeFrom(const GM_BigMeal_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 eatValue = 1;
  inline bool has_eatvalue() const;
  inline void clear_eatvalue();
  static const int kEatValueFieldNumber = 1;
  inline ::google::protobuf::int32 eatvalue() const;
  inline void set_eatvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_BigMeal_Request)
 private:
  inline void set_has_eatvalue();
  inline void clear_has_eatvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eatvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_BigMeal_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_BigMeal_Return : public ::google::protobuf::Message {
 public:
  GM_BigMeal_Return();
  virtual ~GM_BigMeal_Return();

  GM_BigMeal_Return(const GM_BigMeal_Return& from);

  inline GM_BigMeal_Return& operator=(const GM_BigMeal_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_BigMeal_Return& default_instance();

  void Swap(GM_BigMeal_Return* other);

  // implements Message ----------------------------------------------

  GM_BigMeal_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_BigMeal_Return& from);
  void MergeFrom(const GM_BigMeal_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 coldTime = 2;
  inline bool has_coldtime() const;
  inline void clear_coldtime();
  static const int kColdTimeFieldNumber = 2;
  inline ::google::protobuf::int32 coldtime() const;
  inline void set_coldtime(::google::protobuf::int32 value);

  // optional int32 objectid = 3;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 3;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // optional int32 objectnum = 4;
  inline bool has_objectnum() const;
  inline void clear_objectnum();
  static const int kObjectnumFieldNumber = 4;
  inline ::google::protobuf::int32 objectnum() const;
  inline void set_objectnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_BigMeal_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_coldtime();
  inline void clear_has_coldtime();
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_objectnum();
  inline void clear_has_objectnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 coldtime_;
  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 objectnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_BigMeal_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_SlotMachineObject_Return : public ::google::protobuf::Message {
 public:
  GM_SlotMachineObject_Return();
  virtual ~GM_SlotMachineObject_Return();

  GM_SlotMachineObject_Return(const GM_SlotMachineObject_Return& from);

  inline GM_SlotMachineObject_Return& operator=(const GM_SlotMachineObject_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_SlotMachineObject_Return& default_instance();

  void Swap(GM_SlotMachineObject_Return* other);

  // implements Message ----------------------------------------------

  GM_SlotMachineObject_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_SlotMachineObject_Return& from);
  void MergeFrom(const GM_SlotMachineObject_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SlotMachineObject item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::SlotMachineObject& item(int index) const;
  inline ::SlotMachineObject* mutable_item(int index);
  inline ::SlotMachineObject* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::SlotMachineObject >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::SlotMachineObject >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:GM_SlotMachineObject_Return)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SlotMachineObject > item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_SlotMachineObject_Return* default_instance_;
};
// -------------------------------------------------------------------

class SlotMachineObject : public ::google::protobuf::Message {
 public:
  SlotMachineObject();
  virtual ~SlotMachineObject();

  SlotMachineObject(const SlotMachineObject& from);

  inline SlotMachineObject& operator=(const SlotMachineObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SlotMachineObject& default_instance();

  void Swap(SlotMachineObject* other);

  // implements Message ----------------------------------------------

  SlotMachineObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SlotMachineObject& from);
  void MergeFrom(const SlotMachineObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 place = 1;
  inline bool has_place() const;
  inline void clear_place();
  static const int kPlaceFieldNumber = 1;
  inline ::google::protobuf::int32 place() const;
  inline void set_place(::google::protobuf::int32 value);

  // required int32 objectid = 2;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 2;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // required int32 objectnum = 3;
  inline bool has_objectnum() const;
  inline void clear_objectnum();
  static const int kObjectnumFieldNumber = 3;
  inline ::google::protobuf::int32 objectnum() const;
  inline void set_objectnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SlotMachineObject)
 private:
  inline void set_has_place();
  inline void clear_has_place();
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_objectnum();
  inline void clear_has_objectnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 place_;
  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 objectnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static SlotMachineObject* default_instance_;
};
// -------------------------------------------------------------------

class GM_SlotTurn_Return : public ::google::protobuf::Message {
 public:
  GM_SlotTurn_Return();
  virtual ~GM_SlotTurn_Return();

  GM_SlotTurn_Return(const GM_SlotTurn_Return& from);

  inline GM_SlotTurn_Return& operator=(const GM_SlotTurn_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_SlotTurn_Return& default_instance();

  void Swap(GM_SlotTurn_Return* other);

  // implements Message ----------------------------------------------

  GM_SlotTurn_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_SlotTurn_Return& from);
  void MergeFrom(const GM_SlotTurn_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 place = 1;
  inline bool has_place() const;
  inline void clear_place();
  static const int kPlaceFieldNumber = 1;
  inline ::google::protobuf::int32 place() const;
  inline void set_place(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_SlotTurn_Return)
 private:
  inline void set_has_place();
  inline void clear_has_place();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 place_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_SlotTurn_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_ObjectSee_Return : public ::google::protobuf::Message {
 public:
  GM_ObjectSee_Return();
  virtual ~GM_ObjectSee_Return();

  GM_ObjectSee_Return(const GM_ObjectSee_Return& from);

  inline GM_ObjectSee_Return& operator=(const GM_ObjectSee_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ObjectSee_Return& default_instance();

  void Swap(GM_ObjectSee_Return* other);

  // implements Message ----------------------------------------------

  GM_ObjectSee_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ObjectSee_Return& from);
  void MergeFrom(const GM_ObjectSee_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ObjectData item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::ObjectData& item(int index) const;
  inline ::ObjectData* mutable_item(int index);
  inline ::ObjectData* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::ObjectData >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::ObjectData >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:GM_ObjectSee_Return)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ObjectData > item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GM_ObjectSee_Return* default_instance_;
};
// -------------------------------------------------------------------

class ObjectData : public ::google::protobuf::Message {
 public:
  ObjectData();
  virtual ~ObjectData();

  ObjectData(const ObjectData& from);

  inline ObjectData& operator=(const ObjectData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectData& default_instance();

  void Swap(ObjectData* other);

  // implements Message ----------------------------------------------

  ObjectData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectData& from);
  void MergeFrom(const ObjectData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objectid = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // required int32 objectnum = 2;
  inline bool has_objectnum() const;
  inline void clear_objectnum();
  static const int kObjectnumFieldNumber = 2;
  inline ::google::protobuf::int32 objectnum() const;
  inline void set_objectnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ObjectData)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_objectnum();
  inline void clear_has_objectnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 objectnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static ObjectData* default_instance_;
};
// -------------------------------------------------------------------

class InstanceInviteFriend : public ::google::protobuf::Message {
 public:
  InstanceInviteFriend();
  virtual ~InstanceInviteFriend();

  InstanceInviteFriend(const InstanceInviteFriend& from);

  inline InstanceInviteFriend& operator=(const InstanceInviteFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstanceInviteFriend& default_instance();

  void Swap(InstanceInviteFriend* other);

  // implements Message ----------------------------------------------

  InstanceInviteFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstanceInviteFriend& from);
  void MergeFrom(const InstanceInviteFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 friendid = 1;
  inline int friendid_size() const;
  inline void clear_friendid();
  static const int kFriendidFieldNumber = 1;
  inline ::google::protobuf::int32 friendid(int index) const;
  inline void set_friendid(int index, ::google::protobuf::int32 value);
  inline void add_friendid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      friendid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_friendid();

  // @@protoc_insertion_point(class_scope:InstanceInviteFriend)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > friendid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static InstanceInviteFriend* default_instance_;
};
// -------------------------------------------------------------------

class GMKickOutRequest : public ::google::protobuf::Message {
 public:
  GMKickOutRequest();
  virtual ~GMKickOutRequest();

  GMKickOutRequest(const GMKickOutRequest& from);

  inline GMKickOutRequest& operator=(const GMKickOutRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMKickOutRequest& default_instance();

  void Swap(GMKickOutRequest* other);

  // implements Message ----------------------------------------------

  GMKickOutRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMKickOutRequest& from);
  void MergeFrom(const GMKickOutRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMKickOutRequest)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GMKickOutRequest* default_instance_;
};
// -------------------------------------------------------------------

class GMReserchDataRequest : public ::google::protobuf::Message {
 public:
  GMReserchDataRequest();
  virtual ~GMReserchDataRequest();

  GMReserchDataRequest(const GMReserchDataRequest& from);

  inline GMReserchDataRequest& operator=(const GMReserchDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMReserchDataRequest& default_instance();

  void Swap(GMReserchDataRequest* other);

  // implements Message ----------------------------------------------

  GMReserchDataRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMReserchDataRequest& from);
  void MergeFrom(const GMReserchDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:GMReserchDataRequest)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GMReserchDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class GMReserchDataReturn : public ::google::protobuf::Message {
 public:
  GMReserchDataReturn();
  virtual ~GMReserchDataReturn();

  GMReserchDataReturn(const GMReserchDataReturn& from);

  inline GMReserchDataReturn& operator=(const GMReserchDataReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMReserchDataReturn& default_instance();

  void Swap(GMReserchDataReturn* other);

  // implements Message ----------------------------------------------

  GMReserchDataReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMReserchDataReturn& from);
  void MergeFrom(const GMReserchDataReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RoleData item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::RoleData& item(int index) const;
  inline ::RoleData* mutable_item(int index);
  inline ::RoleData* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::RoleData >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::RoleData >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:GMReserchDataReturn)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::RoleData > item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GMReserchDataReturn* default_instance_;
};
// -------------------------------------------------------------------

class RoleData : public ::google::protobuf::Message {
 public:
  RoleData();
  virtual ~RoleData();

  RoleData(const RoleData& from);

  inline RoleData& operator=(const RoleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleData& default_instance();

  void Swap(RoleData* other);

  // implements Message ----------------------------------------------

  RoleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleData& from);
  void MergeFrom(const RoleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 isFriend = 1;
  inline bool has_isfriend() const;
  inline void clear_isfriend();
  static const int kIsFriendFieldNumber = 1;
  inline ::google::protobuf::int32 isfriend() const;
  inline void set_isfriend(::google::protobuf::int32 value);

  // required int32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:RoleData)
 private:
  inline void set_has_isfriend();
  inline void clear_has_isfriend();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isfriend_;
  ::google::protobuf::int32 roleid_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static RoleData* default_instance_;
};
// -------------------------------------------------------------------

class GMProhibitRequest : public ::google::protobuf::Message {
 public:
  GMProhibitRequest();
  virtual ~GMProhibitRequest();

  GMProhibitRequest(const GMProhibitRequest& from);

  inline GMProhibitRequest& operator=(const GMProhibitRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMProhibitRequest& default_instance();

  void Swap(GMProhibitRequest* other);

  // implements Message ----------------------------------------------

  GMProhibitRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMProhibitRequest& from);
  void MergeFrom(const GMProhibitRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 kind = 1;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 1;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMProhibitRequest)
 private:
  inline void set_has_kind();
  inline void clear_has_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GMProhibitRequest* default_instance_;
};
// -------------------------------------------------------------------

class GMManagerProceeReturn : public ::google::protobuf::Message {
 public:
  GMManagerProceeReturn();
  virtual ~GMManagerProceeReturn();

  GMManagerProceeReturn(const GMManagerProceeReturn& from);

  inline GMManagerProceeReturn& operator=(const GMManagerProceeReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMManagerProceeReturn& default_instance();

  void Swap(GMManagerProceeReturn* other);

  // implements Message ----------------------------------------------

  GMManagerProceeReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMManagerProceeReturn& from);
  void MergeFrom(const GMManagerProceeReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMManagerProceeReturn)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GMManagerProceeReturn* default_instance_;
};
// -------------------------------------------------------------------

class GMWeddingChat : public ::google::protobuf::Message {
 public:
  GMWeddingChat();
  virtual ~GMWeddingChat();

  GMWeddingChat(const GMWeddingChat& from);

  inline GMWeddingChat& operator=(const GMWeddingChat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMWeddingChat& default_instance();

  void Swap(GMWeddingChat* other);

  // implements Message ----------------------------------------------

  GMWeddingChat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMWeddingChat& from);
  void MergeFrom(const GMWeddingChat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 vip = 4;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 4;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);

  // required string word = 5;
  inline bool has_word() const;
  inline void clear_word();
  static const int kWordFieldNumber = 5;
  inline const ::std::string& word() const;
  inline void set_word(const ::std::string& value);
  inline void set_word(const char* value);
  inline void set_word(const char* value, size_t size);
  inline ::std::string* mutable_word();
  inline ::std::string* release_word();
  inline void set_allocated_word(::std::string* word);

  // optional string receName = 6;
  inline bool has_recename() const;
  inline void clear_recename();
  static const int kReceNameFieldNumber = 6;
  inline const ::std::string& recename() const;
  inline void set_recename(const ::std::string& value);
  inline void set_recename(const char* value);
  inline void set_recename(const char* value, size_t size);
  inline ::std::string* mutable_recename();
  inline ::std::string* release_recename();
  inline void set_allocated_recename(::std::string* recename);

  // optional uint32 repeatTimes = 7;
  inline bool has_repeattimes() const;
  inline void clear_repeattimes();
  static const int kRepeatTimesFieldNumber = 7;
  inline ::google::protobuf::uint32 repeattimes() const;
  inline void set_repeattimes(::google::protobuf::uint32 value);

  // optional uint32 intervalTime = 8;
  inline bool has_intervaltime() const;
  inline void clear_intervaltime();
  static const int kIntervalTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 intervaltime() const;
  inline void set_intervaltime(::google::protobuf::uint32 value);

  // optional int32 receroleid = 9;
  inline bool has_receroleid() const;
  inline void clear_receroleid();
  static const int kReceroleidFieldNumber = 9;
  inline ::google::protobuf::int32 receroleid() const;
  inline void set_receroleid(::google::protobuf::int32 value);

  // optional int32 recevip = 10;
  inline bool has_recevip() const;
  inline void clear_recevip();
  static const int kRecevipFieldNumber = 10;
  inline ::google::protobuf::int32 recevip() const;
  inline void set_recevip(::google::protobuf::int32 value);

  // optional int32 kind = 11;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 11;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // optional int32 profession = 12;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 12;
  inline ::google::protobuf::int32 profession() const;
  inline void set_profession(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMWeddingChat)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_word();
  inline void clear_has_word();
  inline void set_has_recename();
  inline void clear_has_recename();
  inline void set_has_repeattimes();
  inline void clear_has_repeattimes();
  inline void set_has_intervaltime();
  inline void clear_has_intervaltime();
  inline void set_has_receroleid();
  inline void clear_has_receroleid();
  inline void set_has_recevip();
  inline void clear_has_recevip();
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_profession();
  inline void clear_has_profession();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 vip_;
  ::std::string* word_;
  ::std::string* recename_;
  ::google::protobuf::uint32 repeattimes_;
  ::google::protobuf::uint32 intervaltime_;
  ::google::protobuf::int32 receroleid_;
  ::google::protobuf::int32 recevip_;
  ::google::protobuf::int32 kind_;
  ::google::protobuf::int32 profession_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GMWeddingChat* default_instance_;
};
// -------------------------------------------------------------------

class GMGiftRequest : public ::google::protobuf::Message {
 public:
  GMGiftRequest();
  virtual ~GMGiftRequest();

  GMGiftRequest(const GMGiftRequest& from);

  inline GMGiftRequest& operator=(const GMGiftRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMGiftRequest& default_instance();

  void Swap(GMGiftRequest* other);

  // implements Message ----------------------------------------------

  GMGiftRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMGiftRequest& from);
  void MergeFrom(const GMGiftRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 blessValue = 1;
  inline bool has_blessvalue() const;
  inline void clear_blessvalue();
  static const int kBlessValueFieldNumber = 1;
  inline ::google::protobuf::int32 blessvalue() const;
  inline void set_blessvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMGiftRequest)
 private:
  inline void set_has_blessvalue();
  inline void clear_has_blessvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 blessvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_wedding_2etxt();
  friend void protobuf_AssignDesc_wedding_2etxt();
  friend void protobuf_ShutdownFile_wedding_2etxt();

  void InitAsDefaultInstance();
  static GMGiftRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_Notify_JoinWedding

// required int32 canJoinWedding = 1;
inline bool GM_Notify_JoinWedding::has_canjoinwedding() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Notify_JoinWedding::set_has_canjoinwedding() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Notify_JoinWedding::clear_has_canjoinwedding() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Notify_JoinWedding::clear_canjoinwedding() {
  canjoinwedding_ = 0;
  clear_has_canjoinwedding();
}
inline ::google::protobuf::int32 GM_Notify_JoinWedding::canjoinwedding() const {
  return canjoinwedding_;
}
inline void GM_Notify_JoinWedding::set_canjoinwedding(::google::protobuf::int32 value) {
  set_has_canjoinwedding();
  canjoinwedding_ = value;
}

// -------------------------------------------------------------------

// GM_JoinWedding_Return

// required int32 result = 1;
inline bool GM_JoinWedding_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_JoinWedding_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_JoinWedding_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_JoinWedding_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_JoinWedding_Return::result() const {
  return result_;
}
inline void GM_JoinWedding_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 lastTime = 2;
inline bool GM_JoinWedding_Return::has_lasttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_JoinWedding_Return::set_has_lasttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_JoinWedding_Return::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_JoinWedding_Return::clear_lasttime() {
  lasttime_ = 0;
  clear_has_lasttime();
}
inline ::google::protobuf::int32 GM_JoinWedding_Return::lasttime() const {
  return lasttime_;
}
inline void GM_JoinWedding_Return::set_lasttime(::google::protobuf::int32 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// -------------------------------------------------------------------

// GM_Notify_BeginProcess

// required int32 process = 1;
inline bool GM_Notify_BeginProcess::has_process() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Notify_BeginProcess::set_has_process() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Notify_BeginProcess::clear_has_process() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Notify_BeginProcess::clear_process() {
  process_ = 0;
  clear_has_process();
}
inline ::google::protobuf::int32 GM_Notify_BeginProcess::process() const {
  return process_;
}
inline void GM_Notify_BeginProcess::set_process(::google::protobuf::int32 value) {
  set_has_process();
  process_ = value;
}

// required int32 lastTime = 2;
inline bool GM_Notify_BeginProcess::has_lasttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Notify_BeginProcess::set_has_lasttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Notify_BeginProcess::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Notify_BeginProcess::clear_lasttime() {
  lasttime_ = 0;
  clear_has_lasttime();
}
inline ::google::protobuf::int32 GM_Notify_BeginProcess::lasttime() const {
  return lasttime_;
}
inline void GM_Notify_BeginProcess::set_lasttime(::google::protobuf::int32 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// optional int32 canWorldInvite = 3;
inline bool GM_Notify_BeginProcess::has_canworldinvite() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Notify_BeginProcess::set_has_canworldinvite() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Notify_BeginProcess::clear_has_canworldinvite() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Notify_BeginProcess::clear_canworldinvite() {
  canworldinvite_ = 0;
  clear_has_canworldinvite();
}
inline ::google::protobuf::int32 GM_Notify_BeginProcess::canworldinvite() const {
  return canworldinvite_;
}
inline void GM_Notify_BeginProcess::set_canworldinvite(::google::protobuf::int32 value) {
  set_has_canworldinvite();
  canworldinvite_ = value;
}

// optional int32 manid = 4;
inline bool GM_Notify_BeginProcess::has_manid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Notify_BeginProcess::set_has_manid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Notify_BeginProcess::clear_has_manid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Notify_BeginProcess::clear_manid() {
  manid_ = 0;
  clear_has_manid();
}
inline ::google::protobuf::int32 GM_Notify_BeginProcess::manid() const {
  return manid_;
}
inline void GM_Notify_BeginProcess::set_manid(::google::protobuf::int32 value) {
  set_has_manid();
  manid_ = value;
}

// optional int32 womanid = 5;
inline bool GM_Notify_BeginProcess::has_womanid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Notify_BeginProcess::set_has_womanid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Notify_BeginProcess::clear_has_womanid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Notify_BeginProcess::clear_womanid() {
  womanid_ = 0;
  clear_has_womanid();
}
inline ::google::protobuf::int32 GM_Notify_BeginProcess::womanid() const {
  return womanid_;
}
inline void GM_Notify_BeginProcess::set_womanid(::google::protobuf::int32 value) {
  set_has_womanid();
  womanid_ = value;
}

// -------------------------------------------------------------------

// GM_InviteOpen_Request

// required int32 kind = 1;
inline bool GM_InviteOpen_Request::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_InviteOpen_Request::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_InviteOpen_Request::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_InviteOpen_Request::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 GM_InviteOpen_Request::kind() const {
  return kind_;
}
inline void GM_InviteOpen_Request::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// -------------------------------------------------------------------

// GM_InviteOpenFriend_Return

// required int32 result = 1;
inline bool GM_InviteOpenFriend_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_InviteOpenFriend_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_InviteOpenFriend_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_InviteOpenFriend_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_InviteOpenFriend_Return::result() const {
  return result_;
}
inline void GM_InviteOpenFriend_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .GMInviteFriendItem item = 2;
inline int GM_InviteOpenFriend_Return::item_size() const {
  return item_.size();
}
inline void GM_InviteOpenFriend_Return::clear_item() {
  item_.Clear();
}
inline const ::GMInviteFriendItem& GM_InviteOpenFriend_Return::item(int index) const {
  return item_.Get(index);
}
inline ::GMInviteFriendItem* GM_InviteOpenFriend_Return::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::GMInviteFriendItem* GM_InviteOpenFriend_Return::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GMInviteFriendItem >&
GM_InviteOpenFriend_Return::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::GMInviteFriendItem >*
GM_InviteOpenFriend_Return::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// GM_InviteFriend_Request

// required int32 count = 1;
inline bool GM_InviteFriend_Request::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_InviteFriend_Request::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_InviteFriend_Request::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_InviteFriend_Request::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GM_InviteFriend_Request::count() const {
  return count_;
}
inline void GM_InviteFriend_Request::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// repeated int32 item = 2;
inline int GM_InviteFriend_Request::item_size() const {
  return item_.size();
}
inline void GM_InviteFriend_Request::clear_item() {
  item_.Clear();
}
inline ::google::protobuf::int32 GM_InviteFriend_Request::item(int index) const {
  return item_.Get(index);
}
inline void GM_InviteFriend_Request::set_item(int index, ::google::protobuf::int32 value) {
  item_.Set(index, value);
}
inline void GM_InviteFriend_Request::add_item(::google::protobuf::int32 value) {
  item_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GM_InviteFriend_Request::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GM_InviteFriend_Request::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// GMInviteFriendItem

// required int32 friendid = 1;
inline bool GMInviteFriendItem::has_friendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMInviteFriendItem::set_has_friendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMInviteFriendItem::clear_has_friendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMInviteFriendItem::clear_friendid() {
  friendid_ = 0;
  clear_has_friendid();
}
inline ::google::protobuf::int32 GMInviteFriendItem::friendid() const {
  return friendid_;
}
inline void GMInviteFriendItem::set_friendid(::google::protobuf::int32 value) {
  set_has_friendid();
  friendid_ = value;
}

// optional int32 friendprofession = 2;
inline bool GMInviteFriendItem::has_friendprofession() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMInviteFriendItem::set_has_friendprofession() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMInviteFriendItem::clear_has_friendprofession() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMInviteFriendItem::clear_friendprofession() {
  friendprofession_ = 0;
  clear_has_friendprofession();
}
inline ::google::protobuf::int32 GMInviteFriendItem::friendprofession() const {
  return friendprofession_;
}
inline void GMInviteFriendItem::set_friendprofession(::google::protobuf::int32 value) {
  set_has_friendprofession();
  friendprofession_ = value;
}

// optional string friendname = 3;
inline bool GMInviteFriendItem::has_friendname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMInviteFriendItem::set_has_friendname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMInviteFriendItem::clear_has_friendname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMInviteFriendItem::clear_friendname() {
  if (friendname_ != &::google::protobuf::internal::kEmptyString) {
    friendname_->clear();
  }
  clear_has_friendname();
}
inline const ::std::string& GMInviteFriendItem::friendname() const {
  return *friendname_;
}
inline void GMInviteFriendItem::set_friendname(const ::std::string& value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void GMInviteFriendItem::set_friendname(const char* value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void GMInviteFriendItem::set_friendname(const char* value, size_t size) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMInviteFriendItem::mutable_friendname() {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  return friendname_;
}
inline ::std::string* GMInviteFriendItem::release_friendname() {
  clear_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = friendname_;
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMInviteFriendItem::set_allocated_friendname(::std::string* friendname) {
  if (friendname_ != &::google::protobuf::internal::kEmptyString) {
    delete friendname_;
  }
  if (friendname) {
    set_has_friendname();
    friendname_ = friendname;
  } else {
    clear_has_friendname();
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 hasInvite = 4;
inline bool GMInviteFriendItem::has_hasinvite() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMInviteFriendItem::set_has_hasinvite() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMInviteFriendItem::clear_has_hasinvite() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMInviteFriendItem::clear_hasinvite() {
  hasinvite_ = 0;
  clear_has_hasinvite();
}
inline ::google::protobuf::int32 GMInviteFriendItem::hasinvite() const {
  return hasinvite_;
}
inline void GMInviteFriendItem::set_hasinvite(::google::protobuf::int32 value) {
  set_has_hasinvite();
  hasinvite_ = value;
}

// optional int32 isOnline = 5;
inline bool GMInviteFriendItem::has_isonline() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GMInviteFriendItem::set_has_isonline() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GMInviteFriendItem::clear_has_isonline() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GMInviteFriendItem::clear_isonline() {
  isonline_ = 0;
  clear_has_isonline();
}
inline ::google::protobuf::int32 GMInviteFriendItem::isonline() const {
  return isonline_;
}
inline void GMInviteFriendItem::set_isonline(::google::protobuf::int32 value) {
  set_has_isonline();
  isonline_ = value;
}

// -------------------------------------------------------------------

// GM_InviteFriend_Return

// required int32 count = 1;
inline bool GM_InviteFriend_Return::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_InviteFriend_Return::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_InviteFriend_Return::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_InviteFriend_Return::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GM_InviteFriend_Return::count() const {
  return count_;
}
inline void GM_InviteFriend_Return::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// repeated int32 item = 2;
inline int GM_InviteFriend_Return::item_size() const {
  return item_.size();
}
inline void GM_InviteFriend_Return::clear_item() {
  item_.Clear();
}
inline ::google::protobuf::int32 GM_InviteFriend_Return::item(int index) const {
  return item_.Get(index);
}
inline void GM_InviteFriend_Return::set_item(int index, ::google::protobuf::int32 value) {
  item_.Set(index, value);
}
inline void GM_InviteFriend_Return::add_item(::google::protobuf::int32 value) {
  item_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GM_InviteFriend_Return::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GM_InviteFriend_Return::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// GM_FlowerBless_Request

// required int32 kind = 1;
inline bool GM_FlowerBless_Request::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_FlowerBless_Request::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_FlowerBless_Request::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_FlowerBless_Request::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 GM_FlowerBless_Request::kind() const {
  return kind_;
}
inline void GM_FlowerBless_Request::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// -------------------------------------------------------------------

// GM_SimilarOperate_Return

// required int32 result = 1;
inline bool GM_SimilarOperate_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_SimilarOperate_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_SimilarOperate_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_SimilarOperate_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_SimilarOperate_Return::result() const {
  return result_;
}
inline void GM_SimilarOperate_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 hasCount = 2;
inline bool GM_SimilarOperate_Return::has_hascount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_SimilarOperate_Return::set_has_hascount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_SimilarOperate_Return::clear_has_hascount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_SimilarOperate_Return::clear_hascount() {
  hascount_ = 0;
  clear_has_hascount();
}
inline ::google::protobuf::int32 GM_SimilarOperate_Return::hascount() const {
  return hascount_;
}
inline void GM_SimilarOperate_Return::set_hascount(::google::protobuf::int32 value) {
  set_has_hascount();
  hascount_ = value;
}

// optional int32 getDiamonds = 3;
inline bool GM_SimilarOperate_Return::has_getdiamonds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_SimilarOperate_Return::set_has_getdiamonds() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_SimilarOperate_Return::clear_has_getdiamonds() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_SimilarOperate_Return::clear_getdiamonds() {
  getdiamonds_ = 0;
  clear_has_getdiamonds();
}
inline ::google::protobuf::int32 GM_SimilarOperate_Return::getdiamonds() const {
  return getdiamonds_;
}
inline void GM_SimilarOperate_Return::set_getdiamonds(::google::protobuf::int32 value) {
  set_has_getdiamonds();
  getdiamonds_ = value;
}

// optional int32 objectid = 4;
inline bool GM_SimilarOperate_Return::has_objectid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_SimilarOperate_Return::set_has_objectid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_SimilarOperate_Return::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_SimilarOperate_Return::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_SimilarOperate_Return::objectid() const {
  return objectid_;
}
inline void GM_SimilarOperate_Return::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// optional int32 objectnum = 5;
inline bool GM_SimilarOperate_Return::has_objectnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_SimilarOperate_Return::set_has_objectnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_SimilarOperate_Return::clear_has_objectnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_SimilarOperate_Return::clear_objectnum() {
  objectnum_ = 0;
  clear_has_objectnum();
}
inline ::google::protobuf::int32 GM_SimilarOperate_Return::objectnum() const {
  return objectnum_;
}
inline void GM_SimilarOperate_Return::set_objectnum(::google::protobuf::int32 value) {
  set_has_objectnum();
  objectnum_ = value;
}

// optional int32 canHideActivity = 6;
inline bool GM_SimilarOperate_Return::has_canhideactivity() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_SimilarOperate_Return::set_has_canhideactivity() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_SimilarOperate_Return::clear_has_canhideactivity() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_SimilarOperate_Return::clear_canhideactivity() {
  canhideactivity_ = 0;
  clear_has_canhideactivity();
}
inline ::google::protobuf::int32 GM_SimilarOperate_Return::canhideactivity() const {
  return canhideactivity_;
}
inline void GM_SimilarOperate_Return::set_canhideactivity(::google::protobuf::int32 value) {
  set_has_canhideactivity();
  canhideactivity_ = value;
}

// optional int32 celeType = 7;
inline bool GM_SimilarOperate_Return::has_celetype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_SimilarOperate_Return::set_has_celetype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_SimilarOperate_Return::clear_has_celetype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_SimilarOperate_Return::clear_celetype() {
  celetype_ = 0;
  clear_has_celetype();
}
inline ::google::protobuf::int32 GM_SimilarOperate_Return::celetype() const {
  return celetype_;
}
inline void GM_SimilarOperate_Return::set_celetype(::google::protobuf::int32 value) {
  set_has_celetype();
  celetype_ = value;
}

// optional int32 coldTime = 8;
inline bool GM_SimilarOperate_Return::has_coldtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_SimilarOperate_Return::set_has_coldtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_SimilarOperate_Return::clear_has_coldtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_SimilarOperate_Return::clear_coldtime() {
  coldtime_ = 0;
  clear_has_coldtime();
}
inline ::google::protobuf::int32 GM_SimilarOperate_Return::coldtime() const {
  return coldtime_;
}
inline void GM_SimilarOperate_Return::set_coldtime(::google::protobuf::int32 value) {
  set_has_coldtime();
  coldtime_ = value;
}

// -------------------------------------------------------------------

// GM_FireWork_Request

// required int32 firekind = 1;
inline bool GM_FireWork_Request::has_firekind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_FireWork_Request::set_has_firekind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_FireWork_Request::clear_has_firekind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_FireWork_Request::clear_firekind() {
  firekind_ = 0;
  clear_has_firekind();
}
inline ::google::protobuf::int32 GM_FireWork_Request::firekind() const {
  return firekind_;
}
inline void GM_FireWork_Request::set_firekind(::google::protobuf::int32 value) {
  set_has_firekind();
  firekind_ = value;
}

// -------------------------------------------------------------------

// GM_BlessRank_Return

// required int32 myRank = 1;
inline bool GM_BlessRank_Return::has_myrank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_BlessRank_Return::set_has_myrank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_BlessRank_Return::clear_has_myrank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_BlessRank_Return::clear_myrank() {
  myrank_ = 0;
  clear_has_myrank();
}
inline ::google::protobuf::int32 GM_BlessRank_Return::myrank() const {
  return myrank_;
}
inline void GM_BlessRank_Return::set_myrank(::google::protobuf::int32 value) {
  set_has_myrank();
  myrank_ = value;
}

// optional int32 myBless = 2;
inline bool GM_BlessRank_Return::has_mybless() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_BlessRank_Return::set_has_mybless() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_BlessRank_Return::clear_has_mybless() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_BlessRank_Return::clear_mybless() {
  mybless_ = 0;
  clear_has_mybless();
}
inline ::google::protobuf::int32 GM_BlessRank_Return::mybless() const {
  return mybless_;
}
inline void GM_BlessRank_Return::set_mybless(::google::protobuf::int32 value) {
  set_has_mybless();
  mybless_ = value;
}

// repeated .RankItem item = 3;
inline int GM_BlessRank_Return::item_size() const {
  return item_.size();
}
inline void GM_BlessRank_Return::clear_item() {
  item_.Clear();
}
inline const ::RankItem& GM_BlessRank_Return::item(int index) const {
  return item_.Get(index);
}
inline ::RankItem* GM_BlessRank_Return::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::RankItem* GM_BlessRank_Return::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RankItem >&
GM_BlessRank_Return::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::RankItem >*
GM_BlessRank_Return::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// RankItem

// required int32 rank = 1;
inline bool RankItem::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankItem::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankItem::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankItem::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 RankItem::rank() const {
  return rank_;
}
inline void RankItem::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// required string name = 2;
inline bool RankItem::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankItem::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankItem::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RankItem::name() const {
  return *name_;
}
inline void RankItem::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RankItem::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RankItem::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RankItem::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RankItem::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RankItem::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 getCount = 3;
inline bool RankItem::has_getcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankItem::set_has_getcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankItem::clear_has_getcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankItem::clear_getcount() {
  getcount_ = 0;
  clear_has_getcount();
}
inline ::google::protobuf::int32 RankItem::getcount() const {
  return getcount_;
}
inline void RankItem::set_getcount(::google::protobuf::int32 value) {
  set_has_getcount();
  getcount_ = value;
}

// -------------------------------------------------------------------

// GM_TimeAndCount_Return

// required int32 count = 1;
inline bool GM_TimeAndCount_Return::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_TimeAndCount_Return::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_TimeAndCount_Return::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_TimeAndCount_Return::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GM_TimeAndCount_Return::count() const {
  return count_;
}
inline void GM_TimeAndCount_Return::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// optional int32 lastTime = 2;
inline bool GM_TimeAndCount_Return::has_lasttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_TimeAndCount_Return::set_has_lasttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_TimeAndCount_Return::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_TimeAndCount_Return::clear_lasttime() {
  lasttime_ = 0;
  clear_has_lasttime();
}
inline ::google::protobuf::int32 GM_TimeAndCount_Return::lasttime() const {
  return lasttime_;
}
inline void GM_TimeAndCount_Return::set_lasttime(::google::protobuf::int32 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// optional int32 isCompOnline = 3;
inline bool GM_TimeAndCount_Return::has_iscomponline() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_TimeAndCount_Return::set_has_iscomponline() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_TimeAndCount_Return::clear_has_iscomponline() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_TimeAndCount_Return::clear_iscomponline() {
  iscomponline_ = 0;
  clear_has_iscomponline();
}
inline ::google::protobuf::int32 GM_TimeAndCount_Return::iscomponline() const {
  return iscomponline_;
}
inline void GM_TimeAndCount_Return::set_iscomponline(::google::protobuf::int32 value) {
  set_has_iscomponline();
  iscomponline_ = value;
}

// -------------------------------------------------------------------

// GM_ProcessData_Request

// required int32 lastTime = 1;
inline bool GM_ProcessData_Request::has_lasttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ProcessData_Request::set_has_lasttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ProcessData_Request::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ProcessData_Request::clear_lasttime() {
  lasttime_ = 0;
  clear_has_lasttime();
}
inline ::google::protobuf::int32 GM_ProcessData_Request::lasttime() const {
  return lasttime_;
}
inline void GM_ProcessData_Request::set_lasttime(::google::protobuf::int32 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// optional int32 process = 2;
inline bool GM_ProcessData_Request::has_process() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_ProcessData_Request::set_has_process() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_ProcessData_Request::clear_has_process() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_ProcessData_Request::clear_process() {
  process_ = 0;
  clear_has_process();
}
inline ::google::protobuf::int32 GM_ProcessData_Request::process() const {
  return process_;
}
inline void GM_ProcessData_Request::set_process(::google::protobuf::int32 value) {
  set_has_process();
  process_ = value;
}

// repeated .ColdTime item = 3;
inline int GM_ProcessData_Request::item_size() const {
  return item_.size();
}
inline void GM_ProcessData_Request::clear_item() {
  item_.Clear();
}
inline const ::ColdTime& GM_ProcessData_Request::item(int index) const {
  return item_.Get(index);
}
inline ::ColdTime* GM_ProcessData_Request::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::ColdTime* GM_ProcessData_Request::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ColdTime >&
GM_ProcessData_Request::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::ColdTime >*
GM_ProcessData_Request::mutable_item() {
  return &item_;
}

// optional int32 man = 4;
inline bool GM_ProcessData_Request::has_man() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_ProcessData_Request::set_has_man() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_ProcessData_Request::clear_has_man() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_ProcessData_Request::clear_man() {
  man_ = 0;
  clear_has_man();
}
inline ::google::protobuf::int32 GM_ProcessData_Request::man() const {
  return man_;
}
inline void GM_ProcessData_Request::set_man(::google::protobuf::int32 value) {
  set_has_man();
  man_ = value;
}

// optional int32 woman = 5;
inline bool GM_ProcessData_Request::has_woman() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_ProcessData_Request::set_has_woman() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_ProcessData_Request::clear_has_woman() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_ProcessData_Request::clear_woman() {
  woman_ = 0;
  clear_has_woman();
}
inline ::google::protobuf::int32 GM_ProcessData_Request::woman() const {
  return woman_;
}
inline void GM_ProcessData_Request::set_woman(::google::protobuf::int32 value) {
  set_has_woman();
  woman_ = value;
}

// optional int32 hasGetRed = 6;
inline bool GM_ProcessData_Request::has_hasgetred() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_ProcessData_Request::set_has_hasgetred() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_ProcessData_Request::clear_has_hasgetred() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_ProcessData_Request::clear_hasgetred() {
  hasgetred_ = 0;
  clear_has_hasgetred();
}
inline ::google::protobuf::int32 GM_ProcessData_Request::hasgetred() const {
  return hasgetred_;
}
inline void GM_ProcessData_Request::set_hasgetred(::google::protobuf::int32 value) {
  set_has_hasgetred();
  hasgetred_ = value;
}

// optional int32 isProhibit = 7;
inline bool GM_ProcessData_Request::has_isprohibit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_ProcessData_Request::set_has_isprohibit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_ProcessData_Request::clear_has_isprohibit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_ProcessData_Request::clear_isprohibit() {
  isprohibit_ = 0;
  clear_has_isprohibit();
}
inline ::google::protobuf::int32 GM_ProcessData_Request::isprohibit() const {
  return isprohibit_;
}
inline void GM_ProcessData_Request::set_isprohibit(::google::protobuf::int32 value) {
  set_has_isprohibit();
  isprohibit_ = value;
}

// -------------------------------------------------------------------

// ColdTime

// optional int32 celeType = 1;
inline bool ColdTime::has_celetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ColdTime::set_has_celetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ColdTime::clear_has_celetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ColdTime::clear_celetype() {
  celetype_ = 0;
  clear_has_celetype();
}
inline ::google::protobuf::int32 ColdTime::celetype() const {
  return celetype_;
}
inline void ColdTime::set_celetype(::google::protobuf::int32 value) {
  set_has_celetype();
  celetype_ = value;
}

// optional int32 coldtime = 2;
inline bool ColdTime::has_coldtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ColdTime::set_has_coldtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ColdTime::clear_has_coldtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ColdTime::clear_coldtime() {
  coldtime_ = 0;
  clear_has_coldtime();
}
inline ::google::protobuf::int32 ColdTime::coldtime() const {
  return coldtime_;
}
inline void ColdTime::set_coldtime(::google::protobuf::int32 value) {
  set_has_coldtime();
  coldtime_ = value;
}

// optional int32 hasCount = 3;
inline bool ColdTime::has_hascount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ColdTime::set_has_hascount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ColdTime::clear_has_hascount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ColdTime::clear_hascount() {
  hascount_ = 0;
  clear_has_hascount();
}
inline ::google::protobuf::int32 ColdTime::hascount() const {
  return hascount_;
}
inline void ColdTime::set_hascount(::google::protobuf::int32 value) {
  set_has_hascount();
  hascount_ = value;
}

// -------------------------------------------------------------------

// GM_BigMeal_Request

// required int32 eatValue = 1;
inline bool GM_BigMeal_Request::has_eatvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_BigMeal_Request::set_has_eatvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_BigMeal_Request::clear_has_eatvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_BigMeal_Request::clear_eatvalue() {
  eatvalue_ = 0;
  clear_has_eatvalue();
}
inline ::google::protobuf::int32 GM_BigMeal_Request::eatvalue() const {
  return eatvalue_;
}
inline void GM_BigMeal_Request::set_eatvalue(::google::protobuf::int32 value) {
  set_has_eatvalue();
  eatvalue_ = value;
}

// -------------------------------------------------------------------

// GM_BigMeal_Return

// required int32 result = 1;
inline bool GM_BigMeal_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_BigMeal_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_BigMeal_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_BigMeal_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_BigMeal_Return::result() const {
  return result_;
}
inline void GM_BigMeal_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 coldTime = 2;
inline bool GM_BigMeal_Return::has_coldtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_BigMeal_Return::set_has_coldtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_BigMeal_Return::clear_has_coldtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_BigMeal_Return::clear_coldtime() {
  coldtime_ = 0;
  clear_has_coldtime();
}
inline ::google::protobuf::int32 GM_BigMeal_Return::coldtime() const {
  return coldtime_;
}
inline void GM_BigMeal_Return::set_coldtime(::google::protobuf::int32 value) {
  set_has_coldtime();
  coldtime_ = value;
}

// optional int32 objectid = 3;
inline bool GM_BigMeal_Return::has_objectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_BigMeal_Return::set_has_objectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_BigMeal_Return::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_BigMeal_Return::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_BigMeal_Return::objectid() const {
  return objectid_;
}
inline void GM_BigMeal_Return::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// optional int32 objectnum = 4;
inline bool GM_BigMeal_Return::has_objectnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_BigMeal_Return::set_has_objectnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_BigMeal_Return::clear_has_objectnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_BigMeal_Return::clear_objectnum() {
  objectnum_ = 0;
  clear_has_objectnum();
}
inline ::google::protobuf::int32 GM_BigMeal_Return::objectnum() const {
  return objectnum_;
}
inline void GM_BigMeal_Return::set_objectnum(::google::protobuf::int32 value) {
  set_has_objectnum();
  objectnum_ = value;
}

// -------------------------------------------------------------------

// GM_SlotMachineObject_Return

// repeated .SlotMachineObject item = 1;
inline int GM_SlotMachineObject_Return::item_size() const {
  return item_.size();
}
inline void GM_SlotMachineObject_Return::clear_item() {
  item_.Clear();
}
inline const ::SlotMachineObject& GM_SlotMachineObject_Return::item(int index) const {
  return item_.Get(index);
}
inline ::SlotMachineObject* GM_SlotMachineObject_Return::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::SlotMachineObject* GM_SlotMachineObject_Return::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SlotMachineObject >&
GM_SlotMachineObject_Return::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::SlotMachineObject >*
GM_SlotMachineObject_Return::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// SlotMachineObject

// required int32 place = 1;
inline bool SlotMachineObject::has_place() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SlotMachineObject::set_has_place() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SlotMachineObject::clear_has_place() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SlotMachineObject::clear_place() {
  place_ = 0;
  clear_has_place();
}
inline ::google::protobuf::int32 SlotMachineObject::place() const {
  return place_;
}
inline void SlotMachineObject::set_place(::google::protobuf::int32 value) {
  set_has_place();
  place_ = value;
}

// required int32 objectid = 2;
inline bool SlotMachineObject::has_objectid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SlotMachineObject::set_has_objectid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SlotMachineObject::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SlotMachineObject::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 SlotMachineObject::objectid() const {
  return objectid_;
}
inline void SlotMachineObject::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// required int32 objectnum = 3;
inline bool SlotMachineObject::has_objectnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SlotMachineObject::set_has_objectnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SlotMachineObject::clear_has_objectnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SlotMachineObject::clear_objectnum() {
  objectnum_ = 0;
  clear_has_objectnum();
}
inline ::google::protobuf::int32 SlotMachineObject::objectnum() const {
  return objectnum_;
}
inline void SlotMachineObject::set_objectnum(::google::protobuf::int32 value) {
  set_has_objectnum();
  objectnum_ = value;
}

// -------------------------------------------------------------------

// GM_SlotTurn_Return

// required int32 place = 1;
inline bool GM_SlotTurn_Return::has_place() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_SlotTurn_Return::set_has_place() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_SlotTurn_Return::clear_has_place() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_SlotTurn_Return::clear_place() {
  place_ = 0;
  clear_has_place();
}
inline ::google::protobuf::int32 GM_SlotTurn_Return::place() const {
  return place_;
}
inline void GM_SlotTurn_Return::set_place(::google::protobuf::int32 value) {
  set_has_place();
  place_ = value;
}

// -------------------------------------------------------------------

// GM_ObjectSee_Return

// repeated .ObjectData item = 1;
inline int GM_ObjectSee_Return::item_size() const {
  return item_.size();
}
inline void GM_ObjectSee_Return::clear_item() {
  item_.Clear();
}
inline const ::ObjectData& GM_ObjectSee_Return::item(int index) const {
  return item_.Get(index);
}
inline ::ObjectData* GM_ObjectSee_Return::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::ObjectData* GM_ObjectSee_Return::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ObjectData >&
GM_ObjectSee_Return::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::ObjectData >*
GM_ObjectSee_Return::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// ObjectData

// required int32 objectid = 1;
inline bool ObjectData::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectData::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjectData::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjectData::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 ObjectData::objectid() const {
  return objectid_;
}
inline void ObjectData::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// required int32 objectnum = 2;
inline bool ObjectData::has_objectnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectData::set_has_objectnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ObjectData::clear_has_objectnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ObjectData::clear_objectnum() {
  objectnum_ = 0;
  clear_has_objectnum();
}
inline ::google::protobuf::int32 ObjectData::objectnum() const {
  return objectnum_;
}
inline void ObjectData::set_objectnum(::google::protobuf::int32 value) {
  set_has_objectnum();
  objectnum_ = value;
}

// -------------------------------------------------------------------

// InstanceInviteFriend

// repeated int32 friendid = 1;
inline int InstanceInviteFriend::friendid_size() const {
  return friendid_.size();
}
inline void InstanceInviteFriend::clear_friendid() {
  friendid_.Clear();
}
inline ::google::protobuf::int32 InstanceInviteFriend::friendid(int index) const {
  return friendid_.Get(index);
}
inline void InstanceInviteFriend::set_friendid(int index, ::google::protobuf::int32 value) {
  friendid_.Set(index, value);
}
inline void InstanceInviteFriend::add_friendid(::google::protobuf::int32 value) {
  friendid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
InstanceInviteFriend::friendid() const {
  return friendid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
InstanceInviteFriend::mutable_friendid() {
  return &friendid_;
}

// -------------------------------------------------------------------

// GMKickOutRequest

// required int32 roleid = 1;
inline bool GMKickOutRequest::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMKickOutRequest::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMKickOutRequest::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMKickOutRequest::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GMKickOutRequest::roleid() const {
  return roleid_;
}
inline void GMKickOutRequest::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// GMReserchDataRequest

// required string name = 1;
inline bool GMReserchDataRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMReserchDataRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMReserchDataRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMReserchDataRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GMReserchDataRequest::name() const {
  return *name_;
}
inline void GMReserchDataRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GMReserchDataRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GMReserchDataRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMReserchDataRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GMReserchDataRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMReserchDataRequest::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GMReserchDataReturn

// repeated .RoleData item = 1;
inline int GMReserchDataReturn::item_size() const {
  return item_.size();
}
inline void GMReserchDataReturn::clear_item() {
  item_.Clear();
}
inline const ::RoleData& GMReserchDataReturn::item(int index) const {
  return item_.Get(index);
}
inline ::RoleData* GMReserchDataReturn::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::RoleData* GMReserchDataReturn::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RoleData >&
GMReserchDataReturn::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::RoleData >*
GMReserchDataReturn::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// RoleData

// required int32 isFriend = 1;
inline bool RoleData::has_isfriend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleData::set_has_isfriend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleData::clear_has_isfriend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleData::clear_isfriend() {
  isfriend_ = 0;
  clear_has_isfriend();
}
inline ::google::protobuf::int32 RoleData::isfriend() const {
  return isfriend_;
}
inline void RoleData::set_isfriend(::google::protobuf::int32 value) {
  set_has_isfriend();
  isfriend_ = value;
}

// required int32 roleid = 2;
inline bool RoleData::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleData::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleData::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleData::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 RoleData::roleid() const {
  return roleid_;
}
inline void RoleData::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional string name = 3;
inline bool RoleData::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleData::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleData::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RoleData::name() const {
  return *name_;
}
inline void RoleData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RoleData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GMProhibitRequest

// required int32 kind = 1;
inline bool GMProhibitRequest::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMProhibitRequest::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMProhibitRequest::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMProhibitRequest::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 GMProhibitRequest::kind() const {
  return kind_;
}
inline void GMProhibitRequest::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// -------------------------------------------------------------------

// GMManagerProceeReturn

// required int32 result = 1;
inline bool GMManagerProceeReturn::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMManagerProceeReturn::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMManagerProceeReturn::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMManagerProceeReturn::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GMManagerProceeReturn::result() const {
  return result_;
}
inline void GMManagerProceeReturn::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 roleid = 2;
inline bool GMManagerProceeReturn::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMManagerProceeReturn::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMManagerProceeReturn::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMManagerProceeReturn::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GMManagerProceeReturn::roleid() const {
  return roleid_;
}
inline void GMManagerProceeReturn::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// GMWeddingChat

// required int32 roleId = 1;
inline bool GMWeddingChat::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMWeddingChat::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMWeddingChat::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMWeddingChat::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GMWeddingChat::roleid() const {
  return roleid_;
}
inline void GMWeddingChat::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional string name = 3;
inline bool GMWeddingChat::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMWeddingChat::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMWeddingChat::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMWeddingChat::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GMWeddingChat::name() const {
  return *name_;
}
inline void GMWeddingChat::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GMWeddingChat::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GMWeddingChat::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMWeddingChat::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GMWeddingChat::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMWeddingChat::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 vip = 4;
inline bool GMWeddingChat::has_vip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMWeddingChat::set_has_vip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMWeddingChat::clear_has_vip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMWeddingChat::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 GMWeddingChat::vip() const {
  return vip_;
}
inline void GMWeddingChat::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
}

// required string word = 5;
inline bool GMWeddingChat::has_word() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMWeddingChat::set_has_word() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMWeddingChat::clear_has_word() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMWeddingChat::clear_word() {
  if (word_ != &::google::protobuf::internal::kEmptyString) {
    word_->clear();
  }
  clear_has_word();
}
inline const ::std::string& GMWeddingChat::word() const {
  return *word_;
}
inline void GMWeddingChat::set_word(const ::std::string& value) {
  set_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    word_ = new ::std::string;
  }
  word_->assign(value);
}
inline void GMWeddingChat::set_word(const char* value) {
  set_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    word_ = new ::std::string;
  }
  word_->assign(value);
}
inline void GMWeddingChat::set_word(const char* value, size_t size) {
  set_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    word_ = new ::std::string;
  }
  word_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMWeddingChat::mutable_word() {
  set_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    word_ = new ::std::string;
  }
  return word_;
}
inline ::std::string* GMWeddingChat::release_word() {
  clear_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = word_;
    word_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMWeddingChat::set_allocated_word(::std::string* word) {
  if (word_ != &::google::protobuf::internal::kEmptyString) {
    delete word_;
  }
  if (word) {
    set_has_word();
    word_ = word;
  } else {
    clear_has_word();
    word_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string receName = 6;
inline bool GMWeddingChat::has_recename() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GMWeddingChat::set_has_recename() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GMWeddingChat::clear_has_recename() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GMWeddingChat::clear_recename() {
  if (recename_ != &::google::protobuf::internal::kEmptyString) {
    recename_->clear();
  }
  clear_has_recename();
}
inline const ::std::string& GMWeddingChat::recename() const {
  return *recename_;
}
inline void GMWeddingChat::set_recename(const ::std::string& value) {
  set_has_recename();
  if (recename_ == &::google::protobuf::internal::kEmptyString) {
    recename_ = new ::std::string;
  }
  recename_->assign(value);
}
inline void GMWeddingChat::set_recename(const char* value) {
  set_has_recename();
  if (recename_ == &::google::protobuf::internal::kEmptyString) {
    recename_ = new ::std::string;
  }
  recename_->assign(value);
}
inline void GMWeddingChat::set_recename(const char* value, size_t size) {
  set_has_recename();
  if (recename_ == &::google::protobuf::internal::kEmptyString) {
    recename_ = new ::std::string;
  }
  recename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMWeddingChat::mutable_recename() {
  set_has_recename();
  if (recename_ == &::google::protobuf::internal::kEmptyString) {
    recename_ = new ::std::string;
  }
  return recename_;
}
inline ::std::string* GMWeddingChat::release_recename() {
  clear_has_recename();
  if (recename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = recename_;
    recename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMWeddingChat::set_allocated_recename(::std::string* recename) {
  if (recename_ != &::google::protobuf::internal::kEmptyString) {
    delete recename_;
  }
  if (recename) {
    set_has_recename();
    recename_ = recename;
  } else {
    clear_has_recename();
    recename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 repeatTimes = 7;
inline bool GMWeddingChat::has_repeattimes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GMWeddingChat::set_has_repeattimes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GMWeddingChat::clear_has_repeattimes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GMWeddingChat::clear_repeattimes() {
  repeattimes_ = 0u;
  clear_has_repeattimes();
}
inline ::google::protobuf::uint32 GMWeddingChat::repeattimes() const {
  return repeattimes_;
}
inline void GMWeddingChat::set_repeattimes(::google::protobuf::uint32 value) {
  set_has_repeattimes();
  repeattimes_ = value;
}

// optional uint32 intervalTime = 8;
inline bool GMWeddingChat::has_intervaltime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GMWeddingChat::set_has_intervaltime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GMWeddingChat::clear_has_intervaltime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GMWeddingChat::clear_intervaltime() {
  intervaltime_ = 0u;
  clear_has_intervaltime();
}
inline ::google::protobuf::uint32 GMWeddingChat::intervaltime() const {
  return intervaltime_;
}
inline void GMWeddingChat::set_intervaltime(::google::protobuf::uint32 value) {
  set_has_intervaltime();
  intervaltime_ = value;
}

// optional int32 receroleid = 9;
inline bool GMWeddingChat::has_receroleid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GMWeddingChat::set_has_receroleid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GMWeddingChat::clear_has_receroleid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GMWeddingChat::clear_receroleid() {
  receroleid_ = 0;
  clear_has_receroleid();
}
inline ::google::protobuf::int32 GMWeddingChat::receroleid() const {
  return receroleid_;
}
inline void GMWeddingChat::set_receroleid(::google::protobuf::int32 value) {
  set_has_receroleid();
  receroleid_ = value;
}

// optional int32 recevip = 10;
inline bool GMWeddingChat::has_recevip() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GMWeddingChat::set_has_recevip() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GMWeddingChat::clear_has_recevip() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GMWeddingChat::clear_recevip() {
  recevip_ = 0;
  clear_has_recevip();
}
inline ::google::protobuf::int32 GMWeddingChat::recevip() const {
  return recevip_;
}
inline void GMWeddingChat::set_recevip(::google::protobuf::int32 value) {
  set_has_recevip();
  recevip_ = value;
}

// optional int32 kind = 11;
inline bool GMWeddingChat::has_kind() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GMWeddingChat::set_has_kind() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GMWeddingChat::clear_has_kind() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GMWeddingChat::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 GMWeddingChat::kind() const {
  return kind_;
}
inline void GMWeddingChat::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// optional int32 profession = 12;
inline bool GMWeddingChat::has_profession() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GMWeddingChat::set_has_profession() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GMWeddingChat::clear_has_profession() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GMWeddingChat::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::google::protobuf::int32 GMWeddingChat::profession() const {
  return profession_;
}
inline void GMWeddingChat::set_profession(::google::protobuf::int32 value) {
  set_has_profession();
  profession_ = value;
}

// -------------------------------------------------------------------

// GMGiftRequest

// required int32 blessValue = 1;
inline bool GMGiftRequest::has_blessvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMGiftRequest::set_has_blessvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMGiftRequest::clear_has_blessvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMGiftRequest::clear_blessvalue() {
  blessvalue_ = 0;
  clear_has_blessvalue();
}
inline ::google::protobuf::int32 GMGiftRequest::blessvalue() const {
  return blessvalue_;
}
inline void GMGiftRequest::set_blessvalue(::google::protobuf::int32 value) {
  set_has_blessvalue();
  blessvalue_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_wedding_2etxt__INCLUDED
