// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: commonmove.txt

#ifndef PROTOBUF_commonmove_2etxt__INCLUDED
#define PROTOBUF_commonmove_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_commonmove_2etxt();
void protobuf_AssignDesc_commonmove_2etxt();
void protobuf_ShutdownFile_commonmove_2etxt();

class GM_RoleShowChange;
class GM_RoleTitleChange;
class GM_RoleGangChange;
class GM_VIPChange;
class GM_NetRoleAction;
class GM_MpChangeNotify;
class GM_RequestResetPos;
class GM_ReturnResetPos;
class GM_RoleNameChange;
class GM_RoleTopGradeChange;

// ===================================================================

class GM_RoleShowChange : public ::google::protobuf::Message {
 public:
  GM_RoleShowChange();
  virtual ~GM_RoleShowChange();

  GM_RoleShowChange(const GM_RoleShowChange& from);

  inline GM_RoleShowChange& operator=(const GM_RoleShowChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RoleShowChange& default_instance();

  void Swap(GM_RoleShowChange* other);

  // implements Message ----------------------------------------------

  GM_RoleShowChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RoleShowChange& from);
  void MergeFrom(const GM_RoleShowChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 equippos = 2;
  inline bool has_equippos() const;
  inline void clear_equippos();
  static const int kEquipposFieldNumber = 2;
  inline ::google::protobuf::int32 equippos() const;
  inline void set_equippos(::google::protobuf::int32 value);

  // required int32 equipid = 3;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 3;
  inline ::google::protobuf::int32 equipid() const;
  inline void set_equipid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_RoleShowChange)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_equippos();
  inline void clear_has_equippos();
  inline void set_has_equipid();
  inline void clear_has_equipid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 equippos_;
  ::google::protobuf::int32 equipid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_commonmove_2etxt();
  friend void protobuf_AssignDesc_commonmove_2etxt();
  friend void protobuf_ShutdownFile_commonmove_2etxt();

  void InitAsDefaultInstance();
  static GM_RoleShowChange* default_instance_;
};
// -------------------------------------------------------------------

class GM_RoleTitleChange : public ::google::protobuf::Message {
 public:
  GM_RoleTitleChange();
  virtual ~GM_RoleTitleChange();

  GM_RoleTitleChange(const GM_RoleTitleChange& from);

  inline GM_RoleTitleChange& operator=(const GM_RoleTitleChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RoleTitleChange& default_instance();

  void Swap(GM_RoleTitleChange* other);

  // implements Message ----------------------------------------------

  GM_RoleTitleChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RoleTitleChange& from);
  void MergeFrom(const GM_RoleTitleChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 titleId = 2;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIdFieldNumber = 2;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_RoleTitleChange)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_titleid();
  inline void clear_has_titleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 titleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_commonmove_2etxt();
  friend void protobuf_AssignDesc_commonmove_2etxt();
  friend void protobuf_ShutdownFile_commonmove_2etxt();

  void InitAsDefaultInstance();
  static GM_RoleTitleChange* default_instance_;
};
// -------------------------------------------------------------------

class GM_RoleGangChange : public ::google::protobuf::Message {
 public:
  GM_RoleGangChange();
  virtual ~GM_RoleGangChange();

  GM_RoleGangChange(const GM_RoleGangChange& from);

  inline GM_RoleGangChange& operator=(const GM_RoleGangChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RoleGangChange& default_instance();

  void Swap(GM_RoleGangChange* other);

  // implements Message ----------------------------------------------

  GM_RoleGangChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RoleGangChange& from);
  void MergeFrom(const GM_RoleGangChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required string gangName = 2;
  inline bool has_gangname() const;
  inline void clear_gangname();
  static const int kGangNameFieldNumber = 2;
  inline const ::std::string& gangname() const;
  inline void set_gangname(const ::std::string& value);
  inline void set_gangname(const char* value);
  inline void set_gangname(const char* value, size_t size);
  inline ::std::string* mutable_gangname();
  inline ::std::string* release_gangname();
  inline void set_allocated_gangname(::std::string* gangname);

  // @@protoc_insertion_point(class_scope:GM_RoleGangChange)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_gangname();
  inline void clear_has_gangname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* gangname_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_commonmove_2etxt();
  friend void protobuf_AssignDesc_commonmove_2etxt();
  friend void protobuf_ShutdownFile_commonmove_2etxt();

  void InitAsDefaultInstance();
  static GM_RoleGangChange* default_instance_;
};
// -------------------------------------------------------------------

class GM_VIPChange : public ::google::protobuf::Message {
 public:
  GM_VIPChange();
  virtual ~GM_VIPChange();

  GM_VIPChange(const GM_VIPChange& from);

  inline GM_VIPChange& operator=(const GM_VIPChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_VIPChange& default_instance();

  void Swap(GM_VIPChange* other);

  // implements Message ----------------------------------------------

  GM_VIPChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_VIPChange& from);
  void MergeFrom(const GM_VIPChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 viplv = 2;
  inline bool has_viplv() const;
  inline void clear_viplv();
  static const int kViplvFieldNumber = 2;
  inline ::google::protobuf::int32 viplv() const;
  inline void set_viplv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_VIPChange)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_viplv();
  inline void clear_has_viplv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 viplv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_commonmove_2etxt();
  friend void protobuf_AssignDesc_commonmove_2etxt();
  friend void protobuf_ShutdownFile_commonmove_2etxt();

  void InitAsDefaultInstance();
  static GM_VIPChange* default_instance_;
};
// -------------------------------------------------------------------

class GM_NetRoleAction : public ::google::protobuf::Message {
 public:
  GM_NetRoleAction();
  virtual ~GM_NetRoleAction();

  GM_NetRoleAction(const GM_NetRoleAction& from);

  inline GM_NetRoleAction& operator=(const GM_NetRoleAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_NetRoleAction& default_instance();

  void Swap(GM_NetRoleAction* other);

  // implements Message ----------------------------------------------

  GM_NetRoleAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_NetRoleAction& from);
  void MergeFrom(const GM_NetRoleAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 motionType = 2;
  inline bool has_motiontype() const;
  inline void clear_motiontype();
  static const int kMotionTypeFieldNumber = 2;
  inline ::google::protobuf::int32 motiontype() const;
  inline void set_motiontype(::google::protobuf::int32 value);

  // optional float posX = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline float posx() const;
  inline void set_posx(float value);

  // optional float posZ = 5;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 5;
  inline float posz() const;
  inline void set_posz(float value);

  // optional float vecX = 6;
  inline bool has_vecx() const;
  inline void clear_vecx();
  static const int kVecXFieldNumber = 6;
  inline float vecx() const;
  inline void set_vecx(float value);

  // optional float vecZ = 7;
  inline bool has_vecz() const;
  inline void clear_vecz();
  static const int kVecZFieldNumber = 7;
  inline float vecz() const;
  inline void set_vecz(float value);

  // required int32 time = 8;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 8;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // required int32 sceneID = 9;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 9;
  inline ::google::protobuf::int32 sceneid() const;
  inline void set_sceneid(::google::protobuf::int32 value);

  // required int32 type = 10;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 10;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 isCommand = 11;
  inline bool has_iscommand() const;
  inline void clear_iscommand();
  static const int kIsCommandFieldNumber = 11;
  inline ::google::protobuf::int32 iscommand() const;
  inline void set_iscommand(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_NetRoleAction)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_motiontype();
  inline void clear_has_motiontype();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posz();
  inline void clear_has_posz();
  inline void set_has_vecx();
  inline void clear_has_vecx();
  inline void set_has_vecz();
  inline void clear_has_vecz();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_iscommand();
  inline void clear_has_iscommand();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 motiontype_;
  float posx_;
  float posz_;
  float vecx_;
  float vecz_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 sceneid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 iscommand_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_commonmove_2etxt();
  friend void protobuf_AssignDesc_commonmove_2etxt();
  friend void protobuf_ShutdownFile_commonmove_2etxt();

  void InitAsDefaultInstance();
  static GM_NetRoleAction* default_instance_;
};
// -------------------------------------------------------------------

class GM_MpChangeNotify : public ::google::protobuf::Message {
 public:
  GM_MpChangeNotify();
  virtual ~GM_MpChangeNotify();

  GM_MpChangeNotify(const GM_MpChangeNotify& from);

  inline GM_MpChangeNotify& operator=(const GM_MpChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_MpChangeNotify& default_instance();

  void Swap(GM_MpChangeNotify* other);

  // implements Message ----------------------------------------------

  GM_MpChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_MpChangeNotify& from);
  void MergeFrom(const GM_MpChangeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required int32 roleType = 2;
  inline bool has_roletype() const;
  inline void clear_roletype();
  static const int kRoleTypeFieldNumber = 2;
  inline ::google::protobuf::int32 roletype() const;
  inline void set_roletype(::google::protobuf::int32 value);

  // required int32 mpChange = 3;
  inline bool has_mpchange() const;
  inline void clear_mpchange();
  static const int kMpChangeFieldNumber = 3;
  inline ::google::protobuf::int32 mpchange() const;
  inline void set_mpchange(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_MpChangeNotify)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_roletype();
  inline void clear_has_roletype();
  inline void set_has_mpchange();
  inline void clear_has_mpchange();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 roletype_;
  ::google::protobuf::int32 mpchange_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_commonmove_2etxt();
  friend void protobuf_AssignDesc_commonmove_2etxt();
  friend void protobuf_ShutdownFile_commonmove_2etxt();

  void InitAsDefaultInstance();
  static GM_MpChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

class GM_RequestResetPos : public ::google::protobuf::Message {
 public:
  GM_RequestResetPos();
  virtual ~GM_RequestResetPos();

  GM_RequestResetPos(const GM_RequestResetPos& from);

  inline GM_RequestResetPos& operator=(const GM_RequestResetPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RequestResetPos& default_instance();

  void Swap(GM_RequestResetPos* other);

  // implements Message ----------------------------------------------

  GM_RequestResetPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RequestResetPos& from);
  void MergeFrom(const GM_RequestResetPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sceneID = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 1;
  inline ::google::protobuf::int32 sceneid() const;
  inline void set_sceneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_RequestResetPos)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 sceneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_commonmove_2etxt();
  friend void protobuf_AssignDesc_commonmove_2etxt();
  friend void protobuf_ShutdownFile_commonmove_2etxt();

  void InitAsDefaultInstance();
  static GM_RequestResetPos* default_instance_;
};
// -------------------------------------------------------------------

class GM_ReturnResetPos : public ::google::protobuf::Message {
 public:
  GM_ReturnResetPos();
  virtual ~GM_ReturnResetPos();

  GM_ReturnResetPos(const GM_ReturnResetPos& from);

  inline GM_ReturnResetPos& operator=(const GM_ReturnResetPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ReturnResetPos& default_instance();

  void Swap(GM_ReturnResetPos* other);

  // implements Message ----------------------------------------------

  GM_ReturnResetPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ReturnResetPos& from);
  void MergeFrom(const GM_ReturnResetPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 posx = 1;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosxFieldNumber = 1;
  inline ::google::protobuf::int32 posx() const;
  inline void set_posx(::google::protobuf::int32 value);

  // required int32 posz = 2;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPoszFieldNumber = 2;
  inline ::google::protobuf::int32 posz() const;
  inline void set_posz(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_ReturnResetPos)
 private:
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posz();
  inline void clear_has_posz();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 posx_;
  ::google::protobuf::int32 posz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_commonmove_2etxt();
  friend void protobuf_AssignDesc_commonmove_2etxt();
  friend void protobuf_ShutdownFile_commonmove_2etxt();

  void InitAsDefaultInstance();
  static GM_ReturnResetPos* default_instance_;
};
// -------------------------------------------------------------------

class GM_RoleNameChange : public ::google::protobuf::Message {
 public:
  GM_RoleNameChange();
  virtual ~GM_RoleNameChange();

  GM_RoleNameChange(const GM_RoleNameChange& from);

  inline GM_RoleNameChange& operator=(const GM_RoleNameChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RoleNameChange& default_instance();

  void Swap(GM_RoleNameChange* other);

  // implements Message ----------------------------------------------

  GM_RoleNameChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RoleNameChange& from);
  void MergeFrom(const GM_RoleNameChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional string roleName = 2;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 2;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // @@protoc_insertion_point(class_scope:GM_RoleNameChange)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rolename_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_commonmove_2etxt();
  friend void protobuf_AssignDesc_commonmove_2etxt();
  friend void protobuf_ShutdownFile_commonmove_2etxt();

  void InitAsDefaultInstance();
  static GM_RoleNameChange* default_instance_;
};
// -------------------------------------------------------------------

class GM_RoleTopGradeChange : public ::google::protobuf::Message {
 public:
  GM_RoleTopGradeChange();
  virtual ~GM_RoleTopGradeChange();

  GM_RoleTopGradeChange(const GM_RoleTopGradeChange& from);

  inline GM_RoleTopGradeChange& operator=(const GM_RoleTopGradeChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RoleTopGradeChange& default_instance();

  void Swap(GM_RoleTopGradeChange* other);

  // implements Message ----------------------------------------------

  GM_RoleTopGradeChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RoleTopGradeChange& from);
  void MergeFrom(const GM_RoleTopGradeChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required int32 newgradelv = 2;
  inline bool has_newgradelv() const;
  inline void clear_newgradelv();
  static const int kNewgradelvFieldNumber = 2;
  inline ::google::protobuf::int32 newgradelv() const;
  inline void set_newgradelv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_RoleTopGradeChange)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_newgradelv();
  inline void clear_has_newgradelv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 newgradelv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_commonmove_2etxt();
  friend void protobuf_AssignDesc_commonmove_2etxt();
  friend void protobuf_ShutdownFile_commonmove_2etxt();

  void InitAsDefaultInstance();
  static GM_RoleTopGradeChange* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_RoleShowChange

// required int32 id = 1;
inline bool GM_RoleShowChange::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RoleShowChange::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RoleShowChange::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RoleShowChange::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_RoleShowChange::id() const {
  return id_;
}
inline void GM_RoleShowChange::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 equippos = 2;
inline bool GM_RoleShowChange::has_equippos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RoleShowChange::set_has_equippos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RoleShowChange::clear_has_equippos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RoleShowChange::clear_equippos() {
  equippos_ = 0;
  clear_has_equippos();
}
inline ::google::protobuf::int32 GM_RoleShowChange::equippos() const {
  return equippos_;
}
inline void GM_RoleShowChange::set_equippos(::google::protobuf::int32 value) {
  set_has_equippos();
  equippos_ = value;
}

// required int32 equipid = 3;
inline bool GM_RoleShowChange::has_equipid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_RoleShowChange::set_has_equipid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_RoleShowChange::clear_has_equipid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_RoleShowChange::clear_equipid() {
  equipid_ = 0;
  clear_has_equipid();
}
inline ::google::protobuf::int32 GM_RoleShowChange::equipid() const {
  return equipid_;
}
inline void GM_RoleShowChange::set_equipid(::google::protobuf::int32 value) {
  set_has_equipid();
  equipid_ = value;
}

// -------------------------------------------------------------------

// GM_RoleTitleChange

// required int32 id = 1;
inline bool GM_RoleTitleChange::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RoleTitleChange::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RoleTitleChange::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RoleTitleChange::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_RoleTitleChange::id() const {
  return id_;
}
inline void GM_RoleTitleChange::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 titleId = 2;
inline bool GM_RoleTitleChange::has_titleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RoleTitleChange::set_has_titleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RoleTitleChange::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RoleTitleChange::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 GM_RoleTitleChange::titleid() const {
  return titleid_;
}
inline void GM_RoleTitleChange::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
}

// -------------------------------------------------------------------

// GM_RoleGangChange

// required int32 id = 1;
inline bool GM_RoleGangChange::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RoleGangChange::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RoleGangChange::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RoleGangChange::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_RoleGangChange::id() const {
  return id_;
}
inline void GM_RoleGangChange::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required string gangName = 2;
inline bool GM_RoleGangChange::has_gangname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RoleGangChange::set_has_gangname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RoleGangChange::clear_has_gangname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RoleGangChange::clear_gangname() {
  if (gangname_ != &::google::protobuf::internal::kEmptyString) {
    gangname_->clear();
  }
  clear_has_gangname();
}
inline const ::std::string& GM_RoleGangChange::gangname() const {
  return *gangname_;
}
inline void GM_RoleGangChange::set_gangname(const ::std::string& value) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::kEmptyString) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(value);
}
inline void GM_RoleGangChange::set_gangname(const char* value) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::kEmptyString) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(value);
}
inline void GM_RoleGangChange::set_gangname(const char* value, size_t size) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::kEmptyString) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_RoleGangChange::mutable_gangname() {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::kEmptyString) {
    gangname_ = new ::std::string;
  }
  return gangname_;
}
inline ::std::string* GM_RoleGangChange::release_gangname() {
  clear_has_gangname();
  if (gangname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gangname_;
    gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_RoleGangChange::set_allocated_gangname(::std::string* gangname) {
  if (gangname_ != &::google::protobuf::internal::kEmptyString) {
    delete gangname_;
  }
  if (gangname) {
    set_has_gangname();
    gangname_ = gangname;
  } else {
    clear_has_gangname();
    gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GM_VIPChange

// required int32 id = 1;
inline bool GM_VIPChange::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_VIPChange::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_VIPChange::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_VIPChange::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_VIPChange::id() const {
  return id_;
}
inline void GM_VIPChange::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 viplv = 2;
inline bool GM_VIPChange::has_viplv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_VIPChange::set_has_viplv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_VIPChange::clear_has_viplv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_VIPChange::clear_viplv() {
  viplv_ = 0;
  clear_has_viplv();
}
inline ::google::protobuf::int32 GM_VIPChange::viplv() const {
  return viplv_;
}
inline void GM_VIPChange::set_viplv(::google::protobuf::int32 value) {
  set_has_viplv();
  viplv_ = value;
}

// -------------------------------------------------------------------

// GM_NetRoleAction

// required int32 id = 1;
inline bool GM_NetRoleAction::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_NetRoleAction::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_NetRoleAction::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_NetRoleAction::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_NetRoleAction::id() const {
  return id_;
}
inline void GM_NetRoleAction::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 motionType = 2;
inline bool GM_NetRoleAction::has_motiontype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_NetRoleAction::set_has_motiontype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_NetRoleAction::clear_has_motiontype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_NetRoleAction::clear_motiontype() {
  motiontype_ = 0;
  clear_has_motiontype();
}
inline ::google::protobuf::int32 GM_NetRoleAction::motiontype() const {
  return motiontype_;
}
inline void GM_NetRoleAction::set_motiontype(::google::protobuf::int32 value) {
  set_has_motiontype();
  motiontype_ = value;
}

// optional float posX = 4;
inline bool GM_NetRoleAction::has_posx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_NetRoleAction::set_has_posx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_NetRoleAction::clear_has_posx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_NetRoleAction::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float GM_NetRoleAction::posx() const {
  return posx_;
}
inline void GM_NetRoleAction::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// optional float posZ = 5;
inline bool GM_NetRoleAction::has_posz() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_NetRoleAction::set_has_posz() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_NetRoleAction::clear_has_posz() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_NetRoleAction::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline float GM_NetRoleAction::posz() const {
  return posz_;
}
inline void GM_NetRoleAction::set_posz(float value) {
  set_has_posz();
  posz_ = value;
}

// optional float vecX = 6;
inline bool GM_NetRoleAction::has_vecx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_NetRoleAction::set_has_vecx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_NetRoleAction::clear_has_vecx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_NetRoleAction::clear_vecx() {
  vecx_ = 0;
  clear_has_vecx();
}
inline float GM_NetRoleAction::vecx() const {
  return vecx_;
}
inline void GM_NetRoleAction::set_vecx(float value) {
  set_has_vecx();
  vecx_ = value;
}

// optional float vecZ = 7;
inline bool GM_NetRoleAction::has_vecz() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_NetRoleAction::set_has_vecz() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_NetRoleAction::clear_has_vecz() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_NetRoleAction::clear_vecz() {
  vecz_ = 0;
  clear_has_vecz();
}
inline float GM_NetRoleAction::vecz() const {
  return vecz_;
}
inline void GM_NetRoleAction::set_vecz(float value) {
  set_has_vecz();
  vecz_ = value;
}

// required int32 time = 8;
inline bool GM_NetRoleAction::has_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_NetRoleAction::set_has_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_NetRoleAction::clear_has_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_NetRoleAction::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 GM_NetRoleAction::time() const {
  return time_;
}
inline void GM_NetRoleAction::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// required int32 sceneID = 9;
inline bool GM_NetRoleAction::has_sceneid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_NetRoleAction::set_has_sceneid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_NetRoleAction::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_NetRoleAction::clear_sceneid() {
  sceneid_ = 0;
  clear_has_sceneid();
}
inline ::google::protobuf::int32 GM_NetRoleAction::sceneid() const {
  return sceneid_;
}
inline void GM_NetRoleAction::set_sceneid(::google::protobuf::int32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// required int32 type = 10;
inline bool GM_NetRoleAction::has_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_NetRoleAction::set_has_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_NetRoleAction::clear_has_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_NetRoleAction::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GM_NetRoleAction::type() const {
  return type_;
}
inline void GM_NetRoleAction::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 isCommand = 11;
inline bool GM_NetRoleAction::has_iscommand() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GM_NetRoleAction::set_has_iscommand() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GM_NetRoleAction::clear_has_iscommand() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GM_NetRoleAction::clear_iscommand() {
  iscommand_ = 0;
  clear_has_iscommand();
}
inline ::google::protobuf::int32 GM_NetRoleAction::iscommand() const {
  return iscommand_;
}
inline void GM_NetRoleAction::set_iscommand(::google::protobuf::int32 value) {
  set_has_iscommand();
  iscommand_ = value;
}

// -------------------------------------------------------------------

// GM_MpChangeNotify

// required int32 roleId = 1;
inline bool GM_MpChangeNotify::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_MpChangeNotify::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_MpChangeNotify::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_MpChangeNotify::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_MpChangeNotify::roleid() const {
  return roleid_;
}
inline void GM_MpChangeNotify::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required int32 roleType = 2;
inline bool GM_MpChangeNotify::has_roletype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_MpChangeNotify::set_has_roletype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_MpChangeNotify::clear_has_roletype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_MpChangeNotify::clear_roletype() {
  roletype_ = 0;
  clear_has_roletype();
}
inline ::google::protobuf::int32 GM_MpChangeNotify::roletype() const {
  return roletype_;
}
inline void GM_MpChangeNotify::set_roletype(::google::protobuf::int32 value) {
  set_has_roletype();
  roletype_ = value;
}

// required int32 mpChange = 3;
inline bool GM_MpChangeNotify::has_mpchange() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_MpChangeNotify::set_has_mpchange() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_MpChangeNotify::clear_has_mpchange() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_MpChangeNotify::clear_mpchange() {
  mpchange_ = 0;
  clear_has_mpchange();
}
inline ::google::protobuf::int32 GM_MpChangeNotify::mpchange() const {
  return mpchange_;
}
inline void GM_MpChangeNotify::set_mpchange(::google::protobuf::int32 value) {
  set_has_mpchange();
  mpchange_ = value;
}

// -------------------------------------------------------------------

// GM_RequestResetPos

// required int32 sceneID = 1;
inline bool GM_RequestResetPos::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RequestResetPos::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RequestResetPos::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RequestResetPos::clear_sceneid() {
  sceneid_ = 0;
  clear_has_sceneid();
}
inline ::google::protobuf::int32 GM_RequestResetPos::sceneid() const {
  return sceneid_;
}
inline void GM_RequestResetPos::set_sceneid(::google::protobuf::int32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// -------------------------------------------------------------------

// GM_ReturnResetPos

// required int32 posx = 1;
inline bool GM_ReturnResetPos::has_posx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ReturnResetPos::set_has_posx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ReturnResetPos::clear_has_posx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ReturnResetPos::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline ::google::protobuf::int32 GM_ReturnResetPos::posx() const {
  return posx_;
}
inline void GM_ReturnResetPos::set_posx(::google::protobuf::int32 value) {
  set_has_posx();
  posx_ = value;
}

// required int32 posz = 2;
inline bool GM_ReturnResetPos::has_posz() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_ReturnResetPos::set_has_posz() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_ReturnResetPos::clear_has_posz() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_ReturnResetPos::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline ::google::protobuf::int32 GM_ReturnResetPos::posz() const {
  return posz_;
}
inline void GM_ReturnResetPos::set_posz(::google::protobuf::int32 value) {
  set_has_posz();
  posz_ = value;
}

// -------------------------------------------------------------------

// GM_RoleNameChange

// required int32 roleID = 1;
inline bool GM_RoleNameChange::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RoleNameChange::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RoleNameChange::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RoleNameChange::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_RoleNameChange::roleid() const {
  return roleid_;
}
inline void GM_RoleNameChange::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional string roleName = 2;
inline bool GM_RoleNameChange::has_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RoleNameChange::set_has_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RoleNameChange::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RoleNameChange::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& GM_RoleNameChange::rolename() const {
  return *rolename_;
}
inline void GM_RoleNameChange::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void GM_RoleNameChange::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void GM_RoleNameChange::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_RoleNameChange::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* GM_RoleNameChange::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_RoleNameChange::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GM_RoleTopGradeChange

// required int32 roleid = 1;
inline bool GM_RoleTopGradeChange::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RoleTopGradeChange::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RoleTopGradeChange::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RoleTopGradeChange::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_RoleTopGradeChange::roleid() const {
  return roleid_;
}
inline void GM_RoleTopGradeChange::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required int32 newgradelv = 2;
inline bool GM_RoleTopGradeChange::has_newgradelv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RoleTopGradeChange::set_has_newgradelv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RoleTopGradeChange::clear_has_newgradelv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RoleTopGradeChange::clear_newgradelv() {
  newgradelv_ = 0;
  clear_has_newgradelv();
}
inline ::google::protobuf::int32 GM_RoleTopGradeChange::newgradelv() const {
  return newgradelv_;
}
inline void GM_RoleTopGradeChange::set_newgradelv(::google::protobuf::int32 value) {
  set_has_newgradelv();
  newgradelv_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_commonmove_2etxt__INCLUDED
