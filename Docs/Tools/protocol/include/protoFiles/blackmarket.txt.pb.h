// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blackmarket.txt

#ifndef PROTOBUF_blackmarket_2etxt__INCLUDED
#define PROTOBUF_blackmarket_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_blackmarket_2etxt();
void protobuf_AssignDesc_blackmarket_2etxt();
void protobuf_ShutdownFile_blackmarket_2etxt();

class GM_BlackMarketObjInfo;
class GM_BlackMarketInfo_Return;
class GM_BlackMarket_Refresh_Return;
class GM_BlackMarket_Buy_Request;
class GM_BlackMarket_Buy_Return;
class GM_BlackMarket_Return_obj;
class GM_BlackMarket_SmeltRecast_Request;
class GM_BlackMarket_Smelt_Return;
class GM_BlackMarket_Recast_Return;

// ===================================================================

class GM_BlackMarketObjInfo : public ::google::protobuf::Message {
 public:
  GM_BlackMarketObjInfo();
  virtual ~GM_BlackMarketObjInfo();

  GM_BlackMarketObjInfo(const GM_BlackMarketObjInfo& from);

  inline GM_BlackMarketObjInfo& operator=(const GM_BlackMarketObjInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_BlackMarketObjInfo& default_instance();

  void Swap(GM_BlackMarketObjInfo* other);

  // implements Message ----------------------------------------------

  GM_BlackMarketObjInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_BlackMarketObjInfo& from);
  void MergeFrom(const GM_BlackMarketObjInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_objPos = 1;
  inline bool has_m_objpos() const;
  inline void clear_m_objpos();
  static const int kMObjPosFieldNumber = 1;
  inline ::google::protobuf::int32 m_objpos() const;
  inline void set_m_objpos(::google::protobuf::int32 value);

  // optional int32 m_objId = 2;
  inline bool has_m_objid() const;
  inline void clear_m_objid();
  static const int kMObjIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_objid() const;
  inline void set_m_objid(::google::protobuf::int32 value);

  // optional int32 m_objBuy = 3;
  inline bool has_m_objbuy() const;
  inline void clear_m_objbuy();
  static const int kMObjBuyFieldNumber = 3;
  inline ::google::protobuf::int32 m_objbuy() const;
  inline void set_m_objbuy(::google::protobuf::int32 value);

  // optional int32 m_objectId = 4;
  inline bool has_m_objectid() const;
  inline void clear_m_objectid();
  static const int kMObjectIdFieldNumber = 4;
  inline ::google::protobuf::int32 m_objectid() const;
  inline void set_m_objectid(::google::protobuf::int32 value);

  // optional int32 m_objectNum = 5;
  inline bool has_m_objectnum() const;
  inline void clear_m_objectnum();
  static const int kMObjectNumFieldNumber = 5;
  inline ::google::protobuf::int32 m_objectnum() const;
  inline void set_m_objectnum(::google::protobuf::int32 value);

  // optional int32 m_price = 6;
  inline bool has_m_price() const;
  inline void clear_m_price();
  static const int kMPriceFieldNumber = 6;
  inline ::google::protobuf::int32 m_price() const;
  inline void set_m_price(::google::protobuf::int32 value);

  // optional int32 m_costId = 7;
  inline bool has_m_costid() const;
  inline void clear_m_costid();
  static const int kMCostIdFieldNumber = 7;
  inline ::google::protobuf::int32 m_costid() const;
  inline void set_m_costid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_BlackMarketObjInfo)
 private:
  inline void set_has_m_objpos();
  inline void clear_has_m_objpos();
  inline void set_has_m_objid();
  inline void clear_has_m_objid();
  inline void set_has_m_objbuy();
  inline void clear_has_m_objbuy();
  inline void set_has_m_objectid();
  inline void clear_has_m_objectid();
  inline void set_has_m_objectnum();
  inline void clear_has_m_objectnum();
  inline void set_has_m_price();
  inline void clear_has_m_price();
  inline void set_has_m_costid();
  inline void clear_has_m_costid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_objpos_;
  ::google::protobuf::int32 m_objid_;
  ::google::protobuf::int32 m_objbuy_;
  ::google::protobuf::int32 m_objectid_;
  ::google::protobuf::int32 m_objectnum_;
  ::google::protobuf::int32 m_price_;
  ::google::protobuf::int32 m_costid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_blackmarket_2etxt();
  friend void protobuf_AssignDesc_blackmarket_2etxt();
  friend void protobuf_ShutdownFile_blackmarket_2etxt();

  void InitAsDefaultInstance();
  static GM_BlackMarketObjInfo* default_instance_;
};
// -------------------------------------------------------------------

class GM_BlackMarketInfo_Return : public ::google::protobuf::Message {
 public:
  GM_BlackMarketInfo_Return();
  virtual ~GM_BlackMarketInfo_Return();

  GM_BlackMarketInfo_Return(const GM_BlackMarketInfo_Return& from);

  inline GM_BlackMarketInfo_Return& operator=(const GM_BlackMarketInfo_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_BlackMarketInfo_Return& default_instance();

  void Swap(GM_BlackMarketInfo_Return* other);

  // implements Message ----------------------------------------------

  GM_BlackMarketInfo_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_BlackMarketInfo_Return& from);
  void MergeFrom(const GM_BlackMarketInfo_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_refreshMaxTime = 1;
  inline bool has_m_refreshmaxtime() const;
  inline void clear_m_refreshmaxtime();
  static const int kMRefreshMaxTimeFieldNumber = 1;
  inline ::google::protobuf::int32 m_refreshmaxtime() const;
  inline void set_m_refreshmaxtime(::google::protobuf::int32 value);

  // optional int32 m_refreshCount = 2;
  inline bool has_m_refreshcount() const;
  inline void clear_m_refreshcount();
  static const int kMRefreshCountFieldNumber = 2;
  inline ::google::protobuf::int32 m_refreshcount() const;
  inline void set_m_refreshcount(::google::protobuf::int32 value);

  // optional int32 m_spar = 3;
  inline bool has_m_spar() const;
  inline void clear_m_spar();
  static const int kMSparFieldNumber = 3;
  inline ::google::protobuf::int32 m_spar() const;
  inline void set_m_spar(::google::protobuf::int32 value);

  // optional int32 m_refreshCost = 4;
  inline bool has_m_refreshcost() const;
  inline void clear_m_refreshcost();
  static const int kMRefreshCostFieldNumber = 4;
  inline ::google::protobuf::int32 m_refreshcost() const;
  inline void set_m_refreshcost(::google::protobuf::int32 value);

  // optional int32 m_tokenCount = 5;
  inline bool has_m_tokencount() const;
  inline void clear_m_tokencount();
  static const int kMTokenCountFieldNumber = 5;
  inline ::google::protobuf::int32 m_tokencount() const;
  inline void set_m_tokencount(::google::protobuf::int32 value);

  // optional int32 m_leftTime = 6;
  inline bool has_m_lefttime() const;
  inline void clear_m_lefttime();
  static const int kMLeftTimeFieldNumber = 6;
  inline ::google::protobuf::int32 m_lefttime() const;
  inline void set_m_lefttime(::google::protobuf::int32 value);

  // optional int32 m_count = 7;
  inline bool has_m_count() const;
  inline void clear_m_count();
  static const int kMCountFieldNumber = 7;
  inline ::google::protobuf::int32 m_count() const;
  inline void set_m_count(::google::protobuf::int32 value);

  // repeated .GM_BlackMarketObjInfo m_blackMarketObjInfo = 8;
  inline int m_blackmarketobjinfo_size() const;
  inline void clear_m_blackmarketobjinfo();
  static const int kMBlackMarketObjInfoFieldNumber = 8;
  inline const ::GM_BlackMarketObjInfo& m_blackmarketobjinfo(int index) const;
  inline ::GM_BlackMarketObjInfo* mutable_m_blackmarketobjinfo(int index);
  inline ::GM_BlackMarketObjInfo* add_m_blackmarketobjinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_BlackMarketObjInfo >&
      m_blackmarketobjinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_BlackMarketObjInfo >*
      mutable_m_blackmarketobjinfo();

  // @@protoc_insertion_point(class_scope:GM_BlackMarketInfo_Return)
 private:
  inline void set_has_m_refreshmaxtime();
  inline void clear_has_m_refreshmaxtime();
  inline void set_has_m_refreshcount();
  inline void clear_has_m_refreshcount();
  inline void set_has_m_spar();
  inline void clear_has_m_spar();
  inline void set_has_m_refreshcost();
  inline void clear_has_m_refreshcost();
  inline void set_has_m_tokencount();
  inline void clear_has_m_tokencount();
  inline void set_has_m_lefttime();
  inline void clear_has_m_lefttime();
  inline void set_has_m_count();
  inline void clear_has_m_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_refreshmaxtime_;
  ::google::protobuf::int32 m_refreshcount_;
  ::google::protobuf::int32 m_spar_;
  ::google::protobuf::int32 m_refreshcost_;
  ::google::protobuf::int32 m_tokencount_;
  ::google::protobuf::int32 m_lefttime_;
  ::google::protobuf::RepeatedPtrField< ::GM_BlackMarketObjInfo > m_blackmarketobjinfo_;
  ::google::protobuf::int32 m_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_blackmarket_2etxt();
  friend void protobuf_AssignDesc_blackmarket_2etxt();
  friend void protobuf_ShutdownFile_blackmarket_2etxt();

  void InitAsDefaultInstance();
  static GM_BlackMarketInfo_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_BlackMarket_Refresh_Return : public ::google::protobuf::Message {
 public:
  GM_BlackMarket_Refresh_Return();
  virtual ~GM_BlackMarket_Refresh_Return();

  GM_BlackMarket_Refresh_Return(const GM_BlackMarket_Refresh_Return& from);

  inline GM_BlackMarket_Refresh_Return& operator=(const GM_BlackMarket_Refresh_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_BlackMarket_Refresh_Return& default_instance();

  void Swap(GM_BlackMarket_Refresh_Return* other);

  // implements Message ----------------------------------------------

  GM_BlackMarket_Refresh_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_BlackMarket_Refresh_Return& from);
  void MergeFrom(const GM_BlackMarket_Refresh_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_BlackMarket_Refresh_Return)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_blackmarket_2etxt();
  friend void protobuf_AssignDesc_blackmarket_2etxt();
  friend void protobuf_ShutdownFile_blackmarket_2etxt();

  void InitAsDefaultInstance();
  static GM_BlackMarket_Refresh_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_BlackMarket_Buy_Request : public ::google::protobuf::Message {
 public:
  GM_BlackMarket_Buy_Request();
  virtual ~GM_BlackMarket_Buy_Request();

  GM_BlackMarket_Buy_Request(const GM_BlackMarket_Buy_Request& from);

  inline GM_BlackMarket_Buy_Request& operator=(const GM_BlackMarket_Buy_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_BlackMarket_Buy_Request& default_instance();

  void Swap(GM_BlackMarket_Buy_Request* other);

  // implements Message ----------------------------------------------

  GM_BlackMarket_Buy_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_BlackMarket_Buy_Request& from);
  void MergeFrom(const GM_BlackMarket_Buy_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_objPos = 1;
  inline bool has_m_objpos() const;
  inline void clear_m_objpos();
  static const int kMObjPosFieldNumber = 1;
  inline ::google::protobuf::int32 m_objpos() const;
  inline void set_m_objpos(::google::protobuf::int32 value);

  // optional int32 m_objId = 2;
  inline bool has_m_objid() const;
  inline void clear_m_objid();
  static const int kMObjIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_objid() const;
  inline void set_m_objid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_BlackMarket_Buy_Request)
 private:
  inline void set_has_m_objpos();
  inline void clear_has_m_objpos();
  inline void set_has_m_objid();
  inline void clear_has_m_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_objpos_;
  ::google::protobuf::int32 m_objid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_blackmarket_2etxt();
  friend void protobuf_AssignDesc_blackmarket_2etxt();
  friend void protobuf_ShutdownFile_blackmarket_2etxt();

  void InitAsDefaultInstance();
  static GM_BlackMarket_Buy_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_BlackMarket_Buy_Return : public ::google::protobuf::Message {
 public:
  GM_BlackMarket_Buy_Return();
  virtual ~GM_BlackMarket_Buy_Return();

  GM_BlackMarket_Buy_Return(const GM_BlackMarket_Buy_Return& from);

  inline GM_BlackMarket_Buy_Return& operator=(const GM_BlackMarket_Buy_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_BlackMarket_Buy_Return& default_instance();

  void Swap(GM_BlackMarket_Buy_Return* other);

  // implements Message ----------------------------------------------

  GM_BlackMarket_Buy_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_BlackMarket_Buy_Return& from);
  void MergeFrom(const GM_BlackMarket_Buy_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // optional int32 m_spar = 2;
  inline bool has_m_spar() const;
  inline void clear_m_spar();
  static const int kMSparFieldNumber = 2;
  inline ::google::protobuf::int32 m_spar() const;
  inline void set_m_spar(::google::protobuf::int32 value);

  // optional int32 m_objPos = 3;
  inline bool has_m_objpos() const;
  inline void clear_m_objpos();
  static const int kMObjPosFieldNumber = 3;
  inline ::google::protobuf::int32 m_objpos() const;
  inline void set_m_objpos(::google::protobuf::int32 value);

  // optional int32 m_objectId = 4;
  inline bool has_m_objectid() const;
  inline void clear_m_objectid();
  static const int kMObjectIdFieldNumber = 4;
  inline ::google::protobuf::int32 m_objectid() const;
  inline void set_m_objectid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_BlackMarket_Buy_Return)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();
  inline void set_has_m_spar();
  inline void clear_has_m_spar();
  inline void set_has_m_objpos();
  inline void clear_has_m_objpos();
  inline void set_has_m_objectid();
  inline void clear_has_m_objectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_result_;
  ::google::protobuf::int32 m_spar_;
  ::google::protobuf::int32 m_objpos_;
  ::google::protobuf::int32 m_objectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_blackmarket_2etxt();
  friend void protobuf_AssignDesc_blackmarket_2etxt();
  friend void protobuf_ShutdownFile_blackmarket_2etxt();

  void InitAsDefaultInstance();
  static GM_BlackMarket_Buy_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_BlackMarket_Return_obj : public ::google::protobuf::Message {
 public:
  GM_BlackMarket_Return_obj();
  virtual ~GM_BlackMarket_Return_obj();

  GM_BlackMarket_Return_obj(const GM_BlackMarket_Return_obj& from);

  inline GM_BlackMarket_Return_obj& operator=(const GM_BlackMarket_Return_obj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_BlackMarket_Return_obj& default_instance();

  void Swap(GM_BlackMarket_Return_obj* other);

  // implements Message ----------------------------------------------

  GM_BlackMarket_Return_obj* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_BlackMarket_Return_obj& from);
  void MergeFrom(const GM_BlackMarket_Return_obj& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objectid = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // optional int32 number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_BlackMarket_Return_obj)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_blackmarket_2etxt();
  friend void protobuf_AssignDesc_blackmarket_2etxt();
  friend void protobuf_ShutdownFile_blackmarket_2etxt();

  void InitAsDefaultInstance();
  static GM_BlackMarket_Return_obj* default_instance_;
};
// -------------------------------------------------------------------

class GM_BlackMarket_SmeltRecast_Request : public ::google::protobuf::Message {
 public:
  GM_BlackMarket_SmeltRecast_Request();
  virtual ~GM_BlackMarket_SmeltRecast_Request();

  GM_BlackMarket_SmeltRecast_Request(const GM_BlackMarket_SmeltRecast_Request& from);

  inline GM_BlackMarket_SmeltRecast_Request& operator=(const GM_BlackMarket_SmeltRecast_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_BlackMarket_SmeltRecast_Request& default_instance();

  void Swap(GM_BlackMarket_SmeltRecast_Request* other);

  // implements Message ----------------------------------------------

  GM_BlackMarket_SmeltRecast_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_BlackMarket_SmeltRecast_Request& from);
  void MergeFrom(const GM_BlackMarket_SmeltRecast_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 m_gmid = 1;
  inline int m_gmid_size() const;
  inline void clear_m_gmid();
  static const int kMGmidFieldNumber = 1;
  inline ::google::protobuf::int64 m_gmid(int index) const;
  inline void set_m_gmid(int index, ::google::protobuf::int64 value);
  inline void add_m_gmid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      m_gmid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_m_gmid();

  // @@protoc_insertion_point(class_scope:GM_BlackMarket_SmeltRecast_Request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > m_gmid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_blackmarket_2etxt();
  friend void protobuf_AssignDesc_blackmarket_2etxt();
  friend void protobuf_ShutdownFile_blackmarket_2etxt();

  void InitAsDefaultInstance();
  static GM_BlackMarket_SmeltRecast_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_BlackMarket_Smelt_Return : public ::google::protobuf::Message {
 public:
  GM_BlackMarket_Smelt_Return();
  virtual ~GM_BlackMarket_Smelt_Return();

  GM_BlackMarket_Smelt_Return(const GM_BlackMarket_Smelt_Return& from);

  inline GM_BlackMarket_Smelt_Return& operator=(const GM_BlackMarket_Smelt_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_BlackMarket_Smelt_Return& default_instance();

  void Swap(GM_BlackMarket_Smelt_Return* other);

  // implements Message ----------------------------------------------

  GM_BlackMarket_Smelt_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_BlackMarket_Smelt_Return& from);
  void MergeFrom(const GM_BlackMarket_Smelt_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // optional int32 sparTotal = 2;
  inline bool has_spartotal() const;
  inline void clear_spartotal();
  static const int kSparTotalFieldNumber = 2;
  inline ::google::protobuf::int32 spartotal() const;
  inline void set_spartotal(::google::protobuf::int32 value);

  // repeated .GM_BlackMarket_Return_obj data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::GM_BlackMarket_Return_obj& data(int index) const;
  inline ::GM_BlackMarket_Return_obj* mutable_data(int index);
  inline ::GM_BlackMarket_Return_obj* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_BlackMarket_Return_obj >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_BlackMarket_Return_obj >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_BlackMarket_Smelt_Return)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();
  inline void set_has_spartotal();
  inline void clear_has_spartotal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_result_;
  ::google::protobuf::int32 spartotal_;
  ::google::protobuf::RepeatedPtrField< ::GM_BlackMarket_Return_obj > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_blackmarket_2etxt();
  friend void protobuf_AssignDesc_blackmarket_2etxt();
  friend void protobuf_ShutdownFile_blackmarket_2etxt();

  void InitAsDefaultInstance();
  static GM_BlackMarket_Smelt_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_BlackMarket_Recast_Return : public ::google::protobuf::Message {
 public:
  GM_BlackMarket_Recast_Return();
  virtual ~GM_BlackMarket_Recast_Return();

  GM_BlackMarket_Recast_Return(const GM_BlackMarket_Recast_Return& from);

  inline GM_BlackMarket_Recast_Return& operator=(const GM_BlackMarket_Recast_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_BlackMarket_Recast_Return& default_instance();

  void Swap(GM_BlackMarket_Recast_Return* other);

  // implements Message ----------------------------------------------

  GM_BlackMarket_Recast_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_BlackMarket_Recast_Return& from);
  void MergeFrom(const GM_BlackMarket_Recast_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // repeated .GM_BlackMarket_Return_obj data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::GM_BlackMarket_Return_obj& data(int index) const;
  inline ::GM_BlackMarket_Return_obj* mutable_data(int index);
  inline ::GM_BlackMarket_Return_obj* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_BlackMarket_Return_obj >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_BlackMarket_Return_obj >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_BlackMarket_Recast_Return)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_BlackMarket_Return_obj > data_;
  ::google::protobuf::int32 m_result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_blackmarket_2etxt();
  friend void protobuf_AssignDesc_blackmarket_2etxt();
  friend void protobuf_ShutdownFile_blackmarket_2etxt();

  void InitAsDefaultInstance();
  static GM_BlackMarket_Recast_Return* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_BlackMarketObjInfo

// required int32 m_objPos = 1;
inline bool GM_BlackMarketObjInfo::has_m_objpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_BlackMarketObjInfo::set_has_m_objpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_BlackMarketObjInfo::clear_has_m_objpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_BlackMarketObjInfo::clear_m_objpos() {
  m_objpos_ = 0;
  clear_has_m_objpos();
}
inline ::google::protobuf::int32 GM_BlackMarketObjInfo::m_objpos() const {
  return m_objpos_;
}
inline void GM_BlackMarketObjInfo::set_m_objpos(::google::protobuf::int32 value) {
  set_has_m_objpos();
  m_objpos_ = value;
}

// optional int32 m_objId = 2;
inline bool GM_BlackMarketObjInfo::has_m_objid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_BlackMarketObjInfo::set_has_m_objid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_BlackMarketObjInfo::clear_has_m_objid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_BlackMarketObjInfo::clear_m_objid() {
  m_objid_ = 0;
  clear_has_m_objid();
}
inline ::google::protobuf::int32 GM_BlackMarketObjInfo::m_objid() const {
  return m_objid_;
}
inline void GM_BlackMarketObjInfo::set_m_objid(::google::protobuf::int32 value) {
  set_has_m_objid();
  m_objid_ = value;
}

// optional int32 m_objBuy = 3;
inline bool GM_BlackMarketObjInfo::has_m_objbuy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_BlackMarketObjInfo::set_has_m_objbuy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_BlackMarketObjInfo::clear_has_m_objbuy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_BlackMarketObjInfo::clear_m_objbuy() {
  m_objbuy_ = 0;
  clear_has_m_objbuy();
}
inline ::google::protobuf::int32 GM_BlackMarketObjInfo::m_objbuy() const {
  return m_objbuy_;
}
inline void GM_BlackMarketObjInfo::set_m_objbuy(::google::protobuf::int32 value) {
  set_has_m_objbuy();
  m_objbuy_ = value;
}

// optional int32 m_objectId = 4;
inline bool GM_BlackMarketObjInfo::has_m_objectid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_BlackMarketObjInfo::set_has_m_objectid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_BlackMarketObjInfo::clear_has_m_objectid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_BlackMarketObjInfo::clear_m_objectid() {
  m_objectid_ = 0;
  clear_has_m_objectid();
}
inline ::google::protobuf::int32 GM_BlackMarketObjInfo::m_objectid() const {
  return m_objectid_;
}
inline void GM_BlackMarketObjInfo::set_m_objectid(::google::protobuf::int32 value) {
  set_has_m_objectid();
  m_objectid_ = value;
}

// optional int32 m_objectNum = 5;
inline bool GM_BlackMarketObjInfo::has_m_objectnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_BlackMarketObjInfo::set_has_m_objectnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_BlackMarketObjInfo::clear_has_m_objectnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_BlackMarketObjInfo::clear_m_objectnum() {
  m_objectnum_ = 0;
  clear_has_m_objectnum();
}
inline ::google::protobuf::int32 GM_BlackMarketObjInfo::m_objectnum() const {
  return m_objectnum_;
}
inline void GM_BlackMarketObjInfo::set_m_objectnum(::google::protobuf::int32 value) {
  set_has_m_objectnum();
  m_objectnum_ = value;
}

// optional int32 m_price = 6;
inline bool GM_BlackMarketObjInfo::has_m_price() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_BlackMarketObjInfo::set_has_m_price() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_BlackMarketObjInfo::clear_has_m_price() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_BlackMarketObjInfo::clear_m_price() {
  m_price_ = 0;
  clear_has_m_price();
}
inline ::google::protobuf::int32 GM_BlackMarketObjInfo::m_price() const {
  return m_price_;
}
inline void GM_BlackMarketObjInfo::set_m_price(::google::protobuf::int32 value) {
  set_has_m_price();
  m_price_ = value;
}

// optional int32 m_costId = 7;
inline bool GM_BlackMarketObjInfo::has_m_costid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_BlackMarketObjInfo::set_has_m_costid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_BlackMarketObjInfo::clear_has_m_costid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_BlackMarketObjInfo::clear_m_costid() {
  m_costid_ = 0;
  clear_has_m_costid();
}
inline ::google::protobuf::int32 GM_BlackMarketObjInfo::m_costid() const {
  return m_costid_;
}
inline void GM_BlackMarketObjInfo::set_m_costid(::google::protobuf::int32 value) {
  set_has_m_costid();
  m_costid_ = value;
}

// -------------------------------------------------------------------

// GM_BlackMarketInfo_Return

// required int32 m_refreshMaxTime = 1;
inline bool GM_BlackMarketInfo_Return::has_m_refreshmaxtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_BlackMarketInfo_Return::set_has_m_refreshmaxtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_BlackMarketInfo_Return::clear_has_m_refreshmaxtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_BlackMarketInfo_Return::clear_m_refreshmaxtime() {
  m_refreshmaxtime_ = 0;
  clear_has_m_refreshmaxtime();
}
inline ::google::protobuf::int32 GM_BlackMarketInfo_Return::m_refreshmaxtime() const {
  return m_refreshmaxtime_;
}
inline void GM_BlackMarketInfo_Return::set_m_refreshmaxtime(::google::protobuf::int32 value) {
  set_has_m_refreshmaxtime();
  m_refreshmaxtime_ = value;
}

// optional int32 m_refreshCount = 2;
inline bool GM_BlackMarketInfo_Return::has_m_refreshcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_BlackMarketInfo_Return::set_has_m_refreshcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_BlackMarketInfo_Return::clear_has_m_refreshcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_BlackMarketInfo_Return::clear_m_refreshcount() {
  m_refreshcount_ = 0;
  clear_has_m_refreshcount();
}
inline ::google::protobuf::int32 GM_BlackMarketInfo_Return::m_refreshcount() const {
  return m_refreshcount_;
}
inline void GM_BlackMarketInfo_Return::set_m_refreshcount(::google::protobuf::int32 value) {
  set_has_m_refreshcount();
  m_refreshcount_ = value;
}

// optional int32 m_spar = 3;
inline bool GM_BlackMarketInfo_Return::has_m_spar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_BlackMarketInfo_Return::set_has_m_spar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_BlackMarketInfo_Return::clear_has_m_spar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_BlackMarketInfo_Return::clear_m_spar() {
  m_spar_ = 0;
  clear_has_m_spar();
}
inline ::google::protobuf::int32 GM_BlackMarketInfo_Return::m_spar() const {
  return m_spar_;
}
inline void GM_BlackMarketInfo_Return::set_m_spar(::google::protobuf::int32 value) {
  set_has_m_spar();
  m_spar_ = value;
}

// optional int32 m_refreshCost = 4;
inline bool GM_BlackMarketInfo_Return::has_m_refreshcost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_BlackMarketInfo_Return::set_has_m_refreshcost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_BlackMarketInfo_Return::clear_has_m_refreshcost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_BlackMarketInfo_Return::clear_m_refreshcost() {
  m_refreshcost_ = 0;
  clear_has_m_refreshcost();
}
inline ::google::protobuf::int32 GM_BlackMarketInfo_Return::m_refreshcost() const {
  return m_refreshcost_;
}
inline void GM_BlackMarketInfo_Return::set_m_refreshcost(::google::protobuf::int32 value) {
  set_has_m_refreshcost();
  m_refreshcost_ = value;
}

// optional int32 m_tokenCount = 5;
inline bool GM_BlackMarketInfo_Return::has_m_tokencount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_BlackMarketInfo_Return::set_has_m_tokencount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_BlackMarketInfo_Return::clear_has_m_tokencount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_BlackMarketInfo_Return::clear_m_tokencount() {
  m_tokencount_ = 0;
  clear_has_m_tokencount();
}
inline ::google::protobuf::int32 GM_BlackMarketInfo_Return::m_tokencount() const {
  return m_tokencount_;
}
inline void GM_BlackMarketInfo_Return::set_m_tokencount(::google::protobuf::int32 value) {
  set_has_m_tokencount();
  m_tokencount_ = value;
}

// optional int32 m_leftTime = 6;
inline bool GM_BlackMarketInfo_Return::has_m_lefttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_BlackMarketInfo_Return::set_has_m_lefttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_BlackMarketInfo_Return::clear_has_m_lefttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_BlackMarketInfo_Return::clear_m_lefttime() {
  m_lefttime_ = 0;
  clear_has_m_lefttime();
}
inline ::google::protobuf::int32 GM_BlackMarketInfo_Return::m_lefttime() const {
  return m_lefttime_;
}
inline void GM_BlackMarketInfo_Return::set_m_lefttime(::google::protobuf::int32 value) {
  set_has_m_lefttime();
  m_lefttime_ = value;
}

// optional int32 m_count = 7;
inline bool GM_BlackMarketInfo_Return::has_m_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_BlackMarketInfo_Return::set_has_m_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_BlackMarketInfo_Return::clear_has_m_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_BlackMarketInfo_Return::clear_m_count() {
  m_count_ = 0;
  clear_has_m_count();
}
inline ::google::protobuf::int32 GM_BlackMarketInfo_Return::m_count() const {
  return m_count_;
}
inline void GM_BlackMarketInfo_Return::set_m_count(::google::protobuf::int32 value) {
  set_has_m_count();
  m_count_ = value;
}

// repeated .GM_BlackMarketObjInfo m_blackMarketObjInfo = 8;
inline int GM_BlackMarketInfo_Return::m_blackmarketobjinfo_size() const {
  return m_blackmarketobjinfo_.size();
}
inline void GM_BlackMarketInfo_Return::clear_m_blackmarketobjinfo() {
  m_blackmarketobjinfo_.Clear();
}
inline const ::GM_BlackMarketObjInfo& GM_BlackMarketInfo_Return::m_blackmarketobjinfo(int index) const {
  return m_blackmarketobjinfo_.Get(index);
}
inline ::GM_BlackMarketObjInfo* GM_BlackMarketInfo_Return::mutable_m_blackmarketobjinfo(int index) {
  return m_blackmarketobjinfo_.Mutable(index);
}
inline ::GM_BlackMarketObjInfo* GM_BlackMarketInfo_Return::add_m_blackmarketobjinfo() {
  return m_blackmarketobjinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_BlackMarketObjInfo >&
GM_BlackMarketInfo_Return::m_blackmarketobjinfo() const {
  return m_blackmarketobjinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_BlackMarketObjInfo >*
GM_BlackMarketInfo_Return::mutable_m_blackmarketobjinfo() {
  return &m_blackmarketobjinfo_;
}

// -------------------------------------------------------------------

// GM_BlackMarket_Refresh_Return

// required int32 m_result = 1;
inline bool GM_BlackMarket_Refresh_Return::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_BlackMarket_Refresh_Return::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_BlackMarket_Refresh_Return::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_BlackMarket_Refresh_Return::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GM_BlackMarket_Refresh_Return::m_result() const {
  return m_result_;
}
inline void GM_BlackMarket_Refresh_Return::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// -------------------------------------------------------------------

// GM_BlackMarket_Buy_Request

// required int32 m_objPos = 1;
inline bool GM_BlackMarket_Buy_Request::has_m_objpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_BlackMarket_Buy_Request::set_has_m_objpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_BlackMarket_Buy_Request::clear_has_m_objpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_BlackMarket_Buy_Request::clear_m_objpos() {
  m_objpos_ = 0;
  clear_has_m_objpos();
}
inline ::google::protobuf::int32 GM_BlackMarket_Buy_Request::m_objpos() const {
  return m_objpos_;
}
inline void GM_BlackMarket_Buy_Request::set_m_objpos(::google::protobuf::int32 value) {
  set_has_m_objpos();
  m_objpos_ = value;
}

// optional int32 m_objId = 2;
inline bool GM_BlackMarket_Buy_Request::has_m_objid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_BlackMarket_Buy_Request::set_has_m_objid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_BlackMarket_Buy_Request::clear_has_m_objid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_BlackMarket_Buy_Request::clear_m_objid() {
  m_objid_ = 0;
  clear_has_m_objid();
}
inline ::google::protobuf::int32 GM_BlackMarket_Buy_Request::m_objid() const {
  return m_objid_;
}
inline void GM_BlackMarket_Buy_Request::set_m_objid(::google::protobuf::int32 value) {
  set_has_m_objid();
  m_objid_ = value;
}

// -------------------------------------------------------------------

// GM_BlackMarket_Buy_Return

// required int32 m_result = 1;
inline bool GM_BlackMarket_Buy_Return::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_BlackMarket_Buy_Return::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_BlackMarket_Buy_Return::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_BlackMarket_Buy_Return::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GM_BlackMarket_Buy_Return::m_result() const {
  return m_result_;
}
inline void GM_BlackMarket_Buy_Return::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// optional int32 m_spar = 2;
inline bool GM_BlackMarket_Buy_Return::has_m_spar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_BlackMarket_Buy_Return::set_has_m_spar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_BlackMarket_Buy_Return::clear_has_m_spar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_BlackMarket_Buy_Return::clear_m_spar() {
  m_spar_ = 0;
  clear_has_m_spar();
}
inline ::google::protobuf::int32 GM_BlackMarket_Buy_Return::m_spar() const {
  return m_spar_;
}
inline void GM_BlackMarket_Buy_Return::set_m_spar(::google::protobuf::int32 value) {
  set_has_m_spar();
  m_spar_ = value;
}

// optional int32 m_objPos = 3;
inline bool GM_BlackMarket_Buy_Return::has_m_objpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_BlackMarket_Buy_Return::set_has_m_objpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_BlackMarket_Buy_Return::clear_has_m_objpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_BlackMarket_Buy_Return::clear_m_objpos() {
  m_objpos_ = 0;
  clear_has_m_objpos();
}
inline ::google::protobuf::int32 GM_BlackMarket_Buy_Return::m_objpos() const {
  return m_objpos_;
}
inline void GM_BlackMarket_Buy_Return::set_m_objpos(::google::protobuf::int32 value) {
  set_has_m_objpos();
  m_objpos_ = value;
}

// optional int32 m_objectId = 4;
inline bool GM_BlackMarket_Buy_Return::has_m_objectid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_BlackMarket_Buy_Return::set_has_m_objectid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_BlackMarket_Buy_Return::clear_has_m_objectid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_BlackMarket_Buy_Return::clear_m_objectid() {
  m_objectid_ = 0;
  clear_has_m_objectid();
}
inline ::google::protobuf::int32 GM_BlackMarket_Buy_Return::m_objectid() const {
  return m_objectid_;
}
inline void GM_BlackMarket_Buy_Return::set_m_objectid(::google::protobuf::int32 value) {
  set_has_m_objectid();
  m_objectid_ = value;
}

// -------------------------------------------------------------------

// GM_BlackMarket_Return_obj

// required int32 objectid = 1;
inline bool GM_BlackMarket_Return_obj::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_BlackMarket_Return_obj::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_BlackMarket_Return_obj::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_BlackMarket_Return_obj::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_BlackMarket_Return_obj::objectid() const {
  return objectid_;
}
inline void GM_BlackMarket_Return_obj::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// optional int32 number = 2;
inline bool GM_BlackMarket_Return_obj::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_BlackMarket_Return_obj::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_BlackMarket_Return_obj::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_BlackMarket_Return_obj::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 GM_BlackMarket_Return_obj::number() const {
  return number_;
}
inline void GM_BlackMarket_Return_obj::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// GM_BlackMarket_SmeltRecast_Request

// repeated int64 m_gmid = 1;
inline int GM_BlackMarket_SmeltRecast_Request::m_gmid_size() const {
  return m_gmid_.size();
}
inline void GM_BlackMarket_SmeltRecast_Request::clear_m_gmid() {
  m_gmid_.Clear();
}
inline ::google::protobuf::int64 GM_BlackMarket_SmeltRecast_Request::m_gmid(int index) const {
  return m_gmid_.Get(index);
}
inline void GM_BlackMarket_SmeltRecast_Request::set_m_gmid(int index, ::google::protobuf::int64 value) {
  m_gmid_.Set(index, value);
}
inline void GM_BlackMarket_SmeltRecast_Request::add_m_gmid(::google::protobuf::int64 value) {
  m_gmid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GM_BlackMarket_SmeltRecast_Request::m_gmid() const {
  return m_gmid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GM_BlackMarket_SmeltRecast_Request::mutable_m_gmid() {
  return &m_gmid_;
}

// -------------------------------------------------------------------

// GM_BlackMarket_Smelt_Return

// required int32 m_result = 1;
inline bool GM_BlackMarket_Smelt_Return::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_BlackMarket_Smelt_Return::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_BlackMarket_Smelt_Return::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_BlackMarket_Smelt_Return::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GM_BlackMarket_Smelt_Return::m_result() const {
  return m_result_;
}
inline void GM_BlackMarket_Smelt_Return::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// optional int32 sparTotal = 2;
inline bool GM_BlackMarket_Smelt_Return::has_spartotal() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_BlackMarket_Smelt_Return::set_has_spartotal() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_BlackMarket_Smelt_Return::clear_has_spartotal() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_BlackMarket_Smelt_Return::clear_spartotal() {
  spartotal_ = 0;
  clear_has_spartotal();
}
inline ::google::protobuf::int32 GM_BlackMarket_Smelt_Return::spartotal() const {
  return spartotal_;
}
inline void GM_BlackMarket_Smelt_Return::set_spartotal(::google::protobuf::int32 value) {
  set_has_spartotal();
  spartotal_ = value;
}

// repeated .GM_BlackMarket_Return_obj data = 3;
inline int GM_BlackMarket_Smelt_Return::data_size() const {
  return data_.size();
}
inline void GM_BlackMarket_Smelt_Return::clear_data() {
  data_.Clear();
}
inline const ::GM_BlackMarket_Return_obj& GM_BlackMarket_Smelt_Return::data(int index) const {
  return data_.Get(index);
}
inline ::GM_BlackMarket_Return_obj* GM_BlackMarket_Smelt_Return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_BlackMarket_Return_obj* GM_BlackMarket_Smelt_Return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_BlackMarket_Return_obj >&
GM_BlackMarket_Smelt_Return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_BlackMarket_Return_obj >*
GM_BlackMarket_Smelt_Return::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_BlackMarket_Recast_Return

// required int32 m_result = 1;
inline bool GM_BlackMarket_Recast_Return::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_BlackMarket_Recast_Return::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_BlackMarket_Recast_Return::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_BlackMarket_Recast_Return::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GM_BlackMarket_Recast_Return::m_result() const {
  return m_result_;
}
inline void GM_BlackMarket_Recast_Return::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// repeated .GM_BlackMarket_Return_obj data = 2;
inline int GM_BlackMarket_Recast_Return::data_size() const {
  return data_.size();
}
inline void GM_BlackMarket_Recast_Return::clear_data() {
  data_.Clear();
}
inline const ::GM_BlackMarket_Return_obj& GM_BlackMarket_Recast_Return::data(int index) const {
  return data_.Get(index);
}
inline ::GM_BlackMarket_Return_obj* GM_BlackMarket_Recast_Return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_BlackMarket_Return_obj* GM_BlackMarket_Recast_Return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_BlackMarket_Return_obj >&
GM_BlackMarket_Recast_Return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_BlackMarket_Return_obj >*
GM_BlackMarket_Recast_Return::mutable_data() {
  return &data_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_blackmarket_2etxt__INCLUDED
