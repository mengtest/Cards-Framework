// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guide.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "guide.txt.pb.h"
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GM_Guide_System_Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Guide_System_Item_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Guide_AllSystem_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Guide_AllSystem_Return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Guide_AllGuide_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Guide_AllGuide_Return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Guide_Guide_Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Guide_Guide_Item_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Guide_FinishGuide_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Guide_FinishGuide_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Guide_FinishGuide_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Guide_FinishGuide_Return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_GuideClose_level_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_GuideClose_level_Return_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_guide_2etxt() {
  protobuf_AddDesc_guide_2etxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "guide.txt");
  GOOGLE_CHECK(file != NULL);
  GM_Guide_System_Item_descriptor_ = file->message_type(0);
  static const int GM_Guide_System_Item_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_System_Item, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_System_Item, systemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_System_Item, unlocked_),
  };
  GM_Guide_System_Item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Guide_System_Item_descriptor_,
      GM_Guide_System_Item::default_instance_,
      GM_Guide_System_Item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_System_Item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_System_Item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Guide_System_Item));
  GM_Guide_AllSystem_Return_descriptor_ = file->message_type(1);
  static const int GM_Guide_AllSystem_Return_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_AllSystem_Return, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_AllSystem_Return, item_),
  };
  GM_Guide_AllSystem_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Guide_AllSystem_Return_descriptor_,
      GM_Guide_AllSystem_Return::default_instance_,
      GM_Guide_AllSystem_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_AllSystem_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_AllSystem_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Guide_AllSystem_Return));
  GM_Guide_AllGuide_Return_descriptor_ = file->message_type(2);
  static const int GM_Guide_AllGuide_Return_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_AllGuide_Return, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_AllGuide_Return, guides_),
  };
  GM_Guide_AllGuide_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Guide_AllGuide_Return_descriptor_,
      GM_Guide_AllGuide_Return::default_instance_,
      GM_Guide_AllGuide_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_AllGuide_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_AllGuide_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Guide_AllGuide_Return));
  GM_Guide_Guide_Item_descriptor_ = file->message_type(3);
  static const int GM_Guide_Guide_Item_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_Guide_Item, guideid_),
  };
  GM_Guide_Guide_Item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Guide_Guide_Item_descriptor_,
      GM_Guide_Guide_Item::default_instance_,
      GM_Guide_Guide_Item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_Guide_Item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_Guide_Item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Guide_Guide_Item));
  GM_Guide_FinishGuide_Request_descriptor_ = file->message_type(4);
  static const int GM_Guide_FinishGuide_Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_FinishGuide_Request, guideid_),
  };
  GM_Guide_FinishGuide_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Guide_FinishGuide_Request_descriptor_,
      GM_Guide_FinishGuide_Request::default_instance_,
      GM_Guide_FinishGuide_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_FinishGuide_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_FinishGuide_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Guide_FinishGuide_Request));
  GM_Guide_FinishGuide_Return_descriptor_ = file->message_type(5);
  static const int GM_Guide_FinishGuide_Return_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_FinishGuide_Return, result_),
  };
  GM_Guide_FinishGuide_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Guide_FinishGuide_Return_descriptor_,
      GM_Guide_FinishGuide_Return::default_instance_,
      GM_Guide_FinishGuide_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_FinishGuide_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Guide_FinishGuide_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Guide_FinishGuide_Return));
  GM_GuideClose_level_Return_descriptor_ = file->message_type(6);
  static const int GM_GuideClose_level_Return_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GuideClose_level_Return, level_),
  };
  GM_GuideClose_level_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_GuideClose_level_Return_descriptor_,
      GM_GuideClose_level_Return::default_instance_,
      GM_GuideClose_level_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GuideClose_level_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GuideClose_level_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_GuideClose_level_Return));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_guide_2etxt);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Guide_System_Item_descriptor_, &GM_Guide_System_Item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Guide_AllSystem_Return_descriptor_, &GM_Guide_AllSystem_Return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Guide_AllGuide_Return_descriptor_, &GM_Guide_AllGuide_Return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Guide_Guide_Item_descriptor_, &GM_Guide_Guide_Item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Guide_FinishGuide_Request_descriptor_, &GM_Guide_FinishGuide_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Guide_FinishGuide_Return_descriptor_, &GM_Guide_FinishGuide_Return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_GuideClose_level_Return_descriptor_, &GM_GuideClose_level_Return::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_guide_2etxt() {
  delete GM_Guide_System_Item::default_instance_;
  delete GM_Guide_System_Item_reflection_;
  delete GM_Guide_AllSystem_Return::default_instance_;
  delete GM_Guide_AllSystem_Return_reflection_;
  delete GM_Guide_AllGuide_Return::default_instance_;
  delete GM_Guide_AllGuide_Return_reflection_;
  delete GM_Guide_Guide_Item::default_instance_;
  delete GM_Guide_Guide_Item_reflection_;
  delete GM_Guide_FinishGuide_Request::default_instance_;
  delete GM_Guide_FinishGuide_Request_reflection_;
  delete GM_Guide_FinishGuide_Return::default_instance_;
  delete GM_Guide_FinishGuide_Return_reflection_;
  delete GM_GuideClose_level_Return::default_instance_;
  delete GM_GuideClose_level_Return_reflection_;
}

void protobuf_AddDesc_guide_2etxt() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tguide.txt\"I\n\024GM_Guide_System_Item\022\r\n\005l"
    "evel\030\001 \002(\005\022\020\n\010systemid\030\002 \002(\005\022\020\n\010unlocked"
    "\030\003 \002(\005\"O\n\031GM_Guide_AllSystem_Return\022\r\n\005c"
    "ount\030\001 \002(\005\022#\n\004item\030\002 \003(\0132\025.GM_Guide_Syst"
    "em_Item\"9\n\030GM_Guide_AllGuide_Return\022\r\n\005c"
    "ount\030\001 \002(\005\022\016\n\006guides\030\002 \003(\005\"&\n\023GM_Guide_G"
    "uide_Item\022\017\n\007guideid\030\001 \002(\005\"/\n\034GM_Guide_F"
    "inishGuide_Request\022\017\n\007guideid\030\001 \002(\005\"-\n\033G"
    "M_Guide_FinishGuide_Return\022\016\n\006result\030\001 \002"
    "(\005\"+\n\032GM_GuideClose_level_Return\022\r\n\005leve"
    "l\030\001 \002(\005", 407);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "guide.txt", &protobuf_RegisterTypes);
  GM_Guide_System_Item::default_instance_ = new GM_Guide_System_Item();
  GM_Guide_AllSystem_Return::default_instance_ = new GM_Guide_AllSystem_Return();
  GM_Guide_AllGuide_Return::default_instance_ = new GM_Guide_AllGuide_Return();
  GM_Guide_Guide_Item::default_instance_ = new GM_Guide_Guide_Item();
  GM_Guide_FinishGuide_Request::default_instance_ = new GM_Guide_FinishGuide_Request();
  GM_Guide_FinishGuide_Return::default_instance_ = new GM_Guide_FinishGuide_Return();
  GM_GuideClose_level_Return::default_instance_ = new GM_GuideClose_level_Return();
  GM_Guide_System_Item::default_instance_->InitAsDefaultInstance();
  GM_Guide_AllSystem_Return::default_instance_->InitAsDefaultInstance();
  GM_Guide_AllGuide_Return::default_instance_->InitAsDefaultInstance();
  GM_Guide_Guide_Item::default_instance_->InitAsDefaultInstance();
  GM_Guide_FinishGuide_Request::default_instance_->InitAsDefaultInstance();
  GM_Guide_FinishGuide_Return::default_instance_->InitAsDefaultInstance();
  GM_GuideClose_level_Return::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_guide_2etxt);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_guide_2etxt {
  StaticDescriptorInitializer_guide_2etxt() {
    protobuf_AddDesc_guide_2etxt();
  }
} static_descriptor_initializer_guide_2etxt_;

// ===================================================================

#ifndef _MSC_VER
const int GM_Guide_System_Item::kLevelFieldNumber;
const int GM_Guide_System_Item::kSystemidFieldNumber;
const int GM_Guide_System_Item::kUnlockedFieldNumber;
#endif  // !_MSC_VER

GM_Guide_System_Item::GM_Guide_System_Item()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Guide_System_Item::InitAsDefaultInstance() {
}

GM_Guide_System_Item::GM_Guide_System_Item(const GM_Guide_System_Item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Guide_System_Item::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  systemid_ = 0;
  unlocked_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Guide_System_Item::~GM_Guide_System_Item() {
  SharedDtor();
}

void GM_Guide_System_Item::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Guide_System_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Guide_System_Item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Guide_System_Item_descriptor_;
}

const GM_Guide_System_Item& GM_Guide_System_Item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_guide_2etxt();
  return *default_instance_;
}

GM_Guide_System_Item* GM_Guide_System_Item::default_instance_ = NULL;

GM_Guide_System_Item* GM_Guide_System_Item::New() const {
  return new GM_Guide_System_Item;
}

void GM_Guide_System_Item::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    systemid_ = 0;
    unlocked_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Guide_System_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_systemid;
        break;
      }

      // required int32 systemid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_systemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &systemid_)));
          set_has_systemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_unlocked;
        break;
      }

      // required int32 unlocked = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unlocked:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unlocked_)));
          set_has_unlocked();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Guide_System_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // required int32 systemid = 2;
  if (has_systemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->systemid(), output);
  }

  // required int32 unlocked = 3;
  if (has_unlocked()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->unlocked(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Guide_System_Item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // required int32 systemid = 2;
  if (has_systemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->systemid(), target);
  }

  // required int32 unlocked = 3;
  if (has_unlocked()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->unlocked(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Guide_System_Item::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // required int32 systemid = 2;
    if (has_systemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->systemid());
    }

    // required int32 unlocked = 3;
    if (has_unlocked()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unlocked());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Guide_System_Item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Guide_System_Item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Guide_System_Item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Guide_System_Item::MergeFrom(const GM_Guide_System_Item& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_systemid()) {
      set_systemid(from.systemid());
    }
    if (from.has_unlocked()) {
      set_unlocked(from.unlocked());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Guide_System_Item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Guide_System_Item::CopyFrom(const GM_Guide_System_Item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Guide_System_Item::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GM_Guide_System_Item::Swap(GM_Guide_System_Item* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(systemid_, other->systemid_);
    std::swap(unlocked_, other->unlocked_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Guide_System_Item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Guide_System_Item_descriptor_;
  metadata.reflection = GM_Guide_System_Item_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Guide_AllSystem_Return::kCountFieldNumber;
const int GM_Guide_AllSystem_Return::kItemFieldNumber;
#endif  // !_MSC_VER

GM_Guide_AllSystem_Return::GM_Guide_AllSystem_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Guide_AllSystem_Return::InitAsDefaultInstance() {
}

GM_Guide_AllSystem_Return::GM_Guide_AllSystem_Return(const GM_Guide_AllSystem_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Guide_AllSystem_Return::SharedCtor() {
  _cached_size_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Guide_AllSystem_Return::~GM_Guide_AllSystem_Return() {
  SharedDtor();
}

void GM_Guide_AllSystem_Return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Guide_AllSystem_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Guide_AllSystem_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Guide_AllSystem_Return_descriptor_;
}

const GM_Guide_AllSystem_Return& GM_Guide_AllSystem_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_guide_2etxt();
  return *default_instance_;
}

GM_Guide_AllSystem_Return* GM_Guide_AllSystem_Return::default_instance_ = NULL;

GM_Guide_AllSystem_Return* GM_Guide_AllSystem_Return::New() const {
  return new GM_Guide_AllSystem_Return;
}

void GM_Guide_AllSystem_Return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    count_ = 0;
  }
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Guide_AllSystem_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 count = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item;
        break;
      }

      // repeated .GM_Guide_System_Item item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Guide_AllSystem_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 count = 1;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // repeated .GM_Guide_System_Item item = 2;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Guide_AllSystem_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 count = 1;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // repeated .GM_Guide_System_Item item = 2;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Guide_AllSystem_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 count = 1;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  // repeated .GM_Guide_System_Item item = 2;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Guide_AllSystem_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Guide_AllSystem_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Guide_AllSystem_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Guide_AllSystem_Return::MergeFrom(const GM_Guide_AllSystem_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Guide_AllSystem_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Guide_AllSystem_Return::CopyFrom(const GM_Guide_AllSystem_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Guide_AllSystem_Return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < item_size(); i++) {
    if (!this->item(i).IsInitialized()) return false;
  }
  return true;
}

void GM_Guide_AllSystem_Return::Swap(GM_Guide_AllSystem_Return* other) {
  if (other != this) {
    std::swap(count_, other->count_);
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Guide_AllSystem_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Guide_AllSystem_Return_descriptor_;
  metadata.reflection = GM_Guide_AllSystem_Return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Guide_AllGuide_Return::kCountFieldNumber;
const int GM_Guide_AllGuide_Return::kGuidesFieldNumber;
#endif  // !_MSC_VER

GM_Guide_AllGuide_Return::GM_Guide_AllGuide_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Guide_AllGuide_Return::InitAsDefaultInstance() {
}

GM_Guide_AllGuide_Return::GM_Guide_AllGuide_Return(const GM_Guide_AllGuide_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Guide_AllGuide_Return::SharedCtor() {
  _cached_size_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Guide_AllGuide_Return::~GM_Guide_AllGuide_Return() {
  SharedDtor();
}

void GM_Guide_AllGuide_Return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Guide_AllGuide_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Guide_AllGuide_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Guide_AllGuide_Return_descriptor_;
}

const GM_Guide_AllGuide_Return& GM_Guide_AllGuide_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_guide_2etxt();
  return *default_instance_;
}

GM_Guide_AllGuide_Return* GM_Guide_AllGuide_Return::default_instance_ = NULL;

GM_Guide_AllGuide_Return* GM_Guide_AllGuide_Return::New() const {
  return new GM_Guide_AllGuide_Return;
}

void GM_Guide_AllGuide_Return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    count_ = 0;
  }
  guides_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Guide_AllGuide_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 count = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_guides;
        break;
      }

      // repeated int32 guides = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_guides:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_guides())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_guides())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_guides;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Guide_AllGuide_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 count = 1;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // repeated int32 guides = 2;
  for (int i = 0; i < this->guides_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->guides(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Guide_AllGuide_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 count = 1;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // repeated int32 guides = 2;
  for (int i = 0; i < this->guides_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->guides(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Guide_AllGuide_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 count = 1;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  // repeated int32 guides = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->guides_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->guides(i));
    }
    total_size += 1 * this->guides_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Guide_AllGuide_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Guide_AllGuide_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Guide_AllGuide_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Guide_AllGuide_Return::MergeFrom(const GM_Guide_AllGuide_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  guides_.MergeFrom(from.guides_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Guide_AllGuide_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Guide_AllGuide_Return::CopyFrom(const GM_Guide_AllGuide_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Guide_AllGuide_Return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_Guide_AllGuide_Return::Swap(GM_Guide_AllGuide_Return* other) {
  if (other != this) {
    std::swap(count_, other->count_);
    guides_.Swap(&other->guides_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Guide_AllGuide_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Guide_AllGuide_Return_descriptor_;
  metadata.reflection = GM_Guide_AllGuide_Return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Guide_Guide_Item::kGuideidFieldNumber;
#endif  // !_MSC_VER

GM_Guide_Guide_Item::GM_Guide_Guide_Item()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Guide_Guide_Item::InitAsDefaultInstance() {
}

GM_Guide_Guide_Item::GM_Guide_Guide_Item(const GM_Guide_Guide_Item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Guide_Guide_Item::SharedCtor() {
  _cached_size_ = 0;
  guideid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Guide_Guide_Item::~GM_Guide_Guide_Item() {
  SharedDtor();
}

void GM_Guide_Guide_Item::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Guide_Guide_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Guide_Guide_Item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Guide_Guide_Item_descriptor_;
}

const GM_Guide_Guide_Item& GM_Guide_Guide_Item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_guide_2etxt();
  return *default_instance_;
}

GM_Guide_Guide_Item* GM_Guide_Guide_Item::default_instance_ = NULL;

GM_Guide_Guide_Item* GM_Guide_Guide_Item::New() const {
  return new GM_Guide_Guide_Item;
}

void GM_Guide_Guide_Item::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    guideid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Guide_Guide_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 guideid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guideid_)));
          set_has_guideid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Guide_Guide_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 guideid = 1;
  if (has_guideid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guideid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Guide_Guide_Item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 guideid = 1;
  if (has_guideid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guideid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Guide_Guide_Item::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 guideid = 1;
    if (has_guideid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guideid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Guide_Guide_Item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Guide_Guide_Item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Guide_Guide_Item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Guide_Guide_Item::MergeFrom(const GM_Guide_Guide_Item& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guideid()) {
      set_guideid(from.guideid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Guide_Guide_Item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Guide_Guide_Item::CopyFrom(const GM_Guide_Guide_Item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Guide_Guide_Item::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_Guide_Guide_Item::Swap(GM_Guide_Guide_Item* other) {
  if (other != this) {
    std::swap(guideid_, other->guideid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Guide_Guide_Item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Guide_Guide_Item_descriptor_;
  metadata.reflection = GM_Guide_Guide_Item_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Guide_FinishGuide_Request::kGuideidFieldNumber;
#endif  // !_MSC_VER

GM_Guide_FinishGuide_Request::GM_Guide_FinishGuide_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Guide_FinishGuide_Request::InitAsDefaultInstance() {
}

GM_Guide_FinishGuide_Request::GM_Guide_FinishGuide_Request(const GM_Guide_FinishGuide_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Guide_FinishGuide_Request::SharedCtor() {
  _cached_size_ = 0;
  guideid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Guide_FinishGuide_Request::~GM_Guide_FinishGuide_Request() {
  SharedDtor();
}

void GM_Guide_FinishGuide_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Guide_FinishGuide_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Guide_FinishGuide_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Guide_FinishGuide_Request_descriptor_;
}

const GM_Guide_FinishGuide_Request& GM_Guide_FinishGuide_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_guide_2etxt();
  return *default_instance_;
}

GM_Guide_FinishGuide_Request* GM_Guide_FinishGuide_Request::default_instance_ = NULL;

GM_Guide_FinishGuide_Request* GM_Guide_FinishGuide_Request::New() const {
  return new GM_Guide_FinishGuide_Request;
}

void GM_Guide_FinishGuide_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    guideid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Guide_FinishGuide_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 guideid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guideid_)));
          set_has_guideid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Guide_FinishGuide_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 guideid = 1;
  if (has_guideid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guideid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Guide_FinishGuide_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 guideid = 1;
  if (has_guideid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guideid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Guide_FinishGuide_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 guideid = 1;
    if (has_guideid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guideid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Guide_FinishGuide_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Guide_FinishGuide_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Guide_FinishGuide_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Guide_FinishGuide_Request::MergeFrom(const GM_Guide_FinishGuide_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guideid()) {
      set_guideid(from.guideid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Guide_FinishGuide_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Guide_FinishGuide_Request::CopyFrom(const GM_Guide_FinishGuide_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Guide_FinishGuide_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_Guide_FinishGuide_Request::Swap(GM_Guide_FinishGuide_Request* other) {
  if (other != this) {
    std::swap(guideid_, other->guideid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Guide_FinishGuide_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Guide_FinishGuide_Request_descriptor_;
  metadata.reflection = GM_Guide_FinishGuide_Request_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Guide_FinishGuide_Return::kResultFieldNumber;
#endif  // !_MSC_VER

GM_Guide_FinishGuide_Return::GM_Guide_FinishGuide_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Guide_FinishGuide_Return::InitAsDefaultInstance() {
}

GM_Guide_FinishGuide_Return::GM_Guide_FinishGuide_Return(const GM_Guide_FinishGuide_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Guide_FinishGuide_Return::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Guide_FinishGuide_Return::~GM_Guide_FinishGuide_Return() {
  SharedDtor();
}

void GM_Guide_FinishGuide_Return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Guide_FinishGuide_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Guide_FinishGuide_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Guide_FinishGuide_Return_descriptor_;
}

const GM_Guide_FinishGuide_Return& GM_Guide_FinishGuide_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_guide_2etxt();
  return *default_instance_;
}

GM_Guide_FinishGuide_Return* GM_Guide_FinishGuide_Return::default_instance_ = NULL;

GM_Guide_FinishGuide_Return* GM_Guide_FinishGuide_Return::New() const {
  return new GM_Guide_FinishGuide_Return;
}

void GM_Guide_FinishGuide_Return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Guide_FinishGuide_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Guide_FinishGuide_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Guide_FinishGuide_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Guide_FinishGuide_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Guide_FinishGuide_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Guide_FinishGuide_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Guide_FinishGuide_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Guide_FinishGuide_Return::MergeFrom(const GM_Guide_FinishGuide_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Guide_FinishGuide_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Guide_FinishGuide_Return::CopyFrom(const GM_Guide_FinishGuide_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Guide_FinishGuide_Return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_Guide_FinishGuide_Return::Swap(GM_Guide_FinishGuide_Return* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Guide_FinishGuide_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Guide_FinishGuide_Return_descriptor_;
  metadata.reflection = GM_Guide_FinishGuide_Return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_GuideClose_level_Return::kLevelFieldNumber;
#endif  // !_MSC_VER

GM_GuideClose_level_Return::GM_GuideClose_level_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_GuideClose_level_Return::InitAsDefaultInstance() {
}

GM_GuideClose_level_Return::GM_GuideClose_level_Return(const GM_GuideClose_level_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_GuideClose_level_Return::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_GuideClose_level_Return::~GM_GuideClose_level_Return() {
  SharedDtor();
}

void GM_GuideClose_level_Return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_GuideClose_level_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_GuideClose_level_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_GuideClose_level_Return_descriptor_;
}

const GM_GuideClose_level_Return& GM_GuideClose_level_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_guide_2etxt();
  return *default_instance_;
}

GM_GuideClose_level_Return* GM_GuideClose_level_Return::default_instance_ = NULL;

GM_GuideClose_level_Return* GM_GuideClose_level_Return::New() const {
  return new GM_GuideClose_level_Return;
}

void GM_GuideClose_level_Return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_GuideClose_level_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_GuideClose_level_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_GuideClose_level_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_GuideClose_level_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_GuideClose_level_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_GuideClose_level_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_GuideClose_level_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_GuideClose_level_Return::MergeFrom(const GM_GuideClose_level_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_GuideClose_level_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_GuideClose_level_Return::CopyFrom(const GM_GuideClose_level_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_GuideClose_level_Return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_GuideClose_level_Return::Swap(GM_GuideClose_level_Return* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_GuideClose_level_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_GuideClose_level_Return_descriptor_;
  metadata.reflection = GM_GuideClose_level_Return_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
