// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: task.txt

#ifndef PROTOBUF_task_2etxt__INCLUDED
#define PROTOBUF_task_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_task_2etxt();
void protobuf_AssignDesc_task_2etxt();
void protobuf_ShutdownFile_task_2etxt();

class GMTaskCondition;
class GMTaskFinishObject;
class GMTask;
class GMTaskCollect;
class GM_Task_Finsh;
class GM_TaskResult;
class GM_CommitTask;
class GM_AcceptTask;
class GMUpdateTaskCondition;
class GM_TalkEvent;

// ===================================================================

class GMTaskCondition : public ::google::protobuf::Message {
 public:
  GMTaskCondition();
  virtual ~GMTaskCondition();

  GMTaskCondition(const GMTaskCondition& from);

  inline GMTaskCondition& operator=(const GMTaskCondition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMTaskCondition& default_instance();

  void Swap(GMTaskCondition* other);

  // implements Message ----------------------------------------------

  GMTaskCondition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMTaskCondition& from);
  void MergeFrom(const GMTaskCondition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 m_ID = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIDFieldNumber = 1;
  inline ::google::protobuf::uint32 m_id() const;
  inline void set_m_id(::google::protobuf::uint32 value);

  // required uint32 m_Type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 m_type() const;
  inline void set_m_type(::google::protobuf::uint32 value);

  // required uint32 m_FinishNum = 3;
  inline bool has_m_finishnum() const;
  inline void clear_m_finishnum();
  static const int kMFinishNumFieldNumber = 3;
  inline ::google::protobuf::uint32 m_finishnum() const;
  inline void set_m_finishnum(::google::protobuf::uint32 value);

  // required uint32 m_NeedNum = 4;
  inline bool has_m_neednum() const;
  inline void clear_m_neednum();
  static const int kMNeedNumFieldNumber = 4;
  inline ::google::protobuf::uint32 m_neednum() const;
  inline void set_m_neednum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GMTaskCondition)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_finishnum();
  inline void clear_has_m_finishnum();
  inline void set_has_m_neednum();
  inline void clear_has_m_neednum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 m_id_;
  ::google::protobuf::uint32 m_type_;
  ::google::protobuf::uint32 m_finishnum_;
  ::google::protobuf::uint32 m_neednum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_task_2etxt();
  friend void protobuf_AssignDesc_task_2etxt();
  friend void protobuf_ShutdownFile_task_2etxt();

  void InitAsDefaultInstance();
  static GMTaskCondition* default_instance_;
};
// -------------------------------------------------------------------

class GMTaskFinishObject : public ::google::protobuf::Message {
 public:
  GMTaskFinishObject();
  virtual ~GMTaskFinishObject();

  GMTaskFinishObject(const GMTaskFinishObject& from);

  inline GMTaskFinishObject& operator=(const GMTaskFinishObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMTaskFinishObject& default_instance();

  void Swap(GMTaskFinishObject* other);

  // implements Message ----------------------------------------------

  GMTaskFinishObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMTaskFinishObject& from);
  void MergeFrom(const GMTaskFinishObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 m_ObjectTypeID = 1;
  inline bool has_m_objecttypeid() const;
  inline void clear_m_objecttypeid();
  static const int kMObjectTypeIDFieldNumber = 1;
  inline ::google::protobuf::uint32 m_objecttypeid() const;
  inline void set_m_objecttypeid(::google::protobuf::uint32 value);

  // required uint32 m_ObjectNum = 2;
  inline bool has_m_objectnum() const;
  inline void clear_m_objectnum();
  static const int kMObjectNumFieldNumber = 2;
  inline ::google::protobuf::uint32 m_objectnum() const;
  inline void set_m_objectnum(::google::protobuf::uint32 value);

  // required uint32 m_ObjecRank = 3;
  inline bool has_m_objecrank() const;
  inline void clear_m_objecrank();
  static const int kMObjecRankFieldNumber = 3;
  inline ::google::protobuf::uint32 m_objecrank() const;
  inline void set_m_objecrank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GMTaskFinishObject)
 private:
  inline void set_has_m_objecttypeid();
  inline void clear_has_m_objecttypeid();
  inline void set_has_m_objectnum();
  inline void clear_has_m_objectnum();
  inline void set_has_m_objecrank();
  inline void clear_has_m_objecrank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 m_objecttypeid_;
  ::google::protobuf::uint32 m_objectnum_;
  ::google::protobuf::uint32 m_objecrank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_task_2etxt();
  friend void protobuf_AssignDesc_task_2etxt();
  friend void protobuf_ShutdownFile_task_2etxt();

  void InitAsDefaultInstance();
  static GMTaskFinishObject* default_instance_;
};
// -------------------------------------------------------------------

class GMTask : public ::google::protobuf::Message {
 public:
  GMTask();
  virtual ~GMTask();

  GMTask(const GMTask& from);

  inline GMTask& operator=(const GMTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMTask& default_instance();

  void Swap(GMTask* other);

  // implements Message ----------------------------------------------

  GMTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMTask& from);
  void MergeFrom(const GMTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 m_PlayerID = 1;
  inline bool has_m_playerid() const;
  inline void clear_m_playerid();
  static const int kMPlayerIDFieldNumber = 1;
  inline ::google::protobuf::uint32 m_playerid() const;
  inline void set_m_playerid(::google::protobuf::uint32 value);

  // required uint32 m_TaskID = 2;
  inline bool has_m_taskid() const;
  inline void clear_m_taskid();
  static const int kMTaskIDFieldNumber = 2;
  inline ::google::protobuf::uint32 m_taskid() const;
  inline void set_m_taskid(::google::protobuf::uint32 value);

  // required int64 m_GMID = 3;
  inline bool has_m_gmid() const;
  inline void clear_m_gmid();
  static const int kMGMIDFieldNumber = 3;
  inline ::google::protobuf::int64 m_gmid() const;
  inline void set_m_gmid(::google::protobuf::int64 value);

  // required uint32 m_State = 4;
  inline bool has_m_state() const;
  inline void clear_m_state();
  static const int kMStateFieldNumber = 4;
  inline ::google::protobuf::uint32 m_state() const;
  inline void set_m_state(::google::protobuf::uint32 value);

  // required string m_Name = 5;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 5;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // required string m_AcceptDescrible = 6;
  inline bool has_m_acceptdescrible() const;
  inline void clear_m_acceptdescrible();
  static const int kMAcceptDescribleFieldNumber = 6;
  inline const ::std::string& m_acceptdescrible() const;
  inline void set_m_acceptdescrible(const ::std::string& value);
  inline void set_m_acceptdescrible(const char* value);
  inline void set_m_acceptdescrible(const char* value, size_t size);
  inline ::std::string* mutable_m_acceptdescrible();
  inline ::std::string* release_m_acceptdescrible();
  inline void set_allocated_m_acceptdescrible(::std::string* m_acceptdescrible);

  // required string m_AcceptTaskDescribe = 7;
  inline bool has_m_accepttaskdescribe() const;
  inline void clear_m_accepttaskdescribe();
  static const int kMAcceptTaskDescribeFieldNumber = 7;
  inline const ::std::string& m_accepttaskdescribe() const;
  inline void set_m_accepttaskdescribe(const ::std::string& value);
  inline void set_m_accepttaskdescribe(const char* value);
  inline void set_m_accepttaskdescribe(const char* value, size_t size);
  inline ::std::string* mutable_m_accepttaskdescribe();
  inline ::std::string* release_m_accepttaskdescribe();
  inline void set_allocated_m_accepttaskdescribe(::std::string* m_accepttaskdescribe);

  // required string m_FinishDescribe = 8;
  inline bool has_m_finishdescribe() const;
  inline void clear_m_finishdescribe();
  static const int kMFinishDescribeFieldNumber = 8;
  inline const ::std::string& m_finishdescribe() const;
  inline void set_m_finishdescribe(const ::std::string& value);
  inline void set_m_finishdescribe(const char* value);
  inline void set_m_finishdescribe(const char* value, size_t size);
  inline ::std::string* mutable_m_finishdescribe();
  inline ::std::string* release_m_finishdescribe();
  inline void set_allocated_m_finishdescribe(::std::string* m_finishdescribe);

  // required int32 m_guideid = 9;
  inline bool has_m_guideid() const;
  inline void clear_m_guideid();
  static const int kMGuideidFieldNumber = 9;
  inline ::google::protobuf::int32 m_guideid() const;
  inline void set_m_guideid(::google::protobuf::int32 value);

  // required int32 m_guidetype = 10;
  inline bool has_m_guidetype() const;
  inline void clear_m_guidetype();
  static const int kMGuidetypeFieldNumber = 10;
  inline ::google::protobuf::int32 m_guidetype() const;
  inline void set_m_guidetype(::google::protobuf::int32 value);

  // required int32 m_guidelevel = 11;
  inline bool has_m_guidelevel() const;
  inline void clear_m_guidelevel();
  static const int kMGuidelevelFieldNumber = 11;
  inline ::google::protobuf::int32 m_guidelevel() const;
  inline void set_m_guidelevel(::google::protobuf::int32 value);

  // required int32 m_rank = 12;
  inline bool has_m_rank() const;
  inline void clear_m_rank();
  static const int kMRankFieldNumber = 12;
  inline ::google::protobuf::int32 m_rank() const;
  inline void set_m_rank(::google::protobuf::int32 value);

  // required uint32 m_Category = 13;
  inline bool has_m_category() const;
  inline void clear_m_category();
  static const int kMCategoryFieldNumber = 13;
  inline ::google::protobuf::uint32 m_category() const;
  inline void set_m_category(::google::protobuf::uint32 value);

  // required uint32 m_LVNeed = 14;
  inline bool has_m_lvneed() const;
  inline void clear_m_lvneed();
  static const int kMLVNeedFieldNumber = 14;
  inline ::google::protobuf::uint32 m_lvneed() const;
  inline void set_m_lvneed(::google::protobuf::uint32 value);

  // repeated .GMTaskCondition m_Condition = 15;
  inline int m_condition_size() const;
  inline void clear_m_condition();
  static const int kMConditionFieldNumber = 15;
  inline const ::GMTaskCondition& m_condition(int index) const;
  inline ::GMTaskCondition* mutable_m_condition(int index);
  inline ::GMTaskCondition* add_m_condition();
  inline const ::google::protobuf::RepeatedPtrField< ::GMTaskCondition >&
      m_condition() const;
  inline ::google::protobuf::RepeatedPtrField< ::GMTaskCondition >*
      mutable_m_condition();

  // repeated .GMTaskFinishObject m_FinishObject = 16;
  inline int m_finishobject_size() const;
  inline void clear_m_finishobject();
  static const int kMFinishObjectFieldNumber = 16;
  inline const ::GMTaskFinishObject& m_finishobject(int index) const;
  inline ::GMTaskFinishObject* mutable_m_finishobject(int index);
  inline ::GMTaskFinishObject* add_m_finishobject();
  inline const ::google::protobuf::RepeatedPtrField< ::GMTaskFinishObject >&
      m_finishobject() const;
  inline ::google::protobuf::RepeatedPtrField< ::GMTaskFinishObject >*
      mutable_m_finishobject();

  // required uint32 m_AcceptNPC = 17;
  inline bool has_m_acceptnpc() const;
  inline void clear_m_acceptnpc();
  static const int kMAcceptNPCFieldNumber = 17;
  inline ::google::protobuf::uint32 m_acceptnpc() const;
  inline void set_m_acceptnpc(::google::protobuf::uint32 value);

  // required uint32 m_CommitNPC = 18;
  inline bool has_m_commitnpc() const;
  inline void clear_m_commitnpc();
  static const int kMCommitNPCFieldNumber = 18;
  inline ::google::protobuf::uint32 m_commitnpc() const;
  inline void set_m_commitnpc(::google::protobuf::uint32 value);

  // optional string m_UnAcceptDescribe = 19;
  inline bool has_m_unacceptdescribe() const;
  inline void clear_m_unacceptdescribe();
  static const int kMUnAcceptDescribeFieldNumber = 19;
  inline const ::std::string& m_unacceptdescribe() const;
  inline void set_m_unacceptdescribe(const ::std::string& value);
  inline void set_m_unacceptdescribe(const char* value);
  inline void set_m_unacceptdescribe(const char* value, size_t size);
  inline ::std::string* mutable_m_unacceptdescribe();
  inline ::std::string* release_m_unacceptdescribe();
  inline void set_allocated_m_unacceptdescribe(::std::string* m_unacceptdescribe);

  // optional int32 m_kind = 20;
  inline bool has_m_kind() const;
  inline void clear_m_kind();
  static const int kMKindFieldNumber = 20;
  inline ::google::protobuf::int32 m_kind() const;
  inline void set_m_kind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMTask)
 private:
  inline void set_has_m_playerid();
  inline void clear_has_m_playerid();
  inline void set_has_m_taskid();
  inline void clear_has_m_taskid();
  inline void set_has_m_gmid();
  inline void clear_has_m_gmid();
  inline void set_has_m_state();
  inline void clear_has_m_state();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_acceptdescrible();
  inline void clear_has_m_acceptdescrible();
  inline void set_has_m_accepttaskdescribe();
  inline void clear_has_m_accepttaskdescribe();
  inline void set_has_m_finishdescribe();
  inline void clear_has_m_finishdescribe();
  inline void set_has_m_guideid();
  inline void clear_has_m_guideid();
  inline void set_has_m_guidetype();
  inline void clear_has_m_guidetype();
  inline void set_has_m_guidelevel();
  inline void clear_has_m_guidelevel();
  inline void set_has_m_rank();
  inline void clear_has_m_rank();
  inline void set_has_m_category();
  inline void clear_has_m_category();
  inline void set_has_m_lvneed();
  inline void clear_has_m_lvneed();
  inline void set_has_m_acceptnpc();
  inline void clear_has_m_acceptnpc();
  inline void set_has_m_commitnpc();
  inline void clear_has_m_commitnpc();
  inline void set_has_m_unacceptdescribe();
  inline void clear_has_m_unacceptdescribe();
  inline void set_has_m_kind();
  inline void clear_has_m_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 m_playerid_;
  ::google::protobuf::uint32 m_taskid_;
  ::google::protobuf::int64 m_gmid_;
  ::std::string* m_name_;
  ::std::string* m_acceptdescrible_;
  ::google::protobuf::uint32 m_state_;
  ::google::protobuf::int32 m_guideid_;
  ::std::string* m_accepttaskdescribe_;
  ::std::string* m_finishdescribe_;
  ::google::protobuf::int32 m_guidetype_;
  ::google::protobuf::int32 m_guidelevel_;
  ::google::protobuf::int32 m_rank_;
  ::google::protobuf::uint32 m_category_;
  ::google::protobuf::RepeatedPtrField< ::GMTaskCondition > m_condition_;
  ::google::protobuf::uint32 m_lvneed_;
  ::google::protobuf::uint32 m_acceptnpc_;
  ::google::protobuf::RepeatedPtrField< ::GMTaskFinishObject > m_finishobject_;
  ::std::string* m_unacceptdescribe_;
  ::google::protobuf::uint32 m_commitnpc_;
  ::google::protobuf::int32 m_kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];

  friend void  protobuf_AddDesc_task_2etxt();
  friend void protobuf_AssignDesc_task_2etxt();
  friend void protobuf_ShutdownFile_task_2etxt();

  void InitAsDefaultInstance();
  static GMTask* default_instance_;
};
// -------------------------------------------------------------------

class GMTaskCollect : public ::google::protobuf::Message {
 public:
  GMTaskCollect();
  virtual ~GMTaskCollect();

  GMTaskCollect(const GMTaskCollect& from);

  inline GMTaskCollect& operator=(const GMTaskCollect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMTaskCollect& default_instance();

  void Swap(GMTaskCollect* other);

  // implements Message ----------------------------------------------

  GMTaskCollect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMTaskCollect& from);
  void MergeFrom(const GMTaskCollect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 m_Count = 1;
  inline bool has_m_count() const;
  inline void clear_m_count();
  static const int kMCountFieldNumber = 1;
  inline ::google::protobuf::uint32 m_count() const;
  inline void set_m_count(::google::protobuf::uint32 value);

  // repeated .GMTask m_Tasks = 2;
  inline int m_tasks_size() const;
  inline void clear_m_tasks();
  static const int kMTasksFieldNumber = 2;
  inline const ::GMTask& m_tasks(int index) const;
  inline ::GMTask* mutable_m_tasks(int index);
  inline ::GMTask* add_m_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::GMTask >&
      m_tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::GMTask >*
      mutable_m_tasks();

  // @@protoc_insertion_point(class_scope:GMTaskCollect)
 private:
  inline void set_has_m_count();
  inline void clear_has_m_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GMTask > m_tasks_;
  ::google::protobuf::uint32 m_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_task_2etxt();
  friend void protobuf_AssignDesc_task_2etxt();
  friend void protobuf_ShutdownFile_task_2etxt();

  void InitAsDefaultInstance();
  static GMTaskCollect* default_instance_;
};
// -------------------------------------------------------------------

class GM_Task_Finsh : public ::google::protobuf::Message {
 public:
  GM_Task_Finsh();
  virtual ~GM_Task_Finsh();

  GM_Task_Finsh(const GM_Task_Finsh& from);

  inline GM_Task_Finsh& operator=(const GM_Task_Finsh& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Task_Finsh& default_instance();

  void Swap(GM_Task_Finsh* other);

  // implements Message ----------------------------------------------

  GM_Task_Finsh* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Task_Finsh& from);
  void MergeFrom(const GM_Task_Finsh& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 m_TaskID = 1;
  inline bool has_m_taskid() const;
  inline void clear_m_taskid();
  static const int kMTaskIDFieldNumber = 1;
  inline ::google::protobuf::int64 m_taskid() const;
  inline void set_m_taskid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_Task_Finsh)
 private:
  inline void set_has_m_taskid();
  inline void clear_has_m_taskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_taskid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_task_2etxt();
  friend void protobuf_AssignDesc_task_2etxt();
  friend void protobuf_ShutdownFile_task_2etxt();

  void InitAsDefaultInstance();
  static GM_Task_Finsh* default_instance_;
};
// -------------------------------------------------------------------

class GM_TaskResult : public ::google::protobuf::Message {
 public:
  GM_TaskResult();
  virtual ~GM_TaskResult();

  GM_TaskResult(const GM_TaskResult& from);

  inline GM_TaskResult& operator=(const GM_TaskResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_TaskResult& default_instance();

  void Swap(GM_TaskResult* other);

  // implements Message ----------------------------------------------

  GM_TaskResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_TaskResult& from);
  void MergeFrom(const GM_TaskResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 m_byte = 1;
  inline bool has_m_byte() const;
  inline void clear_m_byte();
  static const int kMByteFieldNumber = 1;
  inline ::google::protobuf::uint32 m_byte() const;
  inline void set_m_byte(::google::protobuf::uint32 value);

  // optional int64 m_gmid = 2;
  inline bool has_m_gmid() const;
  inline void clear_m_gmid();
  static const int kMGmidFieldNumber = 2;
  inline ::google::protobuf::int64 m_gmid() const;
  inline void set_m_gmid(::google::protobuf::int64 value);

  // optional int32 m_task_state = 3;
  inline bool has_m_task_state() const;
  inline void clear_m_task_state();
  static const int kMTaskStateFieldNumber = 3;
  inline ::google::protobuf::int32 m_task_state() const;
  inline void set_m_task_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_TaskResult)
 private:
  inline void set_has_m_byte();
  inline void clear_has_m_byte();
  inline void set_has_m_gmid();
  inline void clear_has_m_gmid();
  inline void set_has_m_task_state();
  inline void clear_has_m_task_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_gmid_;
  ::google::protobuf::uint32 m_byte_;
  ::google::protobuf::int32 m_task_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_task_2etxt();
  friend void protobuf_AssignDesc_task_2etxt();
  friend void protobuf_ShutdownFile_task_2etxt();

  void InitAsDefaultInstance();
  static GM_TaskResult* default_instance_;
};
// -------------------------------------------------------------------

class GM_CommitTask : public ::google::protobuf::Message {
 public:
  GM_CommitTask();
  virtual ~GM_CommitTask();

  GM_CommitTask(const GM_CommitTask& from);

  inline GM_CommitTask& operator=(const GM_CommitTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_CommitTask& default_instance();

  void Swap(GM_CommitTask* other);

  // implements Message ----------------------------------------------

  GM_CommitTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_CommitTask& from);
  void MergeFrom(const GM_CommitTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 m_gmid = 1;
  inline bool has_m_gmid() const;
  inline void clear_m_gmid();
  static const int kMGmidFieldNumber = 1;
  inline ::google::protobuf::int64 m_gmid() const;
  inline void set_m_gmid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_CommitTask)
 private:
  inline void set_has_m_gmid();
  inline void clear_has_m_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_gmid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_task_2etxt();
  friend void protobuf_AssignDesc_task_2etxt();
  friend void protobuf_ShutdownFile_task_2etxt();

  void InitAsDefaultInstance();
  static GM_CommitTask* default_instance_;
};
// -------------------------------------------------------------------

class GM_AcceptTask : public ::google::protobuf::Message {
 public:
  GM_AcceptTask();
  virtual ~GM_AcceptTask();

  GM_AcceptTask(const GM_AcceptTask& from);

  inline GM_AcceptTask& operator=(const GM_AcceptTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_AcceptTask& default_instance();

  void Swap(GM_AcceptTask* other);

  // implements Message ----------------------------------------------

  GM_AcceptTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_AcceptTask& from);
  void MergeFrom(const GM_AcceptTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 m_gmid = 1;
  inline bool has_m_gmid() const;
  inline void clear_m_gmid();
  static const int kMGmidFieldNumber = 1;
  inline ::google::protobuf::int64 m_gmid() const;
  inline void set_m_gmid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_AcceptTask)
 private:
  inline void set_has_m_gmid();
  inline void clear_has_m_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_gmid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_task_2etxt();
  friend void protobuf_AssignDesc_task_2etxt();
  friend void protobuf_ShutdownFile_task_2etxt();

  void InitAsDefaultInstance();
  static GM_AcceptTask* default_instance_;
};
// -------------------------------------------------------------------

class GMUpdateTaskCondition : public ::google::protobuf::Message {
 public:
  GMUpdateTaskCondition();
  virtual ~GMUpdateTaskCondition();

  GMUpdateTaskCondition(const GMUpdateTaskCondition& from);

  inline GMUpdateTaskCondition& operator=(const GMUpdateTaskCondition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMUpdateTaskCondition& default_instance();

  void Swap(GMUpdateTaskCondition* other);

  // implements Message ----------------------------------------------

  GMUpdateTaskCondition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMUpdateTaskCondition& from);
  void MergeFrom(const GMUpdateTaskCondition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 m_GMID = 1;
  inline bool has_m_gmid() const;
  inline void clear_m_gmid();
  static const int kMGMIDFieldNumber = 1;
  inline ::google::protobuf::int64 m_gmid() const;
  inline void set_m_gmid(::google::protobuf::int64 value);

  // repeated .GMTaskCondition m_condition = 2;
  inline int m_condition_size() const;
  inline void clear_m_condition();
  static const int kMConditionFieldNumber = 2;
  inline const ::GMTaskCondition& m_condition(int index) const;
  inline ::GMTaskCondition* mutable_m_condition(int index);
  inline ::GMTaskCondition* add_m_condition();
  inline const ::google::protobuf::RepeatedPtrField< ::GMTaskCondition >&
      m_condition() const;
  inline ::google::protobuf::RepeatedPtrField< ::GMTaskCondition >*
      mutable_m_condition();

  // @@protoc_insertion_point(class_scope:GMUpdateTaskCondition)
 private:
  inline void set_has_m_gmid();
  inline void clear_has_m_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_gmid_;
  ::google::protobuf::RepeatedPtrField< ::GMTaskCondition > m_condition_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_task_2etxt();
  friend void protobuf_AssignDesc_task_2etxt();
  friend void protobuf_ShutdownFile_task_2etxt();

  void InitAsDefaultInstance();
  static GMUpdateTaskCondition* default_instance_;
};
// -------------------------------------------------------------------

class GM_TalkEvent : public ::google::protobuf::Message {
 public:
  GM_TalkEvent();
  virtual ~GM_TalkEvent();

  GM_TalkEvent(const GM_TalkEvent& from);

  inline GM_TalkEvent& operator=(const GM_TalkEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_TalkEvent& default_instance();

  void Swap(GM_TalkEvent* other);

  // implements Message ----------------------------------------------

  GM_TalkEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_TalkEvent& from);
  void MergeFrom(const GM_TalkEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 NPCID = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNPCIDFieldNumber = 1;
  inline ::google::protobuf::int32 npcid() const;
  inline void set_npcid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_TalkEvent)
 private:
  inline void set_has_npcid();
  inline void clear_has_npcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 npcid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_task_2etxt();
  friend void protobuf_AssignDesc_task_2etxt();
  friend void protobuf_ShutdownFile_task_2etxt();

  void InitAsDefaultInstance();
  static GM_TalkEvent* default_instance_;
};
// ===================================================================


// ===================================================================

// GMTaskCondition

// required uint32 m_ID = 1;
inline bool GMTaskCondition::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMTaskCondition::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMTaskCondition::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMTaskCondition::clear_m_id() {
  m_id_ = 0u;
  clear_has_m_id();
}
inline ::google::protobuf::uint32 GMTaskCondition::m_id() const {
  return m_id_;
}
inline void GMTaskCondition::set_m_id(::google::protobuf::uint32 value) {
  set_has_m_id();
  m_id_ = value;
}

// required uint32 m_Type = 2;
inline bool GMTaskCondition::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMTaskCondition::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMTaskCondition::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMTaskCondition::clear_m_type() {
  m_type_ = 0u;
  clear_has_m_type();
}
inline ::google::protobuf::uint32 GMTaskCondition::m_type() const {
  return m_type_;
}
inline void GMTaskCondition::set_m_type(::google::protobuf::uint32 value) {
  set_has_m_type();
  m_type_ = value;
}

// required uint32 m_FinishNum = 3;
inline bool GMTaskCondition::has_m_finishnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMTaskCondition::set_has_m_finishnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMTaskCondition::clear_has_m_finishnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMTaskCondition::clear_m_finishnum() {
  m_finishnum_ = 0u;
  clear_has_m_finishnum();
}
inline ::google::protobuf::uint32 GMTaskCondition::m_finishnum() const {
  return m_finishnum_;
}
inline void GMTaskCondition::set_m_finishnum(::google::protobuf::uint32 value) {
  set_has_m_finishnum();
  m_finishnum_ = value;
}

// required uint32 m_NeedNum = 4;
inline bool GMTaskCondition::has_m_neednum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMTaskCondition::set_has_m_neednum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMTaskCondition::clear_has_m_neednum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMTaskCondition::clear_m_neednum() {
  m_neednum_ = 0u;
  clear_has_m_neednum();
}
inline ::google::protobuf::uint32 GMTaskCondition::m_neednum() const {
  return m_neednum_;
}
inline void GMTaskCondition::set_m_neednum(::google::protobuf::uint32 value) {
  set_has_m_neednum();
  m_neednum_ = value;
}

// -------------------------------------------------------------------

// GMTaskFinishObject

// required uint32 m_ObjectTypeID = 1;
inline bool GMTaskFinishObject::has_m_objecttypeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMTaskFinishObject::set_has_m_objecttypeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMTaskFinishObject::clear_has_m_objecttypeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMTaskFinishObject::clear_m_objecttypeid() {
  m_objecttypeid_ = 0u;
  clear_has_m_objecttypeid();
}
inline ::google::protobuf::uint32 GMTaskFinishObject::m_objecttypeid() const {
  return m_objecttypeid_;
}
inline void GMTaskFinishObject::set_m_objecttypeid(::google::protobuf::uint32 value) {
  set_has_m_objecttypeid();
  m_objecttypeid_ = value;
}

// required uint32 m_ObjectNum = 2;
inline bool GMTaskFinishObject::has_m_objectnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMTaskFinishObject::set_has_m_objectnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMTaskFinishObject::clear_has_m_objectnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMTaskFinishObject::clear_m_objectnum() {
  m_objectnum_ = 0u;
  clear_has_m_objectnum();
}
inline ::google::protobuf::uint32 GMTaskFinishObject::m_objectnum() const {
  return m_objectnum_;
}
inline void GMTaskFinishObject::set_m_objectnum(::google::protobuf::uint32 value) {
  set_has_m_objectnum();
  m_objectnum_ = value;
}

// required uint32 m_ObjecRank = 3;
inline bool GMTaskFinishObject::has_m_objecrank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMTaskFinishObject::set_has_m_objecrank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMTaskFinishObject::clear_has_m_objecrank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMTaskFinishObject::clear_m_objecrank() {
  m_objecrank_ = 0u;
  clear_has_m_objecrank();
}
inline ::google::protobuf::uint32 GMTaskFinishObject::m_objecrank() const {
  return m_objecrank_;
}
inline void GMTaskFinishObject::set_m_objecrank(::google::protobuf::uint32 value) {
  set_has_m_objecrank();
  m_objecrank_ = value;
}

// -------------------------------------------------------------------

// GMTask

// required uint32 m_PlayerID = 1;
inline bool GMTask::has_m_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMTask::set_has_m_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMTask::clear_has_m_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMTask::clear_m_playerid() {
  m_playerid_ = 0u;
  clear_has_m_playerid();
}
inline ::google::protobuf::uint32 GMTask::m_playerid() const {
  return m_playerid_;
}
inline void GMTask::set_m_playerid(::google::protobuf::uint32 value) {
  set_has_m_playerid();
  m_playerid_ = value;
}

// required uint32 m_TaskID = 2;
inline bool GMTask::has_m_taskid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMTask::set_has_m_taskid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMTask::clear_has_m_taskid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMTask::clear_m_taskid() {
  m_taskid_ = 0u;
  clear_has_m_taskid();
}
inline ::google::protobuf::uint32 GMTask::m_taskid() const {
  return m_taskid_;
}
inline void GMTask::set_m_taskid(::google::protobuf::uint32 value) {
  set_has_m_taskid();
  m_taskid_ = value;
}

// required int64 m_GMID = 3;
inline bool GMTask::has_m_gmid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMTask::set_has_m_gmid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMTask::clear_has_m_gmid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMTask::clear_m_gmid() {
  m_gmid_ = GOOGLE_LONGLONG(0);
  clear_has_m_gmid();
}
inline ::google::protobuf::int64 GMTask::m_gmid() const {
  return m_gmid_;
}
inline void GMTask::set_m_gmid(::google::protobuf::int64 value) {
  set_has_m_gmid();
  m_gmid_ = value;
}

// required uint32 m_State = 4;
inline bool GMTask::has_m_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMTask::set_has_m_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMTask::clear_has_m_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMTask::clear_m_state() {
  m_state_ = 0u;
  clear_has_m_state();
}
inline ::google::protobuf::uint32 GMTask::m_state() const {
  return m_state_;
}
inline void GMTask::set_m_state(::google::protobuf::uint32 value) {
  set_has_m_state();
  m_state_ = value;
}

// required string m_Name = 5;
inline bool GMTask::has_m_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GMTask::set_has_m_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GMTask::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GMTask::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& GMTask::m_name() const {
  return *m_name_;
}
inline void GMTask::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GMTask::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GMTask::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMTask::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* GMTask::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMTask::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string m_AcceptDescrible = 6;
inline bool GMTask::has_m_acceptdescrible() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GMTask::set_has_m_acceptdescrible() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GMTask::clear_has_m_acceptdescrible() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GMTask::clear_m_acceptdescrible() {
  if (m_acceptdescrible_ != &::google::protobuf::internal::kEmptyString) {
    m_acceptdescrible_->clear();
  }
  clear_has_m_acceptdescrible();
}
inline const ::std::string& GMTask::m_acceptdescrible() const {
  return *m_acceptdescrible_;
}
inline void GMTask::set_m_acceptdescrible(const ::std::string& value) {
  set_has_m_acceptdescrible();
  if (m_acceptdescrible_ == &::google::protobuf::internal::kEmptyString) {
    m_acceptdescrible_ = new ::std::string;
  }
  m_acceptdescrible_->assign(value);
}
inline void GMTask::set_m_acceptdescrible(const char* value) {
  set_has_m_acceptdescrible();
  if (m_acceptdescrible_ == &::google::protobuf::internal::kEmptyString) {
    m_acceptdescrible_ = new ::std::string;
  }
  m_acceptdescrible_->assign(value);
}
inline void GMTask::set_m_acceptdescrible(const char* value, size_t size) {
  set_has_m_acceptdescrible();
  if (m_acceptdescrible_ == &::google::protobuf::internal::kEmptyString) {
    m_acceptdescrible_ = new ::std::string;
  }
  m_acceptdescrible_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMTask::mutable_m_acceptdescrible() {
  set_has_m_acceptdescrible();
  if (m_acceptdescrible_ == &::google::protobuf::internal::kEmptyString) {
    m_acceptdescrible_ = new ::std::string;
  }
  return m_acceptdescrible_;
}
inline ::std::string* GMTask::release_m_acceptdescrible() {
  clear_has_m_acceptdescrible();
  if (m_acceptdescrible_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_acceptdescrible_;
    m_acceptdescrible_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMTask::set_allocated_m_acceptdescrible(::std::string* m_acceptdescrible) {
  if (m_acceptdescrible_ != &::google::protobuf::internal::kEmptyString) {
    delete m_acceptdescrible_;
  }
  if (m_acceptdescrible) {
    set_has_m_acceptdescrible();
    m_acceptdescrible_ = m_acceptdescrible;
  } else {
    clear_has_m_acceptdescrible();
    m_acceptdescrible_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string m_AcceptTaskDescribe = 7;
inline bool GMTask::has_m_accepttaskdescribe() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GMTask::set_has_m_accepttaskdescribe() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GMTask::clear_has_m_accepttaskdescribe() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GMTask::clear_m_accepttaskdescribe() {
  if (m_accepttaskdescribe_ != &::google::protobuf::internal::kEmptyString) {
    m_accepttaskdescribe_->clear();
  }
  clear_has_m_accepttaskdescribe();
}
inline const ::std::string& GMTask::m_accepttaskdescribe() const {
  return *m_accepttaskdescribe_;
}
inline void GMTask::set_m_accepttaskdescribe(const ::std::string& value) {
  set_has_m_accepttaskdescribe();
  if (m_accepttaskdescribe_ == &::google::protobuf::internal::kEmptyString) {
    m_accepttaskdescribe_ = new ::std::string;
  }
  m_accepttaskdescribe_->assign(value);
}
inline void GMTask::set_m_accepttaskdescribe(const char* value) {
  set_has_m_accepttaskdescribe();
  if (m_accepttaskdescribe_ == &::google::protobuf::internal::kEmptyString) {
    m_accepttaskdescribe_ = new ::std::string;
  }
  m_accepttaskdescribe_->assign(value);
}
inline void GMTask::set_m_accepttaskdescribe(const char* value, size_t size) {
  set_has_m_accepttaskdescribe();
  if (m_accepttaskdescribe_ == &::google::protobuf::internal::kEmptyString) {
    m_accepttaskdescribe_ = new ::std::string;
  }
  m_accepttaskdescribe_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMTask::mutable_m_accepttaskdescribe() {
  set_has_m_accepttaskdescribe();
  if (m_accepttaskdescribe_ == &::google::protobuf::internal::kEmptyString) {
    m_accepttaskdescribe_ = new ::std::string;
  }
  return m_accepttaskdescribe_;
}
inline ::std::string* GMTask::release_m_accepttaskdescribe() {
  clear_has_m_accepttaskdescribe();
  if (m_accepttaskdescribe_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_accepttaskdescribe_;
    m_accepttaskdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMTask::set_allocated_m_accepttaskdescribe(::std::string* m_accepttaskdescribe) {
  if (m_accepttaskdescribe_ != &::google::protobuf::internal::kEmptyString) {
    delete m_accepttaskdescribe_;
  }
  if (m_accepttaskdescribe) {
    set_has_m_accepttaskdescribe();
    m_accepttaskdescribe_ = m_accepttaskdescribe;
  } else {
    clear_has_m_accepttaskdescribe();
    m_accepttaskdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string m_FinishDescribe = 8;
inline bool GMTask::has_m_finishdescribe() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GMTask::set_has_m_finishdescribe() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GMTask::clear_has_m_finishdescribe() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GMTask::clear_m_finishdescribe() {
  if (m_finishdescribe_ != &::google::protobuf::internal::kEmptyString) {
    m_finishdescribe_->clear();
  }
  clear_has_m_finishdescribe();
}
inline const ::std::string& GMTask::m_finishdescribe() const {
  return *m_finishdescribe_;
}
inline void GMTask::set_m_finishdescribe(const ::std::string& value) {
  set_has_m_finishdescribe();
  if (m_finishdescribe_ == &::google::protobuf::internal::kEmptyString) {
    m_finishdescribe_ = new ::std::string;
  }
  m_finishdescribe_->assign(value);
}
inline void GMTask::set_m_finishdescribe(const char* value) {
  set_has_m_finishdescribe();
  if (m_finishdescribe_ == &::google::protobuf::internal::kEmptyString) {
    m_finishdescribe_ = new ::std::string;
  }
  m_finishdescribe_->assign(value);
}
inline void GMTask::set_m_finishdescribe(const char* value, size_t size) {
  set_has_m_finishdescribe();
  if (m_finishdescribe_ == &::google::protobuf::internal::kEmptyString) {
    m_finishdescribe_ = new ::std::string;
  }
  m_finishdescribe_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMTask::mutable_m_finishdescribe() {
  set_has_m_finishdescribe();
  if (m_finishdescribe_ == &::google::protobuf::internal::kEmptyString) {
    m_finishdescribe_ = new ::std::string;
  }
  return m_finishdescribe_;
}
inline ::std::string* GMTask::release_m_finishdescribe() {
  clear_has_m_finishdescribe();
  if (m_finishdescribe_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_finishdescribe_;
    m_finishdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMTask::set_allocated_m_finishdescribe(::std::string* m_finishdescribe) {
  if (m_finishdescribe_ != &::google::protobuf::internal::kEmptyString) {
    delete m_finishdescribe_;
  }
  if (m_finishdescribe) {
    set_has_m_finishdescribe();
    m_finishdescribe_ = m_finishdescribe;
  } else {
    clear_has_m_finishdescribe();
    m_finishdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 m_guideid = 9;
inline bool GMTask::has_m_guideid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GMTask::set_has_m_guideid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GMTask::clear_has_m_guideid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GMTask::clear_m_guideid() {
  m_guideid_ = 0;
  clear_has_m_guideid();
}
inline ::google::protobuf::int32 GMTask::m_guideid() const {
  return m_guideid_;
}
inline void GMTask::set_m_guideid(::google::protobuf::int32 value) {
  set_has_m_guideid();
  m_guideid_ = value;
}

// required int32 m_guidetype = 10;
inline bool GMTask::has_m_guidetype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GMTask::set_has_m_guidetype() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GMTask::clear_has_m_guidetype() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GMTask::clear_m_guidetype() {
  m_guidetype_ = 0;
  clear_has_m_guidetype();
}
inline ::google::protobuf::int32 GMTask::m_guidetype() const {
  return m_guidetype_;
}
inline void GMTask::set_m_guidetype(::google::protobuf::int32 value) {
  set_has_m_guidetype();
  m_guidetype_ = value;
}

// required int32 m_guidelevel = 11;
inline bool GMTask::has_m_guidelevel() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GMTask::set_has_m_guidelevel() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GMTask::clear_has_m_guidelevel() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GMTask::clear_m_guidelevel() {
  m_guidelevel_ = 0;
  clear_has_m_guidelevel();
}
inline ::google::protobuf::int32 GMTask::m_guidelevel() const {
  return m_guidelevel_;
}
inline void GMTask::set_m_guidelevel(::google::protobuf::int32 value) {
  set_has_m_guidelevel();
  m_guidelevel_ = value;
}

// required int32 m_rank = 12;
inline bool GMTask::has_m_rank() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GMTask::set_has_m_rank() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GMTask::clear_has_m_rank() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GMTask::clear_m_rank() {
  m_rank_ = 0;
  clear_has_m_rank();
}
inline ::google::protobuf::int32 GMTask::m_rank() const {
  return m_rank_;
}
inline void GMTask::set_m_rank(::google::protobuf::int32 value) {
  set_has_m_rank();
  m_rank_ = value;
}

// required uint32 m_Category = 13;
inline bool GMTask::has_m_category() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GMTask::set_has_m_category() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GMTask::clear_has_m_category() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GMTask::clear_m_category() {
  m_category_ = 0u;
  clear_has_m_category();
}
inline ::google::protobuf::uint32 GMTask::m_category() const {
  return m_category_;
}
inline void GMTask::set_m_category(::google::protobuf::uint32 value) {
  set_has_m_category();
  m_category_ = value;
}

// required uint32 m_LVNeed = 14;
inline bool GMTask::has_m_lvneed() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GMTask::set_has_m_lvneed() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GMTask::clear_has_m_lvneed() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GMTask::clear_m_lvneed() {
  m_lvneed_ = 0u;
  clear_has_m_lvneed();
}
inline ::google::protobuf::uint32 GMTask::m_lvneed() const {
  return m_lvneed_;
}
inline void GMTask::set_m_lvneed(::google::protobuf::uint32 value) {
  set_has_m_lvneed();
  m_lvneed_ = value;
}

// repeated .GMTaskCondition m_Condition = 15;
inline int GMTask::m_condition_size() const {
  return m_condition_.size();
}
inline void GMTask::clear_m_condition() {
  m_condition_.Clear();
}
inline const ::GMTaskCondition& GMTask::m_condition(int index) const {
  return m_condition_.Get(index);
}
inline ::GMTaskCondition* GMTask::mutable_m_condition(int index) {
  return m_condition_.Mutable(index);
}
inline ::GMTaskCondition* GMTask::add_m_condition() {
  return m_condition_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GMTaskCondition >&
GMTask::m_condition() const {
  return m_condition_;
}
inline ::google::protobuf::RepeatedPtrField< ::GMTaskCondition >*
GMTask::mutable_m_condition() {
  return &m_condition_;
}

// repeated .GMTaskFinishObject m_FinishObject = 16;
inline int GMTask::m_finishobject_size() const {
  return m_finishobject_.size();
}
inline void GMTask::clear_m_finishobject() {
  m_finishobject_.Clear();
}
inline const ::GMTaskFinishObject& GMTask::m_finishobject(int index) const {
  return m_finishobject_.Get(index);
}
inline ::GMTaskFinishObject* GMTask::mutable_m_finishobject(int index) {
  return m_finishobject_.Mutable(index);
}
inline ::GMTaskFinishObject* GMTask::add_m_finishobject() {
  return m_finishobject_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GMTaskFinishObject >&
GMTask::m_finishobject() const {
  return m_finishobject_;
}
inline ::google::protobuf::RepeatedPtrField< ::GMTaskFinishObject >*
GMTask::mutable_m_finishobject() {
  return &m_finishobject_;
}

// required uint32 m_AcceptNPC = 17;
inline bool GMTask::has_m_acceptnpc() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GMTask::set_has_m_acceptnpc() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GMTask::clear_has_m_acceptnpc() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GMTask::clear_m_acceptnpc() {
  m_acceptnpc_ = 0u;
  clear_has_m_acceptnpc();
}
inline ::google::protobuf::uint32 GMTask::m_acceptnpc() const {
  return m_acceptnpc_;
}
inline void GMTask::set_m_acceptnpc(::google::protobuf::uint32 value) {
  set_has_m_acceptnpc();
  m_acceptnpc_ = value;
}

// required uint32 m_CommitNPC = 18;
inline bool GMTask::has_m_commitnpc() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GMTask::set_has_m_commitnpc() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GMTask::clear_has_m_commitnpc() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GMTask::clear_m_commitnpc() {
  m_commitnpc_ = 0u;
  clear_has_m_commitnpc();
}
inline ::google::protobuf::uint32 GMTask::m_commitnpc() const {
  return m_commitnpc_;
}
inline void GMTask::set_m_commitnpc(::google::protobuf::uint32 value) {
  set_has_m_commitnpc();
  m_commitnpc_ = value;
}

// optional string m_UnAcceptDescribe = 19;
inline bool GMTask::has_m_unacceptdescribe() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void GMTask::set_has_m_unacceptdescribe() {
  _has_bits_[0] |= 0x00040000u;
}
inline void GMTask::clear_has_m_unacceptdescribe() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void GMTask::clear_m_unacceptdescribe() {
  if (m_unacceptdescribe_ != &::google::protobuf::internal::kEmptyString) {
    m_unacceptdescribe_->clear();
  }
  clear_has_m_unacceptdescribe();
}
inline const ::std::string& GMTask::m_unacceptdescribe() const {
  return *m_unacceptdescribe_;
}
inline void GMTask::set_m_unacceptdescribe(const ::std::string& value) {
  set_has_m_unacceptdescribe();
  if (m_unacceptdescribe_ == &::google::protobuf::internal::kEmptyString) {
    m_unacceptdescribe_ = new ::std::string;
  }
  m_unacceptdescribe_->assign(value);
}
inline void GMTask::set_m_unacceptdescribe(const char* value) {
  set_has_m_unacceptdescribe();
  if (m_unacceptdescribe_ == &::google::protobuf::internal::kEmptyString) {
    m_unacceptdescribe_ = new ::std::string;
  }
  m_unacceptdescribe_->assign(value);
}
inline void GMTask::set_m_unacceptdescribe(const char* value, size_t size) {
  set_has_m_unacceptdescribe();
  if (m_unacceptdescribe_ == &::google::protobuf::internal::kEmptyString) {
    m_unacceptdescribe_ = new ::std::string;
  }
  m_unacceptdescribe_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMTask::mutable_m_unacceptdescribe() {
  set_has_m_unacceptdescribe();
  if (m_unacceptdescribe_ == &::google::protobuf::internal::kEmptyString) {
    m_unacceptdescribe_ = new ::std::string;
  }
  return m_unacceptdescribe_;
}
inline ::std::string* GMTask::release_m_unacceptdescribe() {
  clear_has_m_unacceptdescribe();
  if (m_unacceptdescribe_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_unacceptdescribe_;
    m_unacceptdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMTask::set_allocated_m_unacceptdescribe(::std::string* m_unacceptdescribe) {
  if (m_unacceptdescribe_ != &::google::protobuf::internal::kEmptyString) {
    delete m_unacceptdescribe_;
  }
  if (m_unacceptdescribe) {
    set_has_m_unacceptdescribe();
    m_unacceptdescribe_ = m_unacceptdescribe;
  } else {
    clear_has_m_unacceptdescribe();
    m_unacceptdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_kind = 20;
inline bool GMTask::has_m_kind() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void GMTask::set_has_m_kind() {
  _has_bits_[0] |= 0x00080000u;
}
inline void GMTask::clear_has_m_kind() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void GMTask::clear_m_kind() {
  m_kind_ = 0;
  clear_has_m_kind();
}
inline ::google::protobuf::int32 GMTask::m_kind() const {
  return m_kind_;
}
inline void GMTask::set_m_kind(::google::protobuf::int32 value) {
  set_has_m_kind();
  m_kind_ = value;
}

// -------------------------------------------------------------------

// GMTaskCollect

// required uint32 m_Count = 1;
inline bool GMTaskCollect::has_m_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMTaskCollect::set_has_m_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMTaskCollect::clear_has_m_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMTaskCollect::clear_m_count() {
  m_count_ = 0u;
  clear_has_m_count();
}
inline ::google::protobuf::uint32 GMTaskCollect::m_count() const {
  return m_count_;
}
inline void GMTaskCollect::set_m_count(::google::protobuf::uint32 value) {
  set_has_m_count();
  m_count_ = value;
}

// repeated .GMTask m_Tasks = 2;
inline int GMTaskCollect::m_tasks_size() const {
  return m_tasks_.size();
}
inline void GMTaskCollect::clear_m_tasks() {
  m_tasks_.Clear();
}
inline const ::GMTask& GMTaskCollect::m_tasks(int index) const {
  return m_tasks_.Get(index);
}
inline ::GMTask* GMTaskCollect::mutable_m_tasks(int index) {
  return m_tasks_.Mutable(index);
}
inline ::GMTask* GMTaskCollect::add_m_tasks() {
  return m_tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GMTask >&
GMTaskCollect::m_tasks() const {
  return m_tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::GMTask >*
GMTaskCollect::mutable_m_tasks() {
  return &m_tasks_;
}

// -------------------------------------------------------------------

// GM_Task_Finsh

// required int64 m_TaskID = 1;
inline bool GM_Task_Finsh::has_m_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Task_Finsh::set_has_m_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Task_Finsh::clear_has_m_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Task_Finsh::clear_m_taskid() {
  m_taskid_ = GOOGLE_LONGLONG(0);
  clear_has_m_taskid();
}
inline ::google::protobuf::int64 GM_Task_Finsh::m_taskid() const {
  return m_taskid_;
}
inline void GM_Task_Finsh::set_m_taskid(::google::protobuf::int64 value) {
  set_has_m_taskid();
  m_taskid_ = value;
}

// -------------------------------------------------------------------

// GM_TaskResult

// required uint32 m_byte = 1;
inline bool GM_TaskResult::has_m_byte() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_TaskResult::set_has_m_byte() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_TaskResult::clear_has_m_byte() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_TaskResult::clear_m_byte() {
  m_byte_ = 0u;
  clear_has_m_byte();
}
inline ::google::protobuf::uint32 GM_TaskResult::m_byte() const {
  return m_byte_;
}
inline void GM_TaskResult::set_m_byte(::google::protobuf::uint32 value) {
  set_has_m_byte();
  m_byte_ = value;
}

// optional int64 m_gmid = 2;
inline bool GM_TaskResult::has_m_gmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_TaskResult::set_has_m_gmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_TaskResult::clear_has_m_gmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_TaskResult::clear_m_gmid() {
  m_gmid_ = GOOGLE_LONGLONG(0);
  clear_has_m_gmid();
}
inline ::google::protobuf::int64 GM_TaskResult::m_gmid() const {
  return m_gmid_;
}
inline void GM_TaskResult::set_m_gmid(::google::protobuf::int64 value) {
  set_has_m_gmid();
  m_gmid_ = value;
}

// optional int32 m_task_state = 3;
inline bool GM_TaskResult::has_m_task_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_TaskResult::set_has_m_task_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_TaskResult::clear_has_m_task_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_TaskResult::clear_m_task_state() {
  m_task_state_ = 0;
  clear_has_m_task_state();
}
inline ::google::protobuf::int32 GM_TaskResult::m_task_state() const {
  return m_task_state_;
}
inline void GM_TaskResult::set_m_task_state(::google::protobuf::int32 value) {
  set_has_m_task_state();
  m_task_state_ = value;
}

// -------------------------------------------------------------------

// GM_CommitTask

// required int64 m_gmid = 1;
inline bool GM_CommitTask::has_m_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_CommitTask::set_has_m_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_CommitTask::clear_has_m_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_CommitTask::clear_m_gmid() {
  m_gmid_ = GOOGLE_LONGLONG(0);
  clear_has_m_gmid();
}
inline ::google::protobuf::int64 GM_CommitTask::m_gmid() const {
  return m_gmid_;
}
inline void GM_CommitTask::set_m_gmid(::google::protobuf::int64 value) {
  set_has_m_gmid();
  m_gmid_ = value;
}

// -------------------------------------------------------------------

// GM_AcceptTask

// required int64 m_gmid = 1;
inline bool GM_AcceptTask::has_m_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_AcceptTask::set_has_m_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_AcceptTask::clear_has_m_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_AcceptTask::clear_m_gmid() {
  m_gmid_ = GOOGLE_LONGLONG(0);
  clear_has_m_gmid();
}
inline ::google::protobuf::int64 GM_AcceptTask::m_gmid() const {
  return m_gmid_;
}
inline void GM_AcceptTask::set_m_gmid(::google::protobuf::int64 value) {
  set_has_m_gmid();
  m_gmid_ = value;
}

// -------------------------------------------------------------------

// GMUpdateTaskCondition

// required int64 m_GMID = 1;
inline bool GMUpdateTaskCondition::has_m_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMUpdateTaskCondition::set_has_m_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMUpdateTaskCondition::clear_has_m_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMUpdateTaskCondition::clear_m_gmid() {
  m_gmid_ = GOOGLE_LONGLONG(0);
  clear_has_m_gmid();
}
inline ::google::protobuf::int64 GMUpdateTaskCondition::m_gmid() const {
  return m_gmid_;
}
inline void GMUpdateTaskCondition::set_m_gmid(::google::protobuf::int64 value) {
  set_has_m_gmid();
  m_gmid_ = value;
}

// repeated .GMTaskCondition m_condition = 2;
inline int GMUpdateTaskCondition::m_condition_size() const {
  return m_condition_.size();
}
inline void GMUpdateTaskCondition::clear_m_condition() {
  m_condition_.Clear();
}
inline const ::GMTaskCondition& GMUpdateTaskCondition::m_condition(int index) const {
  return m_condition_.Get(index);
}
inline ::GMTaskCondition* GMUpdateTaskCondition::mutable_m_condition(int index) {
  return m_condition_.Mutable(index);
}
inline ::GMTaskCondition* GMUpdateTaskCondition::add_m_condition() {
  return m_condition_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GMTaskCondition >&
GMUpdateTaskCondition::m_condition() const {
  return m_condition_;
}
inline ::google::protobuf::RepeatedPtrField< ::GMTaskCondition >*
GMUpdateTaskCondition::mutable_m_condition() {
  return &m_condition_;
}

// -------------------------------------------------------------------

// GM_TalkEvent

// required int32 NPCID = 1;
inline bool GM_TalkEvent::has_npcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_TalkEvent::set_has_npcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_TalkEvent::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_TalkEvent::clear_npcid() {
  npcid_ = 0;
  clear_has_npcid();
}
inline ::google::protobuf::int32 GM_TalkEvent::npcid() const {
  return npcid_;
}
inline void GM_TalkEvent::set_npcid(::google::protobuf::int32 value) {
  set_has_npcid();
  npcid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_task_2etxt__INCLUDED
