// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Fish.txt

#ifndef PROTOBUF_Fish_2etxt__INCLUDED
#define PROTOBUF_Fish_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Fish_2etxt();
void protobuf_AssignDesc_Fish_2etxt();
void protobuf_ShutdownFile_Fish_2etxt();

class GM_CREATEROOM_Return;
class GM_CREATEROOM_Request;
class GM_LOGINROOM_Return;
class GM_LOGINROOM_Request;
class GM_LOGINCOPY_Request;
class GM_LOGINCOPY_Return;
class GM_FishData;
class GM_RoomData;
class GM_AreaAllinfoReturn;
class GM_AreaAllinfoRequest;
class GM_Fish_All_request;
class GM_IsKilled_info;
class GM_Killer_info;
class GM_Kill_Return;
class GM_leaveRequest;
class GM_leaveReturn;
class GM_Fish_RoleAttack;
class GM_Fish_Gun_request;
class GM_Fish_Gun_return;
class SM_Fish_Object;
class GM_FishMoney_return;
class GM_FishGun_Request;
class GM_Fish_Gun;
class GM_FishGun_Return;
class GM_Fish_attack;
class GM_Fish_RoleAttack_request;
class GM_Fish_Kill_Return;
class GM_Fish_power_set_request;
class GM_Fish_power_set_rturn;

// ===================================================================

class GM_CREATEROOM_Return : public ::google::protobuf::Message {
 public:
  GM_CREATEROOM_Return();
  virtual ~GM_CREATEROOM_Return();

  GM_CREATEROOM_Return(const GM_CREATEROOM_Return& from);

  inline GM_CREATEROOM_Return& operator=(const GM_CREATEROOM_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_CREATEROOM_Return& default_instance();

  void Swap(GM_CREATEROOM_Return* other);

  // implements Message ----------------------------------------------

  GM_CREATEROOM_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_CREATEROOM_Return& from);
  void MergeFrom(const GM_CREATEROOM_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 ID = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 areaid = 3;
  inline bool has_areaid() const;
  inline void clear_areaid();
  static const int kAreaidFieldNumber = 3;
  inline ::google::protobuf::int32 areaid() const;
  inline void set_areaid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_CREATEROOM_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_areaid();
  inline void clear_has_areaid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 areaid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_CREATEROOM_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_CREATEROOM_Request : public ::google::protobuf::Message {
 public:
  GM_CREATEROOM_Request();
  virtual ~GM_CREATEROOM_Request();

  GM_CREATEROOM_Request(const GM_CREATEROOM_Request& from);

  inline GM_CREATEROOM_Request& operator=(const GM_CREATEROOM_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_CREATEROOM_Request& default_instance();

  void Swap(GM_CREATEROOM_Request* other);

  // implements Message ----------------------------------------------

  GM_CREATEROOM_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_CREATEROOM_Request& from);
  void MergeFrom(const GM_CREATEROOM_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 areaid = 1;
  inline bool has_areaid() const;
  inline void clear_areaid();
  static const int kAreaidFieldNumber = 1;
  inline ::google::protobuf::int32 areaid() const;
  inline void set_areaid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_CREATEROOM_Request)
 private:
  inline void set_has_areaid();
  inline void clear_has_areaid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 areaid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_CREATEROOM_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_LOGINROOM_Return : public ::google::protobuf::Message {
 public:
  GM_LOGINROOM_Return();
  virtual ~GM_LOGINROOM_Return();

  GM_LOGINROOM_Return(const GM_LOGINROOM_Return& from);

  inline GM_LOGINROOM_Return& operator=(const GM_LOGINROOM_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_LOGINROOM_Return& default_instance();

  void Swap(GM_LOGINROOM_Return* other);

  // implements Message ----------------------------------------------

  GM_LOGINROOM_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_LOGINROOM_Return& from);
  void MergeFrom(const GM_LOGINROOM_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // required int32 ID = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_LOGINROOM_Return)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_result_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_LOGINROOM_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_LOGINROOM_Request : public ::google::protobuf::Message {
 public:
  GM_LOGINROOM_Request();
  virtual ~GM_LOGINROOM_Request();

  GM_LOGINROOM_Request(const GM_LOGINROOM_Request& from);

  inline GM_LOGINROOM_Request& operator=(const GM_LOGINROOM_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_LOGINROOM_Request& default_instance();

  void Swap(GM_LOGINROOM_Request* other);

  // implements Message ----------------------------------------------

  GM_LOGINROOM_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_LOGINROOM_Request& from);
  void MergeFrom(const GM_LOGINROOM_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 areaid = 2;
  inline bool has_areaid() const;
  inline void clear_areaid();
  static const int kAreaidFieldNumber = 2;
  inline ::google::protobuf::int32 areaid() const;
  inline void set_areaid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_LOGINROOM_Request)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_areaid();
  inline void clear_has_areaid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 areaid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_LOGINROOM_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_LOGINCOPY_Request : public ::google::protobuf::Message {
 public:
  GM_LOGINCOPY_Request();
  virtual ~GM_LOGINCOPY_Request();

  GM_LOGINCOPY_Request(const GM_LOGINCOPY_Request& from);

  inline GM_LOGINCOPY_Request& operator=(const GM_LOGINCOPY_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_LOGINCOPY_Request& default_instance();

  void Swap(GM_LOGINCOPY_Request* other);

  // implements Message ----------------------------------------------

  GM_LOGINCOPY_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_LOGINCOPY_Request& from);
  void MergeFrom(const GM_LOGINCOPY_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 areaid = 2;
  inline bool has_areaid() const;
  inline void clear_areaid();
  static const int kAreaidFieldNumber = 2;
  inline ::google::protobuf::int32 areaid() const;
  inline void set_areaid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_LOGINCOPY_Request)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_areaid();
  inline void clear_has_areaid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 areaid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_LOGINCOPY_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_LOGINCOPY_Return : public ::google::protobuf::Message {
 public:
  GM_LOGINCOPY_Return();
  virtual ~GM_LOGINCOPY_Return();

  GM_LOGINCOPY_Return(const GM_LOGINCOPY_Return& from);

  inline GM_LOGINCOPY_Return& operator=(const GM_LOGINCOPY_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_LOGINCOPY_Return& default_instance();

  void Swap(GM_LOGINCOPY_Return* other);

  // implements Message ----------------------------------------------

  GM_LOGINCOPY_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_LOGINCOPY_Return& from);
  void MergeFrom(const GM_LOGINCOPY_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_LOGINCOPY_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_LOGINCOPY_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_FishData : public ::google::protobuf::Message {
 public:
  GM_FishData();
  virtual ~GM_FishData();

  GM_FishData(const GM_FishData& from);

  inline GM_FishData& operator=(const GM_FishData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_FishData& default_instance();

  void Swap(GM_FishData* other);

  // implements Message ----------------------------------------------

  GM_FishData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_FishData& from);
  void MergeFrom(const GM_FishData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::int32 playerid() const;
  inline void set_playerid(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 place = 3;
  inline bool has_place() const;
  inline void clear_place();
  static const int kPlaceFieldNumber = 3;
  inline ::google::protobuf::int32 place() const;
  inline void set_place(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_FishData)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_place();
  inline void clear_has_place();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 playerid_;
  ::google::protobuf::int32 place_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_FishData* default_instance_;
};
// -------------------------------------------------------------------

class GM_RoomData : public ::google::protobuf::Message {
 public:
  GM_RoomData();
  virtual ~GM_RoomData();

  GM_RoomData(const GM_RoomData& from);

  inline GM_RoomData& operator=(const GM_RoomData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RoomData& default_instance();

  void Swap(GM_RoomData* other);

  // implements Message ----------------------------------------------

  GM_RoomData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RoomData& from);
  void MergeFrom(const GM_RoomData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 ownid = 2;
  inline bool has_ownid() const;
  inline void clear_ownid();
  static const int kOwnidFieldNumber = 2;
  inline ::google::protobuf::int32 ownid() const;
  inline void set_ownid(::google::protobuf::int32 value);

  // optional int32 place = 3;
  inline bool has_place() const;
  inline void clear_place();
  static const int kPlaceFieldNumber = 3;
  inline ::google::protobuf::int32 place() const;
  inline void set_place(::google::protobuf::int32 value);

  // repeated .GM_FishData m_fishman = 4;
  inline int m_fishman_size() const;
  inline void clear_m_fishman();
  static const int kMFishmanFieldNumber = 4;
  inline const ::GM_FishData& m_fishman(int index) const;
  inline ::GM_FishData* mutable_m_fishman(int index);
  inline ::GM_FishData* add_m_fishman();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_FishData >&
      m_fishman() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_FishData >*
      mutable_m_fishman();

  // @@protoc_insertion_point(class_scope:GM_RoomData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ownid();
  inline void clear_has_ownid();
  inline void set_has_place();
  inline void clear_has_place();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 ownid_;
  ::google::protobuf::RepeatedPtrField< ::GM_FishData > m_fishman_;
  ::google::protobuf::int32 place_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_RoomData* default_instance_;
};
// -------------------------------------------------------------------

class GM_AreaAllinfoReturn : public ::google::protobuf::Message {
 public:
  GM_AreaAllinfoReturn();
  virtual ~GM_AreaAllinfoReturn();

  GM_AreaAllinfoReturn(const GM_AreaAllinfoReturn& from);

  inline GM_AreaAllinfoReturn& operator=(const GM_AreaAllinfoReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_AreaAllinfoReturn& default_instance();

  void Swap(GM_AreaAllinfoReturn* other);

  // implements Message ----------------------------------------------

  GM_AreaAllinfoReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_AreaAllinfoReturn& from);
  void MergeFrom(const GM_AreaAllinfoReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 areaid = 1;
  inline bool has_areaid() const;
  inline void clear_areaid();
  static const int kAreaidFieldNumber = 1;
  inline ::google::protobuf::int32 areaid() const;
  inline void set_areaid(::google::protobuf::int32 value);

  // repeated .GM_RoomData m_data = 2;
  inline int m_data_size() const;
  inline void clear_m_data();
  static const int kMDataFieldNumber = 2;
  inline const ::GM_RoomData& m_data(int index) const;
  inline ::GM_RoomData* mutable_m_data(int index);
  inline ::GM_RoomData* add_m_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_RoomData >&
      m_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_RoomData >*
      mutable_m_data();

  // @@protoc_insertion_point(class_scope:GM_AreaAllinfoReturn)
 private:
  inline void set_has_areaid();
  inline void clear_has_areaid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_RoomData > m_data_;
  ::google::protobuf::int32 areaid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_AreaAllinfoReturn* default_instance_;
};
// -------------------------------------------------------------------

class GM_AreaAllinfoRequest : public ::google::protobuf::Message {
 public:
  GM_AreaAllinfoRequest();
  virtual ~GM_AreaAllinfoRequest();

  GM_AreaAllinfoRequest(const GM_AreaAllinfoRequest& from);

  inline GM_AreaAllinfoRequest& operator=(const GM_AreaAllinfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_AreaAllinfoRequest& default_instance();

  void Swap(GM_AreaAllinfoRequest* other);

  // implements Message ----------------------------------------------

  GM_AreaAllinfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_AreaAllinfoRequest& from);
  void MergeFrom(const GM_AreaAllinfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 areaid = 1;
  inline bool has_areaid() const;
  inline void clear_areaid();
  static const int kAreaidFieldNumber = 1;
  inline ::google::protobuf::int32 areaid() const;
  inline void set_areaid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_AreaAllinfoRequest)
 private:
  inline void set_has_areaid();
  inline void clear_has_areaid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 areaid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_AreaAllinfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GM_Fish_All_request : public ::google::protobuf::Message {
 public:
  GM_Fish_All_request();
  virtual ~GM_Fish_All_request();

  GM_Fish_All_request(const GM_Fish_All_request& from);

  inline GM_Fish_All_request& operator=(const GM_Fish_All_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Fish_All_request& default_instance();

  void Swap(GM_Fish_All_request* other);

  // implements Message ----------------------------------------------

  GM_Fish_All_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Fish_All_request& from);
  void MergeFrom(const GM_Fish_All_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 areaid = 1;
  inline bool has_areaid() const;
  inline void clear_areaid();
  static const int kAreaidFieldNumber = 1;
  inline ::google::protobuf::int32 areaid() const;
  inline void set_areaid(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Fish_All_request)
 private:
  inline void set_has_areaid();
  inline void clear_has_areaid();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 areaid_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_Fish_All_request* default_instance_;
};
// -------------------------------------------------------------------

class GM_IsKilled_info : public ::google::protobuf::Message {
 public:
  GM_IsKilled_info();
  virtual ~GM_IsKilled_info();

  GM_IsKilled_info(const GM_IsKilled_info& from);

  inline GM_IsKilled_info& operator=(const GM_IsKilled_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_IsKilled_info& default_instance();

  void Swap(GM_IsKilled_info* other);

  // implements Message ----------------------------------------------

  GM_IsKilled_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_IsKilled_info& from);
  void MergeFrom(const GM_IsKilled_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 monsterid = 2;
  inline bool has_monsterid() const;
  inline void clear_monsterid();
  static const int kMonsteridFieldNumber = 2;
  inline ::google::protobuf::int32 monsterid() const;
  inline void set_monsterid(::google::protobuf::int32 value);

  // optional int32 monclassification = 3;
  inline bool has_monclassification() const;
  inline void clear_monclassification();
  static const int kMonclassificationFieldNumber = 3;
  inline ::google::protobuf::int32 monclassification() const;
  inline void set_monclassification(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_IsKilled_info)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_monsterid();
  inline void clear_has_monsterid();
  inline void set_has_monclassification();
  inline void clear_has_monclassification();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 monsterid_;
  ::google::protobuf::int32 monclassification_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_IsKilled_info* default_instance_;
};
// -------------------------------------------------------------------

class GM_Killer_info : public ::google::protobuf::Message {
 public:
  GM_Killer_info();
  virtual ~GM_Killer_info();

  GM_Killer_info(const GM_Killer_info& from);

  inline GM_Killer_info& operator=(const GM_Killer_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Killer_info& default_instance();

  void Swap(GM_Killer_info* other);

  // implements Message ----------------------------------------------

  GM_Killer_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Killer_info& from);
  void MergeFrom(const GM_Killer_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Killer_info)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_Killer_info* default_instance_;
};
// -------------------------------------------------------------------

class GM_Kill_Return : public ::google::protobuf::Message {
 public:
  GM_Kill_Return();
  virtual ~GM_Kill_Return();

  GM_Kill_Return(const GM_Kill_Return& from);

  inline GM_Kill_Return& operator=(const GM_Kill_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Kill_Return& default_instance();

  void Swap(GM_Kill_Return* other);

  // implements Message ----------------------------------------------

  GM_Kill_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Kill_Return& from);
  void MergeFrom(const GM_Kill_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_iskiller = 1;
  inline bool has_m_iskiller() const;
  inline void clear_m_iskiller();
  static const int kMIskillerFieldNumber = 1;
  inline ::google::protobuf::int32 m_iskiller() const;
  inline void set_m_iskiller(::google::protobuf::int32 value);

  // required int32 m_killer = 2;
  inline bool has_m_killer() const;
  inline void clear_m_killer();
  static const int kMKillerFieldNumber = 2;
  inline ::google::protobuf::int32 m_killer() const;
  inline void set_m_killer(::google::protobuf::int32 value);

  // required int32 m_is = 3;
  inline bool has_m_is() const;
  inline void clear_m_is();
  static const int kMIsFieldNumber = 3;
  inline ::google::protobuf::int32 m_is() const;
  inline void set_m_is(::google::protobuf::int32 value);

  // optional int32 m_state = 4;
  inline bool has_m_state() const;
  inline void clear_m_state();
  static const int kMStateFieldNumber = 4;
  inline ::google::protobuf::int32 m_state() const;
  inline void set_m_state(::google::protobuf::int32 value);

  // repeated .SM_Fish_Object data = 5;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline const ::SM_Fish_Object& data(int index) const;
  inline ::SM_Fish_Object* mutable_data(int index);
  inline ::SM_Fish_Object* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::SM_Fish_Object >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::SM_Fish_Object >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_Kill_Return)
 private:
  inline void set_has_m_iskiller();
  inline void clear_has_m_iskiller();
  inline void set_has_m_killer();
  inline void clear_has_m_killer();
  inline void set_has_m_is();
  inline void clear_has_m_is();
  inline void set_has_m_state();
  inline void clear_has_m_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_iskiller_;
  ::google::protobuf::int32 m_killer_;
  ::google::protobuf::int32 m_is_;
  ::google::protobuf::int32 m_state_;
  ::google::protobuf::RepeatedPtrField< ::SM_Fish_Object > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_Kill_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_leaveRequest : public ::google::protobuf::Message {
 public:
  GM_leaveRequest();
  virtual ~GM_leaveRequest();

  GM_leaveRequest(const GM_leaveRequest& from);

  inline GM_leaveRequest& operator=(const GM_leaveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_leaveRequest& default_instance();

  void Swap(GM_leaveRequest* other);

  // implements Message ----------------------------------------------

  GM_leaveRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_leaveRequest& from);
  void MergeFrom(const GM_leaveRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 areaid = 1;
  inline bool has_areaid() const;
  inline void clear_areaid();
  static const int kAreaidFieldNumber = 1;
  inline ::google::protobuf::int32 areaid() const;
  inline void set_areaid(::google::protobuf::int32 value);

  // required int32 roomid = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_leaveRequest)
 private:
  inline void set_has_areaid();
  inline void clear_has_areaid();
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 areaid_;
  ::google::protobuf::int32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_leaveRequest* default_instance_;
};
// -------------------------------------------------------------------

class GM_leaveReturn : public ::google::protobuf::Message {
 public:
  GM_leaveReturn();
  virtual ~GM_leaveReturn();

  GM_leaveReturn(const GM_leaveReturn& from);

  inline GM_leaveReturn& operator=(const GM_leaveReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_leaveReturn& default_instance();

  void Swap(GM_leaveReturn* other);

  // implements Message ----------------------------------------------

  GM_leaveReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_leaveReturn& from);
  void MergeFrom(const GM_leaveReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorid = 1;
  inline bool has_errorid() const;
  inline void clear_errorid();
  static const int kErroridFieldNumber = 1;
  inline ::google::protobuf::int32 errorid() const;
  inline void set_errorid(::google::protobuf::int32 value);

  // optional int32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_leaveReturn)
 private:
  inline void set_has_errorid();
  inline void clear_has_errorid();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 errorid_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_leaveReturn* default_instance_;
};
// -------------------------------------------------------------------

class GM_Fish_RoleAttack : public ::google::protobuf::Message {
 public:
  GM_Fish_RoleAttack();
  virtual ~GM_Fish_RoleAttack();

  GM_Fish_RoleAttack(const GM_Fish_RoleAttack& from);

  inline GM_Fish_RoleAttack& operator=(const GM_Fish_RoleAttack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Fish_RoleAttack& default_instance();

  void Swap(GM_Fish_RoleAttack* other);

  // implements Message ----------------------------------------------

  GM_Fish_RoleAttack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Fish_RoleAttack& from);
  void MergeFrom(const GM_Fish_RoleAttack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional float posX = 2;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 2;
  inline float posx() const;
  inline void set_posx(float value);

  // optional float posZ = 3;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 3;
  inline float posz() const;
  inline void set_posz(float value);

  // optional int32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 guntype = 5;
  inline bool has_guntype() const;
  inline void clear_guntype();
  static const int kGuntypeFieldNumber = 5;
  inline ::google::protobuf::int32 guntype() const;
  inline void set_guntype(::google::protobuf::int32 value);

  // optional int32 gunid = 6;
  inline bool has_gunid() const;
  inline void clear_gunid();
  static const int kGunidFieldNumber = 6;
  inline ::google::protobuf::int32 gunid() const;
  inline void set_gunid(::google::protobuf::int32 value);

  // optional int32 iscan = 7;
  inline bool has_iscan() const;
  inline void clear_iscan();
  static const int kIscanFieldNumber = 7;
  inline ::google::protobuf::int32 iscan() const;
  inline void set_iscan(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Fish_RoleAttack)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posz();
  inline void clear_has_posz();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_guntype();
  inline void clear_has_guntype();
  inline void set_has_gunid();
  inline void clear_has_gunid();
  inline void set_has_iscan();
  inline void clear_has_iscan();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  float posx_;
  float posz_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 guntype_;
  ::google::protobuf::int32 gunid_;
  ::google::protobuf::int32 iscan_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_Fish_RoleAttack* default_instance_;
};
// -------------------------------------------------------------------

class GM_Fish_Gun_request : public ::google::protobuf::Message {
 public:
  GM_Fish_Gun_request();
  virtual ~GM_Fish_Gun_request();

  GM_Fish_Gun_request(const GM_Fish_Gun_request& from);

  inline GM_Fish_Gun_request& operator=(const GM_Fish_Gun_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Fish_Gun_request& default_instance();

  void Swap(GM_Fish_Gun_request* other);

  // implements Message ----------------------------------------------

  GM_Fish_Gun_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Fish_Gun_request& from);
  void MergeFrom(const GM_Fish_Gun_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gunid = 1;
  inline bool has_gunid() const;
  inline void clear_gunid();
  static const int kGunidFieldNumber = 1;
  inline ::google::protobuf::int32 gunid() const;
  inline void set_gunid(::google::protobuf::int32 value);

  // optional int32 gunrate = 2;
  inline bool has_gunrate() const;
  inline void clear_gunrate();
  static const int kGunrateFieldNumber = 2;
  inline ::google::protobuf::int32 gunrate() const;
  inline void set_gunrate(::google::protobuf::int32 value);

  // optional int32 buy = 3;
  inline bool has_buy() const;
  inline void clear_buy();
  static const int kBuyFieldNumber = 3;
  inline ::google::protobuf::int32 buy() const;
  inline void set_buy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Fish_Gun_request)
 private:
  inline void set_has_gunid();
  inline void clear_has_gunid();
  inline void set_has_gunrate();
  inline void clear_has_gunrate();
  inline void set_has_buy();
  inline void clear_has_buy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 gunid_;
  ::google::protobuf::int32 gunrate_;
  ::google::protobuf::int32 buy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_Fish_Gun_request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Fish_Gun_return : public ::google::protobuf::Message {
 public:
  GM_Fish_Gun_return();
  virtual ~GM_Fish_Gun_return();

  GM_Fish_Gun_return(const GM_Fish_Gun_return& from);

  inline GM_Fish_Gun_return& operator=(const GM_Fish_Gun_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Fish_Gun_return& default_instance();

  void Swap(GM_Fish_Gun_return* other);

  // implements Message ----------------------------------------------

  GM_Fish_Gun_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Fish_Gun_return& from);
  void MergeFrom(const GM_Fish_Gun_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorid = 1;
  inline bool has_errorid() const;
  inline void clear_errorid();
  static const int kErroridFieldNumber = 1;
  inline ::google::protobuf::int32 errorid() const;
  inline void set_errorid(::google::protobuf::int32 value);

  // optional int32 gunid = 2;
  inline bool has_gunid() const;
  inline void clear_gunid();
  static const int kGunidFieldNumber = 2;
  inline ::google::protobuf::int32 gunid() const;
  inline void set_gunid(::google::protobuf::int32 value);

  // optional int32 gunrate = 3;
  inline bool has_gunrate() const;
  inline void clear_gunrate();
  static const int kGunrateFieldNumber = 3;
  inline ::google::protobuf::int32 gunrate() const;
  inline void set_gunrate(::google::protobuf::int32 value);

  // optional int32 roleid = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 4;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Fish_Gun_return)
 private:
  inline void set_has_errorid();
  inline void clear_has_errorid();
  inline void set_has_gunid();
  inline void clear_has_gunid();
  inline void set_has_gunrate();
  inline void clear_has_gunrate();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 errorid_;
  ::google::protobuf::int32 gunid_;
  ::google::protobuf::int32 gunrate_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_Fish_Gun_return* default_instance_;
};
// -------------------------------------------------------------------

class SM_Fish_Object : public ::google::protobuf::Message {
 public:
  SM_Fish_Object();
  virtual ~SM_Fish_Object();

  SM_Fish_Object(const SM_Fish_Object& from);

  inline SM_Fish_Object& operator=(const SM_Fish_Object& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Fish_Object& default_instance();

  void Swap(SM_Fish_Object* other);

  // implements Message ----------------------------------------------

  SM_Fish_Object* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Fish_Object& from);
  void MergeFrom(const SM_Fish_Object& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objectid = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_Fish_Object)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static SM_Fish_Object* default_instance_;
};
// -------------------------------------------------------------------

class GM_FishMoney_return : public ::google::protobuf::Message {
 public:
  GM_FishMoney_return();
  virtual ~GM_FishMoney_return();

  GM_FishMoney_return(const GM_FishMoney_return& from);

  inline GM_FishMoney_return& operator=(const GM_FishMoney_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_FishMoney_return& default_instance();

  void Swap(GM_FishMoney_return* other);

  // implements Message ----------------------------------------------

  GM_FishMoney_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_FishMoney_return& from);
  void MergeFrom(const GM_FishMoney_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 money = 2;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 2;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_FishMoney_return)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_money();
  inline void clear_has_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 money_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_FishMoney_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_FishGun_Request : public ::google::protobuf::Message {
 public:
  GM_FishGun_Request();
  virtual ~GM_FishGun_Request();

  GM_FishGun_Request(const GM_FishGun_Request& from);

  inline GM_FishGun_Request& operator=(const GM_FishGun_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_FishGun_Request& default_instance();

  void Swap(GM_FishGun_Request* other);

  // implements Message ----------------------------------------------

  GM_FishGun_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_FishGun_Request& from);
  void MergeFrom(const GM_FishGun_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_FishGun_Request)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_FishGun_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Fish_Gun : public ::google::protobuf::Message {
 public:
  GM_Fish_Gun();
  virtual ~GM_Fish_Gun();

  GM_Fish_Gun(const GM_Fish_Gun& from);

  inline GM_Fish_Gun& operator=(const GM_Fish_Gun& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Fish_Gun& default_instance();

  void Swap(GM_Fish_Gun* other);

  // implements Message ----------------------------------------------

  GM_Fish_Gun* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Fish_Gun& from);
  void MergeFrom(const GM_Fish_Gun& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gunid = 1;
  inline bool has_gunid() const;
  inline void clear_gunid();
  static const int kGunidFieldNumber = 1;
  inline ::google::protobuf::int32 gunid() const;
  inline void set_gunid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Fish_Gun)
 private:
  inline void set_has_gunid();
  inline void clear_has_gunid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 gunid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_Fish_Gun* default_instance_;
};
// -------------------------------------------------------------------

class GM_FishGun_Return : public ::google::protobuf::Message {
 public:
  GM_FishGun_Return();
  virtual ~GM_FishGun_Return();

  GM_FishGun_Return(const GM_FishGun_Return& from);

  inline GM_FishGun_Return& operator=(const GM_FishGun_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_FishGun_Return& default_instance();

  void Swap(GM_FishGun_Return* other);

  // implements Message ----------------------------------------------

  GM_FishGun_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_FishGun_Return& from);
  void MergeFrom(const GM_FishGun_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 selfgunid = 1;
  inline bool has_selfgunid() const;
  inline void clear_selfgunid();
  static const int kSelfgunidFieldNumber = 1;
  inline ::google::protobuf::int32 selfgunid() const;
  inline void set_selfgunid(::google::protobuf::int32 value);

  // optional int32 selfgunrate = 2;
  inline bool has_selfgunrate() const;
  inline void clear_selfgunrate();
  static const int kSelfgunrateFieldNumber = 2;
  inline ::google::protobuf::int32 selfgunrate() const;
  inline void set_selfgunrate(::google::protobuf::int32 value);

  // optional int32 guntate = 3;
  inline bool has_guntate() const;
  inline void clear_guntate();
  static const int kGuntateFieldNumber = 3;
  inline ::google::protobuf::int32 guntate() const;
  inline void set_guntate(::google::protobuf::int32 value);

  // optional int32 roleid = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 4;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 power = 5;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 5;
  inline ::google::protobuf::int32 power() const;
  inline void set_power(::google::protobuf::int32 value);

  // repeated .GM_Fish_Gun data = 6;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 6;
  inline const ::GM_Fish_Gun& data(int index) const;
  inline ::GM_Fish_Gun* mutable_data(int index);
  inline ::GM_Fish_Gun* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Fish_Gun >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Fish_Gun >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_FishGun_Return)
 private:
  inline void set_has_selfgunid();
  inline void clear_has_selfgunid();
  inline void set_has_selfgunrate();
  inline void clear_has_selfgunrate();
  inline void set_has_guntate();
  inline void clear_has_guntate();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_power();
  inline void clear_has_power();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 selfgunid_;
  ::google::protobuf::int32 selfgunrate_;
  ::google::protobuf::int32 guntate_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::RepeatedPtrField< ::GM_Fish_Gun > data_;
  ::google::protobuf::int32 power_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_FishGun_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Fish_attack : public ::google::protobuf::Message {
 public:
  GM_Fish_attack();
  virtual ~GM_Fish_attack();

  GM_Fish_attack(const GM_Fish_attack& from);

  inline GM_Fish_attack& operator=(const GM_Fish_attack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Fish_attack& default_instance();

  void Swap(GM_Fish_attack* other);

  // implements Message ----------------------------------------------

  GM_Fish_attack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Fish_attack& from);
  void MergeFrom(const GM_Fish_attack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // repeated int32 fishid = 2;
  inline int fishid_size() const;
  inline void clear_fishid();
  static const int kFishidFieldNumber = 2;
  inline ::google::protobuf::int32 fishid(int index) const;
  inline void set_fishid(int index, ::google::protobuf::int32 value);
  inline void add_fishid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      fishid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_fishid();

  // @@protoc_insertion_point(class_scope:GM_Fish_attack)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > fishid_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_Fish_attack* default_instance_;
};
// -------------------------------------------------------------------

class GM_Fish_RoleAttack_request : public ::google::protobuf::Message {
 public:
  GM_Fish_RoleAttack_request();
  virtual ~GM_Fish_RoleAttack_request();

  GM_Fish_RoleAttack_request(const GM_Fish_RoleAttack_request& from);

  inline GM_Fish_RoleAttack_request& operator=(const GM_Fish_RoleAttack_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Fish_RoleAttack_request& default_instance();

  void Swap(GM_Fish_RoleAttack_request* other);

  // implements Message ----------------------------------------------

  GM_Fish_RoleAttack_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Fish_RoleAttack_request& from);
  void MergeFrom(const GM_Fish_RoleAttack_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 guntype = 3;
  inline bool has_guntype() const;
  inline void clear_guntype();
  static const int kGuntypeFieldNumber = 3;
  inline ::google::protobuf::int32 guntype() const;
  inline void set_guntype(::google::protobuf::int32 value);

  // optional int32 iscan = 4;
  inline bool has_iscan() const;
  inline void clear_iscan();
  static const int kIscanFieldNumber = 4;
  inline ::google::protobuf::int32 iscan() const;
  inline void set_iscan(::google::protobuf::int32 value);

  // optional int32 firetime = 5;
  inline bool has_firetime() const;
  inline void clear_firetime();
  static const int kFiretimeFieldNumber = 5;
  inline ::google::protobuf::int32 firetime() const;
  inline void set_firetime(::google::protobuf::int32 value);

  // optional int32 firelast = 6;
  inline bool has_firelast() const;
  inline void clear_firelast();
  static const int kFirelastFieldNumber = 6;
  inline ::google::protobuf::int32 firelast() const;
  inline void set_firelast(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Fish_RoleAttack_request)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_guntype();
  inline void clear_has_guntype();
  inline void set_has_iscan();
  inline void clear_has_iscan();
  inline void set_has_firetime();
  inline void clear_has_firetime();
  inline void set_has_firelast();
  inline void clear_has_firelast();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 guntype_;
  ::google::protobuf::int32 iscan_;
  ::google::protobuf::int32 firetime_;
  ::google::protobuf::int32 firelast_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_Fish_RoleAttack_request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Fish_Kill_Return : public ::google::protobuf::Message {
 public:
  GM_Fish_Kill_Return();
  virtual ~GM_Fish_Kill_Return();

  GM_Fish_Kill_Return(const GM_Fish_Kill_Return& from);

  inline GM_Fish_Kill_Return& operator=(const GM_Fish_Kill_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Fish_Kill_Return& default_instance();

  void Swap(GM_Fish_Kill_Return* other);

  // implements Message ----------------------------------------------

  GM_Fish_Kill_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Fish_Kill_Return& from);
  void MergeFrom(const GM_Fish_Kill_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_killer = 1;
  inline bool has_m_killer() const;
  inline void clear_m_killer();
  static const int kMKillerFieldNumber = 1;
  inline ::google::protobuf::int32 m_killer() const;
  inline void set_m_killer(::google::protobuf::int32 value);

  // repeated int32 m_deadid = 2;
  inline int m_deadid_size() const;
  inline void clear_m_deadid();
  static const int kMDeadidFieldNumber = 2;
  inline ::google::protobuf::int32 m_deadid(int index) const;
  inline void set_m_deadid(int index, ::google::protobuf::int32 value);
  inline void add_m_deadid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_deadid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_deadid();

  // optional int32 errorid = 3;
  inline bool has_errorid() const;
  inline void clear_errorid();
  static const int kErroridFieldNumber = 3;
  inline ::google::protobuf::int32 errorid() const;
  inline void set_errorid(::google::protobuf::int32 value);

  // optional int32 m_state = 4;
  inline bool has_m_state() const;
  inline void clear_m_state();
  static const int kMStateFieldNumber = 4;
  inline ::google::protobuf::int32 m_state() const;
  inline void set_m_state(::google::protobuf::int32 value);

  // repeated .SM_Fish_Object data = 5;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline const ::SM_Fish_Object& data(int index) const;
  inline ::SM_Fish_Object* mutable_data(int index);
  inline ::SM_Fish_Object* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::SM_Fish_Object >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::SM_Fish_Object >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_Fish_Kill_Return)
 private:
  inline void set_has_m_killer();
  inline void clear_has_m_killer();
  inline void set_has_errorid();
  inline void clear_has_errorid();
  inline void set_has_m_state();
  inline void clear_has_m_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_deadid_;
  ::google::protobuf::int32 m_killer_;
  ::google::protobuf::int32 errorid_;
  ::google::protobuf::RepeatedPtrField< ::SM_Fish_Object > data_;
  ::google::protobuf::int32 m_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_Fish_Kill_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Fish_power_set_request : public ::google::protobuf::Message {
 public:
  GM_Fish_power_set_request();
  virtual ~GM_Fish_power_set_request();

  GM_Fish_power_set_request(const GM_Fish_power_set_request& from);

  inline GM_Fish_power_set_request& operator=(const GM_Fish_power_set_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Fish_power_set_request& default_instance();

  void Swap(GM_Fish_power_set_request* other);

  // implements Message ----------------------------------------------

  GM_Fish_power_set_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Fish_power_set_request& from);
  void MergeFrom(const GM_Fish_power_set_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 power = 1;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 1;
  inline ::google::protobuf::int32 power() const;
  inline void set_power(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Fish_power_set_request)
 private:
  inline void set_has_power();
  inline void clear_has_power();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 power_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_Fish_power_set_request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Fish_power_set_rturn : public ::google::protobuf::Message {
 public:
  GM_Fish_power_set_rturn();
  virtual ~GM_Fish_power_set_rturn();

  GM_Fish_power_set_rturn(const GM_Fish_power_set_rturn& from);

  inline GM_Fish_power_set_rturn& operator=(const GM_Fish_power_set_rturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Fish_power_set_rturn& default_instance();

  void Swap(GM_Fish_power_set_rturn* other);

  // implements Message ----------------------------------------------

  GM_Fish_power_set_rturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Fish_power_set_rturn& from);
  void MergeFrom(const GM_Fish_power_set_rturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorid = 1;
  inline bool has_errorid() const;
  inline void clear_errorid();
  static const int kErroridFieldNumber = 1;
  inline ::google::protobuf::int32 errorid() const;
  inline void set_errorid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Fish_power_set_rturn)
 private:
  inline void set_has_errorid();
  inline void clear_has_errorid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 errorid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fish_2etxt();
  friend void protobuf_AssignDesc_Fish_2etxt();
  friend void protobuf_ShutdownFile_Fish_2etxt();

  void InitAsDefaultInstance();
  static GM_Fish_power_set_rturn* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_CREATEROOM_Return

// required int32 result = 1;
inline bool GM_CREATEROOM_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_CREATEROOM_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_CREATEROOM_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_CREATEROOM_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_CREATEROOM_Return::result() const {
  return result_;
}
inline void GM_CREATEROOM_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 ID = 2;
inline bool GM_CREATEROOM_Return::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_CREATEROOM_Return::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_CREATEROOM_Return::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_CREATEROOM_Return::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_CREATEROOM_Return::id() const {
  return id_;
}
inline void GM_CREATEROOM_Return::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 areaid = 3;
inline bool GM_CREATEROOM_Return::has_areaid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_CREATEROOM_Return::set_has_areaid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_CREATEROOM_Return::clear_has_areaid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_CREATEROOM_Return::clear_areaid() {
  areaid_ = 0;
  clear_has_areaid();
}
inline ::google::protobuf::int32 GM_CREATEROOM_Return::areaid() const {
  return areaid_;
}
inline void GM_CREATEROOM_Return::set_areaid(::google::protobuf::int32 value) {
  set_has_areaid();
  areaid_ = value;
}

// -------------------------------------------------------------------

// GM_CREATEROOM_Request

// required int32 areaid = 1;
inline bool GM_CREATEROOM_Request::has_areaid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_CREATEROOM_Request::set_has_areaid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_CREATEROOM_Request::clear_has_areaid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_CREATEROOM_Request::clear_areaid() {
  areaid_ = 0;
  clear_has_areaid();
}
inline ::google::protobuf::int32 GM_CREATEROOM_Request::areaid() const {
  return areaid_;
}
inline void GM_CREATEROOM_Request::set_areaid(::google::protobuf::int32 value) {
  set_has_areaid();
  areaid_ = value;
}

// -------------------------------------------------------------------

// GM_LOGINROOM_Return

// required int32 m_result = 1;
inline bool GM_LOGINROOM_Return::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_LOGINROOM_Return::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_LOGINROOM_Return::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_LOGINROOM_Return::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GM_LOGINROOM_Return::m_result() const {
  return m_result_;
}
inline void GM_LOGINROOM_Return::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// required int32 ID = 2;
inline bool GM_LOGINROOM_Return::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_LOGINROOM_Return::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_LOGINROOM_Return::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_LOGINROOM_Return::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_LOGINROOM_Return::id() const {
  return id_;
}
inline void GM_LOGINROOM_Return::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GM_LOGINROOM_Request

// required int32 ID = 1;
inline bool GM_LOGINROOM_Request::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_LOGINROOM_Request::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_LOGINROOM_Request::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_LOGINROOM_Request::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_LOGINROOM_Request::id() const {
  return id_;
}
inline void GM_LOGINROOM_Request::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 areaid = 2;
inline bool GM_LOGINROOM_Request::has_areaid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_LOGINROOM_Request::set_has_areaid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_LOGINROOM_Request::clear_has_areaid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_LOGINROOM_Request::clear_areaid() {
  areaid_ = 0;
  clear_has_areaid();
}
inline ::google::protobuf::int32 GM_LOGINROOM_Request::areaid() const {
  return areaid_;
}
inline void GM_LOGINROOM_Request::set_areaid(::google::protobuf::int32 value) {
  set_has_areaid();
  areaid_ = value;
}

// -------------------------------------------------------------------

// GM_LOGINCOPY_Request

// required int32 ID = 1;
inline bool GM_LOGINCOPY_Request::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_LOGINCOPY_Request::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_LOGINCOPY_Request::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_LOGINCOPY_Request::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_LOGINCOPY_Request::id() const {
  return id_;
}
inline void GM_LOGINCOPY_Request::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 areaid = 2;
inline bool GM_LOGINCOPY_Request::has_areaid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_LOGINCOPY_Request::set_has_areaid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_LOGINCOPY_Request::clear_has_areaid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_LOGINCOPY_Request::clear_areaid() {
  areaid_ = 0;
  clear_has_areaid();
}
inline ::google::protobuf::int32 GM_LOGINCOPY_Request::areaid() const {
  return areaid_;
}
inline void GM_LOGINCOPY_Request::set_areaid(::google::protobuf::int32 value) {
  set_has_areaid();
  areaid_ = value;
}

// -------------------------------------------------------------------

// GM_LOGINCOPY_Return

// required int32 result = 1;
inline bool GM_LOGINCOPY_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_LOGINCOPY_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_LOGINCOPY_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_LOGINCOPY_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_LOGINCOPY_Return::result() const {
  return result_;
}
inline void GM_LOGINCOPY_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GM_FishData

// required int32 playerid = 1;
inline bool GM_FishData::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_FishData::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_FishData::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_FishData::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
inline ::google::protobuf::int32 GM_FishData::playerid() const {
  return playerid_;
}
inline void GM_FishData::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional string name = 2;
inline bool GM_FishData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_FishData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_FishData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_FishData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GM_FishData::name() const {
  return *name_;
}
inline void GM_FishData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GM_FishData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GM_FishData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_FishData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GM_FishData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_FishData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 place = 3;
inline bool GM_FishData::has_place() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_FishData::set_has_place() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_FishData::clear_has_place() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_FishData::clear_place() {
  place_ = 0;
  clear_has_place();
}
inline ::google::protobuf::int32 GM_FishData::place() const {
  return place_;
}
inline void GM_FishData::set_place(::google::protobuf::int32 value) {
  set_has_place();
  place_ = value;
}

// -------------------------------------------------------------------

// GM_RoomData

// required int32 ID = 1;
inline bool GM_RoomData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RoomData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RoomData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RoomData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_RoomData::id() const {
  return id_;
}
inline void GM_RoomData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 ownid = 2;
inline bool GM_RoomData::has_ownid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RoomData::set_has_ownid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RoomData::clear_has_ownid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RoomData::clear_ownid() {
  ownid_ = 0;
  clear_has_ownid();
}
inline ::google::protobuf::int32 GM_RoomData::ownid() const {
  return ownid_;
}
inline void GM_RoomData::set_ownid(::google::protobuf::int32 value) {
  set_has_ownid();
  ownid_ = value;
}

// optional int32 place = 3;
inline bool GM_RoomData::has_place() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_RoomData::set_has_place() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_RoomData::clear_has_place() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_RoomData::clear_place() {
  place_ = 0;
  clear_has_place();
}
inline ::google::protobuf::int32 GM_RoomData::place() const {
  return place_;
}
inline void GM_RoomData::set_place(::google::protobuf::int32 value) {
  set_has_place();
  place_ = value;
}

// repeated .GM_FishData m_fishman = 4;
inline int GM_RoomData::m_fishman_size() const {
  return m_fishman_.size();
}
inline void GM_RoomData::clear_m_fishman() {
  m_fishman_.Clear();
}
inline const ::GM_FishData& GM_RoomData::m_fishman(int index) const {
  return m_fishman_.Get(index);
}
inline ::GM_FishData* GM_RoomData::mutable_m_fishman(int index) {
  return m_fishman_.Mutable(index);
}
inline ::GM_FishData* GM_RoomData::add_m_fishman() {
  return m_fishman_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_FishData >&
GM_RoomData::m_fishman() const {
  return m_fishman_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_FishData >*
GM_RoomData::mutable_m_fishman() {
  return &m_fishman_;
}

// -------------------------------------------------------------------

// GM_AreaAllinfoReturn

// required int32 areaid = 1;
inline bool GM_AreaAllinfoReturn::has_areaid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_AreaAllinfoReturn::set_has_areaid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_AreaAllinfoReturn::clear_has_areaid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_AreaAllinfoReturn::clear_areaid() {
  areaid_ = 0;
  clear_has_areaid();
}
inline ::google::protobuf::int32 GM_AreaAllinfoReturn::areaid() const {
  return areaid_;
}
inline void GM_AreaAllinfoReturn::set_areaid(::google::protobuf::int32 value) {
  set_has_areaid();
  areaid_ = value;
}

// repeated .GM_RoomData m_data = 2;
inline int GM_AreaAllinfoReturn::m_data_size() const {
  return m_data_.size();
}
inline void GM_AreaAllinfoReturn::clear_m_data() {
  m_data_.Clear();
}
inline const ::GM_RoomData& GM_AreaAllinfoReturn::m_data(int index) const {
  return m_data_.Get(index);
}
inline ::GM_RoomData* GM_AreaAllinfoReturn::mutable_m_data(int index) {
  return m_data_.Mutable(index);
}
inline ::GM_RoomData* GM_AreaAllinfoReturn::add_m_data() {
  return m_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_RoomData >&
GM_AreaAllinfoReturn::m_data() const {
  return m_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_RoomData >*
GM_AreaAllinfoReturn::mutable_m_data() {
  return &m_data_;
}

// -------------------------------------------------------------------

// GM_AreaAllinfoRequest

// required int32 areaid = 1;
inline bool GM_AreaAllinfoRequest::has_areaid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_AreaAllinfoRequest::set_has_areaid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_AreaAllinfoRequest::clear_has_areaid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_AreaAllinfoRequest::clear_areaid() {
  areaid_ = 0;
  clear_has_areaid();
}
inline ::google::protobuf::int32 GM_AreaAllinfoRequest::areaid() const {
  return areaid_;
}
inline void GM_AreaAllinfoRequest::set_areaid(::google::protobuf::int32 value) {
  set_has_areaid();
  areaid_ = value;
}

// -------------------------------------------------------------------

// GM_Fish_All_request

// required int32 areaid = 1;
inline bool GM_Fish_All_request::has_areaid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Fish_All_request::set_has_areaid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Fish_All_request::clear_has_areaid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Fish_All_request::clear_areaid() {
  areaid_ = 0;
  clear_has_areaid();
}
inline ::google::protobuf::int32 GM_Fish_All_request::areaid() const {
  return areaid_;
}
inline void GM_Fish_All_request::set_areaid(::google::protobuf::int32 value) {
  set_has_areaid();
  areaid_ = value;
}

// optional int32 id = 2;
inline bool GM_Fish_All_request::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Fish_All_request::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Fish_All_request::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Fish_All_request::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_Fish_All_request::id() const {
  return id_;
}
inline void GM_Fish_All_request::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GM_IsKilled_info

// required int32 roleid = 1;
inline bool GM_IsKilled_info::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_IsKilled_info::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_IsKilled_info::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_IsKilled_info::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_IsKilled_info::roleid() const {
  return roleid_;
}
inline void GM_IsKilled_info::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 monsterid = 2;
inline bool GM_IsKilled_info::has_monsterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_IsKilled_info::set_has_monsterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_IsKilled_info::clear_has_monsterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_IsKilled_info::clear_monsterid() {
  monsterid_ = 0;
  clear_has_monsterid();
}
inline ::google::protobuf::int32 GM_IsKilled_info::monsterid() const {
  return monsterid_;
}
inline void GM_IsKilled_info::set_monsterid(::google::protobuf::int32 value) {
  set_has_monsterid();
  monsterid_ = value;
}

// optional int32 monclassification = 3;
inline bool GM_IsKilled_info::has_monclassification() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_IsKilled_info::set_has_monclassification() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_IsKilled_info::clear_has_monclassification() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_IsKilled_info::clear_monclassification() {
  monclassification_ = 0;
  clear_has_monclassification();
}
inline ::google::protobuf::int32 GM_IsKilled_info::monclassification() const {
  return monclassification_;
}
inline void GM_IsKilled_info::set_monclassification(::google::protobuf::int32 value) {
  set_has_monclassification();
  monclassification_ = value;
}

// -------------------------------------------------------------------

// GM_Killer_info

// required int32 roleid = 1;
inline bool GM_Killer_info::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Killer_info::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Killer_info::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Killer_info::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Killer_info::roleid() const {
  return roleid_;
}
inline void GM_Killer_info::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// GM_Kill_Return

// required int32 m_iskiller = 1;
inline bool GM_Kill_Return::has_m_iskiller() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Kill_Return::set_has_m_iskiller() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Kill_Return::clear_has_m_iskiller() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Kill_Return::clear_m_iskiller() {
  m_iskiller_ = 0;
  clear_has_m_iskiller();
}
inline ::google::protobuf::int32 GM_Kill_Return::m_iskiller() const {
  return m_iskiller_;
}
inline void GM_Kill_Return::set_m_iskiller(::google::protobuf::int32 value) {
  set_has_m_iskiller();
  m_iskiller_ = value;
}

// required int32 m_killer = 2;
inline bool GM_Kill_Return::has_m_killer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Kill_Return::set_has_m_killer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Kill_Return::clear_has_m_killer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Kill_Return::clear_m_killer() {
  m_killer_ = 0;
  clear_has_m_killer();
}
inline ::google::protobuf::int32 GM_Kill_Return::m_killer() const {
  return m_killer_;
}
inline void GM_Kill_Return::set_m_killer(::google::protobuf::int32 value) {
  set_has_m_killer();
  m_killer_ = value;
}

// required int32 m_is = 3;
inline bool GM_Kill_Return::has_m_is() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Kill_Return::set_has_m_is() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Kill_Return::clear_has_m_is() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Kill_Return::clear_m_is() {
  m_is_ = 0;
  clear_has_m_is();
}
inline ::google::protobuf::int32 GM_Kill_Return::m_is() const {
  return m_is_;
}
inline void GM_Kill_Return::set_m_is(::google::protobuf::int32 value) {
  set_has_m_is();
  m_is_ = value;
}

// optional int32 m_state = 4;
inline bool GM_Kill_Return::has_m_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Kill_Return::set_has_m_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Kill_Return::clear_has_m_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Kill_Return::clear_m_state() {
  m_state_ = 0;
  clear_has_m_state();
}
inline ::google::protobuf::int32 GM_Kill_Return::m_state() const {
  return m_state_;
}
inline void GM_Kill_Return::set_m_state(::google::protobuf::int32 value) {
  set_has_m_state();
  m_state_ = value;
}

// repeated .SM_Fish_Object data = 5;
inline int GM_Kill_Return::data_size() const {
  return data_.size();
}
inline void GM_Kill_Return::clear_data() {
  data_.Clear();
}
inline const ::SM_Fish_Object& GM_Kill_Return::data(int index) const {
  return data_.Get(index);
}
inline ::SM_Fish_Object* GM_Kill_Return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::SM_Fish_Object* GM_Kill_Return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SM_Fish_Object >&
GM_Kill_Return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::SM_Fish_Object >*
GM_Kill_Return::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_leaveRequest

// required int32 areaid = 1;
inline bool GM_leaveRequest::has_areaid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_leaveRequest::set_has_areaid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_leaveRequest::clear_has_areaid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_leaveRequest::clear_areaid() {
  areaid_ = 0;
  clear_has_areaid();
}
inline ::google::protobuf::int32 GM_leaveRequest::areaid() const {
  return areaid_;
}
inline void GM_leaveRequest::set_areaid(::google::protobuf::int32 value) {
  set_has_areaid();
  areaid_ = value;
}

// required int32 roomid = 2;
inline bool GM_leaveRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_leaveRequest::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_leaveRequest::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_leaveRequest::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 GM_leaveRequest::roomid() const {
  return roomid_;
}
inline void GM_leaveRequest::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// GM_leaveReturn

// required int32 errorid = 1;
inline bool GM_leaveReturn::has_errorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_leaveReturn::set_has_errorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_leaveReturn::clear_has_errorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_leaveReturn::clear_errorid() {
  errorid_ = 0;
  clear_has_errorid();
}
inline ::google::protobuf::int32 GM_leaveReturn::errorid() const {
  return errorid_;
}
inline void GM_leaveReturn::set_errorid(::google::protobuf::int32 value) {
  set_has_errorid();
  errorid_ = value;
}

// optional int32 roleid = 2;
inline bool GM_leaveReturn::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_leaveReturn::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_leaveReturn::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_leaveReturn::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_leaveReturn::roleid() const {
  return roleid_;
}
inline void GM_leaveReturn::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// GM_Fish_RoleAttack

// required int32 roleid = 1;
inline bool GM_Fish_RoleAttack::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Fish_RoleAttack::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Fish_RoleAttack::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Fish_RoleAttack::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Fish_RoleAttack::roleid() const {
  return roleid_;
}
inline void GM_Fish_RoleAttack::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional float posX = 2;
inline bool GM_Fish_RoleAttack::has_posx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Fish_RoleAttack::set_has_posx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Fish_RoleAttack::clear_has_posx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Fish_RoleAttack::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float GM_Fish_RoleAttack::posx() const {
  return posx_;
}
inline void GM_Fish_RoleAttack::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// optional float posZ = 3;
inline bool GM_Fish_RoleAttack::has_posz() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Fish_RoleAttack::set_has_posz() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Fish_RoleAttack::clear_has_posz() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Fish_RoleAttack::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline float GM_Fish_RoleAttack::posz() const {
  return posz_;
}
inline void GM_Fish_RoleAttack::set_posz(float value) {
  set_has_posz();
  posz_ = value;
}

// optional int32 time = 4;
inline bool GM_Fish_RoleAttack::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Fish_RoleAttack::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Fish_RoleAttack::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Fish_RoleAttack::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 GM_Fish_RoleAttack::time() const {
  return time_;
}
inline void GM_Fish_RoleAttack::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 guntype = 5;
inline bool GM_Fish_RoleAttack::has_guntype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Fish_RoleAttack::set_has_guntype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Fish_RoleAttack::clear_has_guntype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Fish_RoleAttack::clear_guntype() {
  guntype_ = 0;
  clear_has_guntype();
}
inline ::google::protobuf::int32 GM_Fish_RoleAttack::guntype() const {
  return guntype_;
}
inline void GM_Fish_RoleAttack::set_guntype(::google::protobuf::int32 value) {
  set_has_guntype();
  guntype_ = value;
}

// optional int32 gunid = 6;
inline bool GM_Fish_RoleAttack::has_gunid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_Fish_RoleAttack::set_has_gunid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_Fish_RoleAttack::clear_has_gunid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_Fish_RoleAttack::clear_gunid() {
  gunid_ = 0;
  clear_has_gunid();
}
inline ::google::protobuf::int32 GM_Fish_RoleAttack::gunid() const {
  return gunid_;
}
inline void GM_Fish_RoleAttack::set_gunid(::google::protobuf::int32 value) {
  set_has_gunid();
  gunid_ = value;
}

// optional int32 iscan = 7;
inline bool GM_Fish_RoleAttack::has_iscan() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_Fish_RoleAttack::set_has_iscan() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_Fish_RoleAttack::clear_has_iscan() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_Fish_RoleAttack::clear_iscan() {
  iscan_ = 0;
  clear_has_iscan();
}
inline ::google::protobuf::int32 GM_Fish_RoleAttack::iscan() const {
  return iscan_;
}
inline void GM_Fish_RoleAttack::set_iscan(::google::protobuf::int32 value) {
  set_has_iscan();
  iscan_ = value;
}

// -------------------------------------------------------------------

// GM_Fish_Gun_request

// required int32 gunid = 1;
inline bool GM_Fish_Gun_request::has_gunid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Fish_Gun_request::set_has_gunid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Fish_Gun_request::clear_has_gunid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Fish_Gun_request::clear_gunid() {
  gunid_ = 0;
  clear_has_gunid();
}
inline ::google::protobuf::int32 GM_Fish_Gun_request::gunid() const {
  return gunid_;
}
inline void GM_Fish_Gun_request::set_gunid(::google::protobuf::int32 value) {
  set_has_gunid();
  gunid_ = value;
}

// optional int32 gunrate = 2;
inline bool GM_Fish_Gun_request::has_gunrate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Fish_Gun_request::set_has_gunrate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Fish_Gun_request::clear_has_gunrate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Fish_Gun_request::clear_gunrate() {
  gunrate_ = 0;
  clear_has_gunrate();
}
inline ::google::protobuf::int32 GM_Fish_Gun_request::gunrate() const {
  return gunrate_;
}
inline void GM_Fish_Gun_request::set_gunrate(::google::protobuf::int32 value) {
  set_has_gunrate();
  gunrate_ = value;
}

// optional int32 buy = 3;
inline bool GM_Fish_Gun_request::has_buy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Fish_Gun_request::set_has_buy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Fish_Gun_request::clear_has_buy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Fish_Gun_request::clear_buy() {
  buy_ = 0;
  clear_has_buy();
}
inline ::google::protobuf::int32 GM_Fish_Gun_request::buy() const {
  return buy_;
}
inline void GM_Fish_Gun_request::set_buy(::google::protobuf::int32 value) {
  set_has_buy();
  buy_ = value;
}

// -------------------------------------------------------------------

// GM_Fish_Gun_return

// required int32 errorid = 1;
inline bool GM_Fish_Gun_return::has_errorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Fish_Gun_return::set_has_errorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Fish_Gun_return::clear_has_errorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Fish_Gun_return::clear_errorid() {
  errorid_ = 0;
  clear_has_errorid();
}
inline ::google::protobuf::int32 GM_Fish_Gun_return::errorid() const {
  return errorid_;
}
inline void GM_Fish_Gun_return::set_errorid(::google::protobuf::int32 value) {
  set_has_errorid();
  errorid_ = value;
}

// optional int32 gunid = 2;
inline bool GM_Fish_Gun_return::has_gunid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Fish_Gun_return::set_has_gunid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Fish_Gun_return::clear_has_gunid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Fish_Gun_return::clear_gunid() {
  gunid_ = 0;
  clear_has_gunid();
}
inline ::google::protobuf::int32 GM_Fish_Gun_return::gunid() const {
  return gunid_;
}
inline void GM_Fish_Gun_return::set_gunid(::google::protobuf::int32 value) {
  set_has_gunid();
  gunid_ = value;
}

// optional int32 gunrate = 3;
inline bool GM_Fish_Gun_return::has_gunrate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Fish_Gun_return::set_has_gunrate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Fish_Gun_return::clear_has_gunrate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Fish_Gun_return::clear_gunrate() {
  gunrate_ = 0;
  clear_has_gunrate();
}
inline ::google::protobuf::int32 GM_Fish_Gun_return::gunrate() const {
  return gunrate_;
}
inline void GM_Fish_Gun_return::set_gunrate(::google::protobuf::int32 value) {
  set_has_gunrate();
  gunrate_ = value;
}

// optional int32 roleid = 4;
inline bool GM_Fish_Gun_return::has_roleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Fish_Gun_return::set_has_roleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Fish_Gun_return::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Fish_Gun_return::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Fish_Gun_return::roleid() const {
  return roleid_;
}
inline void GM_Fish_Gun_return::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// SM_Fish_Object

// required int32 objectid = 1;
inline bool SM_Fish_Object::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Fish_Object::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Fish_Object::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Fish_Object::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 SM_Fish_Object::objectid() const {
  return objectid_;
}
inline void SM_Fish_Object::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// optional int32 num = 2;
inline bool SM_Fish_Object::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_Fish_Object::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_Fish_Object::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_Fish_Object::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 SM_Fish_Object::num() const {
  return num_;
}
inline void SM_Fish_Object::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// GM_FishMoney_return

// required int32 roleid = 1;
inline bool GM_FishMoney_return::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_FishMoney_return::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_FishMoney_return::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_FishMoney_return::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_FishMoney_return::roleid() const {
  return roleid_;
}
inline void GM_FishMoney_return::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 money = 2;
inline bool GM_FishMoney_return::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_FishMoney_return::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_FishMoney_return::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_FishMoney_return::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 GM_FishMoney_return::money() const {
  return money_;
}
inline void GM_FishMoney_return::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
}

// -------------------------------------------------------------------

// GM_FishGun_Request

// required int32 roleid = 1;
inline bool GM_FishGun_Request::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_FishGun_Request::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_FishGun_Request::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_FishGun_Request::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_FishGun_Request::roleid() const {
  return roleid_;
}
inline void GM_FishGun_Request::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// GM_Fish_Gun

// required int32 gunid = 1;
inline bool GM_Fish_Gun::has_gunid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Fish_Gun::set_has_gunid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Fish_Gun::clear_has_gunid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Fish_Gun::clear_gunid() {
  gunid_ = 0;
  clear_has_gunid();
}
inline ::google::protobuf::int32 GM_Fish_Gun::gunid() const {
  return gunid_;
}
inline void GM_Fish_Gun::set_gunid(::google::protobuf::int32 value) {
  set_has_gunid();
  gunid_ = value;
}

// -------------------------------------------------------------------

// GM_FishGun_Return

// required int32 selfgunid = 1;
inline bool GM_FishGun_Return::has_selfgunid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_FishGun_Return::set_has_selfgunid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_FishGun_Return::clear_has_selfgunid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_FishGun_Return::clear_selfgunid() {
  selfgunid_ = 0;
  clear_has_selfgunid();
}
inline ::google::protobuf::int32 GM_FishGun_Return::selfgunid() const {
  return selfgunid_;
}
inline void GM_FishGun_Return::set_selfgunid(::google::protobuf::int32 value) {
  set_has_selfgunid();
  selfgunid_ = value;
}

// optional int32 selfgunrate = 2;
inline bool GM_FishGun_Return::has_selfgunrate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_FishGun_Return::set_has_selfgunrate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_FishGun_Return::clear_has_selfgunrate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_FishGun_Return::clear_selfgunrate() {
  selfgunrate_ = 0;
  clear_has_selfgunrate();
}
inline ::google::protobuf::int32 GM_FishGun_Return::selfgunrate() const {
  return selfgunrate_;
}
inline void GM_FishGun_Return::set_selfgunrate(::google::protobuf::int32 value) {
  set_has_selfgunrate();
  selfgunrate_ = value;
}

// optional int32 guntate = 3;
inline bool GM_FishGun_Return::has_guntate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_FishGun_Return::set_has_guntate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_FishGun_Return::clear_has_guntate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_FishGun_Return::clear_guntate() {
  guntate_ = 0;
  clear_has_guntate();
}
inline ::google::protobuf::int32 GM_FishGun_Return::guntate() const {
  return guntate_;
}
inline void GM_FishGun_Return::set_guntate(::google::protobuf::int32 value) {
  set_has_guntate();
  guntate_ = value;
}

// optional int32 roleid = 4;
inline bool GM_FishGun_Return::has_roleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_FishGun_Return::set_has_roleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_FishGun_Return::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_FishGun_Return::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_FishGun_Return::roleid() const {
  return roleid_;
}
inline void GM_FishGun_Return::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 power = 5;
inline bool GM_FishGun_Return::has_power() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_FishGun_Return::set_has_power() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_FishGun_Return::clear_has_power() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_FishGun_Return::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline ::google::protobuf::int32 GM_FishGun_Return::power() const {
  return power_;
}
inline void GM_FishGun_Return::set_power(::google::protobuf::int32 value) {
  set_has_power();
  power_ = value;
}

// repeated .GM_Fish_Gun data = 6;
inline int GM_FishGun_Return::data_size() const {
  return data_.size();
}
inline void GM_FishGun_Return::clear_data() {
  data_.Clear();
}
inline const ::GM_Fish_Gun& GM_FishGun_Return::data(int index) const {
  return data_.Get(index);
}
inline ::GM_Fish_Gun* GM_FishGun_Return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_Fish_Gun* GM_FishGun_Return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Fish_Gun >&
GM_FishGun_Return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Fish_Gun >*
GM_FishGun_Return::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_Fish_attack

// required int32 roleid = 1;
inline bool GM_Fish_attack::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Fish_attack::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Fish_attack::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Fish_attack::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Fish_attack::roleid() const {
  return roleid_;
}
inline void GM_Fish_attack::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// repeated int32 fishid = 2;
inline int GM_Fish_attack::fishid_size() const {
  return fishid_.size();
}
inline void GM_Fish_attack::clear_fishid() {
  fishid_.Clear();
}
inline ::google::protobuf::int32 GM_Fish_attack::fishid(int index) const {
  return fishid_.Get(index);
}
inline void GM_Fish_attack::set_fishid(int index, ::google::protobuf::int32 value) {
  fishid_.Set(index, value);
}
inline void GM_Fish_attack::add_fishid(::google::protobuf::int32 value) {
  fishid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GM_Fish_attack::fishid() const {
  return fishid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GM_Fish_attack::mutable_fishid() {
  return &fishid_;
}

// -------------------------------------------------------------------

// GM_Fish_RoleAttack_request

// required int32 roleid = 1;
inline bool GM_Fish_RoleAttack_request::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Fish_RoleAttack_request::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Fish_RoleAttack_request::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Fish_RoleAttack_request::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Fish_RoleAttack_request::roleid() const {
  return roleid_;
}
inline void GM_Fish_RoleAttack_request::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 time = 2;
inline bool GM_Fish_RoleAttack_request::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Fish_RoleAttack_request::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Fish_RoleAttack_request::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Fish_RoleAttack_request::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 GM_Fish_RoleAttack_request::time() const {
  return time_;
}
inline void GM_Fish_RoleAttack_request::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 guntype = 3;
inline bool GM_Fish_RoleAttack_request::has_guntype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Fish_RoleAttack_request::set_has_guntype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Fish_RoleAttack_request::clear_has_guntype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Fish_RoleAttack_request::clear_guntype() {
  guntype_ = 0;
  clear_has_guntype();
}
inline ::google::protobuf::int32 GM_Fish_RoleAttack_request::guntype() const {
  return guntype_;
}
inline void GM_Fish_RoleAttack_request::set_guntype(::google::protobuf::int32 value) {
  set_has_guntype();
  guntype_ = value;
}

// optional int32 iscan = 4;
inline bool GM_Fish_RoleAttack_request::has_iscan() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Fish_RoleAttack_request::set_has_iscan() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Fish_RoleAttack_request::clear_has_iscan() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Fish_RoleAttack_request::clear_iscan() {
  iscan_ = 0;
  clear_has_iscan();
}
inline ::google::protobuf::int32 GM_Fish_RoleAttack_request::iscan() const {
  return iscan_;
}
inline void GM_Fish_RoleAttack_request::set_iscan(::google::protobuf::int32 value) {
  set_has_iscan();
  iscan_ = value;
}

// optional int32 firetime = 5;
inline bool GM_Fish_RoleAttack_request::has_firetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Fish_RoleAttack_request::set_has_firetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Fish_RoleAttack_request::clear_has_firetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Fish_RoleAttack_request::clear_firetime() {
  firetime_ = 0;
  clear_has_firetime();
}
inline ::google::protobuf::int32 GM_Fish_RoleAttack_request::firetime() const {
  return firetime_;
}
inline void GM_Fish_RoleAttack_request::set_firetime(::google::protobuf::int32 value) {
  set_has_firetime();
  firetime_ = value;
}

// optional int32 firelast = 6;
inline bool GM_Fish_RoleAttack_request::has_firelast() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_Fish_RoleAttack_request::set_has_firelast() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_Fish_RoleAttack_request::clear_has_firelast() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_Fish_RoleAttack_request::clear_firelast() {
  firelast_ = 0;
  clear_has_firelast();
}
inline ::google::protobuf::int32 GM_Fish_RoleAttack_request::firelast() const {
  return firelast_;
}
inline void GM_Fish_RoleAttack_request::set_firelast(::google::protobuf::int32 value) {
  set_has_firelast();
  firelast_ = value;
}

// -------------------------------------------------------------------

// GM_Fish_Kill_Return

// required int32 m_killer = 1;
inline bool GM_Fish_Kill_Return::has_m_killer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Fish_Kill_Return::set_has_m_killer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Fish_Kill_Return::clear_has_m_killer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Fish_Kill_Return::clear_m_killer() {
  m_killer_ = 0;
  clear_has_m_killer();
}
inline ::google::protobuf::int32 GM_Fish_Kill_Return::m_killer() const {
  return m_killer_;
}
inline void GM_Fish_Kill_Return::set_m_killer(::google::protobuf::int32 value) {
  set_has_m_killer();
  m_killer_ = value;
}

// repeated int32 m_deadid = 2;
inline int GM_Fish_Kill_Return::m_deadid_size() const {
  return m_deadid_.size();
}
inline void GM_Fish_Kill_Return::clear_m_deadid() {
  m_deadid_.Clear();
}
inline ::google::protobuf::int32 GM_Fish_Kill_Return::m_deadid(int index) const {
  return m_deadid_.Get(index);
}
inline void GM_Fish_Kill_Return::set_m_deadid(int index, ::google::protobuf::int32 value) {
  m_deadid_.Set(index, value);
}
inline void GM_Fish_Kill_Return::add_m_deadid(::google::protobuf::int32 value) {
  m_deadid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GM_Fish_Kill_Return::m_deadid() const {
  return m_deadid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GM_Fish_Kill_Return::mutable_m_deadid() {
  return &m_deadid_;
}

// optional int32 errorid = 3;
inline bool GM_Fish_Kill_Return::has_errorid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Fish_Kill_Return::set_has_errorid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Fish_Kill_Return::clear_has_errorid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Fish_Kill_Return::clear_errorid() {
  errorid_ = 0;
  clear_has_errorid();
}
inline ::google::protobuf::int32 GM_Fish_Kill_Return::errorid() const {
  return errorid_;
}
inline void GM_Fish_Kill_Return::set_errorid(::google::protobuf::int32 value) {
  set_has_errorid();
  errorid_ = value;
}

// optional int32 m_state = 4;
inline bool GM_Fish_Kill_Return::has_m_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Fish_Kill_Return::set_has_m_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Fish_Kill_Return::clear_has_m_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Fish_Kill_Return::clear_m_state() {
  m_state_ = 0;
  clear_has_m_state();
}
inline ::google::protobuf::int32 GM_Fish_Kill_Return::m_state() const {
  return m_state_;
}
inline void GM_Fish_Kill_Return::set_m_state(::google::protobuf::int32 value) {
  set_has_m_state();
  m_state_ = value;
}

// repeated .SM_Fish_Object data = 5;
inline int GM_Fish_Kill_Return::data_size() const {
  return data_.size();
}
inline void GM_Fish_Kill_Return::clear_data() {
  data_.Clear();
}
inline const ::SM_Fish_Object& GM_Fish_Kill_Return::data(int index) const {
  return data_.Get(index);
}
inline ::SM_Fish_Object* GM_Fish_Kill_Return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::SM_Fish_Object* GM_Fish_Kill_Return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SM_Fish_Object >&
GM_Fish_Kill_Return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::SM_Fish_Object >*
GM_Fish_Kill_Return::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_Fish_power_set_request

// required int32 power = 1;
inline bool GM_Fish_power_set_request::has_power() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Fish_power_set_request::set_has_power() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Fish_power_set_request::clear_has_power() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Fish_power_set_request::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline ::google::protobuf::int32 GM_Fish_power_set_request::power() const {
  return power_;
}
inline void GM_Fish_power_set_request::set_power(::google::protobuf::int32 value) {
  set_has_power();
  power_ = value;
}

// -------------------------------------------------------------------

// GM_Fish_power_set_rturn

// required int32 errorid = 1;
inline bool GM_Fish_power_set_rturn::has_errorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Fish_power_set_rturn::set_has_errorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Fish_power_set_rturn::clear_has_errorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Fish_power_set_rturn::clear_errorid() {
  errorid_ = 0;
  clear_has_errorid();
}
inline ::google::protobuf::int32 GM_Fish_power_set_rturn::errorid() const {
  return errorid_;
}
inline void GM_Fish_power_set_rturn::set_errorid(::google::protobuf::int32 value) {
  set_has_errorid();
  errorid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_Fish_2etxt__INCLUDED
