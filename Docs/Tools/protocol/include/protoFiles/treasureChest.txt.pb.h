// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: treasureChest.txt

#ifndef PROTOBUF_treasureChest_2etxt__INCLUDED
#define PROTOBUF_treasureChest_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_treasureChest_2etxt();
void protobuf_AssignDesc_treasureChest_2etxt();
void protobuf_ShutdownFile_treasureChest_2etxt();

class GM_TreasureChestInfo_Return;
class GM_TreasureChestSubInfo;
class GM_TreasureChestOpen_Request;
class GM_TreasureChestGetObject_Return;
class GM_TreasureChestGetSubObject;
class GM_TreasureTokenOpen_Request;
class GM_TreasureTokenetObject_Return;

// ===================================================================

class GM_TreasureChestInfo_Return : public ::google::protobuf::Message {
 public:
  GM_TreasureChestInfo_Return();
  virtual ~GM_TreasureChestInfo_Return();

  GM_TreasureChestInfo_Return(const GM_TreasureChestInfo_Return& from);

  inline GM_TreasureChestInfo_Return& operator=(const GM_TreasureChestInfo_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_TreasureChestInfo_Return& default_instance();

  void Swap(GM_TreasureChestInfo_Return* other);

  // implements Message ----------------------------------------------

  GM_TreasureChestInfo_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_TreasureChestInfo_Return& from);
  void MergeFrom(const GM_TreasureChestInfo_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // repeated .GM_TreasureChestSubInfo subBox = 2;
  inline int subbox_size() const;
  inline void clear_subbox();
  static const int kSubBoxFieldNumber = 2;
  inline const ::GM_TreasureChestSubInfo& subbox(int index) const;
  inline ::GM_TreasureChestSubInfo* mutable_subbox(int index);
  inline ::GM_TreasureChestSubInfo* add_subbox();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_TreasureChestSubInfo >&
      subbox() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_TreasureChestSubInfo >*
      mutable_subbox();

  // @@protoc_insertion_point(class_scope:GM_TreasureChestInfo_Return)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_TreasureChestSubInfo > subbox_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_treasureChest_2etxt();
  friend void protobuf_AssignDesc_treasureChest_2etxt();
  friend void protobuf_ShutdownFile_treasureChest_2etxt();

  void InitAsDefaultInstance();
  static GM_TreasureChestInfo_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_TreasureChestSubInfo : public ::google::protobuf::Message {
 public:
  GM_TreasureChestSubInfo();
  virtual ~GM_TreasureChestSubInfo();

  GM_TreasureChestSubInfo(const GM_TreasureChestSubInfo& from);

  inline GM_TreasureChestSubInfo& operator=(const GM_TreasureChestSubInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_TreasureChestSubInfo& default_instance();

  void Swap(GM_TreasureChestSubInfo* other);

  // implements Message ----------------------------------------------

  GM_TreasureChestSubInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_TreasureChestSubInfo& from);
  void MergeFrom(const GM_TreasureChestSubInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 boxType = 1;
  inline bool has_boxtype() const;
  inline void clear_boxtype();
  static const int kBoxTypeFieldNumber = 1;
  inline ::google::protobuf::int32 boxtype() const;
  inline void set_boxtype(::google::protobuf::int32 value);

  // optional int32 costType = 2;
  inline bool has_costtype() const;
  inline void clear_costtype();
  static const int kCostTypeFieldNumber = 2;
  inline ::google::protobuf::int32 costtype() const;
  inline void set_costtype(::google::protobuf::int32 value);

  // optional int32 numberType = 3;
  inline bool has_numbertype() const;
  inline void clear_numbertype();
  static const int kNumberTypeFieldNumber = 3;
  inline ::google::protobuf::int32 numbertype() const;
  inline void set_numbertype(::google::protobuf::int32 value);

  // optional int32 costNum = 4;
  inline bool has_costnum() const;
  inline void clear_costnum();
  static const int kCostNumFieldNumber = 4;
  inline ::google::protobuf::int32 costnum() const;
  inline void set_costnum(::google::protobuf::int32 value);

  // optional float discount = 5;
  inline bool has_discount() const;
  inline void clear_discount();
  static const int kDiscountFieldNumber = 5;
  inline float discount() const;
  inline void set_discount(float value);

  // optional int32 freeTimes = 6;
  inline bool has_freetimes() const;
  inline void clear_freetimes();
  static const int kFreeTimesFieldNumber = 6;
  inline ::google::protobuf::int32 freetimes() const;
  inline void set_freetimes(::google::protobuf::int32 value);

  // optional int32 totalFreeTimes = 7;
  inline bool has_totalfreetimes() const;
  inline void clear_totalfreetimes();
  static const int kTotalFreeTimesFieldNumber = 7;
  inline ::google::protobuf::int32 totalfreetimes() const;
  inline void set_totalfreetimes(::google::protobuf::int32 value);

  // optional int32 leftTime = 8;
  inline bool has_lefttime() const;
  inline void clear_lefttime();
  static const int kLeftTimeFieldNumber = 8;
  inline ::google::protobuf::int32 lefttime() const;
  inline void set_lefttime(::google::protobuf::int32 value);

  // optional int32 BuyCount = 9;
  inline bool has_buycount() const;
  inline void clear_buycount();
  static const int kBuyCountFieldNumber = 9;
  inline ::google::protobuf::int32 buycount() const;
  inline void set_buycount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_TreasureChestSubInfo)
 private:
  inline void set_has_boxtype();
  inline void clear_has_boxtype();
  inline void set_has_costtype();
  inline void clear_has_costtype();
  inline void set_has_numbertype();
  inline void clear_has_numbertype();
  inline void set_has_costnum();
  inline void clear_has_costnum();
  inline void set_has_discount();
  inline void clear_has_discount();
  inline void set_has_freetimes();
  inline void clear_has_freetimes();
  inline void set_has_totalfreetimes();
  inline void clear_has_totalfreetimes();
  inline void set_has_lefttime();
  inline void clear_has_lefttime();
  inline void set_has_buycount();
  inline void clear_has_buycount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 boxtype_;
  ::google::protobuf::int32 costtype_;
  ::google::protobuf::int32 numbertype_;
  ::google::protobuf::int32 costnum_;
  float discount_;
  ::google::protobuf::int32 freetimes_;
  ::google::protobuf::int32 totalfreetimes_;
  ::google::protobuf::int32 lefttime_;
  ::google::protobuf::int32 buycount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_treasureChest_2etxt();
  friend void protobuf_AssignDesc_treasureChest_2etxt();
  friend void protobuf_ShutdownFile_treasureChest_2etxt();

  void InitAsDefaultInstance();
  static GM_TreasureChestSubInfo* default_instance_;
};
// -------------------------------------------------------------------

class GM_TreasureChestOpen_Request : public ::google::protobuf::Message {
 public:
  GM_TreasureChestOpen_Request();
  virtual ~GM_TreasureChestOpen_Request();

  GM_TreasureChestOpen_Request(const GM_TreasureChestOpen_Request& from);

  inline GM_TreasureChestOpen_Request& operator=(const GM_TreasureChestOpen_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_TreasureChestOpen_Request& default_instance();

  void Swap(GM_TreasureChestOpen_Request* other);

  // implements Message ----------------------------------------------

  GM_TreasureChestOpen_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_TreasureChestOpen_Request& from);
  void MergeFrom(const GM_TreasureChestOpen_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 boxType = 1;
  inline bool has_boxtype() const;
  inline void clear_boxtype();
  static const int kBoxTypeFieldNumber = 1;
  inline ::google::protobuf::int32 boxtype() const;
  inline void set_boxtype(::google::protobuf::int32 value);

  // optional int32 numberType = 2;
  inline bool has_numbertype() const;
  inline void clear_numbertype();
  static const int kNumberTypeFieldNumber = 2;
  inline ::google::protobuf::int32 numbertype() const;
  inline void set_numbertype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_TreasureChestOpen_Request)
 private:
  inline void set_has_boxtype();
  inline void clear_has_boxtype();
  inline void set_has_numbertype();
  inline void clear_has_numbertype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 boxtype_;
  ::google::protobuf::int32 numbertype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_treasureChest_2etxt();
  friend void protobuf_AssignDesc_treasureChest_2etxt();
  friend void protobuf_ShutdownFile_treasureChest_2etxt();

  void InitAsDefaultInstance();
  static GM_TreasureChestOpen_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_TreasureChestGetObject_Return : public ::google::protobuf::Message {
 public:
  GM_TreasureChestGetObject_Return();
  virtual ~GM_TreasureChestGetObject_Return();

  GM_TreasureChestGetObject_Return(const GM_TreasureChestGetObject_Return& from);

  inline GM_TreasureChestGetObject_Return& operator=(const GM_TreasureChestGetObject_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_TreasureChestGetObject_Return& default_instance();

  void Swap(GM_TreasureChestGetObject_Return* other);

  // implements Message ----------------------------------------------

  GM_TreasureChestGetObject_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_TreasureChestGetObject_Return& from);
  void MergeFrom(const GM_TreasureChestGetObject_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // repeated .GM_TreasureChestGetSubObject subObject = 3;
  inline int subobject_size() const;
  inline void clear_subobject();
  static const int kSubObjectFieldNumber = 3;
  inline const ::GM_TreasureChestGetSubObject& subobject(int index) const;
  inline ::GM_TreasureChestGetSubObject* mutable_subobject(int index);
  inline ::GM_TreasureChestGetSubObject* add_subobject();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_TreasureChestGetSubObject >&
      subobject() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_TreasureChestGetSubObject >*
      mutable_subobject();

  // @@protoc_insertion_point(class_scope:GM_TreasureChestGetObject_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::RepeatedPtrField< ::GM_TreasureChestGetSubObject > subobject_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_treasureChest_2etxt();
  friend void protobuf_AssignDesc_treasureChest_2etxt();
  friend void protobuf_ShutdownFile_treasureChest_2etxt();

  void InitAsDefaultInstance();
  static GM_TreasureChestGetObject_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_TreasureChestGetSubObject : public ::google::protobuf::Message {
 public:
  GM_TreasureChestGetSubObject();
  virtual ~GM_TreasureChestGetSubObject();

  GM_TreasureChestGetSubObject(const GM_TreasureChestGetSubObject& from);

  inline GM_TreasureChestGetSubObject& operator=(const GM_TreasureChestGetSubObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_TreasureChestGetSubObject& default_instance();

  void Swap(GM_TreasureChestGetSubObject* other);

  // implements Message ----------------------------------------------

  GM_TreasureChestGetSubObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_TreasureChestGetSubObject& from);
  void MergeFrom(const GM_TreasureChestGetSubObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objectId = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectIdFieldNumber = 1;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // optional int32 number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_TreasureChestGetSubObject)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_treasureChest_2etxt();
  friend void protobuf_AssignDesc_treasureChest_2etxt();
  friend void protobuf_ShutdownFile_treasureChest_2etxt();

  void InitAsDefaultInstance();
  static GM_TreasureChestGetSubObject* default_instance_;
};
// -------------------------------------------------------------------

class GM_TreasureTokenOpen_Request : public ::google::protobuf::Message {
 public:
  GM_TreasureTokenOpen_Request();
  virtual ~GM_TreasureTokenOpen_Request();

  GM_TreasureTokenOpen_Request(const GM_TreasureTokenOpen_Request& from);

  inline GM_TreasureTokenOpen_Request& operator=(const GM_TreasureTokenOpen_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_TreasureTokenOpen_Request& default_instance();

  void Swap(GM_TreasureTokenOpen_Request* other);

  // implements Message ----------------------------------------------

  GM_TreasureTokenOpen_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_TreasureTokenOpen_Request& from);
  void MergeFrom(const GM_TreasureTokenOpen_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 boxTokenID = 1;
  inline bool has_boxtokenid() const;
  inline void clear_boxtokenid();
  static const int kBoxTokenIDFieldNumber = 1;
  inline ::google::protobuf::int32 boxtokenid() const;
  inline void set_boxtokenid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_TreasureTokenOpen_Request)
 private:
  inline void set_has_boxtokenid();
  inline void clear_has_boxtokenid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 boxtokenid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_treasureChest_2etxt();
  friend void protobuf_AssignDesc_treasureChest_2etxt();
  friend void protobuf_ShutdownFile_treasureChest_2etxt();

  void InitAsDefaultInstance();
  static GM_TreasureTokenOpen_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_TreasureTokenetObject_Return : public ::google::protobuf::Message {
 public:
  GM_TreasureTokenetObject_Return();
  virtual ~GM_TreasureTokenetObject_Return();

  GM_TreasureTokenetObject_Return(const GM_TreasureTokenetObject_Return& from);

  inline GM_TreasureTokenetObject_Return& operator=(const GM_TreasureTokenetObject_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_TreasureTokenetObject_Return& default_instance();

  void Swap(GM_TreasureTokenetObject_Return* other);

  // implements Message ----------------------------------------------

  GM_TreasureTokenetObject_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_TreasureTokenetObject_Return& from);
  void MergeFrom(const GM_TreasureTokenetObject_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // repeated .GM_TreasureChestGetSubObject subObject = 3;
  inline int subobject_size() const;
  inline void clear_subobject();
  static const int kSubObjectFieldNumber = 3;
  inline const ::GM_TreasureChestGetSubObject& subobject(int index) const;
  inline ::GM_TreasureChestGetSubObject* mutable_subobject(int index);
  inline ::GM_TreasureChestGetSubObject* add_subobject();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_TreasureChestGetSubObject >&
      subobject() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_TreasureChestGetSubObject >*
      mutable_subobject();

  // @@protoc_insertion_point(class_scope:GM_TreasureTokenetObject_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::RepeatedPtrField< ::GM_TreasureChestGetSubObject > subobject_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_treasureChest_2etxt();
  friend void protobuf_AssignDesc_treasureChest_2etxt();
  friend void protobuf_ShutdownFile_treasureChest_2etxt();

  void InitAsDefaultInstance();
  static GM_TreasureTokenetObject_Return* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_TreasureChestInfo_Return

// required int32 count = 1;
inline bool GM_TreasureChestInfo_Return::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_TreasureChestInfo_Return::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_TreasureChestInfo_Return::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_TreasureChestInfo_Return::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GM_TreasureChestInfo_Return::count() const {
  return count_;
}
inline void GM_TreasureChestInfo_Return::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// repeated .GM_TreasureChestSubInfo subBox = 2;
inline int GM_TreasureChestInfo_Return::subbox_size() const {
  return subbox_.size();
}
inline void GM_TreasureChestInfo_Return::clear_subbox() {
  subbox_.Clear();
}
inline const ::GM_TreasureChestSubInfo& GM_TreasureChestInfo_Return::subbox(int index) const {
  return subbox_.Get(index);
}
inline ::GM_TreasureChestSubInfo* GM_TreasureChestInfo_Return::mutable_subbox(int index) {
  return subbox_.Mutable(index);
}
inline ::GM_TreasureChestSubInfo* GM_TreasureChestInfo_Return::add_subbox() {
  return subbox_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_TreasureChestSubInfo >&
GM_TreasureChestInfo_Return::subbox() const {
  return subbox_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_TreasureChestSubInfo >*
GM_TreasureChestInfo_Return::mutable_subbox() {
  return &subbox_;
}

// -------------------------------------------------------------------

// GM_TreasureChestSubInfo

// required int32 boxType = 1;
inline bool GM_TreasureChestSubInfo::has_boxtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_TreasureChestSubInfo::set_has_boxtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_TreasureChestSubInfo::clear_has_boxtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_TreasureChestSubInfo::clear_boxtype() {
  boxtype_ = 0;
  clear_has_boxtype();
}
inline ::google::protobuf::int32 GM_TreasureChestSubInfo::boxtype() const {
  return boxtype_;
}
inline void GM_TreasureChestSubInfo::set_boxtype(::google::protobuf::int32 value) {
  set_has_boxtype();
  boxtype_ = value;
}

// optional int32 costType = 2;
inline bool GM_TreasureChestSubInfo::has_costtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_TreasureChestSubInfo::set_has_costtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_TreasureChestSubInfo::clear_has_costtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_TreasureChestSubInfo::clear_costtype() {
  costtype_ = 0;
  clear_has_costtype();
}
inline ::google::protobuf::int32 GM_TreasureChestSubInfo::costtype() const {
  return costtype_;
}
inline void GM_TreasureChestSubInfo::set_costtype(::google::protobuf::int32 value) {
  set_has_costtype();
  costtype_ = value;
}

// optional int32 numberType = 3;
inline bool GM_TreasureChestSubInfo::has_numbertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_TreasureChestSubInfo::set_has_numbertype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_TreasureChestSubInfo::clear_has_numbertype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_TreasureChestSubInfo::clear_numbertype() {
  numbertype_ = 0;
  clear_has_numbertype();
}
inline ::google::protobuf::int32 GM_TreasureChestSubInfo::numbertype() const {
  return numbertype_;
}
inline void GM_TreasureChestSubInfo::set_numbertype(::google::protobuf::int32 value) {
  set_has_numbertype();
  numbertype_ = value;
}

// optional int32 costNum = 4;
inline bool GM_TreasureChestSubInfo::has_costnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_TreasureChestSubInfo::set_has_costnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_TreasureChestSubInfo::clear_has_costnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_TreasureChestSubInfo::clear_costnum() {
  costnum_ = 0;
  clear_has_costnum();
}
inline ::google::protobuf::int32 GM_TreasureChestSubInfo::costnum() const {
  return costnum_;
}
inline void GM_TreasureChestSubInfo::set_costnum(::google::protobuf::int32 value) {
  set_has_costnum();
  costnum_ = value;
}

// optional float discount = 5;
inline bool GM_TreasureChestSubInfo::has_discount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_TreasureChestSubInfo::set_has_discount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_TreasureChestSubInfo::clear_has_discount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_TreasureChestSubInfo::clear_discount() {
  discount_ = 0;
  clear_has_discount();
}
inline float GM_TreasureChestSubInfo::discount() const {
  return discount_;
}
inline void GM_TreasureChestSubInfo::set_discount(float value) {
  set_has_discount();
  discount_ = value;
}

// optional int32 freeTimes = 6;
inline bool GM_TreasureChestSubInfo::has_freetimes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_TreasureChestSubInfo::set_has_freetimes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_TreasureChestSubInfo::clear_has_freetimes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_TreasureChestSubInfo::clear_freetimes() {
  freetimes_ = 0;
  clear_has_freetimes();
}
inline ::google::protobuf::int32 GM_TreasureChestSubInfo::freetimes() const {
  return freetimes_;
}
inline void GM_TreasureChestSubInfo::set_freetimes(::google::protobuf::int32 value) {
  set_has_freetimes();
  freetimes_ = value;
}

// optional int32 totalFreeTimes = 7;
inline bool GM_TreasureChestSubInfo::has_totalfreetimes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_TreasureChestSubInfo::set_has_totalfreetimes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_TreasureChestSubInfo::clear_has_totalfreetimes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_TreasureChestSubInfo::clear_totalfreetimes() {
  totalfreetimes_ = 0;
  clear_has_totalfreetimes();
}
inline ::google::protobuf::int32 GM_TreasureChestSubInfo::totalfreetimes() const {
  return totalfreetimes_;
}
inline void GM_TreasureChestSubInfo::set_totalfreetimes(::google::protobuf::int32 value) {
  set_has_totalfreetimes();
  totalfreetimes_ = value;
}

// optional int32 leftTime = 8;
inline bool GM_TreasureChestSubInfo::has_lefttime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_TreasureChestSubInfo::set_has_lefttime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_TreasureChestSubInfo::clear_has_lefttime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_TreasureChestSubInfo::clear_lefttime() {
  lefttime_ = 0;
  clear_has_lefttime();
}
inline ::google::protobuf::int32 GM_TreasureChestSubInfo::lefttime() const {
  return lefttime_;
}
inline void GM_TreasureChestSubInfo::set_lefttime(::google::protobuf::int32 value) {
  set_has_lefttime();
  lefttime_ = value;
}

// optional int32 BuyCount = 9;
inline bool GM_TreasureChestSubInfo::has_buycount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_TreasureChestSubInfo::set_has_buycount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_TreasureChestSubInfo::clear_has_buycount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_TreasureChestSubInfo::clear_buycount() {
  buycount_ = 0;
  clear_has_buycount();
}
inline ::google::protobuf::int32 GM_TreasureChestSubInfo::buycount() const {
  return buycount_;
}
inline void GM_TreasureChestSubInfo::set_buycount(::google::protobuf::int32 value) {
  set_has_buycount();
  buycount_ = value;
}

// -------------------------------------------------------------------

// GM_TreasureChestOpen_Request

// required int32 boxType = 1;
inline bool GM_TreasureChestOpen_Request::has_boxtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_TreasureChestOpen_Request::set_has_boxtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_TreasureChestOpen_Request::clear_has_boxtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_TreasureChestOpen_Request::clear_boxtype() {
  boxtype_ = 0;
  clear_has_boxtype();
}
inline ::google::protobuf::int32 GM_TreasureChestOpen_Request::boxtype() const {
  return boxtype_;
}
inline void GM_TreasureChestOpen_Request::set_boxtype(::google::protobuf::int32 value) {
  set_has_boxtype();
  boxtype_ = value;
}

// optional int32 numberType = 2;
inline bool GM_TreasureChestOpen_Request::has_numbertype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_TreasureChestOpen_Request::set_has_numbertype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_TreasureChestOpen_Request::clear_has_numbertype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_TreasureChestOpen_Request::clear_numbertype() {
  numbertype_ = 0;
  clear_has_numbertype();
}
inline ::google::protobuf::int32 GM_TreasureChestOpen_Request::numbertype() const {
  return numbertype_;
}
inline void GM_TreasureChestOpen_Request::set_numbertype(::google::protobuf::int32 value) {
  set_has_numbertype();
  numbertype_ = value;
}

// -------------------------------------------------------------------

// GM_TreasureChestGetObject_Return

// required int32 result = 1;
inline bool GM_TreasureChestGetObject_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_TreasureChestGetObject_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_TreasureChestGetObject_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_TreasureChestGetObject_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_TreasureChestGetObject_Return::result() const {
  return result_;
}
inline void GM_TreasureChestGetObject_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 count = 2;
inline bool GM_TreasureChestGetObject_Return::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_TreasureChestGetObject_Return::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_TreasureChestGetObject_Return::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_TreasureChestGetObject_Return::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GM_TreasureChestGetObject_Return::count() const {
  return count_;
}
inline void GM_TreasureChestGetObject_Return::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// repeated .GM_TreasureChestGetSubObject subObject = 3;
inline int GM_TreasureChestGetObject_Return::subobject_size() const {
  return subobject_.size();
}
inline void GM_TreasureChestGetObject_Return::clear_subobject() {
  subobject_.Clear();
}
inline const ::GM_TreasureChestGetSubObject& GM_TreasureChestGetObject_Return::subobject(int index) const {
  return subobject_.Get(index);
}
inline ::GM_TreasureChestGetSubObject* GM_TreasureChestGetObject_Return::mutable_subobject(int index) {
  return subobject_.Mutable(index);
}
inline ::GM_TreasureChestGetSubObject* GM_TreasureChestGetObject_Return::add_subobject() {
  return subobject_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_TreasureChestGetSubObject >&
GM_TreasureChestGetObject_Return::subobject() const {
  return subobject_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_TreasureChestGetSubObject >*
GM_TreasureChestGetObject_Return::mutable_subobject() {
  return &subobject_;
}

// -------------------------------------------------------------------

// GM_TreasureChestGetSubObject

// required int32 objectId = 1;
inline bool GM_TreasureChestGetSubObject::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_TreasureChestGetSubObject::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_TreasureChestGetSubObject::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_TreasureChestGetSubObject::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_TreasureChestGetSubObject::objectid() const {
  return objectid_;
}
inline void GM_TreasureChestGetSubObject::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// optional int32 number = 2;
inline bool GM_TreasureChestGetSubObject::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_TreasureChestGetSubObject::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_TreasureChestGetSubObject::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_TreasureChestGetSubObject::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 GM_TreasureChestGetSubObject::number() const {
  return number_;
}
inline void GM_TreasureChestGetSubObject::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// GM_TreasureTokenOpen_Request

// required int32 boxTokenID = 1;
inline bool GM_TreasureTokenOpen_Request::has_boxtokenid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_TreasureTokenOpen_Request::set_has_boxtokenid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_TreasureTokenOpen_Request::clear_has_boxtokenid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_TreasureTokenOpen_Request::clear_boxtokenid() {
  boxtokenid_ = 0;
  clear_has_boxtokenid();
}
inline ::google::protobuf::int32 GM_TreasureTokenOpen_Request::boxtokenid() const {
  return boxtokenid_;
}
inline void GM_TreasureTokenOpen_Request::set_boxtokenid(::google::protobuf::int32 value) {
  set_has_boxtokenid();
  boxtokenid_ = value;
}

// -------------------------------------------------------------------

// GM_TreasureTokenetObject_Return

// required int32 result = 1;
inline bool GM_TreasureTokenetObject_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_TreasureTokenetObject_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_TreasureTokenetObject_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_TreasureTokenetObject_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_TreasureTokenetObject_Return::result() const {
  return result_;
}
inline void GM_TreasureTokenetObject_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 count = 2;
inline bool GM_TreasureTokenetObject_Return::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_TreasureTokenetObject_Return::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_TreasureTokenetObject_Return::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_TreasureTokenetObject_Return::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GM_TreasureTokenetObject_Return::count() const {
  return count_;
}
inline void GM_TreasureTokenetObject_Return::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// repeated .GM_TreasureChestGetSubObject subObject = 3;
inline int GM_TreasureTokenetObject_Return::subobject_size() const {
  return subobject_.size();
}
inline void GM_TreasureTokenetObject_Return::clear_subobject() {
  subobject_.Clear();
}
inline const ::GM_TreasureChestGetSubObject& GM_TreasureTokenetObject_Return::subobject(int index) const {
  return subobject_.Get(index);
}
inline ::GM_TreasureChestGetSubObject* GM_TreasureTokenetObject_Return::mutable_subobject(int index) {
  return subobject_.Mutable(index);
}
inline ::GM_TreasureChestGetSubObject* GM_TreasureTokenetObject_Return::add_subobject() {
  return subobject_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_TreasureChestGetSubObject >&
GM_TreasureTokenetObject_Return::subobject() const {
  return subobject_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_TreasureChestGetSubObject >*
GM_TreasureTokenetObject_Return::mutable_subobject() {
  return &subobject_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_treasureChest_2etxt__INCLUDED
