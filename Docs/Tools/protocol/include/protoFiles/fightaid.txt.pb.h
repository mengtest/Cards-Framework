// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fightaid.txt

#ifndef PROTOBUF_fightaid_2etxt__INCLUDED
#define PROTOBUF_fightaid_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_fightaid_2etxt();
void protobuf_AssignDesc_fightaid_2etxt();
void protobuf_ShutdownFile_fightaid_2etxt();

class GMFightAidReturn;
class GMObjectData;
class GMFightAidGetRequest;
class GMFightAidGetReturn;

// ===================================================================

class GMFightAidReturn : public ::google::protobuf::Message {
 public:
  GMFightAidReturn();
  virtual ~GMFightAidReturn();

  GMFightAidReturn(const GMFightAidReturn& from);

  inline GMFightAidReturn& operator=(const GMFightAidReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMFightAidReturn& default_instance();

  void Swap(GMFightAidReturn* other);

  // implements Message ----------------------------------------------

  GMFightAidReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMFightAidReturn& from);
  void MergeFrom(const GMFightAidReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 isAid = 1;
  inline bool has_isaid() const;
  inline void clear_isaid();
  static const int kIsAidFieldNumber = 1;
  inline ::google::protobuf::int32 isaid() const;
  inline void set_isaid(::google::protobuf::int32 value);

  // optional string bagName = 2;
  inline bool has_bagname() const;
  inline void clear_bagname();
  static const int kBagNameFieldNumber = 2;
  inline const ::std::string& bagname() const;
  inline void set_bagname(const ::std::string& value);
  inline void set_bagname(const char* value);
  inline void set_bagname(const char* value, size_t size);
  inline ::std::string* mutable_bagname();
  inline ::std::string* release_bagname();
  inline void set_allocated_bagname(::std::string* bagname);

  // optional int32 bagId = 3;
  inline bool has_bagid() const;
  inline void clear_bagid();
  static const int kBagIdFieldNumber = 3;
  inline ::google::protobuf::int32 bagid() const;
  inline void set_bagid(::google::protobuf::int32 value);

  // optional int32 leftTime = 4;
  inline bool has_lefttime() const;
  inline void clear_lefttime();
  static const int kLeftTimeFieldNumber = 4;
  inline ::google::protobuf::int32 lefttime() const;
  inline void set_lefttime(::google::protobuf::int32 value);

  // optional int32 value = 5;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 5;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // optional int32 chargeNum = 6;
  inline bool has_chargenum() const;
  inline void clear_chargenum();
  static const int kChargeNumFieldNumber = 6;
  inline ::google::protobuf::int32 chargenum() const;
  inline void set_chargenum(::google::protobuf::int32 value);

  // repeated .GMObjectData Item = 7;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 7;
  inline const ::GMObjectData& item(int index) const;
  inline ::GMObjectData* mutable_item(int index);
  inline ::GMObjectData* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::GMObjectData >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::GMObjectData >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:GMFightAidReturn)
 private:
  inline void set_has_isaid();
  inline void clear_has_isaid();
  inline void set_has_bagname();
  inline void clear_has_bagname();
  inline void set_has_bagid();
  inline void clear_has_bagid();
  inline void set_has_lefttime();
  inline void clear_has_lefttime();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_chargenum();
  inline void clear_has_chargenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* bagname_;
  ::google::protobuf::int32 isaid_;
  ::google::protobuf::int32 bagid_;
  ::google::protobuf::int32 lefttime_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::RepeatedPtrField< ::GMObjectData > item_;
  ::google::protobuf::int32 chargenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_fightaid_2etxt();
  friend void protobuf_AssignDesc_fightaid_2etxt();
  friend void protobuf_ShutdownFile_fightaid_2etxt();

  void InitAsDefaultInstance();
  static GMFightAidReturn* default_instance_;
};
// -------------------------------------------------------------------

class GMObjectData : public ::google::protobuf::Message {
 public:
  GMObjectData();
  virtual ~GMObjectData();

  GMObjectData(const GMObjectData& from);

  inline GMObjectData& operator=(const GMObjectData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMObjectData& default_instance();

  void Swap(GMObjectData* other);

  // implements Message ----------------------------------------------

  GMObjectData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMObjectData& from);
  void MergeFrom(const GMObjectData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objectId = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectIdFieldNumber = 1;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // required int32 objectNum = 2;
  inline bool has_objectnum() const;
  inline void clear_objectnum();
  static const int kObjectNumFieldNumber = 2;
  inline ::google::protobuf::int32 objectnum() const;
  inline void set_objectnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMObjectData)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_objectnum();
  inline void clear_has_objectnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 objectnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_fightaid_2etxt();
  friend void protobuf_AssignDesc_fightaid_2etxt();
  friend void protobuf_ShutdownFile_fightaid_2etxt();

  void InitAsDefaultInstance();
  static GMObjectData* default_instance_;
};
// -------------------------------------------------------------------

class GMFightAidGetRequest : public ::google::protobuf::Message {
 public:
  GMFightAidGetRequest();
  virtual ~GMFightAidGetRequest();

  GMFightAidGetRequest(const GMFightAidGetRequest& from);

  inline GMFightAidGetRequest& operator=(const GMFightAidGetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMFightAidGetRequest& default_instance();

  void Swap(GMFightAidGetRequest* other);

  // implements Message ----------------------------------------------

  GMFightAidGetRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMFightAidGetRequest& from);
  void MergeFrom(const GMFightAidGetRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 bagid = 1;
  inline bool has_bagid() const;
  inline void clear_bagid();
  static const int kBagidFieldNumber = 1;
  inline ::google::protobuf::int32 bagid() const;
  inline void set_bagid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMFightAidGetRequest)
 private:
  inline void set_has_bagid();
  inline void clear_has_bagid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bagid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_fightaid_2etxt();
  friend void protobuf_AssignDesc_fightaid_2etxt();
  friend void protobuf_ShutdownFile_fightaid_2etxt();

  void InitAsDefaultInstance();
  static GMFightAidGetRequest* default_instance_;
};
// -------------------------------------------------------------------

class GMFightAidGetReturn : public ::google::protobuf::Message {
 public:
  GMFightAidGetReturn();
  virtual ~GMFightAidGetReturn();

  GMFightAidGetReturn(const GMFightAidGetReturn& from);

  inline GMFightAidGetReturn& operator=(const GMFightAidGetReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMFightAidGetReturn& default_instance();

  void Swap(GMFightAidGetReturn* other);

  // implements Message ----------------------------------------------

  GMFightAidGetReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMFightAidGetReturn& from);
  void MergeFrom(const GMFightAidGetReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMFightAidGetReturn)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_fightaid_2etxt();
  friend void protobuf_AssignDesc_fightaid_2etxt();
  friend void protobuf_ShutdownFile_fightaid_2etxt();

  void InitAsDefaultInstance();
  static GMFightAidGetReturn* default_instance_;
};
// ===================================================================


// ===================================================================

// GMFightAidReturn

// required int32 isAid = 1;
inline bool GMFightAidReturn::has_isaid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMFightAidReturn::set_has_isaid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMFightAidReturn::clear_has_isaid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMFightAidReturn::clear_isaid() {
  isaid_ = 0;
  clear_has_isaid();
}
inline ::google::protobuf::int32 GMFightAidReturn::isaid() const {
  return isaid_;
}
inline void GMFightAidReturn::set_isaid(::google::protobuf::int32 value) {
  set_has_isaid();
  isaid_ = value;
}

// optional string bagName = 2;
inline bool GMFightAidReturn::has_bagname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMFightAidReturn::set_has_bagname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMFightAidReturn::clear_has_bagname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMFightAidReturn::clear_bagname() {
  if (bagname_ != &::google::protobuf::internal::kEmptyString) {
    bagname_->clear();
  }
  clear_has_bagname();
}
inline const ::std::string& GMFightAidReturn::bagname() const {
  return *bagname_;
}
inline void GMFightAidReturn::set_bagname(const ::std::string& value) {
  set_has_bagname();
  if (bagname_ == &::google::protobuf::internal::kEmptyString) {
    bagname_ = new ::std::string;
  }
  bagname_->assign(value);
}
inline void GMFightAidReturn::set_bagname(const char* value) {
  set_has_bagname();
  if (bagname_ == &::google::protobuf::internal::kEmptyString) {
    bagname_ = new ::std::string;
  }
  bagname_->assign(value);
}
inline void GMFightAidReturn::set_bagname(const char* value, size_t size) {
  set_has_bagname();
  if (bagname_ == &::google::protobuf::internal::kEmptyString) {
    bagname_ = new ::std::string;
  }
  bagname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMFightAidReturn::mutable_bagname() {
  set_has_bagname();
  if (bagname_ == &::google::protobuf::internal::kEmptyString) {
    bagname_ = new ::std::string;
  }
  return bagname_;
}
inline ::std::string* GMFightAidReturn::release_bagname() {
  clear_has_bagname();
  if (bagname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bagname_;
    bagname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMFightAidReturn::set_allocated_bagname(::std::string* bagname) {
  if (bagname_ != &::google::protobuf::internal::kEmptyString) {
    delete bagname_;
  }
  if (bagname) {
    set_has_bagname();
    bagname_ = bagname;
  } else {
    clear_has_bagname();
    bagname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 bagId = 3;
inline bool GMFightAidReturn::has_bagid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMFightAidReturn::set_has_bagid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMFightAidReturn::clear_has_bagid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMFightAidReturn::clear_bagid() {
  bagid_ = 0;
  clear_has_bagid();
}
inline ::google::protobuf::int32 GMFightAidReturn::bagid() const {
  return bagid_;
}
inline void GMFightAidReturn::set_bagid(::google::protobuf::int32 value) {
  set_has_bagid();
  bagid_ = value;
}

// optional int32 leftTime = 4;
inline bool GMFightAidReturn::has_lefttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMFightAidReturn::set_has_lefttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMFightAidReturn::clear_has_lefttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMFightAidReturn::clear_lefttime() {
  lefttime_ = 0;
  clear_has_lefttime();
}
inline ::google::protobuf::int32 GMFightAidReturn::lefttime() const {
  return lefttime_;
}
inline void GMFightAidReturn::set_lefttime(::google::protobuf::int32 value) {
  set_has_lefttime();
  lefttime_ = value;
}

// optional int32 value = 5;
inline bool GMFightAidReturn::has_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GMFightAidReturn::set_has_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GMFightAidReturn::clear_has_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GMFightAidReturn::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 GMFightAidReturn::value() const {
  return value_;
}
inline void GMFightAidReturn::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// optional int32 chargeNum = 6;
inline bool GMFightAidReturn::has_chargenum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GMFightAidReturn::set_has_chargenum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GMFightAidReturn::clear_has_chargenum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GMFightAidReturn::clear_chargenum() {
  chargenum_ = 0;
  clear_has_chargenum();
}
inline ::google::protobuf::int32 GMFightAidReturn::chargenum() const {
  return chargenum_;
}
inline void GMFightAidReturn::set_chargenum(::google::protobuf::int32 value) {
  set_has_chargenum();
  chargenum_ = value;
}

// repeated .GMObjectData Item = 7;
inline int GMFightAidReturn::item_size() const {
  return item_.size();
}
inline void GMFightAidReturn::clear_item() {
  item_.Clear();
}
inline const ::GMObjectData& GMFightAidReturn::item(int index) const {
  return item_.Get(index);
}
inline ::GMObjectData* GMFightAidReturn::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::GMObjectData* GMFightAidReturn::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GMObjectData >&
GMFightAidReturn::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::GMObjectData >*
GMFightAidReturn::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// GMObjectData

// required int32 objectId = 1;
inline bool GMObjectData::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMObjectData::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMObjectData::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMObjectData::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GMObjectData::objectid() const {
  return objectid_;
}
inline void GMObjectData::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// required int32 objectNum = 2;
inline bool GMObjectData::has_objectnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMObjectData::set_has_objectnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMObjectData::clear_has_objectnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMObjectData::clear_objectnum() {
  objectnum_ = 0;
  clear_has_objectnum();
}
inline ::google::protobuf::int32 GMObjectData::objectnum() const {
  return objectnum_;
}
inline void GMObjectData::set_objectnum(::google::protobuf::int32 value) {
  set_has_objectnum();
  objectnum_ = value;
}

// -------------------------------------------------------------------

// GMFightAidGetRequest

// required int32 bagid = 1;
inline bool GMFightAidGetRequest::has_bagid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMFightAidGetRequest::set_has_bagid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMFightAidGetRequest::clear_has_bagid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMFightAidGetRequest::clear_bagid() {
  bagid_ = 0;
  clear_has_bagid();
}
inline ::google::protobuf::int32 GMFightAidGetRequest::bagid() const {
  return bagid_;
}
inline void GMFightAidGetRequest::set_bagid(::google::protobuf::int32 value) {
  set_has_bagid();
  bagid_ = value;
}

// -------------------------------------------------------------------

// GMFightAidGetReturn

// required int32 result = 1;
inline bool GMFightAidGetReturn::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMFightAidGetReturn::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMFightAidGetReturn::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMFightAidGetReturn::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GMFightAidGetReturn::result() const {
  return result_;
}
inline void GMFightAidGetReturn::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_fightaid_2etxt__INCLUDED
