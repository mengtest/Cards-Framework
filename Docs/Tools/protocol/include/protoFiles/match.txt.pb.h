// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: match.txt

#ifndef PROTOBUF_match_2etxt__INCLUDED
#define PROTOBUF_match_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_match_2etxt();
void protobuf_AssignDesc_match_2etxt();
void protobuf_ShutdownFile_match_2etxt();

class GM_match_UI_info;
class GM_match_reward;
class GM_match_reward_all;
class GM_match_selfJoin;
class GM_match_UI_return;
class GM_match_peoplenum;
class GM_match_peoplenum_request;
class GM_match_peoplenum_return;
class GM_Match_notify;
class GM_match_apply_request;
class GM_match_apply_return;
class GM_match_join_request;
class GM_match_join_return;
class GM_match_quit_request;
class GM_match_quit_return;
class GM_match_rank_role;
class GM_match_rank_return;
class GM_match_rank_request;
class GM_Match_team;
class GM_match_object;
class GM_Match_result;
class GM_Match_time_return;
class GM_Match_rate_return;

// ===================================================================

class GM_match_UI_info : public ::google::protobuf::Message {
 public:
  GM_match_UI_info();
  virtual ~GM_match_UI_info();

  GM_match_UI_info(const GM_match_UI_info& from);

  inline GM_match_UI_info& operator=(const GM_match_UI_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_UI_info& default_instance();

  void Swap(GM_match_UI_info* other);

  // implements Message ----------------------------------------------

  GM_match_UI_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_UI_info& from);
  void MergeFrom(const GM_match_UI_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 matchid = 2;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchidFieldNumber = 2;
  inline ::google::protobuf::int32 matchid() const;
  inline void set_matchid(::google::protobuf::int32 value);

  // optional int32 battletype = 3;
  inline bool has_battletype() const;
  inline void clear_battletype();
  static const int kBattletypeFieldNumber = 3;
  inline ::google::protobuf::int32 battletype() const;
  inline void set_battletype(::google::protobuf::int32 value);

  // optional int32 starttype = 4;
  inline bool has_starttype() const;
  inline void clear_starttype();
  static const int kStarttypeFieldNumber = 4;
  inline ::google::protobuf::int32 starttype() const;
  inline void set_starttype(::google::protobuf::int32 value);

  // optional int32 rank = 5;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 5;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // optional int32 starttime = 6;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 6;
  inline ::google::protobuf::int32 starttime() const;
  inline void set_starttime(::google::protobuf::int32 value);

  // optional int32 endtime = 7;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 7;
  inline ::google::protobuf::int32 endtime() const;
  inline void set_endtime(::google::protobuf::int32 value);

  // optional string remark = 8;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 8;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // optional string matchname = 9;
  inline bool has_matchname() const;
  inline void clear_matchname();
  static const int kMatchnameFieldNumber = 9;
  inline const ::std::string& matchname() const;
  inline void set_matchname(const ::std::string& value);
  inline void set_matchname(const char* value);
  inline void set_matchname(const char* value, size_t size);
  inline ::std::string* mutable_matchname();
  inline ::std::string* release_matchname();
  inline void set_allocated_matchname(::std::string* matchname);

  // optional int32 circletime = 10;
  inline bool has_circletime() const;
  inline void clear_circletime();
  static const int kCircletimeFieldNumber = 10;
  inline ::google::protobuf::int32 circletime() const;
  inline void set_circletime(::google::protobuf::int32 value);

  // optional int32 peoplenum = 11;
  inline bool has_peoplenum() const;
  inline void clear_peoplenum();
  static const int kPeoplenumFieldNumber = 11;
  inline ::google::protobuf::int32 peoplenum() const;
  inline void set_peoplenum(::google::protobuf::int32 value);

  // optional int32 costid = 13;
  inline bool has_costid() const;
  inline void clear_costid();
  static const int kCostidFieldNumber = 13;
  inline ::google::protobuf::int32 costid() const;
  inline void set_costid(::google::protobuf::int32 value);

  // optional int32 cost = 14;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 14;
  inline ::google::protobuf::int32 cost() const;
  inline void set_cost(::google::protobuf::int32 value);

  // optional int32 picture = 15;
  inline bool has_picture() const;
  inline void clear_picture();
  static const int kPictureFieldNumber = 15;
  inline ::google::protobuf::int32 picture() const;
  inline void set_picture(::google::protobuf::int32 value);

  // optional int32 state = 16;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 16;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 isopen = 17;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsopenFieldNumber = 17;
  inline ::google::protobuf::int32 isopen() const;
  inline void set_isopen(::google::protobuf::int32 value);

  // optional string icon = 18;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 18;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  inline void set_allocated_icon(::std::string* icon);

  // @@protoc_insertion_point(class_scope:GM_match_UI_info)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_matchid();
  inline void clear_has_matchid();
  inline void set_has_battletype();
  inline void clear_has_battletype();
  inline void set_has_starttype();
  inline void clear_has_starttype();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_remark();
  inline void clear_has_remark();
  inline void set_has_matchname();
  inline void clear_has_matchname();
  inline void set_has_circletime();
  inline void clear_has_circletime();
  inline void set_has_peoplenum();
  inline void clear_has_peoplenum();
  inline void set_has_costid();
  inline void clear_has_costid();
  inline void set_has_cost();
  inline void clear_has_cost();
  inline void set_has_picture();
  inline void clear_has_picture();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_isopen();
  inline void clear_has_isopen();
  inline void set_has_icon();
  inline void clear_has_icon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 matchid_;
  ::google::protobuf::int32 battletype_;
  ::google::protobuf::int32 starttype_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 starttime_;
  ::std::string* remark_;
  ::google::protobuf::int32 endtime_;
  ::google::protobuf::int32 circletime_;
  ::std::string* matchname_;
  ::google::protobuf::int32 peoplenum_;
  ::google::protobuf::int32 costid_;
  ::google::protobuf::int32 cost_;
  ::google::protobuf::int32 picture_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 isopen_;
  ::std::string* icon_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_UI_info* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_reward : public ::google::protobuf::Message {
 public:
  GM_match_reward();
  virtual ~GM_match_reward();

  GM_match_reward(const GM_match_reward& from);

  inline GM_match_reward& operator=(const GM_match_reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_reward& default_instance();

  void Swap(GM_match_reward* other);

  // implements Message ----------------------------------------------

  GM_match_reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_reward& from);
  void MergeFrom(const GM_match_reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 matchid = 2;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchidFieldNumber = 2;
  inline ::google::protobuf::int32 matchid() const;
  inline void set_matchid(::google::protobuf::int32 value);

  // optional int32 maxrank = 3;
  inline bool has_maxrank() const;
  inline void clear_maxrank();
  static const int kMaxrankFieldNumber = 3;
  inline ::google::protobuf::int32 maxrank() const;
  inline void set_maxrank(::google::protobuf::int32 value);

  // optional int32 minrank = 4;
  inline bool has_minrank() const;
  inline void clear_minrank();
  static const int kMinrankFieldNumber = 4;
  inline ::google::protobuf::int32 minrank() const;
  inline void set_minrank(::google::protobuf::int32 value);

  // optional int32 objectid = 5;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 5;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // optional int32 num = 6;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 6;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_match_reward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_matchid();
  inline void clear_has_matchid();
  inline void set_has_maxrank();
  inline void clear_has_maxrank();
  inline void set_has_minrank();
  inline void clear_has_minrank();
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 matchid_;
  ::google::protobuf::int32 maxrank_;
  ::google::protobuf::int32 minrank_;
  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_reward* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_reward_all : public ::google::protobuf::Message {
 public:
  GM_match_reward_all();
  virtual ~GM_match_reward_all();

  GM_match_reward_all(const GM_match_reward_all& from);

  inline GM_match_reward_all& operator=(const GM_match_reward_all& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_reward_all& default_instance();

  void Swap(GM_match_reward_all* other);

  // implements Message ----------------------------------------------

  GM_match_reward_all* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_reward_all& from);
  void MergeFrom(const GM_match_reward_all& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 matchid = 1;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  inline ::google::protobuf::int32 matchid() const;
  inline void set_matchid(::google::protobuf::int32 value);

  // repeated .GM_match_reward data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::GM_match_reward& data(int index) const;
  inline ::GM_match_reward* mutable_data(int index);
  inline ::GM_match_reward* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_match_reward >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_match_reward >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_match_reward_all)
 private:
  inline void set_has_matchid();
  inline void clear_has_matchid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_match_reward > data_;
  ::google::protobuf::int32 matchid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_reward_all* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_selfJoin : public ::google::protobuf::Message {
 public:
  GM_match_selfJoin();
  virtual ~GM_match_selfJoin();

  GM_match_selfJoin(const GM_match_selfJoin& from);

  inline GM_match_selfJoin& operator=(const GM_match_selfJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_selfJoin& default_instance();

  void Swap(GM_match_selfJoin* other);

  // implements Message ----------------------------------------------

  GM_match_selfJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_selfJoin& from);
  void MergeFrom(const GM_match_selfJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 matchid = 1;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  inline ::google::protobuf::int32 matchid() const;
  inline void set_matchid(::google::protobuf::int32 value);

  // optional int32 createtime = 2;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 2;
  inline ::google::protobuf::int32 createtime() const;
  inline void set_createtime(::google::protobuf::int32 value);

  // optional int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_match_selfJoin)
 private:
  inline void set_has_matchid();
  inline void clear_has_matchid();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 matchid_;
  ::google::protobuf::int32 createtime_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_selfJoin* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_UI_return : public ::google::protobuf::Message {
 public:
  GM_match_UI_return();
  virtual ~GM_match_UI_return();

  GM_match_UI_return(const GM_match_UI_return& from);

  inline GM_match_UI_return& operator=(const GM_match_UI_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_UI_return& default_instance();

  void Swap(GM_match_UI_return* other);

  // implements Message ----------------------------------------------

  GM_match_UI_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_UI_return& from);
  void MergeFrom(const GM_match_UI_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated .GM_match_UI_info data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::GM_match_UI_info& data(int index) const;
  inline ::GM_match_UI_info* mutable_data(int index);
  inline ::GM_match_UI_info* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_match_UI_info >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_match_UI_info >*
      mutable_data();

  // repeated .GM_match_selfJoin matchid = 3;
  inline int matchid_size() const;
  inline void clear_matchid();
  static const int kMatchidFieldNumber = 3;
  inline const ::GM_match_selfJoin& matchid(int index) const;
  inline ::GM_match_selfJoin* mutable_matchid(int index);
  inline ::GM_match_selfJoin* add_matchid();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_match_selfJoin >&
      matchid() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_match_selfJoin >*
      mutable_matchid();

  // repeated .GM_match_reward_all reward = 4;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 4;
  inline const ::GM_match_reward_all& reward(int index) const;
  inline ::GM_match_reward_all* mutable_reward(int index);
  inline ::GM_match_reward_all* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_match_reward_all >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_match_reward_all >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:GM_match_UI_return)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_match_UI_info > data_;
  ::google::protobuf::RepeatedPtrField< ::GM_match_selfJoin > matchid_;
  ::google::protobuf::RepeatedPtrField< ::GM_match_reward_all > reward_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_UI_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_peoplenum : public ::google::protobuf::Message {
 public:
  GM_match_peoplenum();
  virtual ~GM_match_peoplenum();

  GM_match_peoplenum(const GM_match_peoplenum& from);

  inline GM_match_peoplenum& operator=(const GM_match_peoplenum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_peoplenum& default_instance();

  void Swap(GM_match_peoplenum* other);

  // implements Message ----------------------------------------------

  GM_match_peoplenum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_peoplenum& from);
  void MergeFrom(const GM_match_peoplenum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 matchid = 2;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchidFieldNumber = 2;
  inline ::google::protobuf::int32 matchid() const;
  inline void set_matchid(::google::protobuf::int32 value);

  // optional int32 peoplenum = 3;
  inline bool has_peoplenum() const;
  inline void clear_peoplenum();
  static const int kPeoplenumFieldNumber = 3;
  inline ::google::protobuf::int32 peoplenum() const;
  inline void set_peoplenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_match_peoplenum)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_matchid();
  inline void clear_has_matchid();
  inline void set_has_peoplenum();
  inline void clear_has_peoplenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 matchid_;
  ::google::protobuf::int32 peoplenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_peoplenum* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_peoplenum_request : public ::google::protobuf::Message {
 public:
  GM_match_peoplenum_request();
  virtual ~GM_match_peoplenum_request();

  GM_match_peoplenum_request(const GM_match_peoplenum_request& from);

  inline GM_match_peoplenum_request& operator=(const GM_match_peoplenum_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_peoplenum_request& default_instance();

  void Swap(GM_match_peoplenum_request* other);

  // implements Message ----------------------------------------------

  GM_match_peoplenum_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_peoplenum_request& from);
  void MergeFrom(const GM_match_peoplenum_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_match_peoplenum_request)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_peoplenum_request* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_peoplenum_return : public ::google::protobuf::Message {
 public:
  GM_match_peoplenum_return();
  virtual ~GM_match_peoplenum_return();

  GM_match_peoplenum_return(const GM_match_peoplenum_return& from);

  inline GM_match_peoplenum_return& operator=(const GM_match_peoplenum_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_peoplenum_return& default_instance();

  void Swap(GM_match_peoplenum_return* other);

  // implements Message ----------------------------------------------

  GM_match_peoplenum_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_peoplenum_return& from);
  void MergeFrom(const GM_match_peoplenum_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // repeated .GM_match_peoplenum data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::GM_match_peoplenum& data(int index) const;
  inline ::GM_match_peoplenum* mutable_data(int index);
  inline ::GM_match_peoplenum* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_match_peoplenum >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_match_peoplenum >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_match_peoplenum_return)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_match_peoplenum > data_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_peoplenum_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Match_notify : public ::google::protobuf::Message {
 public:
  GM_Match_notify();
  virtual ~GM_Match_notify();

  GM_Match_notify(const GM_Match_notify& from);

  inline GM_Match_notify& operator=(const GM_Match_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Match_notify& default_instance();

  void Swap(GM_Match_notify* other);

  // implements Message ----------------------------------------------

  GM_Match_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Match_notify& from);
  void MergeFrom(const GM_Match_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 matchid = 1;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  inline ::google::protobuf::int32 matchid() const;
  inline void set_matchid(::google::protobuf::int32 value);

  // optional int32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Match_notify)
 private:
  inline void set_has_matchid();
  inline void clear_has_matchid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 matchid_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_Match_notify* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_apply_request : public ::google::protobuf::Message {
 public:
  GM_match_apply_request();
  virtual ~GM_match_apply_request();

  GM_match_apply_request(const GM_match_apply_request& from);

  inline GM_match_apply_request& operator=(const GM_match_apply_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_apply_request& default_instance();

  void Swap(GM_match_apply_request* other);

  // implements Message ----------------------------------------------

  GM_match_apply_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_apply_request& from);
  void MergeFrom(const GM_match_apply_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 matchid = 1;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  inline ::google::protobuf::int32 matchid() const;
  inline void set_matchid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_match_apply_request)
 private:
  inline void set_has_matchid();
  inline void clear_has_matchid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 matchid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_apply_request* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_apply_return : public ::google::protobuf::Message {
 public:
  GM_match_apply_return();
  virtual ~GM_match_apply_return();

  GM_match_apply_return(const GM_match_apply_return& from);

  inline GM_match_apply_return& operator=(const GM_match_apply_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_apply_return& default_instance();

  void Swap(GM_match_apply_return* other);

  // implements Message ----------------------------------------------

  GM_match_apply_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_apply_return& from);
  void MergeFrom(const GM_match_apply_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorid = 1;
  inline bool has_errorid() const;
  inline void clear_errorid();
  static const int kErroridFieldNumber = 1;
  inline ::google::protobuf::int32 errorid() const;
  inline void set_errorid(::google::protobuf::int32 value);

  // optional int32 createtime = 2;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 2;
  inline ::google::protobuf::int32 createtime() const;
  inline void set_createtime(::google::protobuf::int32 value);

  // optional int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_match_apply_return)
 private:
  inline void set_has_errorid();
  inline void clear_has_errorid();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 errorid_;
  ::google::protobuf::int32 createtime_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_apply_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_join_request : public ::google::protobuf::Message {
 public:
  GM_match_join_request();
  virtual ~GM_match_join_request();

  GM_match_join_request(const GM_match_join_request& from);

  inline GM_match_join_request& operator=(const GM_match_join_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_join_request& default_instance();

  void Swap(GM_match_join_request* other);

  // implements Message ----------------------------------------------

  GM_match_join_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_join_request& from);
  void MergeFrom(const GM_match_join_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 matchid = 1;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  inline ::google::protobuf::int32 matchid() const;
  inline void set_matchid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_match_join_request)
 private:
  inline void set_has_matchid();
  inline void clear_has_matchid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 matchid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_join_request* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_join_return : public ::google::protobuf::Message {
 public:
  GM_match_join_return();
  virtual ~GM_match_join_return();

  GM_match_join_return(const GM_match_join_return& from);

  inline GM_match_join_return& operator=(const GM_match_join_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_join_return& default_instance();

  void Swap(GM_match_join_return* other);

  // implements Message ----------------------------------------------

  GM_match_join_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_join_return& from);
  void MergeFrom(const GM_match_join_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorid = 1;
  inline bool has_errorid() const;
  inline void clear_errorid();
  static const int kErroridFieldNumber = 1;
  inline ::google::protobuf::int32 errorid() const;
  inline void set_errorid(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_match_join_return)
 private:
  inline void set_has_errorid();
  inline void clear_has_errorid();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 errorid_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_join_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_quit_request : public ::google::protobuf::Message {
 public:
  GM_match_quit_request();
  virtual ~GM_match_quit_request();

  GM_match_quit_request(const GM_match_quit_request& from);

  inline GM_match_quit_request& operator=(const GM_match_quit_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_quit_request& default_instance();

  void Swap(GM_match_quit_request* other);

  // implements Message ----------------------------------------------

  GM_match_quit_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_quit_request& from);
  void MergeFrom(const GM_match_quit_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_match_quit_request)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_quit_request* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_quit_return : public ::google::protobuf::Message {
 public:
  GM_match_quit_return();
  virtual ~GM_match_quit_return();

  GM_match_quit_return(const GM_match_quit_return& from);

  inline GM_match_quit_return& operator=(const GM_match_quit_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_quit_return& default_instance();

  void Swap(GM_match_quit_return* other);

  // implements Message ----------------------------------------------

  GM_match_quit_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_quit_return& from);
  void MergeFrom(const GM_match_quit_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorid = 1;
  inline bool has_errorid() const;
  inline void clear_errorid();
  static const int kErroridFieldNumber = 1;
  inline ::google::protobuf::int32 errorid() const;
  inline void set_errorid(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 matchid = 3;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchidFieldNumber = 3;
  inline ::google::protobuf::int32 matchid() const;
  inline void set_matchid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_match_quit_return)
 private:
  inline void set_has_errorid();
  inline void clear_has_errorid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_matchid();
  inline void clear_has_matchid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 errorid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 matchid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_quit_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_rank_role : public ::google::protobuf::Message {
 public:
  GM_match_rank_role();
  virtual ~GM_match_rank_role();

  GM_match_rank_role(const GM_match_rank_role& from);

  inline GM_match_rank_role& operator=(const GM_match_rank_role& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_rank_role& default_instance();

  void Swap(GM_match_rank_role* other);

  // implements Message ----------------------------------------------

  GM_match_rank_role* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_rank_role& from);
  void MergeFrom(const GM_match_rank_role& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // repeated .GM_match_object data = 4;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::GM_match_object& data(int index) const;
  inline ::GM_match_object* mutable_data(int index);
  inline ::GM_match_object* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_match_object >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_match_object >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_match_rank_role)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::RepeatedPtrField< ::GM_match_object > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_rank_role* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_rank_return : public ::google::protobuf::Message {
 public:
  GM_match_rank_return();
  virtual ~GM_match_rank_return();

  GM_match_rank_return(const GM_match_rank_return& from);

  inline GM_match_rank_return& operator=(const GM_match_rank_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_rank_return& default_instance();

  void Swap(GM_match_rank_return* other);

  // implements Message ----------------------------------------------

  GM_match_rank_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_rank_return& from);
  void MergeFrom(const GM_match_rank_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // optional int32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // optional int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated .GM_match_rank_role data = 4;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::GM_match_rank_role& data(int index) const;
  inline ::GM_match_rank_role* mutable_data(int index);
  inline ::GM_match_rank_role* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_match_rank_role >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_match_rank_role >*
      mutable_data();

  // optional int32 num = 5;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 5;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // repeated .GM_match_object reward = 6;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 6;
  inline const ::GM_match_object& reward(int index) const;
  inline ::GM_match_object* mutable_reward(int index);
  inline ::GM_match_object* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_match_object >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_match_object >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:GM_match_rank_return)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::RepeatedPtrField< ::GM_match_rank_role > data_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::RepeatedPtrField< ::GM_match_object > reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_rank_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_rank_request : public ::google::protobuf::Message {
 public:
  GM_match_rank_request();
  virtual ~GM_match_rank_request();

  GM_match_rank_request(const GM_match_rank_request& from);

  inline GM_match_rank_request& operator=(const GM_match_rank_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_rank_request& default_instance();

  void Swap(GM_match_rank_request* other);

  // implements Message ----------------------------------------------

  GM_match_rank_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_rank_request& from);
  void MergeFrom(const GM_match_rank_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 page = 1;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 1;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_match_rank_request)
 private:
  inline void set_has_page();
  inline void clear_has_page();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 page_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_rank_request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Match_team : public ::google::protobuf::Message {
 public:
  GM_Match_team();
  virtual ~GM_Match_team();

  GM_Match_team(const GM_Match_team& from);

  inline GM_Match_team& operator=(const GM_Match_team& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Match_team& default_instance();

  void Swap(GM_Match_team* other);

  // implements Message ----------------------------------------------

  GM_Match_team* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Match_team& from);
  void MergeFrom(const GM_Match_team& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Match_team)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_Match_team* default_instance_;
};
// -------------------------------------------------------------------

class GM_match_object : public ::google::protobuf::Message {
 public:
  GM_match_object();
  virtual ~GM_match_object();

  GM_match_object(const GM_match_object& from);

  inline GM_match_object& operator=(const GM_match_object& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_match_object& default_instance();

  void Swap(GM_match_object* other);

  // implements Message ----------------------------------------------

  GM_match_object* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_match_object& from);
  void MergeFrom(const GM_match_object& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objectid = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_match_object)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_match_object* default_instance_;
};
// -------------------------------------------------------------------

class GM_Match_result : public ::google::protobuf::Message {
 public:
  GM_Match_result();
  virtual ~GM_Match_result();

  GM_Match_result(const GM_Match_result& from);

  inline GM_Match_result& operator=(const GM_Match_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Match_result& default_instance();

  void Swap(GM_Match_result* other);

  // implements Message ----------------------------------------------

  GM_Match_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Match_result& from);
  void MergeFrom(const GM_Match_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // optional int32 isover = 2;
  inline bool has_isover() const;
  inline void clear_isover();
  static const int kIsoverFieldNumber = 2;
  inline ::google::protobuf::int32 isover() const;
  inline void set_isover(::google::protobuf::int32 value);

  // optional int32 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // repeated .GM_match_object data = 4;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::GM_match_object& data(int index) const;
  inline ::GM_match_object* mutable_data(int index);
  inline ::GM_match_object* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_match_object >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_match_object >*
      mutable_data();

  // optional int32 lastnum = 5;
  inline bool has_lastnum() const;
  inline void clear_lastnum();
  static const int kLastnumFieldNumber = 5;
  inline ::google::protobuf::int32 lastnum() const;
  inline void set_lastnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Match_result)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_isover();
  inline void clear_has_isover();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_lastnum();
  inline void clear_has_lastnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 isover_;
  ::google::protobuf::RepeatedPtrField< ::GM_match_object > data_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 lastnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_Match_result* default_instance_;
};
// -------------------------------------------------------------------

class GM_Match_time_return : public ::google::protobuf::Message {
 public:
  GM_Match_time_return();
  virtual ~GM_Match_time_return();

  GM_Match_time_return(const GM_Match_time_return& from);

  inline GM_Match_time_return& operator=(const GM_Match_time_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Match_time_return& default_instance();

  void Swap(GM_Match_time_return* other);

  // implements Message ----------------------------------------------

  GM_Match_time_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Match_time_return& from);
  void MergeFrom(const GM_Match_time_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 begintime = 1;
  inline int begintime_size() const;
  inline void clear_begintime();
  static const int kBegintimeFieldNumber = 1;
  inline ::google::protobuf::int32 begintime(int index) const;
  inline void set_begintime(int index, ::google::protobuf::int32 value);
  inline void add_begintime(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      begintime() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_begintime();

  // @@protoc_insertion_point(class_scope:GM_Match_time_return)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > begintime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_Match_time_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Match_rate_return : public ::google::protobuf::Message {
 public:
  GM_Match_rate_return();
  virtual ~GM_Match_rate_return();

  GM_Match_rate_return(const GM_Match_rate_return& from);

  inline GM_Match_rate_return& operator=(const GM_Match_rate_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Match_rate_return& default_instance();

  void Swap(GM_Match_rate_return* other);

  // implements Message ----------------------------------------------

  GM_Match_rate_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Match_rate_return& from);
  void MergeFrom(const GM_Match_rate_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rate = 1;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 1;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Match_rate_return)
 private:
  inline void set_has_rate();
  inline void clear_has_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 rate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_match_2etxt();
  friend void protobuf_AssignDesc_match_2etxt();
  friend void protobuf_ShutdownFile_match_2etxt();

  void InitAsDefaultInstance();
  static GM_Match_rate_return* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_match_UI_info

// required int32 ID = 1;
inline bool GM_match_UI_info::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_UI_info::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_UI_info::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_UI_info::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_match_UI_info::id() const {
  return id_;
}
inline void GM_match_UI_info::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 matchid = 2;
inline bool GM_match_UI_info::has_matchid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_match_UI_info::set_has_matchid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_match_UI_info::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_match_UI_info::clear_matchid() {
  matchid_ = 0;
  clear_has_matchid();
}
inline ::google::protobuf::int32 GM_match_UI_info::matchid() const {
  return matchid_;
}
inline void GM_match_UI_info::set_matchid(::google::protobuf::int32 value) {
  set_has_matchid();
  matchid_ = value;
}

// optional int32 battletype = 3;
inline bool GM_match_UI_info::has_battletype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_match_UI_info::set_has_battletype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_match_UI_info::clear_has_battletype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_match_UI_info::clear_battletype() {
  battletype_ = 0;
  clear_has_battletype();
}
inline ::google::protobuf::int32 GM_match_UI_info::battletype() const {
  return battletype_;
}
inline void GM_match_UI_info::set_battletype(::google::protobuf::int32 value) {
  set_has_battletype();
  battletype_ = value;
}

// optional int32 starttype = 4;
inline bool GM_match_UI_info::has_starttype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_match_UI_info::set_has_starttype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_match_UI_info::clear_has_starttype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_match_UI_info::clear_starttype() {
  starttype_ = 0;
  clear_has_starttype();
}
inline ::google::protobuf::int32 GM_match_UI_info::starttype() const {
  return starttype_;
}
inline void GM_match_UI_info::set_starttype(::google::protobuf::int32 value) {
  set_has_starttype();
  starttype_ = value;
}

// optional int32 rank = 5;
inline bool GM_match_UI_info::has_rank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_match_UI_info::set_has_rank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_match_UI_info::clear_has_rank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_match_UI_info::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 GM_match_UI_info::rank() const {
  return rank_;
}
inline void GM_match_UI_info::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// optional int32 starttime = 6;
inline bool GM_match_UI_info::has_starttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_match_UI_info::set_has_starttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_match_UI_info::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_match_UI_info::clear_starttime() {
  starttime_ = 0;
  clear_has_starttime();
}
inline ::google::protobuf::int32 GM_match_UI_info::starttime() const {
  return starttime_;
}
inline void GM_match_UI_info::set_starttime(::google::protobuf::int32 value) {
  set_has_starttime();
  starttime_ = value;
}

// optional int32 endtime = 7;
inline bool GM_match_UI_info::has_endtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_match_UI_info::set_has_endtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_match_UI_info::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_match_UI_info::clear_endtime() {
  endtime_ = 0;
  clear_has_endtime();
}
inline ::google::protobuf::int32 GM_match_UI_info::endtime() const {
  return endtime_;
}
inline void GM_match_UI_info::set_endtime(::google::protobuf::int32 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional string remark = 8;
inline bool GM_match_UI_info::has_remark() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_match_UI_info::set_has_remark() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_match_UI_info::clear_has_remark() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_match_UI_info::clear_remark() {
  if (remark_ != &::google::protobuf::internal::kEmptyString) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& GM_match_UI_info::remark() const {
  return *remark_;
}
inline void GM_match_UI_info::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::kEmptyString) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
}
inline void GM_match_UI_info::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::kEmptyString) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
}
inline void GM_match_UI_info::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::kEmptyString) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_match_UI_info::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::kEmptyString) {
    remark_ = new ::std::string;
  }
  return remark_;
}
inline ::std::string* GM_match_UI_info::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_match_UI_info::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::kEmptyString) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string matchname = 9;
inline bool GM_match_UI_info::has_matchname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_match_UI_info::set_has_matchname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_match_UI_info::clear_has_matchname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_match_UI_info::clear_matchname() {
  if (matchname_ != &::google::protobuf::internal::kEmptyString) {
    matchname_->clear();
  }
  clear_has_matchname();
}
inline const ::std::string& GM_match_UI_info::matchname() const {
  return *matchname_;
}
inline void GM_match_UI_info::set_matchname(const ::std::string& value) {
  set_has_matchname();
  if (matchname_ == &::google::protobuf::internal::kEmptyString) {
    matchname_ = new ::std::string;
  }
  matchname_->assign(value);
}
inline void GM_match_UI_info::set_matchname(const char* value) {
  set_has_matchname();
  if (matchname_ == &::google::protobuf::internal::kEmptyString) {
    matchname_ = new ::std::string;
  }
  matchname_->assign(value);
}
inline void GM_match_UI_info::set_matchname(const char* value, size_t size) {
  set_has_matchname();
  if (matchname_ == &::google::protobuf::internal::kEmptyString) {
    matchname_ = new ::std::string;
  }
  matchname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_match_UI_info::mutable_matchname() {
  set_has_matchname();
  if (matchname_ == &::google::protobuf::internal::kEmptyString) {
    matchname_ = new ::std::string;
  }
  return matchname_;
}
inline ::std::string* GM_match_UI_info::release_matchname() {
  clear_has_matchname();
  if (matchname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = matchname_;
    matchname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_match_UI_info::set_allocated_matchname(::std::string* matchname) {
  if (matchname_ != &::google::protobuf::internal::kEmptyString) {
    delete matchname_;
  }
  if (matchname) {
    set_has_matchname();
    matchname_ = matchname;
  } else {
    clear_has_matchname();
    matchname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 circletime = 10;
inline bool GM_match_UI_info::has_circletime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GM_match_UI_info::set_has_circletime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GM_match_UI_info::clear_has_circletime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GM_match_UI_info::clear_circletime() {
  circletime_ = 0;
  clear_has_circletime();
}
inline ::google::protobuf::int32 GM_match_UI_info::circletime() const {
  return circletime_;
}
inline void GM_match_UI_info::set_circletime(::google::protobuf::int32 value) {
  set_has_circletime();
  circletime_ = value;
}

// optional int32 peoplenum = 11;
inline bool GM_match_UI_info::has_peoplenum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GM_match_UI_info::set_has_peoplenum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GM_match_UI_info::clear_has_peoplenum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GM_match_UI_info::clear_peoplenum() {
  peoplenum_ = 0;
  clear_has_peoplenum();
}
inline ::google::protobuf::int32 GM_match_UI_info::peoplenum() const {
  return peoplenum_;
}
inline void GM_match_UI_info::set_peoplenum(::google::protobuf::int32 value) {
  set_has_peoplenum();
  peoplenum_ = value;
}

// optional int32 costid = 13;
inline bool GM_match_UI_info::has_costid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GM_match_UI_info::set_has_costid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GM_match_UI_info::clear_has_costid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GM_match_UI_info::clear_costid() {
  costid_ = 0;
  clear_has_costid();
}
inline ::google::protobuf::int32 GM_match_UI_info::costid() const {
  return costid_;
}
inline void GM_match_UI_info::set_costid(::google::protobuf::int32 value) {
  set_has_costid();
  costid_ = value;
}

// optional int32 cost = 14;
inline bool GM_match_UI_info::has_cost() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GM_match_UI_info::set_has_cost() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GM_match_UI_info::clear_has_cost() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GM_match_UI_info::clear_cost() {
  cost_ = 0;
  clear_has_cost();
}
inline ::google::protobuf::int32 GM_match_UI_info::cost() const {
  return cost_;
}
inline void GM_match_UI_info::set_cost(::google::protobuf::int32 value) {
  set_has_cost();
  cost_ = value;
}

// optional int32 picture = 15;
inline bool GM_match_UI_info::has_picture() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GM_match_UI_info::set_has_picture() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GM_match_UI_info::clear_has_picture() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GM_match_UI_info::clear_picture() {
  picture_ = 0;
  clear_has_picture();
}
inline ::google::protobuf::int32 GM_match_UI_info::picture() const {
  return picture_;
}
inline void GM_match_UI_info::set_picture(::google::protobuf::int32 value) {
  set_has_picture();
  picture_ = value;
}

// optional int32 state = 16;
inline bool GM_match_UI_info::has_state() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GM_match_UI_info::set_has_state() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GM_match_UI_info::clear_has_state() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GM_match_UI_info::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GM_match_UI_info::state() const {
  return state_;
}
inline void GM_match_UI_info::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 isopen = 17;
inline bool GM_match_UI_info::has_isopen() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GM_match_UI_info::set_has_isopen() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GM_match_UI_info::clear_has_isopen() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GM_match_UI_info::clear_isopen() {
  isopen_ = 0;
  clear_has_isopen();
}
inline ::google::protobuf::int32 GM_match_UI_info::isopen() const {
  return isopen_;
}
inline void GM_match_UI_info::set_isopen(::google::protobuf::int32 value) {
  set_has_isopen();
  isopen_ = value;
}

// optional string icon = 18;
inline bool GM_match_UI_info::has_icon() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GM_match_UI_info::set_has_icon() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GM_match_UI_info::clear_has_icon() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GM_match_UI_info::clear_icon() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& GM_match_UI_info::icon() const {
  return *icon_;
}
inline void GM_match_UI_info::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void GM_match_UI_info::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void GM_match_UI_info::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_match_UI_info::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  return icon_;
}
inline ::std::string* GM_match_UI_info::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_match_UI_info::set_allocated_icon(::std::string* icon) {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    delete icon_;
  }
  if (icon) {
    set_has_icon();
    icon_ = icon;
  } else {
    clear_has_icon();
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GM_match_reward

// required int32 ID = 1;
inline bool GM_match_reward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_reward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_reward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_reward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_match_reward::id() const {
  return id_;
}
inline void GM_match_reward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 matchid = 2;
inline bool GM_match_reward::has_matchid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_match_reward::set_has_matchid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_match_reward::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_match_reward::clear_matchid() {
  matchid_ = 0;
  clear_has_matchid();
}
inline ::google::protobuf::int32 GM_match_reward::matchid() const {
  return matchid_;
}
inline void GM_match_reward::set_matchid(::google::protobuf::int32 value) {
  set_has_matchid();
  matchid_ = value;
}

// optional int32 maxrank = 3;
inline bool GM_match_reward::has_maxrank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_match_reward::set_has_maxrank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_match_reward::clear_has_maxrank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_match_reward::clear_maxrank() {
  maxrank_ = 0;
  clear_has_maxrank();
}
inline ::google::protobuf::int32 GM_match_reward::maxrank() const {
  return maxrank_;
}
inline void GM_match_reward::set_maxrank(::google::protobuf::int32 value) {
  set_has_maxrank();
  maxrank_ = value;
}

// optional int32 minrank = 4;
inline bool GM_match_reward::has_minrank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_match_reward::set_has_minrank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_match_reward::clear_has_minrank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_match_reward::clear_minrank() {
  minrank_ = 0;
  clear_has_minrank();
}
inline ::google::protobuf::int32 GM_match_reward::minrank() const {
  return minrank_;
}
inline void GM_match_reward::set_minrank(::google::protobuf::int32 value) {
  set_has_minrank();
  minrank_ = value;
}

// optional int32 objectid = 5;
inline bool GM_match_reward::has_objectid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_match_reward::set_has_objectid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_match_reward::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_match_reward::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_match_reward::objectid() const {
  return objectid_;
}
inline void GM_match_reward::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// optional int32 num = 6;
inline bool GM_match_reward::has_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_match_reward::set_has_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_match_reward::clear_has_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_match_reward::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 GM_match_reward::num() const {
  return num_;
}
inline void GM_match_reward::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// GM_match_reward_all

// required int32 matchid = 1;
inline bool GM_match_reward_all::has_matchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_reward_all::set_has_matchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_reward_all::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_reward_all::clear_matchid() {
  matchid_ = 0;
  clear_has_matchid();
}
inline ::google::protobuf::int32 GM_match_reward_all::matchid() const {
  return matchid_;
}
inline void GM_match_reward_all::set_matchid(::google::protobuf::int32 value) {
  set_has_matchid();
  matchid_ = value;
}

// repeated .GM_match_reward data = 2;
inline int GM_match_reward_all::data_size() const {
  return data_.size();
}
inline void GM_match_reward_all::clear_data() {
  data_.Clear();
}
inline const ::GM_match_reward& GM_match_reward_all::data(int index) const {
  return data_.Get(index);
}
inline ::GM_match_reward* GM_match_reward_all::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_match_reward* GM_match_reward_all::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_match_reward >&
GM_match_reward_all::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_match_reward >*
GM_match_reward_all::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_match_selfJoin

// required int32 matchid = 1;
inline bool GM_match_selfJoin::has_matchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_selfJoin::set_has_matchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_selfJoin::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_selfJoin::clear_matchid() {
  matchid_ = 0;
  clear_has_matchid();
}
inline ::google::protobuf::int32 GM_match_selfJoin::matchid() const {
  return matchid_;
}
inline void GM_match_selfJoin::set_matchid(::google::protobuf::int32 value) {
  set_has_matchid();
  matchid_ = value;
}

// optional int32 createtime = 2;
inline bool GM_match_selfJoin::has_createtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_match_selfJoin::set_has_createtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_match_selfJoin::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_match_selfJoin::clear_createtime() {
  createtime_ = 0;
  clear_has_createtime();
}
inline ::google::protobuf::int32 GM_match_selfJoin::createtime() const {
  return createtime_;
}
inline void GM_match_selfJoin::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional int32 id = 3;
inline bool GM_match_selfJoin::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_match_selfJoin::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_match_selfJoin::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_match_selfJoin::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_match_selfJoin::id() const {
  return id_;
}
inline void GM_match_selfJoin::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GM_match_UI_return

// required int32 id = 1;
inline bool GM_match_UI_return::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_UI_return::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_UI_return::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_UI_return::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_match_UI_return::id() const {
  return id_;
}
inline void GM_match_UI_return::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated .GM_match_UI_info data = 2;
inline int GM_match_UI_return::data_size() const {
  return data_.size();
}
inline void GM_match_UI_return::clear_data() {
  data_.Clear();
}
inline const ::GM_match_UI_info& GM_match_UI_return::data(int index) const {
  return data_.Get(index);
}
inline ::GM_match_UI_info* GM_match_UI_return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_match_UI_info* GM_match_UI_return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_match_UI_info >&
GM_match_UI_return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_match_UI_info >*
GM_match_UI_return::mutable_data() {
  return &data_;
}

// repeated .GM_match_selfJoin matchid = 3;
inline int GM_match_UI_return::matchid_size() const {
  return matchid_.size();
}
inline void GM_match_UI_return::clear_matchid() {
  matchid_.Clear();
}
inline const ::GM_match_selfJoin& GM_match_UI_return::matchid(int index) const {
  return matchid_.Get(index);
}
inline ::GM_match_selfJoin* GM_match_UI_return::mutable_matchid(int index) {
  return matchid_.Mutable(index);
}
inline ::GM_match_selfJoin* GM_match_UI_return::add_matchid() {
  return matchid_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_match_selfJoin >&
GM_match_UI_return::matchid() const {
  return matchid_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_match_selfJoin >*
GM_match_UI_return::mutable_matchid() {
  return &matchid_;
}

// repeated .GM_match_reward_all reward = 4;
inline int GM_match_UI_return::reward_size() const {
  return reward_.size();
}
inline void GM_match_UI_return::clear_reward() {
  reward_.Clear();
}
inline const ::GM_match_reward_all& GM_match_UI_return::reward(int index) const {
  return reward_.Get(index);
}
inline ::GM_match_reward_all* GM_match_UI_return::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::GM_match_reward_all* GM_match_UI_return::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_match_reward_all >&
GM_match_UI_return::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_match_reward_all >*
GM_match_UI_return::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// GM_match_peoplenum

// required int32 id = 1;
inline bool GM_match_peoplenum::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_peoplenum::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_peoplenum::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_peoplenum::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_match_peoplenum::id() const {
  return id_;
}
inline void GM_match_peoplenum::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 matchid = 2;
inline bool GM_match_peoplenum::has_matchid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_match_peoplenum::set_has_matchid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_match_peoplenum::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_match_peoplenum::clear_matchid() {
  matchid_ = 0;
  clear_has_matchid();
}
inline ::google::protobuf::int32 GM_match_peoplenum::matchid() const {
  return matchid_;
}
inline void GM_match_peoplenum::set_matchid(::google::protobuf::int32 value) {
  set_has_matchid();
  matchid_ = value;
}

// optional int32 peoplenum = 3;
inline bool GM_match_peoplenum::has_peoplenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_match_peoplenum::set_has_peoplenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_match_peoplenum::clear_has_peoplenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_match_peoplenum::clear_peoplenum() {
  peoplenum_ = 0;
  clear_has_peoplenum();
}
inline ::google::protobuf::int32 GM_match_peoplenum::peoplenum() const {
  return peoplenum_;
}
inline void GM_match_peoplenum::set_peoplenum(::google::protobuf::int32 value) {
  set_has_peoplenum();
  peoplenum_ = value;
}

// -------------------------------------------------------------------

// GM_match_peoplenum_request

// required int32 id = 1;
inline bool GM_match_peoplenum_request::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_peoplenum_request::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_peoplenum_request::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_peoplenum_request::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_match_peoplenum_request::id() const {
  return id_;
}
inline void GM_match_peoplenum_request::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GM_match_peoplenum_return

// required int32 roleid = 1;
inline bool GM_match_peoplenum_return::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_peoplenum_return::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_peoplenum_return::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_peoplenum_return::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_match_peoplenum_return::roleid() const {
  return roleid_;
}
inline void GM_match_peoplenum_return::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// repeated .GM_match_peoplenum data = 2;
inline int GM_match_peoplenum_return::data_size() const {
  return data_.size();
}
inline void GM_match_peoplenum_return::clear_data() {
  data_.Clear();
}
inline const ::GM_match_peoplenum& GM_match_peoplenum_return::data(int index) const {
  return data_.Get(index);
}
inline ::GM_match_peoplenum* GM_match_peoplenum_return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_match_peoplenum* GM_match_peoplenum_return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_match_peoplenum >&
GM_match_peoplenum_return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_match_peoplenum >*
GM_match_peoplenum_return::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_Match_notify

// required int32 matchid = 1;
inline bool GM_Match_notify::has_matchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Match_notify::set_has_matchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Match_notify::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Match_notify::clear_matchid() {
  matchid_ = 0;
  clear_has_matchid();
}
inline ::google::protobuf::int32 GM_Match_notify::matchid() const {
  return matchid_;
}
inline void GM_Match_notify::set_matchid(::google::protobuf::int32 value) {
  set_has_matchid();
  matchid_ = value;
}

// optional int32 time = 2;
inline bool GM_Match_notify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Match_notify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Match_notify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Match_notify::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 GM_Match_notify::time() const {
  return time_;
}
inline void GM_Match_notify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 id = 3;
inline bool GM_Match_notify::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Match_notify::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Match_notify::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Match_notify::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_Match_notify::id() const {
  return id_;
}
inline void GM_Match_notify::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GM_match_apply_request

// required int32 matchid = 1;
inline bool GM_match_apply_request::has_matchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_apply_request::set_has_matchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_apply_request::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_apply_request::clear_matchid() {
  matchid_ = 0;
  clear_has_matchid();
}
inline ::google::protobuf::int32 GM_match_apply_request::matchid() const {
  return matchid_;
}
inline void GM_match_apply_request::set_matchid(::google::protobuf::int32 value) {
  set_has_matchid();
  matchid_ = value;
}

// -------------------------------------------------------------------

// GM_match_apply_return

// required int32 errorid = 1;
inline bool GM_match_apply_return::has_errorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_apply_return::set_has_errorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_apply_return::clear_has_errorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_apply_return::clear_errorid() {
  errorid_ = 0;
  clear_has_errorid();
}
inline ::google::protobuf::int32 GM_match_apply_return::errorid() const {
  return errorid_;
}
inline void GM_match_apply_return::set_errorid(::google::protobuf::int32 value) {
  set_has_errorid();
  errorid_ = value;
}

// optional int32 createtime = 2;
inline bool GM_match_apply_return::has_createtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_match_apply_return::set_has_createtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_match_apply_return::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_match_apply_return::clear_createtime() {
  createtime_ = 0;
  clear_has_createtime();
}
inline ::google::protobuf::int32 GM_match_apply_return::createtime() const {
  return createtime_;
}
inline void GM_match_apply_return::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional int32 id = 3;
inline bool GM_match_apply_return::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_match_apply_return::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_match_apply_return::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_match_apply_return::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_match_apply_return::id() const {
  return id_;
}
inline void GM_match_apply_return::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GM_match_join_request

// required int32 matchid = 1;
inline bool GM_match_join_request::has_matchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_join_request::set_has_matchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_join_request::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_join_request::clear_matchid() {
  matchid_ = 0;
  clear_has_matchid();
}
inline ::google::protobuf::int32 GM_match_join_request::matchid() const {
  return matchid_;
}
inline void GM_match_join_request::set_matchid(::google::protobuf::int32 value) {
  set_has_matchid();
  matchid_ = value;
}

// -------------------------------------------------------------------

// GM_match_join_return

// required int32 errorid = 1;
inline bool GM_match_join_return::has_errorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_join_return::set_has_errorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_join_return::clear_has_errorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_join_return::clear_errorid() {
  errorid_ = 0;
  clear_has_errorid();
}
inline ::google::protobuf::int32 GM_match_join_return::errorid() const {
  return errorid_;
}
inline void GM_match_join_return::set_errorid(::google::protobuf::int32 value) {
  set_has_errorid();
  errorid_ = value;
}

// optional int32 id = 2;
inline bool GM_match_join_return::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_match_join_return::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_match_join_return::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_match_join_return::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_match_join_return::id() const {
  return id_;
}
inline void GM_match_join_return::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GM_match_quit_request

// required int32 id = 1;
inline bool GM_match_quit_request::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_quit_request::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_quit_request::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_quit_request::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_match_quit_request::id() const {
  return id_;
}
inline void GM_match_quit_request::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GM_match_quit_return

// required int32 errorid = 1;
inline bool GM_match_quit_return::has_errorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_quit_return::set_has_errorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_quit_return::clear_has_errorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_quit_return::clear_errorid() {
  errorid_ = 0;
  clear_has_errorid();
}
inline ::google::protobuf::int32 GM_match_quit_return::errorid() const {
  return errorid_;
}
inline void GM_match_quit_return::set_errorid(::google::protobuf::int32 value) {
  set_has_errorid();
  errorid_ = value;
}

// optional int32 id = 2;
inline bool GM_match_quit_return::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_match_quit_return::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_match_quit_return::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_match_quit_return::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_match_quit_return::id() const {
  return id_;
}
inline void GM_match_quit_return::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 matchid = 3;
inline bool GM_match_quit_return::has_matchid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_match_quit_return::set_has_matchid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_match_quit_return::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_match_quit_return::clear_matchid() {
  matchid_ = 0;
  clear_has_matchid();
}
inline ::google::protobuf::int32 GM_match_quit_return::matchid() const {
  return matchid_;
}
inline void GM_match_quit_return::set_matchid(::google::protobuf::int32 value) {
  set_has_matchid();
  matchid_ = value;
}

// -------------------------------------------------------------------

// GM_match_rank_role

// required int32 rank = 1;
inline bool GM_match_rank_role::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_rank_role::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_rank_role::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_rank_role::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 GM_match_rank_role::rank() const {
  return rank_;
}
inline void GM_match_rank_role::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// optional string name = 2;
inline bool GM_match_rank_role::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_match_rank_role::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_match_rank_role::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_match_rank_role::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GM_match_rank_role::name() const {
  return *name_;
}
inline void GM_match_rank_role::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GM_match_rank_role::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GM_match_rank_role::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_match_rank_role::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GM_match_rank_role::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_match_rank_role::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 score = 3;
inline bool GM_match_rank_role::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_match_rank_role::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_match_rank_role::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_match_rank_role::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 GM_match_rank_role::score() const {
  return score_;
}
inline void GM_match_rank_role::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// repeated .GM_match_object data = 4;
inline int GM_match_rank_role::data_size() const {
  return data_.size();
}
inline void GM_match_rank_role::clear_data() {
  data_.Clear();
}
inline const ::GM_match_object& GM_match_rank_role::data(int index) const {
  return data_.Get(index);
}
inline ::GM_match_object* GM_match_rank_role::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_match_object* GM_match_rank_role::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_match_object >&
GM_match_rank_role::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_match_object >*
GM_match_rank_role::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_match_rank_return

// required int32 rank = 1;
inline bool GM_match_rank_return::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_rank_return::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_rank_return::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_rank_return::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 GM_match_rank_return::rank() const {
  return rank_;
}
inline void GM_match_rank_return::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// optional int32 score = 2;
inline bool GM_match_rank_return::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_match_rank_return::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_match_rank_return::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_match_rank_return::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 GM_match_rank_return::score() const {
  return score_;
}
inline void GM_match_rank_return::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// optional int32 id = 3;
inline bool GM_match_rank_return::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_match_rank_return::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_match_rank_return::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_match_rank_return::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_match_rank_return::id() const {
  return id_;
}
inline void GM_match_rank_return::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated .GM_match_rank_role data = 4;
inline int GM_match_rank_return::data_size() const {
  return data_.size();
}
inline void GM_match_rank_return::clear_data() {
  data_.Clear();
}
inline const ::GM_match_rank_role& GM_match_rank_return::data(int index) const {
  return data_.Get(index);
}
inline ::GM_match_rank_role* GM_match_rank_return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_match_rank_role* GM_match_rank_return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_match_rank_role >&
GM_match_rank_return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_match_rank_role >*
GM_match_rank_return::mutable_data() {
  return &data_;
}

// optional int32 num = 5;
inline bool GM_match_rank_return::has_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_match_rank_return::set_has_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_match_rank_return::clear_has_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_match_rank_return::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 GM_match_rank_return::num() const {
  return num_;
}
inline void GM_match_rank_return::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// repeated .GM_match_object reward = 6;
inline int GM_match_rank_return::reward_size() const {
  return reward_.size();
}
inline void GM_match_rank_return::clear_reward() {
  reward_.Clear();
}
inline const ::GM_match_object& GM_match_rank_return::reward(int index) const {
  return reward_.Get(index);
}
inline ::GM_match_object* GM_match_rank_return::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::GM_match_object* GM_match_rank_return::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_match_object >&
GM_match_rank_return::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_match_object >*
GM_match_rank_return::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// GM_match_rank_request

// required int32 page = 1;
inline bool GM_match_rank_request::has_page() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_rank_request::set_has_page() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_rank_request::clear_has_page() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_rank_request::clear_page() {
  page_ = 0;
  clear_has_page();
}
inline ::google::protobuf::int32 GM_match_rank_request::page() const {
  return page_;
}
inline void GM_match_rank_request::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
}

// optional int32 id = 2;
inline bool GM_match_rank_request::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_match_rank_request::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_match_rank_request::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_match_rank_request::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_match_rank_request::id() const {
  return id_;
}
inline void GM_match_rank_request::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GM_Match_team

// required int32 time = 1;
inline bool GM_Match_team::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Match_team::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Match_team::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Match_team::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 GM_Match_team::time() const {
  return time_;
}
inline void GM_Match_team::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// GM_match_object

// required int32 objectid = 1;
inline bool GM_match_object::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_match_object::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_match_object::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_match_object::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_match_object::objectid() const {
  return objectid_;
}
inline void GM_match_object::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// optional int32 num = 2;
inline bool GM_match_object::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_match_object::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_match_object::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_match_object::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 GM_match_object::num() const {
  return num_;
}
inline void GM_match_object::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// GM_Match_result

// required int32 rank = 1;
inline bool GM_Match_result::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Match_result::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Match_result::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Match_result::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 GM_Match_result::rank() const {
  return rank_;
}
inline void GM_Match_result::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// optional int32 isover = 2;
inline bool GM_Match_result::has_isover() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Match_result::set_has_isover() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Match_result::clear_has_isover() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Match_result::clear_isover() {
  isover_ = 0;
  clear_has_isover();
}
inline ::google::protobuf::int32 GM_Match_result::isover() const {
  return isover_;
}
inline void GM_Match_result::set_isover(::google::protobuf::int32 value) {
  set_has_isover();
  isover_ = value;
}

// optional int32 score = 3;
inline bool GM_Match_result::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Match_result::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Match_result::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Match_result::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 GM_Match_result::score() const {
  return score_;
}
inline void GM_Match_result::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// repeated .GM_match_object data = 4;
inline int GM_Match_result::data_size() const {
  return data_.size();
}
inline void GM_Match_result::clear_data() {
  data_.Clear();
}
inline const ::GM_match_object& GM_Match_result::data(int index) const {
  return data_.Get(index);
}
inline ::GM_match_object* GM_Match_result::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_match_object* GM_Match_result::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_match_object >&
GM_Match_result::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_match_object >*
GM_Match_result::mutable_data() {
  return &data_;
}

// optional int32 lastnum = 5;
inline bool GM_Match_result::has_lastnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Match_result::set_has_lastnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Match_result::clear_has_lastnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Match_result::clear_lastnum() {
  lastnum_ = 0;
  clear_has_lastnum();
}
inline ::google::protobuf::int32 GM_Match_result::lastnum() const {
  return lastnum_;
}
inline void GM_Match_result::set_lastnum(::google::protobuf::int32 value) {
  set_has_lastnum();
  lastnum_ = value;
}

// -------------------------------------------------------------------

// GM_Match_time_return

// repeated int32 begintime = 1;
inline int GM_Match_time_return::begintime_size() const {
  return begintime_.size();
}
inline void GM_Match_time_return::clear_begintime() {
  begintime_.Clear();
}
inline ::google::protobuf::int32 GM_Match_time_return::begintime(int index) const {
  return begintime_.Get(index);
}
inline void GM_Match_time_return::set_begintime(int index, ::google::protobuf::int32 value) {
  begintime_.Set(index, value);
}
inline void GM_Match_time_return::add_begintime(::google::protobuf::int32 value) {
  begintime_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GM_Match_time_return::begintime() const {
  return begintime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GM_Match_time_return::mutable_begintime() {
  return &begintime_;
}

// -------------------------------------------------------------------

// GM_Match_rate_return

// required int32 rate = 1;
inline bool GM_Match_rate_return::has_rate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Match_rate_return::set_has_rate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Match_rate_return::clear_has_rate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Match_rate_return::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 GM_Match_rate_return::rate() const {
  return rate_;
}
inline void GM_Match_rate_return::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_match_2etxt__INCLUDED
