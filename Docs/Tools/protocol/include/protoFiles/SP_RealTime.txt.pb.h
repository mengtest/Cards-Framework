// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_RealTime.txt

#ifndef PROTOBUF_SP_5fRealTime_2etxt__INCLUDED
#define PROTOBUF_SP_5fRealTime_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SP_5fRealTime_2etxt();
void protobuf_AssignDesc_SP_5fRealTime_2etxt();
void protobuf_ShutdownFile_SP_5fRealTime_2etxt();

class SM_RealTime_Data_Request;
class SM_RealTime_Data_Return;
class SM_RealTime_Store_Data_Return;
class SM_RealTime_Store_Info;

// ===================================================================

class SM_RealTime_Data_Request : public ::google::protobuf::Message {
 public:
  SM_RealTime_Data_Request();
  virtual ~SM_RealTime_Data_Request();

  SM_RealTime_Data_Request(const SM_RealTime_Data_Request& from);

  inline SM_RealTime_Data_Request& operator=(const SM_RealTime_Data_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_RealTime_Data_Request& default_instance();

  void Swap(SM_RealTime_Data_Request* other);

  // implements Message ----------------------------------------------

  SM_RealTime_Data_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_RealTime_Data_Request& from);
  void MergeFrom(const SM_RealTime_Data_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_RealTime_Data_Request)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fRealTime_2etxt();
  friend void protobuf_AssignDesc_SP_5fRealTime_2etxt();
  friend void protobuf_ShutdownFile_SP_5fRealTime_2etxt();

  void InitAsDefaultInstance();
  static SM_RealTime_Data_Request* default_instance_;
};
// -------------------------------------------------------------------

class SM_RealTime_Data_Return : public ::google::protobuf::Message {
 public:
  SM_RealTime_Data_Return();
  virtual ~SM_RealTime_Data_Return();

  SM_RealTime_Data_Return(const SM_RealTime_Data_Return& from);

  inline SM_RealTime_Data_Return& operator=(const SM_RealTime_Data_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_RealTime_Data_Return& default_instance();

  void Swap(SM_RealTime_Data_Return* other);

  // implements Message ----------------------------------------------

  SM_RealTime_Data_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_RealTime_Data_Return& from);
  void MergeFrom(const SM_RealTime_Data_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 fighttimes = 4;
  inline bool has_fighttimes() const;
  inline void clear_fighttimes();
  static const int kFighttimesFieldNumber = 4;
  inline ::google::protobuf::int32 fighttimes() const;
  inline void set_fighttimes(::google::protobuf::int32 value);

  // optional int32 proof = 5;
  inline bool has_proof() const;
  inline void clear_proof();
  static const int kProofFieldNumber = 5;
  inline ::google::protobuf::int32 proof() const;
  inline void set_proof(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_RealTime_Data_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_fighttimes();
  inline void clear_has_fighttimes();
  inline void set_has_proof();
  inline void clear_has_proof();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 fighttimes_;
  ::google::protobuf::int32 proof_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fRealTime_2etxt();
  friend void protobuf_AssignDesc_SP_5fRealTime_2etxt();
  friend void protobuf_ShutdownFile_SP_5fRealTime_2etxt();

  void InitAsDefaultInstance();
  static SM_RealTime_Data_Return* default_instance_;
};
// -------------------------------------------------------------------

class SM_RealTime_Store_Data_Return : public ::google::protobuf::Message {
 public:
  SM_RealTime_Store_Data_Return();
  virtual ~SM_RealTime_Store_Data_Return();

  SM_RealTime_Store_Data_Return(const SM_RealTime_Store_Data_Return& from);

  inline SM_RealTime_Store_Data_Return& operator=(const SM_RealTime_Store_Data_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_RealTime_Store_Data_Return& default_instance();

  void Swap(SM_RealTime_Store_Data_Return* other);

  // implements Message ----------------------------------------------

  SM_RealTime_Store_Data_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_RealTime_Store_Data_Return& from);
  void MergeFrom(const SM_RealTime_Store_Data_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // repeated .SM_RealTime_Store_Info data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::SM_RealTime_Store_Info& data(int index) const;
  inline ::SM_RealTime_Store_Info* mutable_data(int index);
  inline ::SM_RealTime_Store_Info* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::SM_RealTime_Store_Info >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::SM_RealTime_Store_Info >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:SM_RealTime_Store_Data_Return)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SM_RealTime_Store_Info > data_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fRealTime_2etxt();
  friend void protobuf_AssignDesc_SP_5fRealTime_2etxt();
  friend void protobuf_ShutdownFile_SP_5fRealTime_2etxt();

  void InitAsDefaultInstance();
  static SM_RealTime_Store_Data_Return* default_instance_;
};
// -------------------------------------------------------------------

class SM_RealTime_Store_Info : public ::google::protobuf::Message {
 public:
  SM_RealTime_Store_Info();
  virtual ~SM_RealTime_Store_Info();

  SM_RealTime_Store_Info(const SM_RealTime_Store_Info& from);

  inline SM_RealTime_Store_Info& operator=(const SM_RealTime_Store_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_RealTime_Store_Info& default_instance();

  void Swap(SM_RealTime_Store_Info* other);

  // implements Message ----------------------------------------------

  SM_RealTime_Store_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_RealTime_Store_Info& from);
  void MergeFrom(const SM_RealTime_Store_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 itemid = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_RealTime_Store_Info)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fRealTime_2etxt();
  friend void protobuf_AssignDesc_SP_5fRealTime_2etxt();
  friend void protobuf_ShutdownFile_SP_5fRealTime_2etxt();

  void InitAsDefaultInstance();
  static SM_RealTime_Store_Info* default_instance_;
};
// ===================================================================


// ===================================================================

// SM_RealTime_Data_Request

// required int32 roleid = 1;
inline bool SM_RealTime_Data_Request::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_RealTime_Data_Request::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_RealTime_Data_Request::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_RealTime_Data_Request::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SM_RealTime_Data_Request::roleid() const {
  return roleid_;
}
inline void SM_RealTime_Data_Request::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// SM_RealTime_Data_Return

// required int32 result = 1;
inline bool SM_RealTime_Data_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_RealTime_Data_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_RealTime_Data_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_RealTime_Data_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SM_RealTime_Data_Return::result() const {
  return result_;
}
inline void SM_RealTime_Data_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 roleid = 2;
inline bool SM_RealTime_Data_Return::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_RealTime_Data_Return::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_RealTime_Data_Return::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_RealTime_Data_Return::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SM_RealTime_Data_Return::roleid() const {
  return roleid_;
}
inline void SM_RealTime_Data_Return::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 fighttimes = 4;
inline bool SM_RealTime_Data_Return::has_fighttimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_RealTime_Data_Return::set_has_fighttimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_RealTime_Data_Return::clear_has_fighttimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_RealTime_Data_Return::clear_fighttimes() {
  fighttimes_ = 0;
  clear_has_fighttimes();
}
inline ::google::protobuf::int32 SM_RealTime_Data_Return::fighttimes() const {
  return fighttimes_;
}
inline void SM_RealTime_Data_Return::set_fighttimes(::google::protobuf::int32 value) {
  set_has_fighttimes();
  fighttimes_ = value;
}

// optional int32 proof = 5;
inline bool SM_RealTime_Data_Return::has_proof() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SM_RealTime_Data_Return::set_has_proof() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SM_RealTime_Data_Return::clear_has_proof() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SM_RealTime_Data_Return::clear_proof() {
  proof_ = 0;
  clear_has_proof();
}
inline ::google::protobuf::int32 SM_RealTime_Data_Return::proof() const {
  return proof_;
}
inline void SM_RealTime_Data_Return::set_proof(::google::protobuf::int32 value) {
  set_has_proof();
  proof_ = value;
}

// -------------------------------------------------------------------

// SM_RealTime_Store_Data_Return

// required int32 count = 1;
inline bool SM_RealTime_Store_Data_Return::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_RealTime_Store_Data_Return::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_RealTime_Store_Data_Return::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_RealTime_Store_Data_Return::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 SM_RealTime_Store_Data_Return::count() const {
  return count_;
}
inline void SM_RealTime_Store_Data_Return::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// repeated .SM_RealTime_Store_Info data = 2;
inline int SM_RealTime_Store_Data_Return::data_size() const {
  return data_.size();
}
inline void SM_RealTime_Store_Data_Return::clear_data() {
  data_.Clear();
}
inline const ::SM_RealTime_Store_Info& SM_RealTime_Store_Data_Return::data(int index) const {
  return data_.Get(index);
}
inline ::SM_RealTime_Store_Info* SM_RealTime_Store_Data_Return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::SM_RealTime_Store_Info* SM_RealTime_Store_Data_Return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SM_RealTime_Store_Info >&
SM_RealTime_Store_Data_Return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::SM_RealTime_Store_Info >*
SM_RealTime_Store_Data_Return::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// SM_RealTime_Store_Info

// required int32 roleid = 1;
inline bool SM_RealTime_Store_Info::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_RealTime_Store_Info::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_RealTime_Store_Info::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_RealTime_Store_Info::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SM_RealTime_Store_Info::roleid() const {
  return roleid_;
}
inline void SM_RealTime_Store_Info::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 itemid = 2;
inline bool SM_RealTime_Store_Info::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_RealTime_Store_Info::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_RealTime_Store_Info::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_RealTime_Store_Info::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 SM_RealTime_Store_Info::itemid() const {
  return itemid_;
}
inline void SM_RealTime_Store_Info::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 count = 3;
inline bool SM_RealTime_Store_Info::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_RealTime_Store_Info::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_RealTime_Store_Info::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_RealTime_Store_Info::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 SM_RealTime_Store_Info::count() const {
  return count_;
}
inline void SM_RealTime_Store_Info::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_SP_5fRealTime_2etxt__INCLUDED
