// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fightrealtime.txt

#ifndef PROTOBUF_fightrealtime_2etxt__INCLUDED
#define PROTOBUF_fightrealtime_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_fightrealtime_2etxt();
void protobuf_AssignDesc_fightrealtime_2etxt();
void protobuf_ShutdownFile_fightrealtime_2etxt();

class GMRealTimeOpen;
class GMRealTimeTimeZone;
class GMRealTimeStore;
class GMRealTimeStoreObject;
class GMRealTimeStoreReset;
class GMRealTimeStoreBuy;
class GMRealTimeStoreBuyResult;

// ===================================================================

class GMRealTimeOpen : public ::google::protobuf::Message {
 public:
  GMRealTimeOpen();
  virtual ~GMRealTimeOpen();

  GMRealTimeOpen(const GMRealTimeOpen& from);

  inline GMRealTimeOpen& operator=(const GMRealTimeOpen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMRealTimeOpen& default_instance();

  void Swap(GMRealTimeOpen* other);

  // implements Message ----------------------------------------------

  GMRealTimeOpen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMRealTimeOpen& from);
  void MergeFrom(const GMRealTimeOpen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 fighttimes = 1;
  inline bool has_fighttimes() const;
  inline void clear_fighttimes();
  static const int kFighttimesFieldNumber = 1;
  inline ::google::protobuf::int32 fighttimes() const;
  inline void set_fighttimes(::google::protobuf::int32 value);

  // optional int32 fighttotaltimes = 2;
  inline bool has_fighttotaltimes() const;
  inline void clear_fighttotaltimes();
  static const int kFighttotaltimesFieldNumber = 2;
  inline ::google::protobuf::int32 fighttotaltimes() const;
  inline void set_fighttotaltimes(::google::protobuf::int32 value);

  // optional int32 copyid = 3;
  inline bool has_copyid() const;
  inline void clear_copyid();
  static const int kCopyidFieldNumber = 3;
  inline ::google::protobuf::int32 copyid() const;
  inline void set_copyid(::google::protobuf::int32 value);

  // optional int32 matchtime = 4;
  inline bool has_matchtime() const;
  inline void clear_matchtime();
  static const int kMatchtimeFieldNumber = 4;
  inline ::google::protobuf::int32 matchtime() const;
  inline void set_matchtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMRealTimeOpen)
 private:
  inline void set_has_fighttimes();
  inline void clear_has_fighttimes();
  inline void set_has_fighttotaltimes();
  inline void clear_has_fighttotaltimes();
  inline void set_has_copyid();
  inline void clear_has_copyid();
  inline void set_has_matchtime();
  inline void clear_has_matchtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 fighttimes_;
  ::google::protobuf::int32 fighttotaltimes_;
  ::google::protobuf::int32 copyid_;
  ::google::protobuf::int32 matchtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_fightrealtime_2etxt();
  friend void protobuf_AssignDesc_fightrealtime_2etxt();
  friend void protobuf_ShutdownFile_fightrealtime_2etxt();

  void InitAsDefaultInstance();
  static GMRealTimeOpen* default_instance_;
};
// -------------------------------------------------------------------

class GMRealTimeTimeZone : public ::google::protobuf::Message {
 public:
  GMRealTimeTimeZone();
  virtual ~GMRealTimeTimeZone();

  GMRealTimeTimeZone(const GMRealTimeTimeZone& from);

  inline GMRealTimeTimeZone& operator=(const GMRealTimeTimeZone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMRealTimeTimeZone& default_instance();

  void Swap(GMRealTimeTimeZone* other);

  // implements Message ----------------------------------------------

  GMRealTimeTimeZone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMRealTimeTimeZone& from);
  void MergeFrom(const GMRealTimeTimeZone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 start = 1;
  inline bool has_start() const;
  inline void clear_start();
  static const int kStartFieldNumber = 1;
  inline ::google::protobuf::int32 start() const;
  inline void set_start(::google::protobuf::int32 value);

  // required int32 end = 2;
  inline bool has_end() const;
  inline void clear_end();
  static const int kEndFieldNumber = 2;
  inline ::google::protobuf::int32 end() const;
  inline void set_end(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMRealTimeTimeZone)
 private:
  inline void set_has_start();
  inline void clear_has_start();
  inline void set_has_end();
  inline void clear_has_end();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 start_;
  ::google::protobuf::int32 end_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_fightrealtime_2etxt();
  friend void protobuf_AssignDesc_fightrealtime_2etxt();
  friend void protobuf_ShutdownFile_fightrealtime_2etxt();

  void InitAsDefaultInstance();
  static GMRealTimeTimeZone* default_instance_;
};
// -------------------------------------------------------------------

class GMRealTimeStore : public ::google::protobuf::Message {
 public:
  GMRealTimeStore();
  virtual ~GMRealTimeStore();

  GMRealTimeStore(const GMRealTimeStore& from);

  inline GMRealTimeStore& operator=(const GMRealTimeStore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMRealTimeStore& default_instance();

  void Swap(GMRealTimeStore* other);

  // implements Message ----------------------------------------------

  GMRealTimeStore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMRealTimeStore& from);
  void MergeFrom(const GMRealTimeStore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 proof = 1;
  inline bool has_proof() const;
  inline void clear_proof();
  static const int kProofFieldNumber = 1;
  inline ::google::protobuf::int32 proof() const;
  inline void set_proof(::google::protobuf::int32 value);

  // repeated .GMRealTimeStoreObject data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::GMRealTimeStoreObject& data(int index) const;
  inline ::GMRealTimeStoreObject* mutable_data(int index);
  inline ::GMRealTimeStoreObject* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GMRealTimeStoreObject >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GMRealTimeStoreObject >*
      mutable_data();

  // optional int32 resetcost = 3;
  inline bool has_resetcost() const;
  inline void clear_resetcost();
  static const int kResetcostFieldNumber = 3;
  inline ::google::protobuf::int32 resetcost() const;
  inline void set_resetcost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMRealTimeStore)
 private:
  inline void set_has_proof();
  inline void clear_has_proof();
  inline void set_has_resetcost();
  inline void clear_has_resetcost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GMRealTimeStoreObject > data_;
  ::google::protobuf::int32 proof_;
  ::google::protobuf::int32 resetcost_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_fightrealtime_2etxt();
  friend void protobuf_AssignDesc_fightrealtime_2etxt();
  friend void protobuf_ShutdownFile_fightrealtime_2etxt();

  void InitAsDefaultInstance();
  static GMRealTimeStore* default_instance_;
};
// -------------------------------------------------------------------

class GMRealTimeStoreObject : public ::google::protobuf::Message {
 public:
  GMRealTimeStoreObject();
  virtual ~GMRealTimeStoreObject();

  GMRealTimeStoreObject(const GMRealTimeStoreObject& from);

  inline GMRealTimeStoreObject& operator=(const GMRealTimeStoreObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMRealTimeStoreObject& default_instance();

  void Swap(GMRealTimeStoreObject* other);

  // implements Message ----------------------------------------------

  GMRealTimeStoreObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMRealTimeStoreObject& from);
  void MergeFrom(const GMRealTimeStoreObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objectid = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // required int32 remaindercount = 2;
  inline bool has_remaindercount() const;
  inline void clear_remaindercount();
  static const int kRemaindercountFieldNumber = 2;
  inline ::google::protobuf::int32 remaindercount() const;
  inline void set_remaindercount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMRealTimeStoreObject)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_remaindercount();
  inline void clear_has_remaindercount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 remaindercount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_fightrealtime_2etxt();
  friend void protobuf_AssignDesc_fightrealtime_2etxt();
  friend void protobuf_ShutdownFile_fightrealtime_2etxt();

  void InitAsDefaultInstance();
  static GMRealTimeStoreObject* default_instance_;
};
// -------------------------------------------------------------------

class GMRealTimeStoreReset : public ::google::protobuf::Message {
 public:
  GMRealTimeStoreReset();
  virtual ~GMRealTimeStoreReset();

  GMRealTimeStoreReset(const GMRealTimeStoreReset& from);

  inline GMRealTimeStoreReset& operator=(const GMRealTimeStoreReset& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMRealTimeStoreReset& default_instance();

  void Swap(GMRealTimeStoreReset* other);

  // implements Message ----------------------------------------------

  GMRealTimeStoreReset* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMRealTimeStoreReset& from);
  void MergeFrom(const GMRealTimeStoreReset& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 proof = 2;
  inline bool has_proof() const;
  inline void clear_proof();
  static const int kProofFieldNumber = 2;
  inline ::google::protobuf::int32 proof() const;
  inline void set_proof(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMRealTimeStoreReset)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_proof();
  inline void clear_has_proof();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 proof_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_fightrealtime_2etxt();
  friend void protobuf_AssignDesc_fightrealtime_2etxt();
  friend void protobuf_ShutdownFile_fightrealtime_2etxt();

  void InitAsDefaultInstance();
  static GMRealTimeStoreReset* default_instance_;
};
// -------------------------------------------------------------------

class GMRealTimeStoreBuy : public ::google::protobuf::Message {
 public:
  GMRealTimeStoreBuy();
  virtual ~GMRealTimeStoreBuy();

  GMRealTimeStoreBuy(const GMRealTimeStoreBuy& from);

  inline GMRealTimeStoreBuy& operator=(const GMRealTimeStoreBuy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMRealTimeStoreBuy& default_instance();

  void Swap(GMRealTimeStoreBuy* other);

  // implements Message ----------------------------------------------

  GMRealTimeStoreBuy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMRealTimeStoreBuy& from);
  void MergeFrom(const GMRealTimeStoreBuy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objectid = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMRealTimeStoreBuy)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_fightrealtime_2etxt();
  friend void protobuf_AssignDesc_fightrealtime_2etxt();
  friend void protobuf_ShutdownFile_fightrealtime_2etxt();

  void InitAsDefaultInstance();
  static GMRealTimeStoreBuy* default_instance_;
};
// -------------------------------------------------------------------

class GMRealTimeStoreBuyResult : public ::google::protobuf::Message {
 public:
  GMRealTimeStoreBuyResult();
  virtual ~GMRealTimeStoreBuyResult();

  GMRealTimeStoreBuyResult(const GMRealTimeStoreBuyResult& from);

  inline GMRealTimeStoreBuyResult& operator=(const GMRealTimeStoreBuyResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMRealTimeStoreBuyResult& default_instance();

  void Swap(GMRealTimeStoreBuyResult* other);

  // implements Message ----------------------------------------------

  GMRealTimeStoreBuyResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMRealTimeStoreBuyResult& from);
  void MergeFrom(const GMRealTimeStoreBuyResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 objectid = 2;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 2;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // required int32 proof = 3;
  inline bool has_proof() const;
  inline void clear_proof();
  static const int kProofFieldNumber = 3;
  inline ::google::protobuf::int32 proof() const;
  inline void set_proof(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMRealTimeStoreBuyResult)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_proof();
  inline void clear_has_proof();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 proof_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_fightrealtime_2etxt();
  friend void protobuf_AssignDesc_fightrealtime_2etxt();
  friend void protobuf_ShutdownFile_fightrealtime_2etxt();

  void InitAsDefaultInstance();
  static GMRealTimeStoreBuyResult* default_instance_;
};
// ===================================================================


// ===================================================================

// GMRealTimeOpen

// required int32 fighttimes = 1;
inline bool GMRealTimeOpen::has_fighttimes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMRealTimeOpen::set_has_fighttimes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMRealTimeOpen::clear_has_fighttimes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMRealTimeOpen::clear_fighttimes() {
  fighttimes_ = 0;
  clear_has_fighttimes();
}
inline ::google::protobuf::int32 GMRealTimeOpen::fighttimes() const {
  return fighttimes_;
}
inline void GMRealTimeOpen::set_fighttimes(::google::protobuf::int32 value) {
  set_has_fighttimes();
  fighttimes_ = value;
}

// optional int32 fighttotaltimes = 2;
inline bool GMRealTimeOpen::has_fighttotaltimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMRealTimeOpen::set_has_fighttotaltimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMRealTimeOpen::clear_has_fighttotaltimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMRealTimeOpen::clear_fighttotaltimes() {
  fighttotaltimes_ = 0;
  clear_has_fighttotaltimes();
}
inline ::google::protobuf::int32 GMRealTimeOpen::fighttotaltimes() const {
  return fighttotaltimes_;
}
inline void GMRealTimeOpen::set_fighttotaltimes(::google::protobuf::int32 value) {
  set_has_fighttotaltimes();
  fighttotaltimes_ = value;
}

// optional int32 copyid = 3;
inline bool GMRealTimeOpen::has_copyid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMRealTimeOpen::set_has_copyid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMRealTimeOpen::clear_has_copyid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMRealTimeOpen::clear_copyid() {
  copyid_ = 0;
  clear_has_copyid();
}
inline ::google::protobuf::int32 GMRealTimeOpen::copyid() const {
  return copyid_;
}
inline void GMRealTimeOpen::set_copyid(::google::protobuf::int32 value) {
  set_has_copyid();
  copyid_ = value;
}

// optional int32 matchtime = 4;
inline bool GMRealTimeOpen::has_matchtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMRealTimeOpen::set_has_matchtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMRealTimeOpen::clear_has_matchtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMRealTimeOpen::clear_matchtime() {
  matchtime_ = 0;
  clear_has_matchtime();
}
inline ::google::protobuf::int32 GMRealTimeOpen::matchtime() const {
  return matchtime_;
}
inline void GMRealTimeOpen::set_matchtime(::google::protobuf::int32 value) {
  set_has_matchtime();
  matchtime_ = value;
}

// -------------------------------------------------------------------

// GMRealTimeTimeZone

// required int32 start = 1;
inline bool GMRealTimeTimeZone::has_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMRealTimeTimeZone::set_has_start() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMRealTimeTimeZone::clear_has_start() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMRealTimeTimeZone::clear_start() {
  start_ = 0;
  clear_has_start();
}
inline ::google::protobuf::int32 GMRealTimeTimeZone::start() const {
  return start_;
}
inline void GMRealTimeTimeZone::set_start(::google::protobuf::int32 value) {
  set_has_start();
  start_ = value;
}

// required int32 end = 2;
inline bool GMRealTimeTimeZone::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMRealTimeTimeZone::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMRealTimeTimeZone::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMRealTimeTimeZone::clear_end() {
  end_ = 0;
  clear_has_end();
}
inline ::google::protobuf::int32 GMRealTimeTimeZone::end() const {
  return end_;
}
inline void GMRealTimeTimeZone::set_end(::google::protobuf::int32 value) {
  set_has_end();
  end_ = value;
}

// -------------------------------------------------------------------

// GMRealTimeStore

// required int32 proof = 1;
inline bool GMRealTimeStore::has_proof() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMRealTimeStore::set_has_proof() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMRealTimeStore::clear_has_proof() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMRealTimeStore::clear_proof() {
  proof_ = 0;
  clear_has_proof();
}
inline ::google::protobuf::int32 GMRealTimeStore::proof() const {
  return proof_;
}
inline void GMRealTimeStore::set_proof(::google::protobuf::int32 value) {
  set_has_proof();
  proof_ = value;
}

// repeated .GMRealTimeStoreObject data = 2;
inline int GMRealTimeStore::data_size() const {
  return data_.size();
}
inline void GMRealTimeStore::clear_data() {
  data_.Clear();
}
inline const ::GMRealTimeStoreObject& GMRealTimeStore::data(int index) const {
  return data_.Get(index);
}
inline ::GMRealTimeStoreObject* GMRealTimeStore::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GMRealTimeStoreObject* GMRealTimeStore::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GMRealTimeStoreObject >&
GMRealTimeStore::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GMRealTimeStoreObject >*
GMRealTimeStore::mutable_data() {
  return &data_;
}

// optional int32 resetcost = 3;
inline bool GMRealTimeStore::has_resetcost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMRealTimeStore::set_has_resetcost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMRealTimeStore::clear_has_resetcost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMRealTimeStore::clear_resetcost() {
  resetcost_ = 0;
  clear_has_resetcost();
}
inline ::google::protobuf::int32 GMRealTimeStore::resetcost() const {
  return resetcost_;
}
inline void GMRealTimeStore::set_resetcost(::google::protobuf::int32 value) {
  set_has_resetcost();
  resetcost_ = value;
}

// -------------------------------------------------------------------

// GMRealTimeStoreObject

// required int32 objectid = 1;
inline bool GMRealTimeStoreObject::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMRealTimeStoreObject::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMRealTimeStoreObject::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMRealTimeStoreObject::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GMRealTimeStoreObject::objectid() const {
  return objectid_;
}
inline void GMRealTimeStoreObject::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// required int32 remaindercount = 2;
inline bool GMRealTimeStoreObject::has_remaindercount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMRealTimeStoreObject::set_has_remaindercount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMRealTimeStoreObject::clear_has_remaindercount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMRealTimeStoreObject::clear_remaindercount() {
  remaindercount_ = 0;
  clear_has_remaindercount();
}
inline ::google::protobuf::int32 GMRealTimeStoreObject::remaindercount() const {
  return remaindercount_;
}
inline void GMRealTimeStoreObject::set_remaindercount(::google::protobuf::int32 value) {
  set_has_remaindercount();
  remaindercount_ = value;
}

// -------------------------------------------------------------------

// GMRealTimeStoreReset

// required int32 result = 1;
inline bool GMRealTimeStoreReset::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMRealTimeStoreReset::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMRealTimeStoreReset::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMRealTimeStoreReset::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GMRealTimeStoreReset::result() const {
  return result_;
}
inline void GMRealTimeStoreReset::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 proof = 2;
inline bool GMRealTimeStoreReset::has_proof() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMRealTimeStoreReset::set_has_proof() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMRealTimeStoreReset::clear_has_proof() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMRealTimeStoreReset::clear_proof() {
  proof_ = 0;
  clear_has_proof();
}
inline ::google::protobuf::int32 GMRealTimeStoreReset::proof() const {
  return proof_;
}
inline void GMRealTimeStoreReset::set_proof(::google::protobuf::int32 value) {
  set_has_proof();
  proof_ = value;
}

// -------------------------------------------------------------------

// GMRealTimeStoreBuy

// required int32 objectid = 1;
inline bool GMRealTimeStoreBuy::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMRealTimeStoreBuy::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMRealTimeStoreBuy::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMRealTimeStoreBuy::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GMRealTimeStoreBuy::objectid() const {
  return objectid_;
}
inline void GMRealTimeStoreBuy::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// -------------------------------------------------------------------

// GMRealTimeStoreBuyResult

// required int32 result = 1;
inline bool GMRealTimeStoreBuyResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMRealTimeStoreBuyResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMRealTimeStoreBuyResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMRealTimeStoreBuyResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GMRealTimeStoreBuyResult::result() const {
  return result_;
}
inline void GMRealTimeStoreBuyResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 objectid = 2;
inline bool GMRealTimeStoreBuyResult::has_objectid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMRealTimeStoreBuyResult::set_has_objectid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMRealTimeStoreBuyResult::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMRealTimeStoreBuyResult::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GMRealTimeStoreBuyResult::objectid() const {
  return objectid_;
}
inline void GMRealTimeStoreBuyResult::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// required int32 proof = 3;
inline bool GMRealTimeStoreBuyResult::has_proof() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMRealTimeStoreBuyResult::set_has_proof() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMRealTimeStoreBuyResult::clear_has_proof() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMRealTimeStoreBuyResult::clear_proof() {
  proof_ = 0;
  clear_has_proof();
}
inline ::google::protobuf::int32 GMRealTimeStoreBuyResult::proof() const {
  return proof_;
}
inline void GMRealTimeStoreBuyResult::set_proof(::google::protobuf::int32 value) {
  set_has_proof();
  proof_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_fightrealtime_2etxt__INCLUDED
