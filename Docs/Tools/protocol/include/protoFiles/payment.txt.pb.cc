// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: payment.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "payment.txt.pb.h"
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GM_AppStore_Verify_Order_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AppStore_Verify_Order_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_AppStore_Verify_Order_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AppStore_Verify_Order_Return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Product_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Product_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_ProductList_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_ProductList_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_ProductList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_ProductList_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_GooglePlay_Verify_Order_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_GooglePlay_Verify_Order_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_GooglePlay_Verify_Order_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_GooglePlay_Verify_Order_Return_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_payment_2etxt() {
  protobuf_AddDesc_payment_2etxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "payment.txt");
  GOOGLE_CHECK(file != NULL);
  GM_AppStore_Verify_Order_descriptor_ = file->message_type(0);
  static const int GM_AppStore_Verify_Order_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order, transaction_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order, appid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order, buffer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order, accountid_),
  };
  GM_AppStore_Verify_Order_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AppStore_Verify_Order_descriptor_,
      GM_AppStore_Verify_Order::default_instance_,
      GM_AppStore_Verify_Order_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AppStore_Verify_Order));
  GM_AppStore_Verify_Order_Return_descriptor_ = file->message_type(1);
  static const int GM_AppStore_Verify_Order_Return_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order_Return, transaction_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order_Return, m_result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order_Return, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order_Return, quantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order_Return, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order_Return, productid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order_Return, purchase_date_),
  };
  GM_AppStore_Verify_Order_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AppStore_Verify_Order_Return_descriptor_,
      GM_AppStore_Verify_Order_Return::default_instance_,
      GM_AppStore_Verify_Order_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AppStore_Verify_Order_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AppStore_Verify_Order_Return));
  GM_Product_descriptor_ = file->message_type(2);
  static const int GM_Product_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Product, productid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Product, icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Product, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Product, moneystr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Product, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Product, canclick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Product, money_),
  };
  GM_Product_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Product_descriptor_,
      GM_Product::default_instance_,
      GM_Product_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Product, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Product, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Product));
  GM_ProductList_Request_descriptor_ = file->message_type(3);
  static const int GM_ProductList_Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ProductList_Request, channel_),
  };
  GM_ProductList_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_ProductList_Request_descriptor_,
      GM_ProductList_Request::default_instance_,
      GM_ProductList_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ProductList_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ProductList_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_ProductList_Request));
  GM_ProductList_descriptor_ = file->message_type(4);
  static const int GM_ProductList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ProductList, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ProductList, list_),
  };
  GM_ProductList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_ProductList_descriptor_,
      GM_ProductList::default_instance_,
      GM_ProductList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ProductList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ProductList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_ProductList));
  GM_GooglePlay_Verify_Order_descriptor_ = file->message_type(5);
  static const int GM_GooglePlay_Verify_Order_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order, googleorderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order, appid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order, randstr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order, token_),
  };
  GM_GooglePlay_Verify_Order_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_GooglePlay_Verify_Order_descriptor_,
      GM_GooglePlay_Verify_Order::default_instance_,
      GM_GooglePlay_Verify_Order_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_GooglePlay_Verify_Order));
  GM_GooglePlay_Verify_Order_Return_descriptor_ = file->message_type(6);
  static const int GM_GooglePlay_Verify_Order_Return_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order_Return, googleorderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order_Return, m_result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order_Return, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order_Return, quantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order_Return, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order_Return, productid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order_Return, purchase_date_),
  };
  GM_GooglePlay_Verify_Order_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_GooglePlay_Verify_Order_Return_descriptor_,
      GM_GooglePlay_Verify_Order_Return::default_instance_,
      GM_GooglePlay_Verify_Order_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GooglePlay_Verify_Order_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_GooglePlay_Verify_Order_Return));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_payment_2etxt);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AppStore_Verify_Order_descriptor_, &GM_AppStore_Verify_Order::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AppStore_Verify_Order_Return_descriptor_, &GM_AppStore_Verify_Order_Return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Product_descriptor_, &GM_Product::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_ProductList_Request_descriptor_, &GM_ProductList_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_ProductList_descriptor_, &GM_ProductList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_GooglePlay_Verify_Order_descriptor_, &GM_GooglePlay_Verify_Order::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_GooglePlay_Verify_Order_Return_descriptor_, &GM_GooglePlay_Verify_Order_Return::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_payment_2etxt() {
  delete GM_AppStore_Verify_Order::default_instance_;
  delete GM_AppStore_Verify_Order_reflection_;
  delete GM_AppStore_Verify_Order_Return::default_instance_;
  delete GM_AppStore_Verify_Order_Return_reflection_;
  delete GM_Product::default_instance_;
  delete GM_Product_reflection_;
  delete GM_ProductList_Request::default_instance_;
  delete GM_ProductList_Request_reflection_;
  delete GM_ProductList::default_instance_;
  delete GM_ProductList_reflection_;
  delete GM_GooglePlay_Verify_Order::default_instance_;
  delete GM_GooglePlay_Verify_Order_reflection_;
  delete GM_GooglePlay_Verify_Order_Return::default_instance_;
  delete GM_GooglePlay_Verify_Order_Return_reflection_;
}

void protobuf_AddDesc_payment_2etxt() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013payment.txt\"\251\001\n\030GM_AppStore_Verify_Ord"
    "er\022\026\n\016transaction_id\030\001 \002(\t\022\020\n\010platform\030\002"
    " \002(\005\022\017\n\007channel\030\003 \002(\t\022\r\n\005appid\030\004 \002(\005\022\016\n\006"
    "buffer\030\005 \002(\t\022\016\n\006roleid\030\006 \001(\005\022\020\n\010serverid"
    "\030\007 \001(\005\022\021\n\taccountid\030\010 \001(\005\"\245\001\n\037GM_AppStor"
    "e_Verify_Order_Return\022\026\n\016transaction_id\030"
    "\001 \001(\t\022\020\n\010m_result\030\002 \002(\005\022\016\n\006roleid\030\003 \001(\005\022"
    "\020\n\010quantity\030\004 \001(\r\022\014\n\004gold\030\005 \001(\r\022\021\n\tprodu"
    "ctid\030\006 \001(\t\022\025\n\rpurchase_date\030\007 \001(\t\"|\n\nGM_"
    "Product\022\021\n\tproductid\030\001 \002(\005\022\014\n\004icon\030\002 \002(\t"
    "\022\014\n\004name\030\003 \002(\t\022\020\n\010moneystr\030\004 \002(\t\022\014\n\004desc"
    "\030\005 \002(\t\022\020\n\010canclick\030\006 \002(\010\022\r\n\005money\030\007 \002(\005\""
    ")\n\026GM_ProductList_Request\022\017\n\007channel\030\001 \002"
    "(\t\":\n\016GM_ProductList\022\r\n\005count\030\001 \002(\005\022\031\n\004l"
    "ist\030\002 \003(\0132\013.GM_Product\"\333\001\n\032GM_GooglePlay"
    "_Verify_Order\022\025\n\rgoogleorderid\030\001 \002(\t\022\020\n\010"
    "platform\030\002 \002(\005\022\017\n\007channel\030\003 \002(\t\022\r\n\005appid"
    "\030\004 \002(\005\022\017\n\007randstr\030\005 \002(\t\022\016\n\006roleid\030\006 \001(\005\022"
    "\020\n\010serverid\030\007 \001(\005\022\021\n\taccountid\030\010 \001(\005\022\017\n\007"
    "orderid\030\t \001(\t\022\016\n\006itemid\030\n \002(\t\022\r\n\005token\030\013"
    " \002(\t\"\246\001\n!GM_GooglePlay_Verify_Order_Retu"
    "rn\022\025\n\rgoogleorderid\030\001 \001(\t\022\020\n\010m_result\030\002 "
    "\002(\005\022\016\n\006roleid\030\003 \001(\005\022\020\n\010quantity\030\004 \001(\r\022\014\n"
    "\004gold\030\005 \001(\r\022\021\n\tproductid\030\006 \001(\t\022\025\n\rpurcha"
    "se_date\030\007 \001(\t", 973);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "payment.txt", &protobuf_RegisterTypes);
  GM_AppStore_Verify_Order::default_instance_ = new GM_AppStore_Verify_Order();
  GM_AppStore_Verify_Order_Return::default_instance_ = new GM_AppStore_Verify_Order_Return();
  GM_Product::default_instance_ = new GM_Product();
  GM_ProductList_Request::default_instance_ = new GM_ProductList_Request();
  GM_ProductList::default_instance_ = new GM_ProductList();
  GM_GooglePlay_Verify_Order::default_instance_ = new GM_GooglePlay_Verify_Order();
  GM_GooglePlay_Verify_Order_Return::default_instance_ = new GM_GooglePlay_Verify_Order_Return();
  GM_AppStore_Verify_Order::default_instance_->InitAsDefaultInstance();
  GM_AppStore_Verify_Order_Return::default_instance_->InitAsDefaultInstance();
  GM_Product::default_instance_->InitAsDefaultInstance();
  GM_ProductList_Request::default_instance_->InitAsDefaultInstance();
  GM_ProductList::default_instance_->InitAsDefaultInstance();
  GM_GooglePlay_Verify_Order::default_instance_->InitAsDefaultInstance();
  GM_GooglePlay_Verify_Order_Return::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_payment_2etxt);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_payment_2etxt {
  StaticDescriptorInitializer_payment_2etxt() {
    protobuf_AddDesc_payment_2etxt();
  }
} static_descriptor_initializer_payment_2etxt_;

// ===================================================================

#ifndef _MSC_VER
const int GM_AppStore_Verify_Order::kTransactionIdFieldNumber;
const int GM_AppStore_Verify_Order::kPlatformFieldNumber;
const int GM_AppStore_Verify_Order::kChannelFieldNumber;
const int GM_AppStore_Verify_Order::kAppidFieldNumber;
const int GM_AppStore_Verify_Order::kBufferFieldNumber;
const int GM_AppStore_Verify_Order::kRoleidFieldNumber;
const int GM_AppStore_Verify_Order::kServeridFieldNumber;
const int GM_AppStore_Verify_Order::kAccountidFieldNumber;
#endif  // !_MSC_VER

GM_AppStore_Verify_Order::GM_AppStore_Verify_Order()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AppStore_Verify_Order::InitAsDefaultInstance() {
}

GM_AppStore_Verify_Order::GM_AppStore_Verify_Order(const GM_AppStore_Verify_Order& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AppStore_Verify_Order::SharedCtor() {
  _cached_size_ = 0;
  transaction_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  platform_ = 0;
  channel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  appid_ = 0;
  buffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  roleid_ = 0;
  serverid_ = 0;
  accountid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AppStore_Verify_Order::~GM_AppStore_Verify_Order() {
  SharedDtor();
}

void GM_AppStore_Verify_Order::SharedDtor() {
  if (transaction_id_ != &::google::protobuf::internal::kEmptyString) {
    delete transaction_id_;
  }
  if (channel_ != &::google::protobuf::internal::kEmptyString) {
    delete channel_;
  }
  if (buffer_ != &::google::protobuf::internal::kEmptyString) {
    delete buffer_;
  }
  if (this != default_instance_) {
  }
}

void GM_AppStore_Verify_Order::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AppStore_Verify_Order::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AppStore_Verify_Order_descriptor_;
}

const GM_AppStore_Verify_Order& GM_AppStore_Verify_Order::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_payment_2etxt();
  return *default_instance_;
}

GM_AppStore_Verify_Order* GM_AppStore_Verify_Order::default_instance_ = NULL;

GM_AppStore_Verify_Order* GM_AppStore_Verify_Order::New() const {
  return new GM_AppStore_Verify_Order;
}

void GM_AppStore_Verify_Order::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_transaction_id()) {
      if (transaction_id_ != &::google::protobuf::internal::kEmptyString) {
        transaction_id_->clear();
      }
    }
    platform_ = 0;
    if (has_channel()) {
      if (channel_ != &::google::protobuf::internal::kEmptyString) {
        channel_->clear();
      }
    }
    appid_ = 0;
    if (has_buffer()) {
      if (buffer_ != &::google::protobuf::internal::kEmptyString) {
        buffer_->clear();
      }
    }
    roleid_ = 0;
    serverid_ = 0;
    accountid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AppStore_Verify_Order::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string transaction_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transaction_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->transaction_id().data(), this->transaction_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_platform;
        break;
      }

      // required int32 platform = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_platform:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &platform_)));
          set_has_platform();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_channel;
        break;
      }

      // required string channel = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_channel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->channel().data(), this->channel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_appid;
        break;
      }

      // required int32 appid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_appid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &appid_)));
          set_has_appid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_buffer;
        break;
      }

      // required string buffer = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buffer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buffer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->buffer().data(), this->buffer().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_roleid;
        break;
      }

      // optional int32 roleid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_serverid;
        break;
      }

      // optional int32 serverid = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_serverid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
          set_has_serverid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_accountid;
        break;
      }

      // optional int32 accountid = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_accountid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accountid_)));
          set_has_accountid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AppStore_Verify_Order::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string transaction_id = 1;
  if (has_transaction_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->transaction_id().data(), this->transaction_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->transaction_id(), output);
  }

  // required int32 platform = 2;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->platform(), output);
  }

  // required string channel = 3;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->channel(), output);
  }

  // required int32 appid = 4;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->appid(), output);
  }

  // required string buffer = 5;
  if (has_buffer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buffer().data(), this->buffer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->buffer(), output);
  }

  // optional int32 roleid = 6;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->roleid(), output);
  }

  // optional int32 serverid = 7;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->serverid(), output);
  }

  // optional int32 accountid = 8;
  if (has_accountid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->accountid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AppStore_Verify_Order::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string transaction_id = 1;
  if (has_transaction_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->transaction_id().data(), this->transaction_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->transaction_id(), target);
  }

  // required int32 platform = 2;
  if (has_platform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->platform(), target);
  }

  // required string channel = 3;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->channel(), target);
  }

  // required int32 appid = 4;
  if (has_appid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->appid(), target);
  }

  // required string buffer = 5;
  if (has_buffer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buffer().data(), this->buffer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->buffer(), target);
  }

  // optional int32 roleid = 6;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->roleid(), target);
  }

  // optional int32 serverid = 7;
  if (has_serverid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->serverid(), target);
  }

  // optional int32 accountid = 8;
  if (has_accountid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->accountid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AppStore_Verify_Order::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string transaction_id = 1;
    if (has_transaction_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transaction_id());
    }

    // required int32 platform = 2;
    if (has_platform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->platform());
    }

    // required string channel = 3;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel());
    }

    // required int32 appid = 4;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->appid());
    }

    // required string buffer = 5;
    if (has_buffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->buffer());
    }

    // optional int32 roleid = 6;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleid());
    }

    // optional int32 serverid = 7;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serverid());
    }

    // optional int32 accountid = 8;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->accountid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AppStore_Verify_Order::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AppStore_Verify_Order* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AppStore_Verify_Order*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AppStore_Verify_Order::MergeFrom(const GM_AppStore_Verify_Order& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_transaction_id()) {
      set_transaction_id(from.transaction_id());
    }
    if (from.has_platform()) {
      set_platform(from.platform());
    }
    if (from.has_channel()) {
      set_channel(from.channel());
    }
    if (from.has_appid()) {
      set_appid(from.appid());
    }
    if (from.has_buffer()) {
      set_buffer(from.buffer());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_serverid()) {
      set_serverid(from.serverid());
    }
    if (from.has_accountid()) {
      set_accountid(from.accountid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AppStore_Verify_Order::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AppStore_Verify_Order::CopyFrom(const GM_AppStore_Verify_Order& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AppStore_Verify_Order::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void GM_AppStore_Verify_Order::Swap(GM_AppStore_Verify_Order* other) {
  if (other != this) {
    std::swap(transaction_id_, other->transaction_id_);
    std::swap(platform_, other->platform_);
    std::swap(channel_, other->channel_);
    std::swap(appid_, other->appid_);
    std::swap(buffer_, other->buffer_);
    std::swap(roleid_, other->roleid_);
    std::swap(serverid_, other->serverid_);
    std::swap(accountid_, other->accountid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AppStore_Verify_Order::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AppStore_Verify_Order_descriptor_;
  metadata.reflection = GM_AppStore_Verify_Order_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_AppStore_Verify_Order_Return::kTransactionIdFieldNumber;
const int GM_AppStore_Verify_Order_Return::kMResultFieldNumber;
const int GM_AppStore_Verify_Order_Return::kRoleidFieldNumber;
const int GM_AppStore_Verify_Order_Return::kQuantityFieldNumber;
const int GM_AppStore_Verify_Order_Return::kGoldFieldNumber;
const int GM_AppStore_Verify_Order_Return::kProductidFieldNumber;
const int GM_AppStore_Verify_Order_Return::kPurchaseDateFieldNumber;
#endif  // !_MSC_VER

GM_AppStore_Verify_Order_Return::GM_AppStore_Verify_Order_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AppStore_Verify_Order_Return::InitAsDefaultInstance() {
}

GM_AppStore_Verify_Order_Return::GM_AppStore_Verify_Order_Return(const GM_AppStore_Verify_Order_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AppStore_Verify_Order_Return::SharedCtor() {
  _cached_size_ = 0;
  transaction_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_result_ = 0;
  roleid_ = 0;
  quantity_ = 0u;
  gold_ = 0u;
  productid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  purchase_date_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AppStore_Verify_Order_Return::~GM_AppStore_Verify_Order_Return() {
  SharedDtor();
}

void GM_AppStore_Verify_Order_Return::SharedDtor() {
  if (transaction_id_ != &::google::protobuf::internal::kEmptyString) {
    delete transaction_id_;
  }
  if (productid_ != &::google::protobuf::internal::kEmptyString) {
    delete productid_;
  }
  if (purchase_date_ != &::google::protobuf::internal::kEmptyString) {
    delete purchase_date_;
  }
  if (this != default_instance_) {
  }
}

void GM_AppStore_Verify_Order_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AppStore_Verify_Order_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AppStore_Verify_Order_Return_descriptor_;
}

const GM_AppStore_Verify_Order_Return& GM_AppStore_Verify_Order_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_payment_2etxt();
  return *default_instance_;
}

GM_AppStore_Verify_Order_Return* GM_AppStore_Verify_Order_Return::default_instance_ = NULL;

GM_AppStore_Verify_Order_Return* GM_AppStore_Verify_Order_Return::New() const {
  return new GM_AppStore_Verify_Order_Return;
}

void GM_AppStore_Verify_Order_Return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_transaction_id()) {
      if (transaction_id_ != &::google::protobuf::internal::kEmptyString) {
        transaction_id_->clear();
      }
    }
    m_result_ = 0;
    roleid_ = 0;
    quantity_ = 0u;
    gold_ = 0u;
    if (has_productid()) {
      if (productid_ != &::google::protobuf::internal::kEmptyString) {
        productid_->clear();
      }
    }
    if (has_purchase_date()) {
      if (purchase_date_ != &::google::protobuf::internal::kEmptyString) {
        purchase_date_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AppStore_Verify_Order_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string transaction_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transaction_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->transaction_id().data(), this->transaction_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_result;
        break;
      }

      // required int32 m_result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_result_)));
          set_has_m_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_roleid;
        break;
      }

      // optional int32 roleid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_quantity;
        break;
      }

      // optional uint32 quantity = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quantity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_)));
          set_has_quantity();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_gold;
        break;
      }

      // optional uint32 gold = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_productid;
        break;
      }

      // optional string productid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_productid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->productid().data(), this->productid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_purchase_date;
        break;
      }

      // optional string purchase_date = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_purchase_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_purchase_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->purchase_date().data(), this->purchase_date().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AppStore_Verify_Order_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string transaction_id = 1;
  if (has_transaction_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->transaction_id().data(), this->transaction_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->transaction_id(), output);
  }

  // required int32 m_result = 2;
  if (has_m_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_result(), output);
  }

  // optional int32 roleid = 3;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->roleid(), output);
  }

  // optional uint32 quantity = 4;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->quantity(), output);
  }

  // optional uint32 gold = 5;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gold(), output);
  }

  // optional string productid = 6;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->productid().data(), this->productid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->productid(), output);
  }

  // optional string purchase_date = 7;
  if (has_purchase_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->purchase_date().data(), this->purchase_date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->purchase_date(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AppStore_Verify_Order_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string transaction_id = 1;
  if (has_transaction_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->transaction_id().data(), this->transaction_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->transaction_id(), target);
  }

  // required int32 m_result = 2;
  if (has_m_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_result(), target);
  }

  // optional int32 roleid = 3;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->roleid(), target);
  }

  // optional uint32 quantity = 4;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->quantity(), target);
  }

  // optional uint32 gold = 5;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gold(), target);
  }

  // optional string productid = 6;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->productid().data(), this->productid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->productid(), target);
  }

  // optional string purchase_date = 7;
  if (has_purchase_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->purchase_date().data(), this->purchase_date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->purchase_date(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AppStore_Verify_Order_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string transaction_id = 1;
    if (has_transaction_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transaction_id());
    }

    // required int32 m_result = 2;
    if (has_m_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_result());
    }

    // optional int32 roleid = 3;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleid());
    }

    // optional uint32 quantity = 4;
    if (has_quantity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quantity());
    }

    // optional uint32 gold = 5;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gold());
    }

    // optional string productid = 6;
    if (has_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productid());
    }

    // optional string purchase_date = 7;
    if (has_purchase_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->purchase_date());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AppStore_Verify_Order_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AppStore_Verify_Order_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AppStore_Verify_Order_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AppStore_Verify_Order_Return::MergeFrom(const GM_AppStore_Verify_Order_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_transaction_id()) {
      set_transaction_id(from.transaction_id());
    }
    if (from.has_m_result()) {
      set_m_result(from.m_result());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_quantity()) {
      set_quantity(from.quantity());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_productid()) {
      set_productid(from.productid());
    }
    if (from.has_purchase_date()) {
      set_purchase_date(from.purchase_date());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AppStore_Verify_Order_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AppStore_Verify_Order_Return::CopyFrom(const GM_AppStore_Verify_Order_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AppStore_Verify_Order_Return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void GM_AppStore_Verify_Order_Return::Swap(GM_AppStore_Verify_Order_Return* other) {
  if (other != this) {
    std::swap(transaction_id_, other->transaction_id_);
    std::swap(m_result_, other->m_result_);
    std::swap(roleid_, other->roleid_);
    std::swap(quantity_, other->quantity_);
    std::swap(gold_, other->gold_);
    std::swap(productid_, other->productid_);
    std::swap(purchase_date_, other->purchase_date_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AppStore_Verify_Order_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AppStore_Verify_Order_Return_descriptor_;
  metadata.reflection = GM_AppStore_Verify_Order_Return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Product::kProductidFieldNumber;
const int GM_Product::kIconFieldNumber;
const int GM_Product::kNameFieldNumber;
const int GM_Product::kMoneystrFieldNumber;
const int GM_Product::kDescFieldNumber;
const int GM_Product::kCanclickFieldNumber;
const int GM_Product::kMoneyFieldNumber;
#endif  // !_MSC_VER

GM_Product::GM_Product()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Product::InitAsDefaultInstance() {
}

GM_Product::GM_Product(const GM_Product& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Product::SharedCtor() {
  _cached_size_ = 0;
  productid_ = 0;
  icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  moneystr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  canclick_ = false;
  money_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Product::~GM_Product() {
  SharedDtor();
}

void GM_Product::SharedDtor() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    delete icon_;
  }
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (moneystr_ != &::google::protobuf::internal::kEmptyString) {
    delete moneystr_;
  }
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (this != default_instance_) {
  }
}

void GM_Product::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Product::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Product_descriptor_;
}

const GM_Product& GM_Product::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_payment_2etxt();
  return *default_instance_;
}

GM_Product* GM_Product::default_instance_ = NULL;

GM_Product* GM_Product::New() const {
  return new GM_Product;
}

void GM_Product::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    productid_ = 0;
    if (has_icon()) {
      if (icon_ != &::google::protobuf::internal::kEmptyString) {
        icon_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_moneystr()) {
      if (moneystr_ != &::google::protobuf::internal::kEmptyString) {
        moneystr_->clear();
      }
    }
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::kEmptyString) {
        desc_->clear();
      }
    }
    canclick_ = false;
    money_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Product::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 productid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &productid_)));
          set_has_productid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_icon;
        break;
      }

      // required string icon = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->icon().data(), this->icon().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // required string name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_moneystr;
        break;
      }

      // required string moneystr = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_moneystr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_moneystr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->moneystr().data(), this->moneystr().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_desc;
        break;
      }

      // required string desc = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_canclick;
        break;
      }

      // required bool canclick = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_canclick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &canclick_)));
          set_has_canclick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_money;
        break;
      }

      // required int32 money = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Product::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 productid = 1;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->productid(), output);
  }

  // required string icon = 2;
  if (has_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->icon().data(), this->icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->icon(), output);
  }

  // required string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->name(), output);
  }

  // required string moneystr = 4;
  if (has_moneystr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->moneystr().data(), this->moneystr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->moneystr(), output);
  }

  // required string desc = 5;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->desc(), output);
  }

  // required bool canclick = 6;
  if (has_canclick()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->canclick(), output);
  }

  // required int32 money = 7;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->money(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Product::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 productid = 1;
  if (has_productid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->productid(), target);
  }

  // required string icon = 2;
  if (has_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->icon().data(), this->icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->icon(), target);
  }

  // required string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // required string moneystr = 4;
  if (has_moneystr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->moneystr().data(), this->moneystr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->moneystr(), target);
  }

  // required string desc = 5;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->desc(), target);
  }

  // required bool canclick = 6;
  if (has_canclick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->canclick(), target);
  }

  // required int32 money = 7;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->money(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Product::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 productid = 1;
    if (has_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->productid());
    }

    // required string icon = 2;
    if (has_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->icon());
    }

    // required string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string moneystr = 4;
    if (has_moneystr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->moneystr());
    }

    // required string desc = 5;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

    // required bool canclick = 6;
    if (has_canclick()) {
      total_size += 1 + 1;
    }

    // required int32 money = 7;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Product::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Product* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Product*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Product::MergeFrom(const GM_Product& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_productid()) {
      set_productid(from.productid());
    }
    if (from.has_icon()) {
      set_icon(from.icon());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_moneystr()) {
      set_moneystr(from.moneystr());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
    if (from.has_canclick()) {
      set_canclick(from.canclick());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Product::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Product::CopyFrom(const GM_Product& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Product::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void GM_Product::Swap(GM_Product* other) {
  if (other != this) {
    std::swap(productid_, other->productid_);
    std::swap(icon_, other->icon_);
    std::swap(name_, other->name_);
    std::swap(moneystr_, other->moneystr_);
    std::swap(desc_, other->desc_);
    std::swap(canclick_, other->canclick_);
    std::swap(money_, other->money_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Product::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Product_descriptor_;
  metadata.reflection = GM_Product_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_ProductList_Request::kChannelFieldNumber;
#endif  // !_MSC_VER

GM_ProductList_Request::GM_ProductList_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_ProductList_Request::InitAsDefaultInstance() {
}

GM_ProductList_Request::GM_ProductList_Request(const GM_ProductList_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_ProductList_Request::SharedCtor() {
  _cached_size_ = 0;
  channel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_ProductList_Request::~GM_ProductList_Request() {
  SharedDtor();
}

void GM_ProductList_Request::SharedDtor() {
  if (channel_ != &::google::protobuf::internal::kEmptyString) {
    delete channel_;
  }
  if (this != default_instance_) {
  }
}

void GM_ProductList_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_ProductList_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_ProductList_Request_descriptor_;
}

const GM_ProductList_Request& GM_ProductList_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_payment_2etxt();
  return *default_instance_;
}

GM_ProductList_Request* GM_ProductList_Request::default_instance_ = NULL;

GM_ProductList_Request* GM_ProductList_Request::New() const {
  return new GM_ProductList_Request;
}

void GM_ProductList_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_channel()) {
      if (channel_ != &::google::protobuf::internal::kEmptyString) {
        channel_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_ProductList_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string channel = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->channel().data(), this->channel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_ProductList_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string channel = 1;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->channel(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_ProductList_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string channel = 1;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->channel(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_ProductList_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string channel = 1;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_ProductList_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_ProductList_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_ProductList_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_ProductList_Request::MergeFrom(const GM_ProductList_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_channel()) {
      set_channel(from.channel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_ProductList_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_ProductList_Request::CopyFrom(const GM_ProductList_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_ProductList_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_ProductList_Request::Swap(GM_ProductList_Request* other) {
  if (other != this) {
    std::swap(channel_, other->channel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_ProductList_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_ProductList_Request_descriptor_;
  metadata.reflection = GM_ProductList_Request_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_ProductList::kCountFieldNumber;
const int GM_ProductList::kListFieldNumber;
#endif  // !_MSC_VER

GM_ProductList::GM_ProductList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_ProductList::InitAsDefaultInstance() {
}

GM_ProductList::GM_ProductList(const GM_ProductList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_ProductList::SharedCtor() {
  _cached_size_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_ProductList::~GM_ProductList() {
  SharedDtor();
}

void GM_ProductList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_ProductList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_ProductList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_ProductList_descriptor_;
}

const GM_ProductList& GM_ProductList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_payment_2etxt();
  return *default_instance_;
}

GM_ProductList* GM_ProductList::default_instance_ = NULL;

GM_ProductList* GM_ProductList::New() const {
  return new GM_ProductList;
}

void GM_ProductList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    count_ = 0;
  }
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_ProductList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 count = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_list;
        break;
      }

      // repeated .GM_Product list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_ProductList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 count = 1;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // repeated .GM_Product list = 2;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_ProductList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 count = 1;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // repeated .GM_Product list = 2;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_ProductList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 count = 1;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  // repeated .GM_Product list = 2;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_ProductList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_ProductList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_ProductList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_ProductList::MergeFrom(const GM_ProductList& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_ProductList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_ProductList::CopyFrom(const GM_ProductList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_ProductList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < list_size(); i++) {
    if (!this->list(i).IsInitialized()) return false;
  }
  return true;
}

void GM_ProductList::Swap(GM_ProductList* other) {
  if (other != this) {
    std::swap(count_, other->count_);
    list_.Swap(&other->list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_ProductList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_ProductList_descriptor_;
  metadata.reflection = GM_ProductList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_GooglePlay_Verify_Order::kGoogleorderidFieldNumber;
const int GM_GooglePlay_Verify_Order::kPlatformFieldNumber;
const int GM_GooglePlay_Verify_Order::kChannelFieldNumber;
const int GM_GooglePlay_Verify_Order::kAppidFieldNumber;
const int GM_GooglePlay_Verify_Order::kRandstrFieldNumber;
const int GM_GooglePlay_Verify_Order::kRoleidFieldNumber;
const int GM_GooglePlay_Verify_Order::kServeridFieldNumber;
const int GM_GooglePlay_Verify_Order::kAccountidFieldNumber;
const int GM_GooglePlay_Verify_Order::kOrderidFieldNumber;
const int GM_GooglePlay_Verify_Order::kItemidFieldNumber;
const int GM_GooglePlay_Verify_Order::kTokenFieldNumber;
#endif  // !_MSC_VER

GM_GooglePlay_Verify_Order::GM_GooglePlay_Verify_Order()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_GooglePlay_Verify_Order::InitAsDefaultInstance() {
}

GM_GooglePlay_Verify_Order::GM_GooglePlay_Verify_Order(const GM_GooglePlay_Verify_Order& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_GooglePlay_Verify_Order::SharedCtor() {
  _cached_size_ = 0;
  googleorderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  platform_ = 0;
  channel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  appid_ = 0;
  randstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  roleid_ = 0;
  serverid_ = 0;
  accountid_ = 0;
  orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  itemid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_GooglePlay_Verify_Order::~GM_GooglePlay_Verify_Order() {
  SharedDtor();
}

void GM_GooglePlay_Verify_Order::SharedDtor() {
  if (googleorderid_ != &::google::protobuf::internal::kEmptyString) {
    delete googleorderid_;
  }
  if (channel_ != &::google::protobuf::internal::kEmptyString) {
    delete channel_;
  }
  if (randstr_ != &::google::protobuf::internal::kEmptyString) {
    delete randstr_;
  }
  if (orderid_ != &::google::protobuf::internal::kEmptyString) {
    delete orderid_;
  }
  if (itemid_ != &::google::protobuf::internal::kEmptyString) {
    delete itemid_;
  }
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (this != default_instance_) {
  }
}

void GM_GooglePlay_Verify_Order::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_GooglePlay_Verify_Order::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_GooglePlay_Verify_Order_descriptor_;
}

const GM_GooglePlay_Verify_Order& GM_GooglePlay_Verify_Order::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_payment_2etxt();
  return *default_instance_;
}

GM_GooglePlay_Verify_Order* GM_GooglePlay_Verify_Order::default_instance_ = NULL;

GM_GooglePlay_Verify_Order* GM_GooglePlay_Verify_Order::New() const {
  return new GM_GooglePlay_Verify_Order;
}

void GM_GooglePlay_Verify_Order::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_googleorderid()) {
      if (googleorderid_ != &::google::protobuf::internal::kEmptyString) {
        googleorderid_->clear();
      }
    }
    platform_ = 0;
    if (has_channel()) {
      if (channel_ != &::google::protobuf::internal::kEmptyString) {
        channel_->clear();
      }
    }
    appid_ = 0;
    if (has_randstr()) {
      if (randstr_ != &::google::protobuf::internal::kEmptyString) {
        randstr_->clear();
      }
    }
    roleid_ = 0;
    serverid_ = 0;
    accountid_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_orderid()) {
      if (orderid_ != &::google::protobuf::internal::kEmptyString) {
        orderid_->clear();
      }
    }
    if (has_itemid()) {
      if (itemid_ != &::google::protobuf::internal::kEmptyString) {
        itemid_->clear();
      }
    }
    if (has_token()) {
      if (token_ != &::google::protobuf::internal::kEmptyString) {
        token_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_GooglePlay_Verify_Order::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string googleorderid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_googleorderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->googleorderid().data(), this->googleorderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_platform;
        break;
      }

      // required int32 platform = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_platform:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &platform_)));
          set_has_platform();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_channel;
        break;
      }

      // required string channel = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_channel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->channel().data(), this->channel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_appid;
        break;
      }

      // required int32 appid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_appid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &appid_)));
          set_has_appid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_randstr;
        break;
      }

      // required string randstr = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_randstr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_randstr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->randstr().data(), this->randstr().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_roleid;
        break;
      }

      // optional int32 roleid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_serverid;
        break;
      }

      // optional int32 serverid = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_serverid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
          set_has_serverid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_accountid;
        break;
      }

      // optional int32 accountid = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_accountid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accountid_)));
          set_has_accountid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_orderid;
        break;
      }

      // optional string orderid = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_orderid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->orderid().data(), this->orderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_itemid;
        break;
      }

      // required string itemid = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_itemid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->itemid().data(), this->itemid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_token;
        break;
      }

      // required string token = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_GooglePlay_Verify_Order::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string googleorderid = 1;
  if (has_googleorderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->googleorderid().data(), this->googleorderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->googleorderid(), output);
  }

  // required int32 platform = 2;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->platform(), output);
  }

  // required string channel = 3;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->channel(), output);
  }

  // required int32 appid = 4;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->appid(), output);
  }

  // required string randstr = 5;
  if (has_randstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->randstr().data(), this->randstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->randstr(), output);
  }

  // optional int32 roleid = 6;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->roleid(), output);
  }

  // optional int32 serverid = 7;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->serverid(), output);
  }

  // optional int32 accountid = 8;
  if (has_accountid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->accountid(), output);
  }

  // optional string orderid = 9;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->orderid(), output);
  }

  // required string itemid = 10;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->itemid().data(), this->itemid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->itemid(), output);
  }

  // required string token = 11;
  if (has_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->token(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_GooglePlay_Verify_Order::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string googleorderid = 1;
  if (has_googleorderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->googleorderid().data(), this->googleorderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->googleorderid(), target);
  }

  // required int32 platform = 2;
  if (has_platform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->platform(), target);
  }

  // required string channel = 3;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->channel(), target);
  }

  // required int32 appid = 4;
  if (has_appid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->appid(), target);
  }

  // required string randstr = 5;
  if (has_randstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->randstr().data(), this->randstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->randstr(), target);
  }

  // optional int32 roleid = 6;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->roleid(), target);
  }

  // optional int32 serverid = 7;
  if (has_serverid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->serverid(), target);
  }

  // optional int32 accountid = 8;
  if (has_accountid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->accountid(), target);
  }

  // optional string orderid = 9;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->orderid(), target);
  }

  // required string itemid = 10;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->itemid().data(), this->itemid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->itemid(), target);
  }

  // required string token = 11;
  if (has_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->token(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_GooglePlay_Verify_Order::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string googleorderid = 1;
    if (has_googleorderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->googleorderid());
    }

    // required int32 platform = 2;
    if (has_platform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->platform());
    }

    // required string channel = 3;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel());
    }

    // required int32 appid = 4;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->appid());
    }

    // required string randstr = 5;
    if (has_randstr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->randstr());
    }

    // optional int32 roleid = 6;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleid());
    }

    // optional int32 serverid = 7;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serverid());
    }

    // optional int32 accountid = 8;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->accountid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string orderid = 9;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orderid());
    }

    // required string itemid = 10;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->itemid());
    }

    // required string token = 11;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->token());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_GooglePlay_Verify_Order::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_GooglePlay_Verify_Order* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_GooglePlay_Verify_Order*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_GooglePlay_Verify_Order::MergeFrom(const GM_GooglePlay_Verify_Order& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_googleorderid()) {
      set_googleorderid(from.googleorderid());
    }
    if (from.has_platform()) {
      set_platform(from.platform());
    }
    if (from.has_channel()) {
      set_channel(from.channel());
    }
    if (from.has_appid()) {
      set_appid(from.appid());
    }
    if (from.has_randstr()) {
      set_randstr(from.randstr());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_serverid()) {
      set_serverid(from.serverid());
    }
    if (from.has_accountid()) {
      set_accountid(from.accountid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_token()) {
      set_token(from.token());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_GooglePlay_Verify_Order::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_GooglePlay_Verify_Order::CopyFrom(const GM_GooglePlay_Verify_Order& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_GooglePlay_Verify_Order::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000061f) != 0x0000061f) return false;

  return true;
}

void GM_GooglePlay_Verify_Order::Swap(GM_GooglePlay_Verify_Order* other) {
  if (other != this) {
    std::swap(googleorderid_, other->googleorderid_);
    std::swap(platform_, other->platform_);
    std::swap(channel_, other->channel_);
    std::swap(appid_, other->appid_);
    std::swap(randstr_, other->randstr_);
    std::swap(roleid_, other->roleid_);
    std::swap(serverid_, other->serverid_);
    std::swap(accountid_, other->accountid_);
    std::swap(orderid_, other->orderid_);
    std::swap(itemid_, other->itemid_);
    std::swap(token_, other->token_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_GooglePlay_Verify_Order::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_GooglePlay_Verify_Order_descriptor_;
  metadata.reflection = GM_GooglePlay_Verify_Order_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_GooglePlay_Verify_Order_Return::kGoogleorderidFieldNumber;
const int GM_GooglePlay_Verify_Order_Return::kMResultFieldNumber;
const int GM_GooglePlay_Verify_Order_Return::kRoleidFieldNumber;
const int GM_GooglePlay_Verify_Order_Return::kQuantityFieldNumber;
const int GM_GooglePlay_Verify_Order_Return::kGoldFieldNumber;
const int GM_GooglePlay_Verify_Order_Return::kProductidFieldNumber;
const int GM_GooglePlay_Verify_Order_Return::kPurchaseDateFieldNumber;
#endif  // !_MSC_VER

GM_GooglePlay_Verify_Order_Return::GM_GooglePlay_Verify_Order_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_GooglePlay_Verify_Order_Return::InitAsDefaultInstance() {
}

GM_GooglePlay_Verify_Order_Return::GM_GooglePlay_Verify_Order_Return(const GM_GooglePlay_Verify_Order_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_GooglePlay_Verify_Order_Return::SharedCtor() {
  _cached_size_ = 0;
  googleorderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_result_ = 0;
  roleid_ = 0;
  quantity_ = 0u;
  gold_ = 0u;
  productid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  purchase_date_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_GooglePlay_Verify_Order_Return::~GM_GooglePlay_Verify_Order_Return() {
  SharedDtor();
}

void GM_GooglePlay_Verify_Order_Return::SharedDtor() {
  if (googleorderid_ != &::google::protobuf::internal::kEmptyString) {
    delete googleorderid_;
  }
  if (productid_ != &::google::protobuf::internal::kEmptyString) {
    delete productid_;
  }
  if (purchase_date_ != &::google::protobuf::internal::kEmptyString) {
    delete purchase_date_;
  }
  if (this != default_instance_) {
  }
}

void GM_GooglePlay_Verify_Order_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_GooglePlay_Verify_Order_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_GooglePlay_Verify_Order_Return_descriptor_;
}

const GM_GooglePlay_Verify_Order_Return& GM_GooglePlay_Verify_Order_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_payment_2etxt();
  return *default_instance_;
}

GM_GooglePlay_Verify_Order_Return* GM_GooglePlay_Verify_Order_Return::default_instance_ = NULL;

GM_GooglePlay_Verify_Order_Return* GM_GooglePlay_Verify_Order_Return::New() const {
  return new GM_GooglePlay_Verify_Order_Return;
}

void GM_GooglePlay_Verify_Order_Return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_googleorderid()) {
      if (googleorderid_ != &::google::protobuf::internal::kEmptyString) {
        googleorderid_->clear();
      }
    }
    m_result_ = 0;
    roleid_ = 0;
    quantity_ = 0u;
    gold_ = 0u;
    if (has_productid()) {
      if (productid_ != &::google::protobuf::internal::kEmptyString) {
        productid_->clear();
      }
    }
    if (has_purchase_date()) {
      if (purchase_date_ != &::google::protobuf::internal::kEmptyString) {
        purchase_date_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_GooglePlay_Verify_Order_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string googleorderid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_googleorderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->googleorderid().data(), this->googleorderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_result;
        break;
      }

      // required int32 m_result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_result_)));
          set_has_m_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_roleid;
        break;
      }

      // optional int32 roleid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_quantity;
        break;
      }

      // optional uint32 quantity = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quantity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_)));
          set_has_quantity();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_gold;
        break;
      }

      // optional uint32 gold = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_productid;
        break;
      }

      // optional string productid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_productid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->productid().data(), this->productid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_purchase_date;
        break;
      }

      // optional string purchase_date = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_purchase_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_purchase_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->purchase_date().data(), this->purchase_date().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_GooglePlay_Verify_Order_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string googleorderid = 1;
  if (has_googleorderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->googleorderid().data(), this->googleorderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->googleorderid(), output);
  }

  // required int32 m_result = 2;
  if (has_m_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_result(), output);
  }

  // optional int32 roleid = 3;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->roleid(), output);
  }

  // optional uint32 quantity = 4;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->quantity(), output);
  }

  // optional uint32 gold = 5;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gold(), output);
  }

  // optional string productid = 6;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->productid().data(), this->productid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->productid(), output);
  }

  // optional string purchase_date = 7;
  if (has_purchase_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->purchase_date().data(), this->purchase_date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->purchase_date(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_GooglePlay_Verify_Order_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string googleorderid = 1;
  if (has_googleorderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->googleorderid().data(), this->googleorderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->googleorderid(), target);
  }

  // required int32 m_result = 2;
  if (has_m_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_result(), target);
  }

  // optional int32 roleid = 3;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->roleid(), target);
  }

  // optional uint32 quantity = 4;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->quantity(), target);
  }

  // optional uint32 gold = 5;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gold(), target);
  }

  // optional string productid = 6;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->productid().data(), this->productid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->productid(), target);
  }

  // optional string purchase_date = 7;
  if (has_purchase_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->purchase_date().data(), this->purchase_date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->purchase_date(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_GooglePlay_Verify_Order_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string googleorderid = 1;
    if (has_googleorderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->googleorderid());
    }

    // required int32 m_result = 2;
    if (has_m_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_result());
    }

    // optional int32 roleid = 3;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleid());
    }

    // optional uint32 quantity = 4;
    if (has_quantity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quantity());
    }

    // optional uint32 gold = 5;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gold());
    }

    // optional string productid = 6;
    if (has_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productid());
    }

    // optional string purchase_date = 7;
    if (has_purchase_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->purchase_date());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_GooglePlay_Verify_Order_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_GooglePlay_Verify_Order_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_GooglePlay_Verify_Order_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_GooglePlay_Verify_Order_Return::MergeFrom(const GM_GooglePlay_Verify_Order_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_googleorderid()) {
      set_googleorderid(from.googleorderid());
    }
    if (from.has_m_result()) {
      set_m_result(from.m_result());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_quantity()) {
      set_quantity(from.quantity());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_productid()) {
      set_productid(from.productid());
    }
    if (from.has_purchase_date()) {
      set_purchase_date(from.purchase_date());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_GooglePlay_Verify_Order_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_GooglePlay_Verify_Order_Return::CopyFrom(const GM_GooglePlay_Verify_Order_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_GooglePlay_Verify_Order_Return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void GM_GooglePlay_Verify_Order_Return::Swap(GM_GooglePlay_Verify_Order_Return* other) {
  if (other != this) {
    std::swap(googleorderid_, other->googleorderid_);
    std::swap(m_result_, other->m_result_);
    std::swap(roleid_, other->roleid_);
    std::swap(quantity_, other->quantity_);
    std::swap(gold_, other->gold_);
    std::swap(productid_, other->productid_);
    std::swap(purchase_date_, other->purchase_date_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_GooglePlay_Verify_Order_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_GooglePlay_Verify_Order_Return_descriptor_;
  metadata.reflection = GM_GooglePlay_Verify_Order_Return_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
