// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: playerinfo.txt

#ifndef PROTOBUF_playerinfo_2etxt__INCLUDED
#define PROTOBUF_playerinfo_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_playerinfo_2etxt();
void protobuf_AssignDesc_playerinfo_2etxt();
void protobuf_ShutdownFile_playerinfo_2etxt();

class GM_EquipData;
class GM_EquipAwakens;
class GM_RuneData;
class GM_RuneOfEquip;
class GM_PetData;
class GM_PetSkillLevelType;
class GM_PetSkillRealize;
class GM_Player_Data_Return;
class GM_Player_Data_Request;
class GM_Player_Equip_Request;

// ===================================================================

class GM_EquipData : public ::google::protobuf::Message {
 public:
  GM_EquipData();
  virtual ~GM_EquipData();

  GM_EquipData(const GM_EquipData& from);

  inline GM_EquipData& operator=(const GM_EquipData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipData& default_instance();

  void Swap(GM_EquipData* other);

  // implements Message ----------------------------------------------

  GM_EquipData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipData& from);
  void MergeFrom(const GM_EquipData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 m_Gmid = 1;
  inline bool has_m_gmid() const;
  inline void clear_m_gmid();
  static const int kMGmidFieldNumber = 1;
  inline ::google::protobuf::int64 m_gmid() const;
  inline void set_m_gmid(::google::protobuf::int64 value);

  // optional int32 m_typeid = 2;
  inline bool has_m_typeid() const;
  inline void clear_m_typeid();
  static const int kMTypeidFieldNumber = 2;
  inline ::google::protobuf::int32 m_typeid() const;
  inline void set_m_typeid(::google::protobuf::int32 value);

  // optional int32 m_forginglevel = 4;
  inline bool has_m_forginglevel() const;
  inline void clear_m_forginglevel();
  static const int kMForginglevelFieldNumber = 4;
  inline ::google::protobuf::int32 m_forginglevel() const;
  inline void set_m_forginglevel(::google::protobuf::int32 value);

  // optional int32 m_breaklevel = 5;
  inline bool has_m_breaklevel() const;
  inline void clear_m_breaklevel();
  static const int kMBreaklevelFieldNumber = 5;
  inline ::google::protobuf::int32 m_breaklevel() const;
  inline void set_m_breaklevel(::google::protobuf::int32 value);

  // optional int32 m_refinelevel = 6;
  inline bool has_m_refinelevel() const;
  inline void clear_m_refinelevel();
  static const int kMRefinelevelFieldNumber = 6;
  inline ::google::protobuf::int32 m_refinelevel() const;
  inline void set_m_refinelevel(::google::protobuf::int32 value);

  // optional int32 m_winglevel = 7;
  inline bool has_m_winglevel() const;
  inline void clear_m_winglevel();
  static const int kMWinglevelFieldNumber = 7;
  inline ::google::protobuf::int32 m_winglevel() const;
  inline void set_m_winglevel(::google::protobuf::int32 value);

  // repeated int32 m_linkid = 10;
  inline int m_linkid_size() const;
  inline void clear_m_linkid();
  static const int kMLinkidFieldNumber = 10;
  inline ::google::protobuf::int32 m_linkid(int index) const;
  inline void set_m_linkid(int index, ::google::protobuf::int32 value);
  inline void add_m_linkid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_linkid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_linkid();

  // repeated .GM_EquipAwakens m_allawake = 11;
  inline int m_allawake_size() const;
  inline void clear_m_allawake();
  static const int kMAllawakeFieldNumber = 11;
  inline const ::GM_EquipAwakens& m_allawake(int index) const;
  inline ::GM_EquipAwakens* mutable_m_allawake(int index);
  inline ::GM_EquipAwakens* add_m_allawake();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipAwakens >&
      m_allawake() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_EquipAwakens >*
      mutable_m_allawake();

  // optional int32 m_playerprofession = 12;
  inline bool has_m_playerprofession() const;
  inline void clear_m_playerprofession();
  static const int kMPlayerprofessionFieldNumber = 12;
  inline ::google::protobuf::int32 m_playerprofession() const;
  inline void set_m_playerprofession(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_EquipData)
 private:
  inline void set_has_m_gmid();
  inline void clear_has_m_gmid();
  inline void set_has_m_typeid();
  inline void clear_has_m_typeid();
  inline void set_has_m_forginglevel();
  inline void clear_has_m_forginglevel();
  inline void set_has_m_breaklevel();
  inline void clear_has_m_breaklevel();
  inline void set_has_m_refinelevel();
  inline void clear_has_m_refinelevel();
  inline void set_has_m_winglevel();
  inline void clear_has_m_winglevel();
  inline void set_has_m_playerprofession();
  inline void clear_has_m_playerprofession();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_gmid_;
  ::google::protobuf::int32 m_typeid_;
  ::google::protobuf::int32 m_forginglevel_;
  ::google::protobuf::int32 m_breaklevel_;
  ::google::protobuf::int32 m_refinelevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_linkid_;
  ::google::protobuf::int32 m_winglevel_;
  ::google::protobuf::int32 m_playerprofession_;
  ::google::protobuf::RepeatedPtrField< ::GM_EquipAwakens > m_allawake_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_playerinfo_2etxt();
  friend void protobuf_AssignDesc_playerinfo_2etxt();
  friend void protobuf_ShutdownFile_playerinfo_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipData* default_instance_;
};
// -------------------------------------------------------------------

class GM_EquipAwakens : public ::google::protobuf::Message {
 public:
  GM_EquipAwakens();
  virtual ~GM_EquipAwakens();

  GM_EquipAwakens(const GM_EquipAwakens& from);

  inline GM_EquipAwakens& operator=(const GM_EquipAwakens& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EquipAwakens& default_instance();

  void Swap(GM_EquipAwakens* other);

  // implements Message ----------------------------------------------

  GM_EquipAwakens* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EquipAwakens& from);
  void MergeFrom(const GM_EquipAwakens& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_propertyid = 1;
  inline bool has_m_propertyid() const;
  inline void clear_m_propertyid();
  static const int kMPropertyidFieldNumber = 1;
  inline ::google::protobuf::int32 m_propertyid() const;
  inline void set_m_propertyid(::google::protobuf::int32 value);

  // optional int32 m_propertyLv = 2;
  inline bool has_m_propertylv() const;
  inline void clear_m_propertylv();
  static const int kMPropertyLvFieldNumber = 2;
  inline ::google::protobuf::int32 m_propertylv() const;
  inline void set_m_propertylv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_EquipAwakens)
 private:
  inline void set_has_m_propertyid();
  inline void clear_has_m_propertyid();
  inline void set_has_m_propertylv();
  inline void clear_has_m_propertylv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_propertyid_;
  ::google::protobuf::int32 m_propertylv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_playerinfo_2etxt();
  friend void protobuf_AssignDesc_playerinfo_2etxt();
  friend void protobuf_ShutdownFile_playerinfo_2etxt();

  void InitAsDefaultInstance();
  static GM_EquipAwakens* default_instance_;
};
// -------------------------------------------------------------------

class GM_RuneData : public ::google::protobuf::Message {
 public:
  GM_RuneData();
  virtual ~GM_RuneData();

  GM_RuneData(const GM_RuneData& from);

  inline GM_RuneData& operator=(const GM_RuneData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RuneData& default_instance();

  void Swap(GM_RuneData* other);

  // implements Message ----------------------------------------------

  GM_RuneData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RuneData& from);
  void MergeFrom(const GM_RuneData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 m_Gmid = 1;
  inline bool has_m_gmid() const;
  inline void clear_m_gmid();
  static const int kMGmidFieldNumber = 1;
  inline ::google::protobuf::int64 m_gmid() const;
  inline void set_m_gmid(::google::protobuf::int64 value);

  // optional int32 m_grid = 4;
  inline bool has_m_grid() const;
  inline void clear_m_grid();
  static const int kMGridFieldNumber = 4;
  inline ::google::protobuf::int32 m_grid() const;
  inline void set_m_grid(::google::protobuf::int32 value);

  // repeated .GM_RuneOfEquip m_allruneofequip = 3;
  inline int m_allruneofequip_size() const;
  inline void clear_m_allruneofequip();
  static const int kMAllruneofequipFieldNumber = 3;
  inline const ::GM_RuneOfEquip& m_allruneofequip(int index) const;
  inline ::GM_RuneOfEquip* mutable_m_allruneofequip(int index);
  inline ::GM_RuneOfEquip* add_m_allruneofequip();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_RuneOfEquip >&
      m_allruneofequip() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_RuneOfEquip >*
      mutable_m_allruneofequip();

  // @@protoc_insertion_point(class_scope:GM_RuneData)
 private:
  inline void set_has_m_gmid();
  inline void clear_has_m_gmid();
  inline void set_has_m_grid();
  inline void clear_has_m_grid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_gmid_;
  ::google::protobuf::RepeatedPtrField< ::GM_RuneOfEquip > m_allruneofequip_;
  ::google::protobuf::int32 m_grid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_playerinfo_2etxt();
  friend void protobuf_AssignDesc_playerinfo_2etxt();
  friend void protobuf_ShutdownFile_playerinfo_2etxt();

  void InitAsDefaultInstance();
  static GM_RuneData* default_instance_;
};
// -------------------------------------------------------------------

class GM_RuneOfEquip : public ::google::protobuf::Message {
 public:
  GM_RuneOfEquip();
  virtual ~GM_RuneOfEquip();

  GM_RuneOfEquip(const GM_RuneOfEquip& from);

  inline GM_RuneOfEquip& operator=(const GM_RuneOfEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RuneOfEquip& default_instance();

  void Swap(GM_RuneOfEquip* other);

  // implements Message ----------------------------------------------

  GM_RuneOfEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RuneOfEquip& from);
  void MergeFrom(const GM_RuneOfEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 m_Gmid = 1;
  inline bool has_m_gmid() const;
  inline void clear_m_gmid();
  static const int kMGmidFieldNumber = 1;
  inline ::google::protobuf::int64 m_gmid() const;
  inline void set_m_gmid(::google::protobuf::int64 value);

  // optional int32 m_typeid = 2;
  inline bool has_m_typeid() const;
  inline void clear_m_typeid();
  static const int kMTypeidFieldNumber = 2;
  inline ::google::protobuf::int32 m_typeid() const;
  inline void set_m_typeid(::google::protobuf::int32 value);

  // optional int32 m_level = 3;
  inline bool has_m_level() const;
  inline void clear_m_level();
  static const int kMLevelFieldNumber = 3;
  inline ::google::protobuf::int32 m_level() const;
  inline void set_m_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_RuneOfEquip)
 private:
  inline void set_has_m_gmid();
  inline void clear_has_m_gmid();
  inline void set_has_m_typeid();
  inline void clear_has_m_typeid();
  inline void set_has_m_level();
  inline void clear_has_m_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_gmid_;
  ::google::protobuf::int32 m_typeid_;
  ::google::protobuf::int32 m_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_playerinfo_2etxt();
  friend void protobuf_AssignDesc_playerinfo_2etxt();
  friend void protobuf_ShutdownFile_playerinfo_2etxt();

  void InitAsDefaultInstance();
  static GM_RuneOfEquip* default_instance_;
};
// -------------------------------------------------------------------

class GM_PetData : public ::google::protobuf::Message {
 public:
  GM_PetData();
  virtual ~GM_PetData();

  GM_PetData(const GM_PetData& from);

  inline GM_PetData& operator=(const GM_PetData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_PetData& default_instance();

  void Swap(GM_PetData* other);

  // implements Message ----------------------------------------------

  GM_PetData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_PetData& from);
  void MergeFrom(const GM_PetData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 m_GMid = 1;
  inline bool has_m_gmid() const;
  inline void clear_m_gmid();
  static const int kMGMidFieldNumber = 1;
  inline ::google::protobuf::int64 m_gmid() const;
  inline void set_m_gmid(::google::protobuf::int64 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_level = 3;
  inline bool has_m_level() const;
  inline void clear_m_level();
  static const int kMLevelFieldNumber = 3;
  inline ::google::protobuf::int32 m_level() const;
  inline void set_m_level(::google::protobuf::int32 value);

  // optional int32 m_riselevel = 4;
  inline bool has_m_riselevel() const;
  inline void clear_m_riselevel();
  static const int kMRiselevelFieldNumber = 4;
  inline ::google::protobuf::int32 m_riselevel() const;
  inline void set_m_riselevel(::google::protobuf::int32 value);

  // optional int32 m_grade = 5;
  inline bool has_m_grade() const;
  inline void clear_m_grade();
  static const int kMGradeFieldNumber = 5;
  inline ::google::protobuf::int32 m_grade() const;
  inline void set_m_grade(::google::protobuf::int32 value);

  // optional int32 m_hp = 6;
  inline bool has_m_hp() const;
  inline void clear_m_hp();
  static const int kMHpFieldNumber = 6;
  inline ::google::protobuf::int32 m_hp() const;
  inline void set_m_hp(::google::protobuf::int32 value);

  // optional int32 m_attack = 7;
  inline bool has_m_attack() const;
  inline void clear_m_attack();
  static const int kMAttackFieldNumber = 7;
  inline ::google::protobuf::int32 m_attack() const;
  inline void set_m_attack(::google::protobuf::int32 value);

  // optional int32 m_fight = 8;
  inline bool has_m_fight() const;
  inline void clear_m_fight();
  static const int kMFightFieldNumber = 8;
  inline ::google::protobuf::int32 m_fight() const;
  inline void set_m_fight(::google::protobuf::int32 value);

  // repeated .GM_PetSkillLevelType m_allpetskill = 9;
  inline int m_allpetskill_size() const;
  inline void clear_m_allpetskill();
  static const int kMAllpetskillFieldNumber = 9;
  inline const ::GM_PetSkillLevelType& m_allpetskill(int index) const;
  inline ::GM_PetSkillLevelType* mutable_m_allpetskill(int index);
  inline ::GM_PetSkillLevelType* add_m_allpetskill();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_PetSkillLevelType >&
      m_allpetskill() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_PetSkillLevelType >*
      mutable_m_allpetskill();

  // repeated .GM_PetSkillRealize m_allpetskillrealize = 10;
  inline int m_allpetskillrealize_size() const;
  inline void clear_m_allpetskillrealize();
  static const int kMAllpetskillrealizeFieldNumber = 10;
  inline const ::GM_PetSkillRealize& m_allpetskillrealize(int index) const;
  inline ::GM_PetSkillRealize* mutable_m_allpetskillrealize(int index);
  inline ::GM_PetSkillRealize* add_m_allpetskillrealize();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_PetSkillRealize >&
      m_allpetskillrealize() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_PetSkillRealize >*
      mutable_m_allpetskillrealize();

  // optional int32 m_onbattle = 11;
  inline bool has_m_onbattle() const;
  inline void clear_m_onbattle();
  static const int kMOnbattleFieldNumber = 11;
  inline ::google::protobuf::int32 m_onbattle() const;
  inline void set_m_onbattle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_PetData)
 private:
  inline void set_has_m_gmid();
  inline void clear_has_m_gmid();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_level();
  inline void clear_has_m_level();
  inline void set_has_m_riselevel();
  inline void clear_has_m_riselevel();
  inline void set_has_m_grade();
  inline void clear_has_m_grade();
  inline void set_has_m_hp();
  inline void clear_has_m_hp();
  inline void set_has_m_attack();
  inline void clear_has_m_attack();
  inline void set_has_m_fight();
  inline void clear_has_m_fight();
  inline void set_has_m_onbattle();
  inline void clear_has_m_onbattle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_gmid_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_level_;
  ::google::protobuf::int32 m_riselevel_;
  ::google::protobuf::int32 m_grade_;
  ::google::protobuf::int32 m_hp_;
  ::google::protobuf::int32 m_attack_;
  ::google::protobuf::RepeatedPtrField< ::GM_PetSkillLevelType > m_allpetskill_;
  ::google::protobuf::int32 m_fight_;
  ::google::protobuf::int32 m_onbattle_;
  ::google::protobuf::RepeatedPtrField< ::GM_PetSkillRealize > m_allpetskillrealize_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_playerinfo_2etxt();
  friend void protobuf_AssignDesc_playerinfo_2etxt();
  friend void protobuf_ShutdownFile_playerinfo_2etxt();

  void InitAsDefaultInstance();
  static GM_PetData* default_instance_;
};
// -------------------------------------------------------------------

class GM_PetSkillLevelType : public ::google::protobuf::Message {
 public:
  GM_PetSkillLevelType();
  virtual ~GM_PetSkillLevelType();

  GM_PetSkillLevelType(const GM_PetSkillLevelType& from);

  inline GM_PetSkillLevelType& operator=(const GM_PetSkillLevelType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_PetSkillLevelType& default_instance();

  void Swap(GM_PetSkillLevelType* other);

  // implements Message ----------------------------------------------

  GM_PetSkillLevelType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_PetSkillLevelType& from);
  void MergeFrom(const GM_PetSkillLevelType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_skillid = 1;
  inline bool has_m_skillid() const;
  inline void clear_m_skillid();
  static const int kMSkillidFieldNumber = 1;
  inline ::google::protobuf::int32 m_skillid() const;
  inline void set_m_skillid(::google::protobuf::int32 value);

  // optional int32 m_skill_level = 2;
  inline bool has_m_skill_level() const;
  inline void clear_m_skill_level();
  static const int kMSkillLevelFieldNumber = 2;
  inline ::google::protobuf::int32 m_skill_level() const;
  inline void set_m_skill_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_PetSkillLevelType)
 private:
  inline void set_has_m_skillid();
  inline void clear_has_m_skillid();
  inline void set_has_m_skill_level();
  inline void clear_has_m_skill_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_skillid_;
  ::google::protobuf::int32 m_skill_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_playerinfo_2etxt();
  friend void protobuf_AssignDesc_playerinfo_2etxt();
  friend void protobuf_ShutdownFile_playerinfo_2etxt();

  void InitAsDefaultInstance();
  static GM_PetSkillLevelType* default_instance_;
};
// -------------------------------------------------------------------

class GM_PetSkillRealize : public ::google::protobuf::Message {
 public:
  GM_PetSkillRealize();
  virtual ~GM_PetSkillRealize();

  GM_PetSkillRealize(const GM_PetSkillRealize& from);

  inline GM_PetSkillRealize& operator=(const GM_PetSkillRealize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_PetSkillRealize& default_instance();

  void Swap(GM_PetSkillRealize* other);

  // implements Message ----------------------------------------------

  GM_PetSkillRealize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_PetSkillRealize& from);
  void MergeFrom(const GM_PetSkillRealize& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_propertyid = 1;
  inline bool has_m_propertyid() const;
  inline void clear_m_propertyid();
  static const int kMPropertyidFieldNumber = 1;
  inline ::google::protobuf::int32 m_propertyid() const;
  inline void set_m_propertyid(::google::protobuf::int32 value);

  // optional int32 m_propertylvl = 2;
  inline bool has_m_propertylvl() const;
  inline void clear_m_propertylvl();
  static const int kMPropertylvlFieldNumber = 2;
  inline ::google::protobuf::int32 m_propertylvl() const;
  inline void set_m_propertylvl(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_PetSkillRealize)
 private:
  inline void set_has_m_propertyid();
  inline void clear_has_m_propertyid();
  inline void set_has_m_propertylvl();
  inline void clear_has_m_propertylvl();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_propertyid_;
  ::google::protobuf::int32 m_propertylvl_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_playerinfo_2etxt();
  friend void protobuf_AssignDesc_playerinfo_2etxt();
  friend void protobuf_ShutdownFile_playerinfo_2etxt();

  void InitAsDefaultInstance();
  static GM_PetSkillRealize* default_instance_;
};
// -------------------------------------------------------------------

class GM_Player_Data_Return : public ::google::protobuf::Message {
 public:
  GM_Player_Data_Return();
  virtual ~GM_Player_Data_Return();

  GM_Player_Data_Return(const GM_Player_Data_Return& from);

  inline GM_Player_Data_Return& operator=(const GM_Player_Data_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Player_Data_Return& default_instance();

  void Swap(GM_Player_Data_Return* other);

  // implements Message ----------------------------------------------

  GM_Player_Data_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Player_Data_Return& from);
  void MergeFrom(const GM_Player_Data_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_state = 1;
  inline bool has_m_state() const;
  inline void clear_m_state();
  static const int kMStateFieldNumber = 1;
  inline ::google::protobuf::int32 m_state() const;
  inline void set_m_state(::google::protobuf::int32 value);

  // optional int32 m_playerid = 2;
  inline bool has_m_playerid() const;
  inline void clear_m_playerid();
  static const int kMPlayeridFieldNumber = 2;
  inline ::google::protobuf::int32 m_playerid() const;
  inline void set_m_playerid(::google::protobuf::int32 value);

  // optional string m_playername = 3;
  inline bool has_m_playername() const;
  inline void clear_m_playername();
  static const int kMPlayernameFieldNumber = 3;
  inline const ::std::string& m_playername() const;
  inline void set_m_playername(const ::std::string& value);
  inline void set_m_playername(const char* value);
  inline void set_m_playername(const char* value, size_t size);
  inline ::std::string* mutable_m_playername();
  inline ::std::string* release_m_playername();
  inline void set_allocated_m_playername(::std::string* m_playername);

  // optional int32 m_level = 4;
  inline bool has_m_level() const;
  inline void clear_m_level();
  static const int kMLevelFieldNumber = 4;
  inline ::google::protobuf::int32 m_level() const;
  inline void set_m_level(::google::protobuf::int32 value);

  // optional int32 m_power = 5;
  inline bool has_m_power() const;
  inline void clear_m_power();
  static const int kMPowerFieldNumber = 5;
  inline ::google::protobuf::int32 m_power() const;
  inline void set_m_power(::google::protobuf::int32 value);

  // optional string m_gangname = 6;
  inline bool has_m_gangname() const;
  inline void clear_m_gangname();
  static const int kMGangnameFieldNumber = 6;
  inline const ::std::string& m_gangname() const;
  inline void set_m_gangname(const ::std::string& value);
  inline void set_m_gangname(const char* value);
  inline void set_m_gangname(const char* value, size_t size);
  inline ::std::string* mutable_m_gangname();
  inline ::std::string* release_m_gangname();
  inline void set_allocated_m_gangname(::std::string* m_gangname);

  // optional int32 m_gangprofession = 7;
  inline bool has_m_gangprofession() const;
  inline void clear_m_gangprofession();
  static const int kMGangprofessionFieldNumber = 7;
  inline ::google::protobuf::int32 m_gangprofession() const;
  inline void set_m_gangprofession(::google::protobuf::int32 value);

  // optional int32 m_profession = 8;
  inline bool has_m_profession() const;
  inline void clear_m_profession();
  static const int kMProfessionFieldNumber = 8;
  inline ::google::protobuf::int32 m_profession() const;
  inline void set_m_profession(::google::protobuf::int32 value);

  // optional int32 m_equipCount = 9;
  inline bool has_m_equipcount() const;
  inline void clear_m_equipcount();
  static const int kMEquipCountFieldNumber = 9;
  inline ::google::protobuf::int32 m_equipcount() const;
  inline void set_m_equipcount(::google::protobuf::int32 value);

  // optional int32 m_runecount = 10;
  inline bool has_m_runecount() const;
  inline void clear_m_runecount();
  static const int kMRunecountFieldNumber = 10;
  inline ::google::protobuf::int32 m_runecount() const;
  inline void set_m_runecount(::google::protobuf::int32 value);

  // optional int32 m_petcount = 11;
  inline bool has_m_petcount() const;
  inline void clear_m_petcount();
  static const int kMPetcountFieldNumber = 11;
  inline ::google::protobuf::int32 m_petcount() const;
  inline void set_m_petcount(::google::protobuf::int32 value);

  // optional int32 m_addcount = 12;
  inline bool has_m_addcount() const;
  inline void clear_m_addcount();
  static const int kMAddcountFieldNumber = 12;
  inline ::google::protobuf::int32 m_addcount() const;
  inline void set_m_addcount(::google::protobuf::int32 value);

  // repeated .GM_EquipData m_allequip = 13;
  inline int m_allequip_size() const;
  inline void clear_m_allequip();
  static const int kMAllequipFieldNumber = 13;
  inline const ::GM_EquipData& m_allequip(int index) const;
  inline ::GM_EquipData* mutable_m_allequip(int index);
  inline ::GM_EquipData* add_m_allequip();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipData >&
      m_allequip() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_EquipData >*
      mutable_m_allequip();

  // repeated .GM_PetData m_allpet = 14;
  inline int m_allpet_size() const;
  inline void clear_m_allpet();
  static const int kMAllpetFieldNumber = 14;
  inline const ::GM_PetData& m_allpet(int index) const;
  inline ::GM_PetData* mutable_m_allpet(int index);
  inline ::GM_PetData* add_m_allpet();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_PetData >&
      m_allpet() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_PetData >*
      mutable_m_allpet();

  // repeated .GM_RuneData m_allrune = 15;
  inline int m_allrune_size() const;
  inline void clear_m_allrune();
  static const int kMAllruneFieldNumber = 15;
  inline const ::GM_RuneData& m_allrune(int index) const;
  inline ::GM_RuneData* mutable_m_allrune(int index);
  inline ::GM_RuneData* add_m_allrune();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_RuneData >&
      m_allrune() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_RuneData >*
      mutable_m_allrune();

  // repeated .GM_EquipData m_alladdequip = 16;
  inline int m_alladdequip_size() const;
  inline void clear_m_alladdequip();
  static const int kMAlladdequipFieldNumber = 16;
  inline const ::GM_EquipData& m_alladdequip(int index) const;
  inline ::GM_EquipData* mutable_m_alladdequip(int index);
  inline ::GM_EquipData* add_m_alladdequip();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipData >&
      m_alladdequip() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_EquipData >*
      mutable_m_alladdequip();

  // optional int32 isfriend = 17;
  inline bool has_isfriend() const;
  inline void clear_isfriend();
  static const int kIsfriendFieldNumber = 17;
  inline ::google::protobuf::int32 isfriend() const;
  inline void set_isfriend(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Player_Data_Return)
 private:
  inline void set_has_m_state();
  inline void clear_has_m_state();
  inline void set_has_m_playerid();
  inline void clear_has_m_playerid();
  inline void set_has_m_playername();
  inline void clear_has_m_playername();
  inline void set_has_m_level();
  inline void clear_has_m_level();
  inline void set_has_m_power();
  inline void clear_has_m_power();
  inline void set_has_m_gangname();
  inline void clear_has_m_gangname();
  inline void set_has_m_gangprofession();
  inline void clear_has_m_gangprofession();
  inline void set_has_m_profession();
  inline void clear_has_m_profession();
  inline void set_has_m_equipcount();
  inline void clear_has_m_equipcount();
  inline void set_has_m_runecount();
  inline void clear_has_m_runecount();
  inline void set_has_m_petcount();
  inline void clear_has_m_petcount();
  inline void set_has_m_addcount();
  inline void clear_has_m_addcount();
  inline void set_has_isfriend();
  inline void clear_has_isfriend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_state_;
  ::google::protobuf::int32 m_playerid_;
  ::std::string* m_playername_;
  ::google::protobuf::int32 m_level_;
  ::google::protobuf::int32 m_power_;
  ::std::string* m_gangname_;
  ::google::protobuf::int32 m_gangprofession_;
  ::google::protobuf::int32 m_profession_;
  ::google::protobuf::int32 m_equipcount_;
  ::google::protobuf::int32 m_runecount_;
  ::google::protobuf::int32 m_petcount_;
  ::google::protobuf::int32 m_addcount_;
  ::google::protobuf::RepeatedPtrField< ::GM_EquipData > m_allequip_;
  ::google::protobuf::RepeatedPtrField< ::GM_PetData > m_allpet_;
  ::google::protobuf::RepeatedPtrField< ::GM_RuneData > m_allrune_;
  ::google::protobuf::RepeatedPtrField< ::GM_EquipData > m_alladdequip_;
  ::google::protobuf::int32 isfriend_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_playerinfo_2etxt();
  friend void protobuf_AssignDesc_playerinfo_2etxt();
  friend void protobuf_ShutdownFile_playerinfo_2etxt();

  void InitAsDefaultInstance();
  static GM_Player_Data_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Player_Data_Request : public ::google::protobuf::Message {
 public:
  GM_Player_Data_Request();
  virtual ~GM_Player_Data_Request();

  GM_Player_Data_Request(const GM_Player_Data_Request& from);

  inline GM_Player_Data_Request& operator=(const GM_Player_Data_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Player_Data_Request& default_instance();

  void Swap(GM_Player_Data_Request* other);

  // implements Message ----------------------------------------------

  GM_Player_Data_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Player_Data_Request& from);
  void MergeFrom(const GM_Player_Data_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_playerid = 1;
  inline bool has_m_playerid() const;
  inline void clear_m_playerid();
  static const int kMPlayeridFieldNumber = 1;
  inline ::google::protobuf::int32 m_playerid() const;
  inline void set_m_playerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Player_Data_Request)
 private:
  inline void set_has_m_playerid();
  inline void clear_has_m_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_playerinfo_2etxt();
  friend void protobuf_AssignDesc_playerinfo_2etxt();
  friend void protobuf_ShutdownFile_playerinfo_2etxt();

  void InitAsDefaultInstance();
  static GM_Player_Data_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Player_Equip_Request : public ::google::protobuf::Message {
 public:
  GM_Player_Equip_Request();
  virtual ~GM_Player_Equip_Request();

  GM_Player_Equip_Request(const GM_Player_Equip_Request& from);

  inline GM_Player_Equip_Request& operator=(const GM_Player_Equip_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Player_Equip_Request& default_instance();

  void Swap(GM_Player_Equip_Request* other);

  // implements Message ----------------------------------------------

  GM_Player_Equip_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Player_Equip_Request& from);
  void MergeFrom(const GM_Player_Equip_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_playerid = 1;
  inline bool has_m_playerid() const;
  inline void clear_m_playerid();
  static const int kMPlayeridFieldNumber = 1;
  inline ::google::protobuf::int32 m_playerid() const;
  inline void set_m_playerid(::google::protobuf::int32 value);

  // optional int64 m_gmid = 2;
  inline bool has_m_gmid() const;
  inline void clear_m_gmid();
  static const int kMGmidFieldNumber = 2;
  inline ::google::protobuf::int64 m_gmid() const;
  inline void set_m_gmid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_Player_Equip_Request)
 private:
  inline void set_has_m_playerid();
  inline void clear_has_m_playerid();
  inline void set_has_m_gmid();
  inline void clear_has_m_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_gmid_;
  ::google::protobuf::int32 m_playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_playerinfo_2etxt();
  friend void protobuf_AssignDesc_playerinfo_2etxt();
  friend void protobuf_ShutdownFile_playerinfo_2etxt();

  void InitAsDefaultInstance();
  static GM_Player_Equip_Request* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_EquipData

// required int64 m_Gmid = 1;
inline bool GM_EquipData::has_m_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipData::set_has_m_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipData::clear_has_m_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipData::clear_m_gmid() {
  m_gmid_ = GOOGLE_LONGLONG(0);
  clear_has_m_gmid();
}
inline ::google::protobuf::int64 GM_EquipData::m_gmid() const {
  return m_gmid_;
}
inline void GM_EquipData::set_m_gmid(::google::protobuf::int64 value) {
  set_has_m_gmid();
  m_gmid_ = value;
}

// optional int32 m_typeid = 2;
inline bool GM_EquipData::has_m_typeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipData::set_has_m_typeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipData::clear_has_m_typeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipData::clear_m_typeid() {
  m_typeid_ = 0;
  clear_has_m_typeid();
}
inline ::google::protobuf::int32 GM_EquipData::m_typeid() const {
  return m_typeid_;
}
inline void GM_EquipData::set_m_typeid(::google::protobuf::int32 value) {
  set_has_m_typeid();
  m_typeid_ = value;
}

// optional int32 m_forginglevel = 4;
inline bool GM_EquipData::has_m_forginglevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_EquipData::set_has_m_forginglevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_EquipData::clear_has_m_forginglevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_EquipData::clear_m_forginglevel() {
  m_forginglevel_ = 0;
  clear_has_m_forginglevel();
}
inline ::google::protobuf::int32 GM_EquipData::m_forginglevel() const {
  return m_forginglevel_;
}
inline void GM_EquipData::set_m_forginglevel(::google::protobuf::int32 value) {
  set_has_m_forginglevel();
  m_forginglevel_ = value;
}

// optional int32 m_breaklevel = 5;
inline bool GM_EquipData::has_m_breaklevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_EquipData::set_has_m_breaklevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_EquipData::clear_has_m_breaklevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_EquipData::clear_m_breaklevel() {
  m_breaklevel_ = 0;
  clear_has_m_breaklevel();
}
inline ::google::protobuf::int32 GM_EquipData::m_breaklevel() const {
  return m_breaklevel_;
}
inline void GM_EquipData::set_m_breaklevel(::google::protobuf::int32 value) {
  set_has_m_breaklevel();
  m_breaklevel_ = value;
}

// optional int32 m_refinelevel = 6;
inline bool GM_EquipData::has_m_refinelevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_EquipData::set_has_m_refinelevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_EquipData::clear_has_m_refinelevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_EquipData::clear_m_refinelevel() {
  m_refinelevel_ = 0;
  clear_has_m_refinelevel();
}
inline ::google::protobuf::int32 GM_EquipData::m_refinelevel() const {
  return m_refinelevel_;
}
inline void GM_EquipData::set_m_refinelevel(::google::protobuf::int32 value) {
  set_has_m_refinelevel();
  m_refinelevel_ = value;
}

// optional int32 m_winglevel = 7;
inline bool GM_EquipData::has_m_winglevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_EquipData::set_has_m_winglevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_EquipData::clear_has_m_winglevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_EquipData::clear_m_winglevel() {
  m_winglevel_ = 0;
  clear_has_m_winglevel();
}
inline ::google::protobuf::int32 GM_EquipData::m_winglevel() const {
  return m_winglevel_;
}
inline void GM_EquipData::set_m_winglevel(::google::protobuf::int32 value) {
  set_has_m_winglevel();
  m_winglevel_ = value;
}

// repeated int32 m_linkid = 10;
inline int GM_EquipData::m_linkid_size() const {
  return m_linkid_.size();
}
inline void GM_EquipData::clear_m_linkid() {
  m_linkid_.Clear();
}
inline ::google::protobuf::int32 GM_EquipData::m_linkid(int index) const {
  return m_linkid_.Get(index);
}
inline void GM_EquipData::set_m_linkid(int index, ::google::protobuf::int32 value) {
  m_linkid_.Set(index, value);
}
inline void GM_EquipData::add_m_linkid(::google::protobuf::int32 value) {
  m_linkid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GM_EquipData::m_linkid() const {
  return m_linkid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GM_EquipData::mutable_m_linkid() {
  return &m_linkid_;
}

// repeated .GM_EquipAwakens m_allawake = 11;
inline int GM_EquipData::m_allawake_size() const {
  return m_allawake_.size();
}
inline void GM_EquipData::clear_m_allawake() {
  m_allawake_.Clear();
}
inline const ::GM_EquipAwakens& GM_EquipData::m_allawake(int index) const {
  return m_allawake_.Get(index);
}
inline ::GM_EquipAwakens* GM_EquipData::mutable_m_allawake(int index) {
  return m_allawake_.Mutable(index);
}
inline ::GM_EquipAwakens* GM_EquipData::add_m_allawake() {
  return m_allawake_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipAwakens >&
GM_EquipData::m_allawake() const {
  return m_allawake_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_EquipAwakens >*
GM_EquipData::mutable_m_allawake() {
  return &m_allawake_;
}

// optional int32 m_playerprofession = 12;
inline bool GM_EquipData::has_m_playerprofession() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_EquipData::set_has_m_playerprofession() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_EquipData::clear_has_m_playerprofession() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_EquipData::clear_m_playerprofession() {
  m_playerprofession_ = 0;
  clear_has_m_playerprofession();
}
inline ::google::protobuf::int32 GM_EquipData::m_playerprofession() const {
  return m_playerprofession_;
}
inline void GM_EquipData::set_m_playerprofession(::google::protobuf::int32 value) {
  set_has_m_playerprofession();
  m_playerprofession_ = value;
}

// -------------------------------------------------------------------

// GM_EquipAwakens

// required int32 m_propertyid = 1;
inline bool GM_EquipAwakens::has_m_propertyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EquipAwakens::set_has_m_propertyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EquipAwakens::clear_has_m_propertyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EquipAwakens::clear_m_propertyid() {
  m_propertyid_ = 0;
  clear_has_m_propertyid();
}
inline ::google::protobuf::int32 GM_EquipAwakens::m_propertyid() const {
  return m_propertyid_;
}
inline void GM_EquipAwakens::set_m_propertyid(::google::protobuf::int32 value) {
  set_has_m_propertyid();
  m_propertyid_ = value;
}

// optional int32 m_propertyLv = 2;
inline bool GM_EquipAwakens::has_m_propertylv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EquipAwakens::set_has_m_propertylv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EquipAwakens::clear_has_m_propertylv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EquipAwakens::clear_m_propertylv() {
  m_propertylv_ = 0;
  clear_has_m_propertylv();
}
inline ::google::protobuf::int32 GM_EquipAwakens::m_propertylv() const {
  return m_propertylv_;
}
inline void GM_EquipAwakens::set_m_propertylv(::google::protobuf::int32 value) {
  set_has_m_propertylv();
  m_propertylv_ = value;
}

// -------------------------------------------------------------------

// GM_RuneData

// required int64 m_Gmid = 1;
inline bool GM_RuneData::has_m_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RuneData::set_has_m_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RuneData::clear_has_m_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RuneData::clear_m_gmid() {
  m_gmid_ = GOOGLE_LONGLONG(0);
  clear_has_m_gmid();
}
inline ::google::protobuf::int64 GM_RuneData::m_gmid() const {
  return m_gmid_;
}
inline void GM_RuneData::set_m_gmid(::google::protobuf::int64 value) {
  set_has_m_gmid();
  m_gmid_ = value;
}

// optional int32 m_grid = 4;
inline bool GM_RuneData::has_m_grid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RuneData::set_has_m_grid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RuneData::clear_has_m_grid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RuneData::clear_m_grid() {
  m_grid_ = 0;
  clear_has_m_grid();
}
inline ::google::protobuf::int32 GM_RuneData::m_grid() const {
  return m_grid_;
}
inline void GM_RuneData::set_m_grid(::google::protobuf::int32 value) {
  set_has_m_grid();
  m_grid_ = value;
}

// repeated .GM_RuneOfEquip m_allruneofequip = 3;
inline int GM_RuneData::m_allruneofequip_size() const {
  return m_allruneofequip_.size();
}
inline void GM_RuneData::clear_m_allruneofequip() {
  m_allruneofequip_.Clear();
}
inline const ::GM_RuneOfEquip& GM_RuneData::m_allruneofequip(int index) const {
  return m_allruneofequip_.Get(index);
}
inline ::GM_RuneOfEquip* GM_RuneData::mutable_m_allruneofequip(int index) {
  return m_allruneofequip_.Mutable(index);
}
inline ::GM_RuneOfEquip* GM_RuneData::add_m_allruneofequip() {
  return m_allruneofequip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_RuneOfEquip >&
GM_RuneData::m_allruneofequip() const {
  return m_allruneofequip_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_RuneOfEquip >*
GM_RuneData::mutable_m_allruneofequip() {
  return &m_allruneofequip_;
}

// -------------------------------------------------------------------

// GM_RuneOfEquip

// required int64 m_Gmid = 1;
inline bool GM_RuneOfEquip::has_m_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RuneOfEquip::set_has_m_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RuneOfEquip::clear_has_m_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RuneOfEquip::clear_m_gmid() {
  m_gmid_ = GOOGLE_LONGLONG(0);
  clear_has_m_gmid();
}
inline ::google::protobuf::int64 GM_RuneOfEquip::m_gmid() const {
  return m_gmid_;
}
inline void GM_RuneOfEquip::set_m_gmid(::google::protobuf::int64 value) {
  set_has_m_gmid();
  m_gmid_ = value;
}

// optional int32 m_typeid = 2;
inline bool GM_RuneOfEquip::has_m_typeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RuneOfEquip::set_has_m_typeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RuneOfEquip::clear_has_m_typeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RuneOfEquip::clear_m_typeid() {
  m_typeid_ = 0;
  clear_has_m_typeid();
}
inline ::google::protobuf::int32 GM_RuneOfEquip::m_typeid() const {
  return m_typeid_;
}
inline void GM_RuneOfEquip::set_m_typeid(::google::protobuf::int32 value) {
  set_has_m_typeid();
  m_typeid_ = value;
}

// optional int32 m_level = 3;
inline bool GM_RuneOfEquip::has_m_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_RuneOfEquip::set_has_m_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_RuneOfEquip::clear_has_m_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_RuneOfEquip::clear_m_level() {
  m_level_ = 0;
  clear_has_m_level();
}
inline ::google::protobuf::int32 GM_RuneOfEquip::m_level() const {
  return m_level_;
}
inline void GM_RuneOfEquip::set_m_level(::google::protobuf::int32 value) {
  set_has_m_level();
  m_level_ = value;
}

// -------------------------------------------------------------------

// GM_PetData

// required int64 m_GMid = 1;
inline bool GM_PetData::has_m_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_PetData::set_has_m_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_PetData::clear_has_m_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_PetData::clear_m_gmid() {
  m_gmid_ = GOOGLE_LONGLONG(0);
  clear_has_m_gmid();
}
inline ::google::protobuf::int64 GM_PetData::m_gmid() const {
  return m_gmid_;
}
inline void GM_PetData::set_m_gmid(::google::protobuf::int64 value) {
  set_has_m_gmid();
  m_gmid_ = value;
}

// optional int32 m_type = 2;
inline bool GM_PetData::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_PetData::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_PetData::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_PetData::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 GM_PetData::m_type() const {
  return m_type_;
}
inline void GM_PetData::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_level = 3;
inline bool GM_PetData::has_m_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_PetData::set_has_m_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_PetData::clear_has_m_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_PetData::clear_m_level() {
  m_level_ = 0;
  clear_has_m_level();
}
inline ::google::protobuf::int32 GM_PetData::m_level() const {
  return m_level_;
}
inline void GM_PetData::set_m_level(::google::protobuf::int32 value) {
  set_has_m_level();
  m_level_ = value;
}

// optional int32 m_riselevel = 4;
inline bool GM_PetData::has_m_riselevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_PetData::set_has_m_riselevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_PetData::clear_has_m_riselevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_PetData::clear_m_riselevel() {
  m_riselevel_ = 0;
  clear_has_m_riselevel();
}
inline ::google::protobuf::int32 GM_PetData::m_riselevel() const {
  return m_riselevel_;
}
inline void GM_PetData::set_m_riselevel(::google::protobuf::int32 value) {
  set_has_m_riselevel();
  m_riselevel_ = value;
}

// optional int32 m_grade = 5;
inline bool GM_PetData::has_m_grade() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_PetData::set_has_m_grade() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_PetData::clear_has_m_grade() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_PetData::clear_m_grade() {
  m_grade_ = 0;
  clear_has_m_grade();
}
inline ::google::protobuf::int32 GM_PetData::m_grade() const {
  return m_grade_;
}
inline void GM_PetData::set_m_grade(::google::protobuf::int32 value) {
  set_has_m_grade();
  m_grade_ = value;
}

// optional int32 m_hp = 6;
inline bool GM_PetData::has_m_hp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_PetData::set_has_m_hp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_PetData::clear_has_m_hp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_PetData::clear_m_hp() {
  m_hp_ = 0;
  clear_has_m_hp();
}
inline ::google::protobuf::int32 GM_PetData::m_hp() const {
  return m_hp_;
}
inline void GM_PetData::set_m_hp(::google::protobuf::int32 value) {
  set_has_m_hp();
  m_hp_ = value;
}

// optional int32 m_attack = 7;
inline bool GM_PetData::has_m_attack() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_PetData::set_has_m_attack() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_PetData::clear_has_m_attack() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_PetData::clear_m_attack() {
  m_attack_ = 0;
  clear_has_m_attack();
}
inline ::google::protobuf::int32 GM_PetData::m_attack() const {
  return m_attack_;
}
inline void GM_PetData::set_m_attack(::google::protobuf::int32 value) {
  set_has_m_attack();
  m_attack_ = value;
}

// optional int32 m_fight = 8;
inline bool GM_PetData::has_m_fight() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_PetData::set_has_m_fight() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_PetData::clear_has_m_fight() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_PetData::clear_m_fight() {
  m_fight_ = 0;
  clear_has_m_fight();
}
inline ::google::protobuf::int32 GM_PetData::m_fight() const {
  return m_fight_;
}
inline void GM_PetData::set_m_fight(::google::protobuf::int32 value) {
  set_has_m_fight();
  m_fight_ = value;
}

// repeated .GM_PetSkillLevelType m_allpetskill = 9;
inline int GM_PetData::m_allpetskill_size() const {
  return m_allpetskill_.size();
}
inline void GM_PetData::clear_m_allpetskill() {
  m_allpetskill_.Clear();
}
inline const ::GM_PetSkillLevelType& GM_PetData::m_allpetskill(int index) const {
  return m_allpetskill_.Get(index);
}
inline ::GM_PetSkillLevelType* GM_PetData::mutable_m_allpetskill(int index) {
  return m_allpetskill_.Mutable(index);
}
inline ::GM_PetSkillLevelType* GM_PetData::add_m_allpetskill() {
  return m_allpetskill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_PetSkillLevelType >&
GM_PetData::m_allpetskill() const {
  return m_allpetskill_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_PetSkillLevelType >*
GM_PetData::mutable_m_allpetskill() {
  return &m_allpetskill_;
}

// repeated .GM_PetSkillRealize m_allpetskillrealize = 10;
inline int GM_PetData::m_allpetskillrealize_size() const {
  return m_allpetskillrealize_.size();
}
inline void GM_PetData::clear_m_allpetskillrealize() {
  m_allpetskillrealize_.Clear();
}
inline const ::GM_PetSkillRealize& GM_PetData::m_allpetskillrealize(int index) const {
  return m_allpetskillrealize_.Get(index);
}
inline ::GM_PetSkillRealize* GM_PetData::mutable_m_allpetskillrealize(int index) {
  return m_allpetskillrealize_.Mutable(index);
}
inline ::GM_PetSkillRealize* GM_PetData::add_m_allpetskillrealize() {
  return m_allpetskillrealize_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_PetSkillRealize >&
GM_PetData::m_allpetskillrealize() const {
  return m_allpetskillrealize_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_PetSkillRealize >*
GM_PetData::mutable_m_allpetskillrealize() {
  return &m_allpetskillrealize_;
}

// optional int32 m_onbattle = 11;
inline bool GM_PetData::has_m_onbattle() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GM_PetData::set_has_m_onbattle() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GM_PetData::clear_has_m_onbattle() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GM_PetData::clear_m_onbattle() {
  m_onbattle_ = 0;
  clear_has_m_onbattle();
}
inline ::google::protobuf::int32 GM_PetData::m_onbattle() const {
  return m_onbattle_;
}
inline void GM_PetData::set_m_onbattle(::google::protobuf::int32 value) {
  set_has_m_onbattle();
  m_onbattle_ = value;
}

// -------------------------------------------------------------------

// GM_PetSkillLevelType

// required int32 m_skillid = 1;
inline bool GM_PetSkillLevelType::has_m_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_PetSkillLevelType::set_has_m_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_PetSkillLevelType::clear_has_m_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_PetSkillLevelType::clear_m_skillid() {
  m_skillid_ = 0;
  clear_has_m_skillid();
}
inline ::google::protobuf::int32 GM_PetSkillLevelType::m_skillid() const {
  return m_skillid_;
}
inline void GM_PetSkillLevelType::set_m_skillid(::google::protobuf::int32 value) {
  set_has_m_skillid();
  m_skillid_ = value;
}

// optional int32 m_skill_level = 2;
inline bool GM_PetSkillLevelType::has_m_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_PetSkillLevelType::set_has_m_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_PetSkillLevelType::clear_has_m_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_PetSkillLevelType::clear_m_skill_level() {
  m_skill_level_ = 0;
  clear_has_m_skill_level();
}
inline ::google::protobuf::int32 GM_PetSkillLevelType::m_skill_level() const {
  return m_skill_level_;
}
inline void GM_PetSkillLevelType::set_m_skill_level(::google::protobuf::int32 value) {
  set_has_m_skill_level();
  m_skill_level_ = value;
}

// -------------------------------------------------------------------

// GM_PetSkillRealize

// required int32 m_propertyid = 1;
inline bool GM_PetSkillRealize::has_m_propertyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_PetSkillRealize::set_has_m_propertyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_PetSkillRealize::clear_has_m_propertyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_PetSkillRealize::clear_m_propertyid() {
  m_propertyid_ = 0;
  clear_has_m_propertyid();
}
inline ::google::protobuf::int32 GM_PetSkillRealize::m_propertyid() const {
  return m_propertyid_;
}
inline void GM_PetSkillRealize::set_m_propertyid(::google::protobuf::int32 value) {
  set_has_m_propertyid();
  m_propertyid_ = value;
}

// optional int32 m_propertylvl = 2;
inline bool GM_PetSkillRealize::has_m_propertylvl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_PetSkillRealize::set_has_m_propertylvl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_PetSkillRealize::clear_has_m_propertylvl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_PetSkillRealize::clear_m_propertylvl() {
  m_propertylvl_ = 0;
  clear_has_m_propertylvl();
}
inline ::google::protobuf::int32 GM_PetSkillRealize::m_propertylvl() const {
  return m_propertylvl_;
}
inline void GM_PetSkillRealize::set_m_propertylvl(::google::protobuf::int32 value) {
  set_has_m_propertylvl();
  m_propertylvl_ = value;
}

// -------------------------------------------------------------------

// GM_Player_Data_Return

// required int32 m_state = 1;
inline bool GM_Player_Data_Return::has_m_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Player_Data_Return::set_has_m_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Player_Data_Return::clear_has_m_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Player_Data_Return::clear_m_state() {
  m_state_ = 0;
  clear_has_m_state();
}
inline ::google::protobuf::int32 GM_Player_Data_Return::m_state() const {
  return m_state_;
}
inline void GM_Player_Data_Return::set_m_state(::google::protobuf::int32 value) {
  set_has_m_state();
  m_state_ = value;
}

// optional int32 m_playerid = 2;
inline bool GM_Player_Data_Return::has_m_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Player_Data_Return::set_has_m_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Player_Data_Return::clear_has_m_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Player_Data_Return::clear_m_playerid() {
  m_playerid_ = 0;
  clear_has_m_playerid();
}
inline ::google::protobuf::int32 GM_Player_Data_Return::m_playerid() const {
  return m_playerid_;
}
inline void GM_Player_Data_Return::set_m_playerid(::google::protobuf::int32 value) {
  set_has_m_playerid();
  m_playerid_ = value;
}

// optional string m_playername = 3;
inline bool GM_Player_Data_Return::has_m_playername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Player_Data_Return::set_has_m_playername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Player_Data_Return::clear_has_m_playername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Player_Data_Return::clear_m_playername() {
  if (m_playername_ != &::google::protobuf::internal::kEmptyString) {
    m_playername_->clear();
  }
  clear_has_m_playername();
}
inline const ::std::string& GM_Player_Data_Return::m_playername() const {
  return *m_playername_;
}
inline void GM_Player_Data_Return::set_m_playername(const ::std::string& value) {
  set_has_m_playername();
  if (m_playername_ == &::google::protobuf::internal::kEmptyString) {
    m_playername_ = new ::std::string;
  }
  m_playername_->assign(value);
}
inline void GM_Player_Data_Return::set_m_playername(const char* value) {
  set_has_m_playername();
  if (m_playername_ == &::google::protobuf::internal::kEmptyString) {
    m_playername_ = new ::std::string;
  }
  m_playername_->assign(value);
}
inline void GM_Player_Data_Return::set_m_playername(const char* value, size_t size) {
  set_has_m_playername();
  if (m_playername_ == &::google::protobuf::internal::kEmptyString) {
    m_playername_ = new ::std::string;
  }
  m_playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Player_Data_Return::mutable_m_playername() {
  set_has_m_playername();
  if (m_playername_ == &::google::protobuf::internal::kEmptyString) {
    m_playername_ = new ::std::string;
  }
  return m_playername_;
}
inline ::std::string* GM_Player_Data_Return::release_m_playername() {
  clear_has_m_playername();
  if (m_playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_playername_;
    m_playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Player_Data_Return::set_allocated_m_playername(::std::string* m_playername) {
  if (m_playername_ != &::google::protobuf::internal::kEmptyString) {
    delete m_playername_;
  }
  if (m_playername) {
    set_has_m_playername();
    m_playername_ = m_playername;
  } else {
    clear_has_m_playername();
    m_playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_level = 4;
inline bool GM_Player_Data_Return::has_m_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Player_Data_Return::set_has_m_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Player_Data_Return::clear_has_m_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Player_Data_Return::clear_m_level() {
  m_level_ = 0;
  clear_has_m_level();
}
inline ::google::protobuf::int32 GM_Player_Data_Return::m_level() const {
  return m_level_;
}
inline void GM_Player_Data_Return::set_m_level(::google::protobuf::int32 value) {
  set_has_m_level();
  m_level_ = value;
}

// optional int32 m_power = 5;
inline bool GM_Player_Data_Return::has_m_power() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Player_Data_Return::set_has_m_power() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Player_Data_Return::clear_has_m_power() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Player_Data_Return::clear_m_power() {
  m_power_ = 0;
  clear_has_m_power();
}
inline ::google::protobuf::int32 GM_Player_Data_Return::m_power() const {
  return m_power_;
}
inline void GM_Player_Data_Return::set_m_power(::google::protobuf::int32 value) {
  set_has_m_power();
  m_power_ = value;
}

// optional string m_gangname = 6;
inline bool GM_Player_Data_Return::has_m_gangname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_Player_Data_Return::set_has_m_gangname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_Player_Data_Return::clear_has_m_gangname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_Player_Data_Return::clear_m_gangname() {
  if (m_gangname_ != &::google::protobuf::internal::kEmptyString) {
    m_gangname_->clear();
  }
  clear_has_m_gangname();
}
inline const ::std::string& GM_Player_Data_Return::m_gangname() const {
  return *m_gangname_;
}
inline void GM_Player_Data_Return::set_m_gangname(const ::std::string& value) {
  set_has_m_gangname();
  if (m_gangname_ == &::google::protobuf::internal::kEmptyString) {
    m_gangname_ = new ::std::string;
  }
  m_gangname_->assign(value);
}
inline void GM_Player_Data_Return::set_m_gangname(const char* value) {
  set_has_m_gangname();
  if (m_gangname_ == &::google::protobuf::internal::kEmptyString) {
    m_gangname_ = new ::std::string;
  }
  m_gangname_->assign(value);
}
inline void GM_Player_Data_Return::set_m_gangname(const char* value, size_t size) {
  set_has_m_gangname();
  if (m_gangname_ == &::google::protobuf::internal::kEmptyString) {
    m_gangname_ = new ::std::string;
  }
  m_gangname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Player_Data_Return::mutable_m_gangname() {
  set_has_m_gangname();
  if (m_gangname_ == &::google::protobuf::internal::kEmptyString) {
    m_gangname_ = new ::std::string;
  }
  return m_gangname_;
}
inline ::std::string* GM_Player_Data_Return::release_m_gangname() {
  clear_has_m_gangname();
  if (m_gangname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_gangname_;
    m_gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Player_Data_Return::set_allocated_m_gangname(::std::string* m_gangname) {
  if (m_gangname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_gangname_;
  }
  if (m_gangname) {
    set_has_m_gangname();
    m_gangname_ = m_gangname;
  } else {
    clear_has_m_gangname();
    m_gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_gangprofession = 7;
inline bool GM_Player_Data_Return::has_m_gangprofession() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_Player_Data_Return::set_has_m_gangprofession() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_Player_Data_Return::clear_has_m_gangprofession() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_Player_Data_Return::clear_m_gangprofession() {
  m_gangprofession_ = 0;
  clear_has_m_gangprofession();
}
inline ::google::protobuf::int32 GM_Player_Data_Return::m_gangprofession() const {
  return m_gangprofession_;
}
inline void GM_Player_Data_Return::set_m_gangprofession(::google::protobuf::int32 value) {
  set_has_m_gangprofession();
  m_gangprofession_ = value;
}

// optional int32 m_profession = 8;
inline bool GM_Player_Data_Return::has_m_profession() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_Player_Data_Return::set_has_m_profession() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_Player_Data_Return::clear_has_m_profession() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_Player_Data_Return::clear_m_profession() {
  m_profession_ = 0;
  clear_has_m_profession();
}
inline ::google::protobuf::int32 GM_Player_Data_Return::m_profession() const {
  return m_profession_;
}
inline void GM_Player_Data_Return::set_m_profession(::google::protobuf::int32 value) {
  set_has_m_profession();
  m_profession_ = value;
}

// optional int32 m_equipCount = 9;
inline bool GM_Player_Data_Return::has_m_equipcount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_Player_Data_Return::set_has_m_equipcount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_Player_Data_Return::clear_has_m_equipcount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_Player_Data_Return::clear_m_equipcount() {
  m_equipcount_ = 0;
  clear_has_m_equipcount();
}
inline ::google::protobuf::int32 GM_Player_Data_Return::m_equipcount() const {
  return m_equipcount_;
}
inline void GM_Player_Data_Return::set_m_equipcount(::google::protobuf::int32 value) {
  set_has_m_equipcount();
  m_equipcount_ = value;
}

// optional int32 m_runecount = 10;
inline bool GM_Player_Data_Return::has_m_runecount() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GM_Player_Data_Return::set_has_m_runecount() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GM_Player_Data_Return::clear_has_m_runecount() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GM_Player_Data_Return::clear_m_runecount() {
  m_runecount_ = 0;
  clear_has_m_runecount();
}
inline ::google::protobuf::int32 GM_Player_Data_Return::m_runecount() const {
  return m_runecount_;
}
inline void GM_Player_Data_Return::set_m_runecount(::google::protobuf::int32 value) {
  set_has_m_runecount();
  m_runecount_ = value;
}

// optional int32 m_petcount = 11;
inline bool GM_Player_Data_Return::has_m_petcount() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GM_Player_Data_Return::set_has_m_petcount() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GM_Player_Data_Return::clear_has_m_petcount() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GM_Player_Data_Return::clear_m_petcount() {
  m_petcount_ = 0;
  clear_has_m_petcount();
}
inline ::google::protobuf::int32 GM_Player_Data_Return::m_petcount() const {
  return m_petcount_;
}
inline void GM_Player_Data_Return::set_m_petcount(::google::protobuf::int32 value) {
  set_has_m_petcount();
  m_petcount_ = value;
}

// optional int32 m_addcount = 12;
inline bool GM_Player_Data_Return::has_m_addcount() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GM_Player_Data_Return::set_has_m_addcount() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GM_Player_Data_Return::clear_has_m_addcount() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GM_Player_Data_Return::clear_m_addcount() {
  m_addcount_ = 0;
  clear_has_m_addcount();
}
inline ::google::protobuf::int32 GM_Player_Data_Return::m_addcount() const {
  return m_addcount_;
}
inline void GM_Player_Data_Return::set_m_addcount(::google::protobuf::int32 value) {
  set_has_m_addcount();
  m_addcount_ = value;
}

// repeated .GM_EquipData m_allequip = 13;
inline int GM_Player_Data_Return::m_allequip_size() const {
  return m_allequip_.size();
}
inline void GM_Player_Data_Return::clear_m_allequip() {
  m_allequip_.Clear();
}
inline const ::GM_EquipData& GM_Player_Data_Return::m_allequip(int index) const {
  return m_allequip_.Get(index);
}
inline ::GM_EquipData* GM_Player_Data_Return::mutable_m_allequip(int index) {
  return m_allequip_.Mutable(index);
}
inline ::GM_EquipData* GM_Player_Data_Return::add_m_allequip() {
  return m_allequip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipData >&
GM_Player_Data_Return::m_allequip() const {
  return m_allequip_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_EquipData >*
GM_Player_Data_Return::mutable_m_allequip() {
  return &m_allequip_;
}

// repeated .GM_PetData m_allpet = 14;
inline int GM_Player_Data_Return::m_allpet_size() const {
  return m_allpet_.size();
}
inline void GM_Player_Data_Return::clear_m_allpet() {
  m_allpet_.Clear();
}
inline const ::GM_PetData& GM_Player_Data_Return::m_allpet(int index) const {
  return m_allpet_.Get(index);
}
inline ::GM_PetData* GM_Player_Data_Return::mutable_m_allpet(int index) {
  return m_allpet_.Mutable(index);
}
inline ::GM_PetData* GM_Player_Data_Return::add_m_allpet() {
  return m_allpet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_PetData >&
GM_Player_Data_Return::m_allpet() const {
  return m_allpet_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_PetData >*
GM_Player_Data_Return::mutable_m_allpet() {
  return &m_allpet_;
}

// repeated .GM_RuneData m_allrune = 15;
inline int GM_Player_Data_Return::m_allrune_size() const {
  return m_allrune_.size();
}
inline void GM_Player_Data_Return::clear_m_allrune() {
  m_allrune_.Clear();
}
inline const ::GM_RuneData& GM_Player_Data_Return::m_allrune(int index) const {
  return m_allrune_.Get(index);
}
inline ::GM_RuneData* GM_Player_Data_Return::mutable_m_allrune(int index) {
  return m_allrune_.Mutable(index);
}
inline ::GM_RuneData* GM_Player_Data_Return::add_m_allrune() {
  return m_allrune_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_RuneData >&
GM_Player_Data_Return::m_allrune() const {
  return m_allrune_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_RuneData >*
GM_Player_Data_Return::mutable_m_allrune() {
  return &m_allrune_;
}

// repeated .GM_EquipData m_alladdequip = 16;
inline int GM_Player_Data_Return::m_alladdequip_size() const {
  return m_alladdequip_.size();
}
inline void GM_Player_Data_Return::clear_m_alladdequip() {
  m_alladdequip_.Clear();
}
inline const ::GM_EquipData& GM_Player_Data_Return::m_alladdequip(int index) const {
  return m_alladdequip_.Get(index);
}
inline ::GM_EquipData* GM_Player_Data_Return::mutable_m_alladdequip(int index) {
  return m_alladdequip_.Mutable(index);
}
inline ::GM_EquipData* GM_Player_Data_Return::add_m_alladdequip() {
  return m_alladdequip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_EquipData >&
GM_Player_Data_Return::m_alladdequip() const {
  return m_alladdequip_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_EquipData >*
GM_Player_Data_Return::mutable_m_alladdequip() {
  return &m_alladdequip_;
}

// optional int32 isfriend = 17;
inline bool GM_Player_Data_Return::has_isfriend() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GM_Player_Data_Return::set_has_isfriend() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GM_Player_Data_Return::clear_has_isfriend() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GM_Player_Data_Return::clear_isfriend() {
  isfriend_ = 0;
  clear_has_isfriend();
}
inline ::google::protobuf::int32 GM_Player_Data_Return::isfriend() const {
  return isfriend_;
}
inline void GM_Player_Data_Return::set_isfriend(::google::protobuf::int32 value) {
  set_has_isfriend();
  isfriend_ = value;
}

// -------------------------------------------------------------------

// GM_Player_Data_Request

// required int32 m_playerid = 1;
inline bool GM_Player_Data_Request::has_m_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Player_Data_Request::set_has_m_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Player_Data_Request::clear_has_m_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Player_Data_Request::clear_m_playerid() {
  m_playerid_ = 0;
  clear_has_m_playerid();
}
inline ::google::protobuf::int32 GM_Player_Data_Request::m_playerid() const {
  return m_playerid_;
}
inline void GM_Player_Data_Request::set_m_playerid(::google::protobuf::int32 value) {
  set_has_m_playerid();
  m_playerid_ = value;
}

// -------------------------------------------------------------------

// GM_Player_Equip_Request

// required int32 m_playerid = 1;
inline bool GM_Player_Equip_Request::has_m_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Player_Equip_Request::set_has_m_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Player_Equip_Request::clear_has_m_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Player_Equip_Request::clear_m_playerid() {
  m_playerid_ = 0;
  clear_has_m_playerid();
}
inline ::google::protobuf::int32 GM_Player_Equip_Request::m_playerid() const {
  return m_playerid_;
}
inline void GM_Player_Equip_Request::set_m_playerid(::google::protobuf::int32 value) {
  set_has_m_playerid();
  m_playerid_ = value;
}

// optional int64 m_gmid = 2;
inline bool GM_Player_Equip_Request::has_m_gmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Player_Equip_Request::set_has_m_gmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Player_Equip_Request::clear_has_m_gmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Player_Equip_Request::clear_m_gmid() {
  m_gmid_ = GOOGLE_LONGLONG(0);
  clear_has_m_gmid();
}
inline ::google::protobuf::int64 GM_Player_Equip_Request::m_gmid() const {
  return m_gmid_;
}
inline void GM_Player_Equip_Request::set_m_gmid(::google::protobuf::int64 value) {
  set_has_m_gmid();
  m_gmid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_playerinfo_2etxt__INCLUDED
