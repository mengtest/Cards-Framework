// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rune.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rune.txt.pb.h"
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GM_RuneItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_RuneItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_AllRuneItem_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AllRuneItem_Return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_RuneFeed_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_RuneFeed_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_RuneFeed_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_RuneFeed_Return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_RuneMatchItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_RuneMatchItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_RuneDress_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_RuneDress_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_RuneDress_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_RuneDress_Return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_RuneDown_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_RuneDown_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_RuneDown_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_RuneDown_Return_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_rune_2etxt() {
  protobuf_AddDesc_rune_2etxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "rune.txt");
  GOOGLE_CHECK(file != NULL);
  GM_RuneItem_descriptor_ = file->message_type(0);
  static const int GM_RuneItem_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneItem, runegmid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneItem, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneItem, runelevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneItem, totalexp_),
  };
  GM_RuneItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_RuneItem_descriptor_,
      GM_RuneItem::default_instance_,
      GM_RuneItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_RuneItem));
  GM_AllRuneItem_Return_descriptor_ = file->message_type(1);
  static const int GM_AllRuneItem_Return_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AllRuneItem_Return, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AllRuneItem_Return, item_),
  };
  GM_AllRuneItem_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AllRuneItem_Return_descriptor_,
      GM_AllRuneItem_Return::default_instance_,
      GM_AllRuneItem_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AllRuneItem_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AllRuneItem_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AllRuneItem_Return));
  GM_RuneFeed_Request_descriptor_ = file->message_type(2);
  static const int GM_RuneFeed_Request_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneFeed_Request, runegmid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneFeed_Request, material_),
  };
  GM_RuneFeed_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_RuneFeed_Request_descriptor_,
      GM_RuneFeed_Request::default_instance_,
      GM_RuneFeed_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneFeed_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneFeed_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_RuneFeed_Request));
  GM_RuneFeed_Return_descriptor_ = file->message_type(3);
  static const int GM_RuneFeed_Return_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneFeed_Return, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneFeed_Return, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneFeed_Return, item_),
  };
  GM_RuneFeed_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_RuneFeed_Return_descriptor_,
      GM_RuneFeed_Return::default_instance_,
      GM_RuneFeed_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneFeed_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneFeed_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_RuneFeed_Return));
  GM_RuneMatchItem_descriptor_ = file->message_type(4);
  static const int GM_RuneMatchItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneMatchItem, runenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneMatchItem, runegmid_),
  };
  GM_RuneMatchItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_RuneMatchItem_descriptor_,
      GM_RuneMatchItem::default_instance_,
      GM_RuneMatchItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneMatchItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneMatchItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_RuneMatchItem));
  GM_RuneDress_Request_descriptor_ = file->message_type(5);
  static const int GM_RuneDress_Request_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDress_Request, bodytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDress_Request, item_),
  };
  GM_RuneDress_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_RuneDress_Request_descriptor_,
      GM_RuneDress_Request::default_instance_,
      GM_RuneDress_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDress_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDress_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_RuneDress_Request));
  GM_RuneDress_Return_descriptor_ = file->message_type(6);
  static const int GM_RuneDress_Return_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDress_Return, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDress_Return, bodytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDress_Return, item_),
  };
  GM_RuneDress_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_RuneDress_Return_descriptor_,
      GM_RuneDress_Return::default_instance_,
      GM_RuneDress_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDress_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDress_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_RuneDress_Return));
  GM_RuneDown_Request_descriptor_ = file->message_type(7);
  static const int GM_RuneDown_Request_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDown_Request, bodytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDown_Request, runenum_),
  };
  GM_RuneDown_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_RuneDown_Request_descriptor_,
      GM_RuneDown_Request::default_instance_,
      GM_RuneDown_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDown_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDown_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_RuneDown_Request));
  GM_RuneDown_Return_descriptor_ = file->message_type(8);
  static const int GM_RuneDown_Return_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDown_Return, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDown_Return, bodytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDown_Return, runenum_),
  };
  GM_RuneDown_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_RuneDown_Return_descriptor_,
      GM_RuneDown_Return::default_instance_,
      GM_RuneDown_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDown_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RuneDown_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_RuneDown_Return));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_rune_2etxt);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_RuneItem_descriptor_, &GM_RuneItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AllRuneItem_Return_descriptor_, &GM_AllRuneItem_Return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_RuneFeed_Request_descriptor_, &GM_RuneFeed_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_RuneFeed_Return_descriptor_, &GM_RuneFeed_Return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_RuneMatchItem_descriptor_, &GM_RuneMatchItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_RuneDress_Request_descriptor_, &GM_RuneDress_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_RuneDress_Return_descriptor_, &GM_RuneDress_Return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_RuneDown_Request_descriptor_, &GM_RuneDown_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_RuneDown_Return_descriptor_, &GM_RuneDown_Return::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_rune_2etxt() {
  delete GM_RuneItem::default_instance_;
  delete GM_RuneItem_reflection_;
  delete GM_AllRuneItem_Return::default_instance_;
  delete GM_AllRuneItem_Return_reflection_;
  delete GM_RuneFeed_Request::default_instance_;
  delete GM_RuneFeed_Request_reflection_;
  delete GM_RuneFeed_Return::default_instance_;
  delete GM_RuneFeed_Return_reflection_;
  delete GM_RuneMatchItem::default_instance_;
  delete GM_RuneMatchItem_reflection_;
  delete GM_RuneDress_Request::default_instance_;
  delete GM_RuneDress_Request_reflection_;
  delete GM_RuneDress_Return::default_instance_;
  delete GM_RuneDress_Return_reflection_;
  delete GM_RuneDown_Request::default_instance_;
  delete GM_RuneDown_Request_reflection_;
  delete GM_RuneDown_Return::default_instance_;
  delete GM_RuneDown_Return_reflection_;
}

void protobuf_AddDesc_rune_2etxt() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\010rune.txt\"V\n\013GM_RuneItem\022\020\n\010runegmid\030\001 "
    "\002(\003\022\020\n\010objectid\030\002 \002(\005\022\021\n\trunelevel\030\003 \002(\005"
    "\022\020\n\010totalexp\030\004 \002(\003\"B\n\025GM_AllRuneItem_Ret"
    "urn\022\r\n\005count\030\001 \002(\005\022\032\n\004item\030\002 \003(\0132\014.GM_Ru"
    "neItem\"9\n\023GM_RuneFeed_Request\022\020\n\010runegmi"
    "d\030\001 \002(\003\022\020\n\010material\030\002 \003(\003\"R\n\022GM_RuneFeed"
    "_Return\022\016\n\006result\030\001 \002(\005\022\020\n\010material\030\002 \003("
    "\003\022\032\n\004item\030\003 \001(\0132\014.GM_RuneItem\"5\n\020GM_Rune"
    "MatchItem\022\017\n\007runenum\030\001 \002(\005\022\020\n\010runegmid\030\002"
    " \002(\003\"I\n\024GM_RuneDress_Request\022\020\n\010bodytype"
    "\030\001 \002(\005\022\037\n\004item\030\002 \003(\0132\021.GM_RuneMatchItem\""
    "X\n\023GM_RuneDress_Return\022\016\n\006result\030\001 \002(\005\022\020"
    "\n\010bodytype\030\002 \002(\005\022\037\n\004item\030\003 \003(\0132\021.GM_Rune"
    "MatchItem\"8\n\023GM_RuneDown_Request\022\020\n\010body"
    "type\030\001 \002(\005\022\017\n\007runenum\030\002 \003(\005\"G\n\022GM_RuneDo"
    "wn_Return\022\016\n\006result\030\001 \002(\005\022\020\n\010bodytype\030\002 "
    "\002(\005\022\017\n\007runenum\030\003 \003(\005", 660);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rune.txt", &protobuf_RegisterTypes);
  GM_RuneItem::default_instance_ = new GM_RuneItem();
  GM_AllRuneItem_Return::default_instance_ = new GM_AllRuneItem_Return();
  GM_RuneFeed_Request::default_instance_ = new GM_RuneFeed_Request();
  GM_RuneFeed_Return::default_instance_ = new GM_RuneFeed_Return();
  GM_RuneMatchItem::default_instance_ = new GM_RuneMatchItem();
  GM_RuneDress_Request::default_instance_ = new GM_RuneDress_Request();
  GM_RuneDress_Return::default_instance_ = new GM_RuneDress_Return();
  GM_RuneDown_Request::default_instance_ = new GM_RuneDown_Request();
  GM_RuneDown_Return::default_instance_ = new GM_RuneDown_Return();
  GM_RuneItem::default_instance_->InitAsDefaultInstance();
  GM_AllRuneItem_Return::default_instance_->InitAsDefaultInstance();
  GM_RuneFeed_Request::default_instance_->InitAsDefaultInstance();
  GM_RuneFeed_Return::default_instance_->InitAsDefaultInstance();
  GM_RuneMatchItem::default_instance_->InitAsDefaultInstance();
  GM_RuneDress_Request::default_instance_->InitAsDefaultInstance();
  GM_RuneDress_Return::default_instance_->InitAsDefaultInstance();
  GM_RuneDown_Request::default_instance_->InitAsDefaultInstance();
  GM_RuneDown_Return::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_rune_2etxt);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rune_2etxt {
  StaticDescriptorInitializer_rune_2etxt() {
    protobuf_AddDesc_rune_2etxt();
  }
} static_descriptor_initializer_rune_2etxt_;

// ===================================================================

#ifndef _MSC_VER
const int GM_RuneItem::kRunegmidFieldNumber;
const int GM_RuneItem::kObjectidFieldNumber;
const int GM_RuneItem::kRunelevelFieldNumber;
const int GM_RuneItem::kTotalexpFieldNumber;
#endif  // !_MSC_VER

GM_RuneItem::GM_RuneItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_RuneItem::InitAsDefaultInstance() {
}

GM_RuneItem::GM_RuneItem(const GM_RuneItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_RuneItem::SharedCtor() {
  _cached_size_ = 0;
  runegmid_ = GOOGLE_LONGLONG(0);
  objectid_ = 0;
  runelevel_ = 0;
  totalexp_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_RuneItem::~GM_RuneItem() {
  SharedDtor();
}

void GM_RuneItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_RuneItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_RuneItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_RuneItem_descriptor_;
}

const GM_RuneItem& GM_RuneItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rune_2etxt();
  return *default_instance_;
}

GM_RuneItem* GM_RuneItem::default_instance_ = NULL;

GM_RuneItem* GM_RuneItem::New() const {
  return new GM_RuneItem;
}

void GM_RuneItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    runegmid_ = GOOGLE_LONGLONG(0);
    objectid_ = 0;
    runelevel_ = 0;
    totalexp_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_RuneItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 runegmid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &runegmid_)));
          set_has_runegmid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_objectid;
        break;
      }

      // required int32 objectid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_objectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_runelevel;
        break;
      }

      // required int32 runelevel = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_runelevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &runelevel_)));
          set_has_runelevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_totalexp;
        break;
      }

      // required int64 totalexp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_totalexp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalexp_)));
          set_has_totalexp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_RuneItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 runegmid = 1;
  if (has_runegmid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->runegmid(), output);
  }

  // required int32 objectid = 2;
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objectid(), output);
  }

  // required int32 runelevel = 3;
  if (has_runelevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->runelevel(), output);
  }

  // required int64 totalexp = 4;
  if (has_totalexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->totalexp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_RuneItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 runegmid = 1;
  if (has_runegmid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->runegmid(), target);
  }

  // required int32 objectid = 2;
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objectid(), target);
  }

  // required int32 runelevel = 3;
  if (has_runelevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->runelevel(), target);
  }

  // required int64 totalexp = 4;
  if (has_totalexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->totalexp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_RuneItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 runegmid = 1;
    if (has_runegmid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->runegmid());
    }

    // required int32 objectid = 2;
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objectid());
    }

    // required int32 runelevel = 3;
    if (has_runelevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->runelevel());
    }

    // required int64 totalexp = 4;
    if (has_totalexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->totalexp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_RuneItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_RuneItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_RuneItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_RuneItem::MergeFrom(const GM_RuneItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_runegmid()) {
      set_runegmid(from.runegmid());
    }
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
    if (from.has_runelevel()) {
      set_runelevel(from.runelevel());
    }
    if (from.has_totalexp()) {
      set_totalexp(from.totalexp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_RuneItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_RuneItem::CopyFrom(const GM_RuneItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_RuneItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void GM_RuneItem::Swap(GM_RuneItem* other) {
  if (other != this) {
    std::swap(runegmid_, other->runegmid_);
    std::swap(objectid_, other->objectid_);
    std::swap(runelevel_, other->runelevel_);
    std::swap(totalexp_, other->totalexp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_RuneItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_RuneItem_descriptor_;
  metadata.reflection = GM_RuneItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_AllRuneItem_Return::kCountFieldNumber;
const int GM_AllRuneItem_Return::kItemFieldNumber;
#endif  // !_MSC_VER

GM_AllRuneItem_Return::GM_AllRuneItem_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AllRuneItem_Return::InitAsDefaultInstance() {
}

GM_AllRuneItem_Return::GM_AllRuneItem_Return(const GM_AllRuneItem_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AllRuneItem_Return::SharedCtor() {
  _cached_size_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AllRuneItem_Return::~GM_AllRuneItem_Return() {
  SharedDtor();
}

void GM_AllRuneItem_Return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_AllRuneItem_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AllRuneItem_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AllRuneItem_Return_descriptor_;
}

const GM_AllRuneItem_Return& GM_AllRuneItem_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rune_2etxt();
  return *default_instance_;
}

GM_AllRuneItem_Return* GM_AllRuneItem_Return::default_instance_ = NULL;

GM_AllRuneItem_Return* GM_AllRuneItem_Return::New() const {
  return new GM_AllRuneItem_Return;
}

void GM_AllRuneItem_Return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    count_ = 0;
  }
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AllRuneItem_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 count = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item;
        break;
      }

      // repeated .GM_RuneItem item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AllRuneItem_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 count = 1;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // repeated .GM_RuneItem item = 2;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AllRuneItem_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 count = 1;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // repeated .GM_RuneItem item = 2;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AllRuneItem_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 count = 1;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  // repeated .GM_RuneItem item = 2;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AllRuneItem_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AllRuneItem_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AllRuneItem_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AllRuneItem_Return::MergeFrom(const GM_AllRuneItem_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AllRuneItem_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AllRuneItem_Return::CopyFrom(const GM_AllRuneItem_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AllRuneItem_Return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < item_size(); i++) {
    if (!this->item(i).IsInitialized()) return false;
  }
  return true;
}

void GM_AllRuneItem_Return::Swap(GM_AllRuneItem_Return* other) {
  if (other != this) {
    std::swap(count_, other->count_);
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AllRuneItem_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AllRuneItem_Return_descriptor_;
  metadata.reflection = GM_AllRuneItem_Return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_RuneFeed_Request::kRunegmidFieldNumber;
const int GM_RuneFeed_Request::kMaterialFieldNumber;
#endif  // !_MSC_VER

GM_RuneFeed_Request::GM_RuneFeed_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_RuneFeed_Request::InitAsDefaultInstance() {
}

GM_RuneFeed_Request::GM_RuneFeed_Request(const GM_RuneFeed_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_RuneFeed_Request::SharedCtor() {
  _cached_size_ = 0;
  runegmid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_RuneFeed_Request::~GM_RuneFeed_Request() {
  SharedDtor();
}

void GM_RuneFeed_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_RuneFeed_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_RuneFeed_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_RuneFeed_Request_descriptor_;
}

const GM_RuneFeed_Request& GM_RuneFeed_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rune_2etxt();
  return *default_instance_;
}

GM_RuneFeed_Request* GM_RuneFeed_Request::default_instance_ = NULL;

GM_RuneFeed_Request* GM_RuneFeed_Request::New() const {
  return new GM_RuneFeed_Request;
}

void GM_RuneFeed_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    runegmid_ = GOOGLE_LONGLONG(0);
  }
  material_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_RuneFeed_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 runegmid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &runegmid_)));
          set_has_runegmid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_material;
        break;
      }

      // repeated int64 material = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_material:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_material())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_material())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_material;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_RuneFeed_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 runegmid = 1;
  if (has_runegmid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->runegmid(), output);
  }

  // repeated int64 material = 2;
  for (int i = 0; i < this->material_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->material(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_RuneFeed_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 runegmid = 1;
  if (has_runegmid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->runegmid(), target);
  }

  // repeated int64 material = 2;
  for (int i = 0; i < this->material_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->material(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_RuneFeed_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 runegmid = 1;
    if (has_runegmid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->runegmid());
    }

  }
  // repeated int64 material = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->material_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->material(i));
    }
    total_size += 1 * this->material_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_RuneFeed_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_RuneFeed_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_RuneFeed_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_RuneFeed_Request::MergeFrom(const GM_RuneFeed_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  material_.MergeFrom(from.material_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_runegmid()) {
      set_runegmid(from.runegmid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_RuneFeed_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_RuneFeed_Request::CopyFrom(const GM_RuneFeed_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_RuneFeed_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_RuneFeed_Request::Swap(GM_RuneFeed_Request* other) {
  if (other != this) {
    std::swap(runegmid_, other->runegmid_);
    material_.Swap(&other->material_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_RuneFeed_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_RuneFeed_Request_descriptor_;
  metadata.reflection = GM_RuneFeed_Request_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_RuneFeed_Return::kResultFieldNumber;
const int GM_RuneFeed_Return::kMaterialFieldNumber;
const int GM_RuneFeed_Return::kItemFieldNumber;
#endif  // !_MSC_VER

GM_RuneFeed_Return::GM_RuneFeed_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_RuneFeed_Return::InitAsDefaultInstance() {
  item_ = const_cast< ::GM_RuneItem*>(&::GM_RuneItem::default_instance());
}

GM_RuneFeed_Return::GM_RuneFeed_Return(const GM_RuneFeed_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_RuneFeed_Return::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  item_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_RuneFeed_Return::~GM_RuneFeed_Return() {
  SharedDtor();
}

void GM_RuneFeed_Return::SharedDtor() {
  if (this != default_instance_) {
    delete item_;
  }
}

void GM_RuneFeed_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_RuneFeed_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_RuneFeed_Return_descriptor_;
}

const GM_RuneFeed_Return& GM_RuneFeed_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rune_2etxt();
  return *default_instance_;
}

GM_RuneFeed_Return* GM_RuneFeed_Return::default_instance_ = NULL;

GM_RuneFeed_Return* GM_RuneFeed_Return::New() const {
  return new GM_RuneFeed_Return;
}

void GM_RuneFeed_Return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    if (has_item()) {
      if (item_ != NULL) item_->::GM_RuneItem::Clear();
    }
  }
  material_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_RuneFeed_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_material;
        break;
      }

      // repeated int64 material = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_material:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_material())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_material())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_material;
        if (input->ExpectTag(26)) goto parse_item;
        break;
      }

      // optional .GM_RuneItem item = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_RuneFeed_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated int64 material = 2;
  for (int i = 0; i < this->material_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->material(i), output);
  }

  // optional .GM_RuneItem item = 3;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->item(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_RuneFeed_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated int64 material = 2;
  for (int i = 0; i < this->material_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->material(i), target);
  }

  // optional .GM_RuneItem item = 3;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->item(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_RuneFeed_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .GM_RuneItem item = 3;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item());
    }

  }
  // repeated int64 material = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->material_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->material(i));
    }
    total_size += 1 * this->material_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_RuneFeed_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_RuneFeed_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_RuneFeed_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_RuneFeed_Return::MergeFrom(const GM_RuneFeed_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  material_.MergeFrom(from.material_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_item()) {
      mutable_item()->::GM_RuneItem::MergeFrom(from.item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_RuneFeed_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_RuneFeed_Return::CopyFrom(const GM_RuneFeed_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_RuneFeed_Return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_item()) {
    if (!this->item().IsInitialized()) return false;
  }
  return true;
}

void GM_RuneFeed_Return::Swap(GM_RuneFeed_Return* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    material_.Swap(&other->material_);
    std::swap(item_, other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_RuneFeed_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_RuneFeed_Return_descriptor_;
  metadata.reflection = GM_RuneFeed_Return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_RuneMatchItem::kRunenumFieldNumber;
const int GM_RuneMatchItem::kRunegmidFieldNumber;
#endif  // !_MSC_VER

GM_RuneMatchItem::GM_RuneMatchItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_RuneMatchItem::InitAsDefaultInstance() {
}

GM_RuneMatchItem::GM_RuneMatchItem(const GM_RuneMatchItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_RuneMatchItem::SharedCtor() {
  _cached_size_ = 0;
  runenum_ = 0;
  runegmid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_RuneMatchItem::~GM_RuneMatchItem() {
  SharedDtor();
}

void GM_RuneMatchItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_RuneMatchItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_RuneMatchItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_RuneMatchItem_descriptor_;
}

const GM_RuneMatchItem& GM_RuneMatchItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rune_2etxt();
  return *default_instance_;
}

GM_RuneMatchItem* GM_RuneMatchItem::default_instance_ = NULL;

GM_RuneMatchItem* GM_RuneMatchItem::New() const {
  return new GM_RuneMatchItem;
}

void GM_RuneMatchItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    runenum_ = 0;
    runegmid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_RuneMatchItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 runenum = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &runenum_)));
          set_has_runenum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_runegmid;
        break;
      }

      // required int64 runegmid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_runegmid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &runegmid_)));
          set_has_runegmid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_RuneMatchItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 runenum = 1;
  if (has_runenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->runenum(), output);
  }

  // required int64 runegmid = 2;
  if (has_runegmid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->runegmid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_RuneMatchItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 runenum = 1;
  if (has_runenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->runenum(), target);
  }

  // required int64 runegmid = 2;
  if (has_runegmid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->runegmid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_RuneMatchItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 runenum = 1;
    if (has_runenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->runenum());
    }

    // required int64 runegmid = 2;
    if (has_runegmid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->runegmid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_RuneMatchItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_RuneMatchItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_RuneMatchItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_RuneMatchItem::MergeFrom(const GM_RuneMatchItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_runenum()) {
      set_runenum(from.runenum());
    }
    if (from.has_runegmid()) {
      set_runegmid(from.runegmid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_RuneMatchItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_RuneMatchItem::CopyFrom(const GM_RuneMatchItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_RuneMatchItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GM_RuneMatchItem::Swap(GM_RuneMatchItem* other) {
  if (other != this) {
    std::swap(runenum_, other->runenum_);
    std::swap(runegmid_, other->runegmid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_RuneMatchItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_RuneMatchItem_descriptor_;
  metadata.reflection = GM_RuneMatchItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_RuneDress_Request::kBodytypeFieldNumber;
const int GM_RuneDress_Request::kItemFieldNumber;
#endif  // !_MSC_VER

GM_RuneDress_Request::GM_RuneDress_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_RuneDress_Request::InitAsDefaultInstance() {
}

GM_RuneDress_Request::GM_RuneDress_Request(const GM_RuneDress_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_RuneDress_Request::SharedCtor() {
  _cached_size_ = 0;
  bodytype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_RuneDress_Request::~GM_RuneDress_Request() {
  SharedDtor();
}

void GM_RuneDress_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_RuneDress_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_RuneDress_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_RuneDress_Request_descriptor_;
}

const GM_RuneDress_Request& GM_RuneDress_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rune_2etxt();
  return *default_instance_;
}

GM_RuneDress_Request* GM_RuneDress_Request::default_instance_ = NULL;

GM_RuneDress_Request* GM_RuneDress_Request::New() const {
  return new GM_RuneDress_Request;
}

void GM_RuneDress_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    bodytype_ = 0;
  }
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_RuneDress_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 bodytype = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bodytype_)));
          set_has_bodytype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item;
        break;
      }

      // repeated .GM_RuneMatchItem item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_RuneDress_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 bodytype = 1;
  if (has_bodytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bodytype(), output);
  }

  // repeated .GM_RuneMatchItem item = 2;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_RuneDress_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 bodytype = 1;
  if (has_bodytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bodytype(), target);
  }

  // repeated .GM_RuneMatchItem item = 2;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_RuneDress_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 bodytype = 1;
    if (has_bodytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bodytype());
    }

  }
  // repeated .GM_RuneMatchItem item = 2;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_RuneDress_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_RuneDress_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_RuneDress_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_RuneDress_Request::MergeFrom(const GM_RuneDress_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bodytype()) {
      set_bodytype(from.bodytype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_RuneDress_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_RuneDress_Request::CopyFrom(const GM_RuneDress_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_RuneDress_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < item_size(); i++) {
    if (!this->item(i).IsInitialized()) return false;
  }
  return true;
}

void GM_RuneDress_Request::Swap(GM_RuneDress_Request* other) {
  if (other != this) {
    std::swap(bodytype_, other->bodytype_);
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_RuneDress_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_RuneDress_Request_descriptor_;
  metadata.reflection = GM_RuneDress_Request_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_RuneDress_Return::kResultFieldNumber;
const int GM_RuneDress_Return::kBodytypeFieldNumber;
const int GM_RuneDress_Return::kItemFieldNumber;
#endif  // !_MSC_VER

GM_RuneDress_Return::GM_RuneDress_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_RuneDress_Return::InitAsDefaultInstance() {
}

GM_RuneDress_Return::GM_RuneDress_Return(const GM_RuneDress_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_RuneDress_Return::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  bodytype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_RuneDress_Return::~GM_RuneDress_Return() {
  SharedDtor();
}

void GM_RuneDress_Return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_RuneDress_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_RuneDress_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_RuneDress_Return_descriptor_;
}

const GM_RuneDress_Return& GM_RuneDress_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rune_2etxt();
  return *default_instance_;
}

GM_RuneDress_Return* GM_RuneDress_Return::default_instance_ = NULL;

GM_RuneDress_Return* GM_RuneDress_Return::New() const {
  return new GM_RuneDress_Return;
}

void GM_RuneDress_Return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    bodytype_ = 0;
  }
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_RuneDress_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_bodytype;
        break;
      }

      // required int32 bodytype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bodytype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bodytype_)));
          set_has_bodytype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item;
        break;
      }

      // repeated .GM_RuneMatchItem item = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_RuneDress_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // required int32 bodytype = 2;
  if (has_bodytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bodytype(), output);
  }

  // repeated .GM_RuneMatchItem item = 3;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_RuneDress_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // required int32 bodytype = 2;
  if (has_bodytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bodytype(), target);
  }

  // repeated .GM_RuneMatchItem item = 3;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_RuneDress_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // required int32 bodytype = 2;
    if (has_bodytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bodytype());
    }

  }
  // repeated .GM_RuneMatchItem item = 3;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_RuneDress_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_RuneDress_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_RuneDress_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_RuneDress_Return::MergeFrom(const GM_RuneDress_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_bodytype()) {
      set_bodytype(from.bodytype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_RuneDress_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_RuneDress_Return::CopyFrom(const GM_RuneDress_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_RuneDress_Return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < item_size(); i++) {
    if (!this->item(i).IsInitialized()) return false;
  }
  return true;
}

void GM_RuneDress_Return::Swap(GM_RuneDress_Return* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(bodytype_, other->bodytype_);
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_RuneDress_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_RuneDress_Return_descriptor_;
  metadata.reflection = GM_RuneDress_Return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_RuneDown_Request::kBodytypeFieldNumber;
const int GM_RuneDown_Request::kRunenumFieldNumber;
#endif  // !_MSC_VER

GM_RuneDown_Request::GM_RuneDown_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_RuneDown_Request::InitAsDefaultInstance() {
}

GM_RuneDown_Request::GM_RuneDown_Request(const GM_RuneDown_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_RuneDown_Request::SharedCtor() {
  _cached_size_ = 0;
  bodytype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_RuneDown_Request::~GM_RuneDown_Request() {
  SharedDtor();
}

void GM_RuneDown_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_RuneDown_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_RuneDown_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_RuneDown_Request_descriptor_;
}

const GM_RuneDown_Request& GM_RuneDown_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rune_2etxt();
  return *default_instance_;
}

GM_RuneDown_Request* GM_RuneDown_Request::default_instance_ = NULL;

GM_RuneDown_Request* GM_RuneDown_Request::New() const {
  return new GM_RuneDown_Request;
}

void GM_RuneDown_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    bodytype_ = 0;
  }
  runenum_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_RuneDown_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 bodytype = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bodytype_)));
          set_has_bodytype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_runenum;
        break;
      }

      // repeated int32 runenum = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_runenum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_runenum())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_runenum())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_runenum;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_RuneDown_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 bodytype = 1;
  if (has_bodytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bodytype(), output);
  }

  // repeated int32 runenum = 2;
  for (int i = 0; i < this->runenum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->runenum(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_RuneDown_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 bodytype = 1;
  if (has_bodytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bodytype(), target);
  }

  // repeated int32 runenum = 2;
  for (int i = 0; i < this->runenum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->runenum(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_RuneDown_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 bodytype = 1;
    if (has_bodytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bodytype());
    }

  }
  // repeated int32 runenum = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->runenum_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->runenum(i));
    }
    total_size += 1 * this->runenum_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_RuneDown_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_RuneDown_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_RuneDown_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_RuneDown_Request::MergeFrom(const GM_RuneDown_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  runenum_.MergeFrom(from.runenum_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bodytype()) {
      set_bodytype(from.bodytype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_RuneDown_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_RuneDown_Request::CopyFrom(const GM_RuneDown_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_RuneDown_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_RuneDown_Request::Swap(GM_RuneDown_Request* other) {
  if (other != this) {
    std::swap(bodytype_, other->bodytype_);
    runenum_.Swap(&other->runenum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_RuneDown_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_RuneDown_Request_descriptor_;
  metadata.reflection = GM_RuneDown_Request_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_RuneDown_Return::kResultFieldNumber;
const int GM_RuneDown_Return::kBodytypeFieldNumber;
const int GM_RuneDown_Return::kRunenumFieldNumber;
#endif  // !_MSC_VER

GM_RuneDown_Return::GM_RuneDown_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_RuneDown_Return::InitAsDefaultInstance() {
}

GM_RuneDown_Return::GM_RuneDown_Return(const GM_RuneDown_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_RuneDown_Return::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  bodytype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_RuneDown_Return::~GM_RuneDown_Return() {
  SharedDtor();
}

void GM_RuneDown_Return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_RuneDown_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_RuneDown_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_RuneDown_Return_descriptor_;
}

const GM_RuneDown_Return& GM_RuneDown_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rune_2etxt();
  return *default_instance_;
}

GM_RuneDown_Return* GM_RuneDown_Return::default_instance_ = NULL;

GM_RuneDown_Return* GM_RuneDown_Return::New() const {
  return new GM_RuneDown_Return;
}

void GM_RuneDown_Return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    bodytype_ = 0;
  }
  runenum_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_RuneDown_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_bodytype;
        break;
      }

      // required int32 bodytype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bodytype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bodytype_)));
          set_has_bodytype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_runenum;
        break;
      }

      // repeated int32 runenum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_runenum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_runenum())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_runenum())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_runenum;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_RuneDown_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // required int32 bodytype = 2;
  if (has_bodytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bodytype(), output);
  }

  // repeated int32 runenum = 3;
  for (int i = 0; i < this->runenum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->runenum(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_RuneDown_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // required int32 bodytype = 2;
  if (has_bodytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bodytype(), target);
  }

  // repeated int32 runenum = 3;
  for (int i = 0; i < this->runenum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->runenum(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_RuneDown_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // required int32 bodytype = 2;
    if (has_bodytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bodytype());
    }

  }
  // repeated int32 runenum = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->runenum_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->runenum(i));
    }
    total_size += 1 * this->runenum_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_RuneDown_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_RuneDown_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_RuneDown_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_RuneDown_Return::MergeFrom(const GM_RuneDown_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  runenum_.MergeFrom(from.runenum_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_bodytype()) {
      set_bodytype(from.bodytype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_RuneDown_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_RuneDown_Return::CopyFrom(const GM_RuneDown_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_RuneDown_Return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GM_RuneDown_Return::Swap(GM_RuneDown_Return* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(bodytype_, other->bodytype_);
    runenum_.Swap(&other->runenum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_RuneDown_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_RuneDown_Return_descriptor_;
  metadata.reflection = GM_RuneDown_Return_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
