// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: activity.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "activity.txt.pb.h"
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GM_RewardObj_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_RewardObj_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_RewardInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_RewardInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_ChargeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_ChargeInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_GetReward_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_GetReward_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_RequestGetReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_RequestGetReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_FristChargeData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_FristChargeData_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_GetWeaponResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_GetWeaponResult_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_activity_2etxt() {
  protobuf_AddDesc_activity_2etxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "activity.txt");
  GOOGLE_CHECK(file != NULL);
  GM_RewardObj_descriptor_ = file->message_type(0);
  static const int GM_RewardObj_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RewardObj, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RewardObj, count_),
  };
  GM_RewardObj_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_RewardObj_descriptor_,
      GM_RewardObj::default_instance_,
      GM_RewardObj_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RewardObj, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RewardObj, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_RewardObj));
  GM_RewardInfo_descriptor_ = file->message_type(1);
  static const int GM_RewardInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RewardInfo, chargecount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RewardInfo, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RewardInfo, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RewardInfo, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RewardInfo, percentgold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RewardInfo, percentmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RewardInfo, giftbag_objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RewardInfo, objs_),
  };
  GM_RewardInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_RewardInfo_descriptor_,
      GM_RewardInfo::default_instance_,
      GM_RewardInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RewardInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RewardInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_RewardInfo));
  GM_ChargeInfo_descriptor_ = file->message_type(2);
  static const int GM_ChargeInfo_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, firstchargedata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, oncechargedata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, totalchargedata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, dailychargedata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, dailychargecount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, firstcharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, oncecharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, totalcharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, dailycharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, firsttxt1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, firsttxt2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, dailytxt1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, dailytxt2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, oncetxt1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, oncetxt2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, totaltxt1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, totaltxt2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, totalchargecount_),
  };
  GM_ChargeInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_ChargeInfo_descriptor_,
      GM_ChargeInfo::default_instance_,
      GM_ChargeInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ChargeInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_ChargeInfo));
  GM_GetReward_Result_descriptor_ = file->message_type(3);
  static const int GM_GetReward_Result_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GetReward_Result, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GetReward_Result, lefttimes_),
  };
  GM_GetReward_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_GetReward_Result_descriptor_,
      GM_GetReward_Result::default_instance_,
      GM_GetReward_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GetReward_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GetReward_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_GetReward_Result));
  GM_RequestGetReward_descriptor_ = file->message_type(4);
  static const int GM_RequestGetReward_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RequestGetReward, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RequestGetReward, whichone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RequestGetReward, objectid_),
  };
  GM_RequestGetReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_RequestGetReward_descriptor_,
      GM_RequestGetReward::default_instance_,
      GM_RequestGetReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RequestGetReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_RequestGetReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_RequestGetReward));
  GM_FristChargeData_descriptor_ = file->message_type(5);
  static const int GM_FristChargeData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_FristChargeData, m_firststate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_FristChargeData, m_objectid_),
  };
  GM_FristChargeData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_FristChargeData_descriptor_,
      GM_FristChargeData::default_instance_,
      GM_FristChargeData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_FristChargeData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_FristChargeData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_FristChargeData));
  GM_GetWeaponResult_descriptor_ = file->message_type(6);
  static const int GM_GetWeaponResult_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GetWeaponResult, m_result_),
  };
  GM_GetWeaponResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_GetWeaponResult_descriptor_,
      GM_GetWeaponResult::default_instance_,
      GM_GetWeaponResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GetWeaponResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_GetWeaponResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_GetWeaponResult));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_activity_2etxt);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_RewardObj_descriptor_, &GM_RewardObj::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_RewardInfo_descriptor_, &GM_RewardInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_ChargeInfo_descriptor_, &GM_ChargeInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_GetReward_Result_descriptor_, &GM_GetReward_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_RequestGetReward_descriptor_, &GM_RequestGetReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_FristChargeData_descriptor_, &GM_FristChargeData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_GetWeaponResult_descriptor_, &GM_GetWeaponResult::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_activity_2etxt() {
  delete GM_RewardObj::default_instance_;
  delete GM_RewardObj_reflection_;
  delete GM_RewardInfo::default_instance_;
  delete GM_RewardInfo_reflection_;
  delete GM_ChargeInfo::default_instance_;
  delete GM_ChargeInfo_reflection_;
  delete GM_GetReward_Result::default_instance_;
  delete GM_GetReward_Result_reflection_;
  delete GM_RequestGetReward::default_instance_;
  delete GM_RequestGetReward_reflection_;
  delete GM_FristChargeData::default_instance_;
  delete GM_FristChargeData_reflection_;
  delete GM_GetWeaponResult::default_instance_;
  delete GM_GetWeaponResult_reflection_;
}

void protobuf_AddDesc_activity_2etxt() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014activity.txt\",\n\014GM_RewardObj\022\r\n\005objid\030"
    "\001 \002(\005\022\r\n\005count\030\002 \001(\005\"\255\001\n\rGM_RewardInfo\022\023"
    "\n\013chargecount\030\005 \001(\005\022\014\n\004gold\030\001 \001(\005\022\r\n\005mon"
    "ey\030\002 \001(\005\022\013\n\003exp\030\003 \001(\005\022\023\n\013percentgold\030\006 \001"
    "(\005\022\024\n\014percentmoney\030\007 \001(\005\022\025\n\rgiftbag_obji"
    "d\030\010 \002(\005\022\033\n\004objs\030\004 \003(\0132\r.GM_RewardObj\"\317\003\n"
    "\rGM_ChargeInfo\022\027\n\017firstchargedata\030\001 \002(\005\022"
    "\026\n\016oncechargedata\030\002 \003(\005\022\027\n\017totalchargeda"
    "ta\030\003 \003(\005\022\027\n\017dailychargedata\030\010 \001(\005\022\030\n\020dai"
    "lychargecount\030\t \001(\005\022#\n\013firstcharge\030\004 \003(\013"
    "2\016.GM_RewardInfo\022\"\n\noncecharge\030\005 \003(\0132\016.G"
    "M_RewardInfo\022#\n\013totalcharge\030\006 \003(\0132\016.GM_R"
    "ewardInfo\022#\n\013dailycharge\030\007 \003(\0132\016.GM_Rewa"
    "rdInfo\022\021\n\tfirsttxt1\030\013 \001(\t\022\021\n\tfirsttxt2\030\014"
    " \001(\t\022\021\n\tdailytxt1\030\r \001(\t\022\021\n\tdailytxt2\030\016 \001"
    "(\t\022\020\n\010oncetxt1\030\017 \001(\t\022\020\n\010oncetxt2\030\020 \001(\t\022\021"
    "\n\ttotaltxt1\030\021 \001(\t\022\021\n\ttotaltxt2\030\022 \001(\t\022\030\n\020"
    "totalchargecount\030\n \001(\005\"8\n\023GM_GetReward_R"
    "esult\022\016\n\006result\030\001 \002(\005\022\021\n\tleftTimes\030\002 \001(\r"
    "\"G\n\023GM_RequestGetReward\022\014\n\004type\030\001 \002(\005\022\020\n"
    "\010whichone\030\002 \001(\005\022\020\n\010objectid\030\003 \001(\005\"M\n\022GM_"
    "FristChargeData\022\024\n\014m_firststate\030\001 \002(\005\022!\n"
    "\nm_objectid\030\002 \003(\0132\r.GM_RewardObj\"&\n\022GM_G"
    "etWeaponResult\022\020\n\010m_result\030\001 \002(\005", 952);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "activity.txt", &protobuf_RegisterTypes);
  GM_RewardObj::default_instance_ = new GM_RewardObj();
  GM_RewardInfo::default_instance_ = new GM_RewardInfo();
  GM_ChargeInfo::default_instance_ = new GM_ChargeInfo();
  GM_GetReward_Result::default_instance_ = new GM_GetReward_Result();
  GM_RequestGetReward::default_instance_ = new GM_RequestGetReward();
  GM_FristChargeData::default_instance_ = new GM_FristChargeData();
  GM_GetWeaponResult::default_instance_ = new GM_GetWeaponResult();
  GM_RewardObj::default_instance_->InitAsDefaultInstance();
  GM_RewardInfo::default_instance_->InitAsDefaultInstance();
  GM_ChargeInfo::default_instance_->InitAsDefaultInstance();
  GM_GetReward_Result::default_instance_->InitAsDefaultInstance();
  GM_RequestGetReward::default_instance_->InitAsDefaultInstance();
  GM_FristChargeData::default_instance_->InitAsDefaultInstance();
  GM_GetWeaponResult::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_activity_2etxt);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_activity_2etxt {
  StaticDescriptorInitializer_activity_2etxt() {
    protobuf_AddDesc_activity_2etxt();
  }
} static_descriptor_initializer_activity_2etxt_;

// ===================================================================

#ifndef _MSC_VER
const int GM_RewardObj::kObjidFieldNumber;
const int GM_RewardObj::kCountFieldNumber;
#endif  // !_MSC_VER

GM_RewardObj::GM_RewardObj()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_RewardObj::InitAsDefaultInstance() {
}

GM_RewardObj::GM_RewardObj(const GM_RewardObj& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_RewardObj::SharedCtor() {
  _cached_size_ = 0;
  objid_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_RewardObj::~GM_RewardObj() {
  SharedDtor();
}

void GM_RewardObj::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_RewardObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_RewardObj::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_RewardObj_descriptor_;
}

const GM_RewardObj& GM_RewardObj::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activity_2etxt();
  return *default_instance_;
}

GM_RewardObj* GM_RewardObj::default_instance_ = NULL;

GM_RewardObj* GM_RewardObj::New() const {
  return new GM_RewardObj;
}

void GM_RewardObj::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    objid_ = 0;
    count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_RewardObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 objid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_RewardObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 objid = 1;
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->objid(), output);
  }

  // optional int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_RewardObj::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 objid = 1;
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->objid(), target);
  }

  // optional int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_RewardObj::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 objid = 1;
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

    // optional int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_RewardObj::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_RewardObj* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_RewardObj*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_RewardObj::MergeFrom(const GM_RewardObj& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_RewardObj::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_RewardObj::CopyFrom(const GM_RewardObj& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_RewardObj::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_RewardObj::Swap(GM_RewardObj* other) {
  if (other != this) {
    std::swap(objid_, other->objid_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_RewardObj::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_RewardObj_descriptor_;
  metadata.reflection = GM_RewardObj_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_RewardInfo::kChargecountFieldNumber;
const int GM_RewardInfo::kGoldFieldNumber;
const int GM_RewardInfo::kMoneyFieldNumber;
const int GM_RewardInfo::kExpFieldNumber;
const int GM_RewardInfo::kPercentgoldFieldNumber;
const int GM_RewardInfo::kPercentmoneyFieldNumber;
const int GM_RewardInfo::kGiftbagObjidFieldNumber;
const int GM_RewardInfo::kObjsFieldNumber;
#endif  // !_MSC_VER

GM_RewardInfo::GM_RewardInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_RewardInfo::InitAsDefaultInstance() {
}

GM_RewardInfo::GM_RewardInfo(const GM_RewardInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_RewardInfo::SharedCtor() {
  _cached_size_ = 0;
  chargecount_ = 0;
  gold_ = 0;
  money_ = 0;
  exp_ = 0;
  percentgold_ = 0;
  percentmoney_ = 0;
  giftbag_objid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_RewardInfo::~GM_RewardInfo() {
  SharedDtor();
}

void GM_RewardInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_RewardInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_RewardInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_RewardInfo_descriptor_;
}

const GM_RewardInfo& GM_RewardInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activity_2etxt();
  return *default_instance_;
}

GM_RewardInfo* GM_RewardInfo::default_instance_ = NULL;

GM_RewardInfo* GM_RewardInfo::New() const {
  return new GM_RewardInfo;
}

void GM_RewardInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    chargecount_ = 0;
    gold_ = 0;
    money_ = 0;
    exp_ = 0;
    percentgold_ = 0;
    percentmoney_ = 0;
    giftbag_objid_ = 0;
  }
  objs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_RewardInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 gold = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_money;
        break;
      }

      // optional int32 money = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_exp;
        break;
      }

      // optional int32 exp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_objs;
        break;
      }

      // repeated .GM_RewardObj objs = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_objs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_objs()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_objs;
        if (input->ExpectTag(40)) goto parse_chargecount;
        break;
      }

      // optional int32 chargecount = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_chargecount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chargecount_)));
          set_has_chargecount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_percentgold;
        break;
      }

      // optional int32 percentgold = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_percentgold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &percentgold_)));
          set_has_percentgold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_percentmoney;
        break;
      }

      // optional int32 percentmoney = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_percentmoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &percentmoney_)));
          set_has_percentmoney();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_giftbag_objid;
        break;
      }

      // required int32 giftbag_objid = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_giftbag_objid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &giftbag_objid_)));
          set_has_giftbag_objid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_RewardInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 gold = 1;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gold(), output);
  }

  // optional int32 money = 2;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->money(), output);
  }

  // optional int32 exp = 3;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->exp(), output);
  }

  // repeated .GM_RewardObj objs = 4;
  for (int i = 0; i < this->objs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->objs(i), output);
  }

  // optional int32 chargecount = 5;
  if (has_chargecount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->chargecount(), output);
  }

  // optional int32 percentgold = 6;
  if (has_percentgold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->percentgold(), output);
  }

  // optional int32 percentmoney = 7;
  if (has_percentmoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->percentmoney(), output);
  }

  // required int32 giftbag_objid = 8;
  if (has_giftbag_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->giftbag_objid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_RewardInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 gold = 1;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gold(), target);
  }

  // optional int32 money = 2;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->money(), target);
  }

  // optional int32 exp = 3;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->exp(), target);
  }

  // repeated .GM_RewardObj objs = 4;
  for (int i = 0; i < this->objs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->objs(i), target);
  }

  // optional int32 chargecount = 5;
  if (has_chargecount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->chargecount(), target);
  }

  // optional int32 percentgold = 6;
  if (has_percentgold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->percentgold(), target);
  }

  // optional int32 percentmoney = 7;
  if (has_percentmoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->percentmoney(), target);
  }

  // required int32 giftbag_objid = 8;
  if (has_giftbag_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->giftbag_objid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_RewardInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 chargecount = 5;
    if (has_chargecount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chargecount());
    }

    // optional int32 gold = 1;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

    // optional int32 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

    // optional int32 exp = 3;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }

    // optional int32 percentgold = 6;
    if (has_percentgold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->percentgold());
    }

    // optional int32 percentmoney = 7;
    if (has_percentmoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->percentmoney());
    }

    // required int32 giftbag_objid = 8;
    if (has_giftbag_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->giftbag_objid());
    }

  }
  // repeated .GM_RewardObj objs = 4;
  total_size += 1 * this->objs_size();
  for (int i = 0; i < this->objs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->objs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_RewardInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_RewardInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_RewardInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_RewardInfo::MergeFrom(const GM_RewardInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  objs_.MergeFrom(from.objs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chargecount()) {
      set_chargecount(from.chargecount());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_percentgold()) {
      set_percentgold(from.percentgold());
    }
    if (from.has_percentmoney()) {
      set_percentmoney(from.percentmoney());
    }
    if (from.has_giftbag_objid()) {
      set_giftbag_objid(from.giftbag_objid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_RewardInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_RewardInfo::CopyFrom(const GM_RewardInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_RewardInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000040) != 0x00000040) return false;

  for (int i = 0; i < objs_size(); i++) {
    if (!this->objs(i).IsInitialized()) return false;
  }
  return true;
}

void GM_RewardInfo::Swap(GM_RewardInfo* other) {
  if (other != this) {
    std::swap(chargecount_, other->chargecount_);
    std::swap(gold_, other->gold_);
    std::swap(money_, other->money_);
    std::swap(exp_, other->exp_);
    std::swap(percentgold_, other->percentgold_);
    std::swap(percentmoney_, other->percentmoney_);
    std::swap(giftbag_objid_, other->giftbag_objid_);
    objs_.Swap(&other->objs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_RewardInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_RewardInfo_descriptor_;
  metadata.reflection = GM_RewardInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_ChargeInfo::kFirstchargedataFieldNumber;
const int GM_ChargeInfo::kOncechargedataFieldNumber;
const int GM_ChargeInfo::kTotalchargedataFieldNumber;
const int GM_ChargeInfo::kDailychargedataFieldNumber;
const int GM_ChargeInfo::kDailychargecountFieldNumber;
const int GM_ChargeInfo::kFirstchargeFieldNumber;
const int GM_ChargeInfo::kOncechargeFieldNumber;
const int GM_ChargeInfo::kTotalchargeFieldNumber;
const int GM_ChargeInfo::kDailychargeFieldNumber;
const int GM_ChargeInfo::kFirsttxt1FieldNumber;
const int GM_ChargeInfo::kFirsttxt2FieldNumber;
const int GM_ChargeInfo::kDailytxt1FieldNumber;
const int GM_ChargeInfo::kDailytxt2FieldNumber;
const int GM_ChargeInfo::kOncetxt1FieldNumber;
const int GM_ChargeInfo::kOncetxt2FieldNumber;
const int GM_ChargeInfo::kTotaltxt1FieldNumber;
const int GM_ChargeInfo::kTotaltxt2FieldNumber;
const int GM_ChargeInfo::kTotalchargecountFieldNumber;
#endif  // !_MSC_VER

GM_ChargeInfo::GM_ChargeInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_ChargeInfo::InitAsDefaultInstance() {
}

GM_ChargeInfo::GM_ChargeInfo(const GM_ChargeInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_ChargeInfo::SharedCtor() {
  _cached_size_ = 0;
  firstchargedata_ = 0;
  dailychargedata_ = 0;
  dailychargecount_ = 0;
  firsttxt1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  firsttxt2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  dailytxt1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  dailytxt2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  oncetxt1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  oncetxt2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  totaltxt1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  totaltxt2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  totalchargecount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_ChargeInfo::~GM_ChargeInfo() {
  SharedDtor();
}

void GM_ChargeInfo::SharedDtor() {
  if (firsttxt1_ != &::google::protobuf::internal::kEmptyString) {
    delete firsttxt1_;
  }
  if (firsttxt2_ != &::google::protobuf::internal::kEmptyString) {
    delete firsttxt2_;
  }
  if (dailytxt1_ != &::google::protobuf::internal::kEmptyString) {
    delete dailytxt1_;
  }
  if (dailytxt2_ != &::google::protobuf::internal::kEmptyString) {
    delete dailytxt2_;
  }
  if (oncetxt1_ != &::google::protobuf::internal::kEmptyString) {
    delete oncetxt1_;
  }
  if (oncetxt2_ != &::google::protobuf::internal::kEmptyString) {
    delete oncetxt2_;
  }
  if (totaltxt1_ != &::google::protobuf::internal::kEmptyString) {
    delete totaltxt1_;
  }
  if (totaltxt2_ != &::google::protobuf::internal::kEmptyString) {
    delete totaltxt2_;
  }
  if (this != default_instance_) {
  }
}

void GM_ChargeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_ChargeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_ChargeInfo_descriptor_;
}

const GM_ChargeInfo& GM_ChargeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activity_2etxt();
  return *default_instance_;
}

GM_ChargeInfo* GM_ChargeInfo::default_instance_ = NULL;

GM_ChargeInfo* GM_ChargeInfo::New() const {
  return new GM_ChargeInfo;
}

void GM_ChargeInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    firstchargedata_ = 0;
    dailychargedata_ = 0;
    dailychargecount_ = 0;
  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (has_firsttxt1()) {
      if (firsttxt1_ != &::google::protobuf::internal::kEmptyString) {
        firsttxt1_->clear();
      }
    }
    if (has_firsttxt2()) {
      if (firsttxt2_ != &::google::protobuf::internal::kEmptyString) {
        firsttxt2_->clear();
      }
    }
    if (has_dailytxt1()) {
      if (dailytxt1_ != &::google::protobuf::internal::kEmptyString) {
        dailytxt1_->clear();
      }
    }
    if (has_dailytxt2()) {
      if (dailytxt2_ != &::google::protobuf::internal::kEmptyString) {
        dailytxt2_->clear();
      }
    }
    if (has_oncetxt1()) {
      if (oncetxt1_ != &::google::protobuf::internal::kEmptyString) {
        oncetxt1_->clear();
      }
    }
    if (has_oncetxt2()) {
      if (oncetxt2_ != &::google::protobuf::internal::kEmptyString) {
        oncetxt2_->clear();
      }
    }
    if (has_totaltxt1()) {
      if (totaltxt1_ != &::google::protobuf::internal::kEmptyString) {
        totaltxt1_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_totaltxt2()) {
      if (totaltxt2_ != &::google::protobuf::internal::kEmptyString) {
        totaltxt2_->clear();
      }
    }
    totalchargecount_ = 0;
  }
  oncechargedata_.Clear();
  totalchargedata_.Clear();
  firstcharge_.Clear();
  oncecharge_.Clear();
  totalcharge_.Clear();
  dailycharge_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_ChargeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 firstchargedata = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &firstchargedata_)));
          set_has_firstchargedata();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_oncechargedata;
        break;
      }

      // repeated int32 oncechargedata = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_oncechargedata:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_oncechargedata())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_oncechargedata())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_oncechargedata;
        if (input->ExpectTag(24)) goto parse_totalchargedata;
        break;
      }

      // repeated int32 totalchargedata = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_totalchargedata:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_totalchargedata())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_totalchargedata())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_totalchargedata;
        if (input->ExpectTag(34)) goto parse_firstcharge;
        break;
      }

      // repeated .GM_RewardInfo firstcharge = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_firstcharge:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_firstcharge()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_firstcharge;
        if (input->ExpectTag(42)) goto parse_oncecharge;
        break;
      }

      // repeated .GM_RewardInfo oncecharge = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_oncecharge:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_oncecharge()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_oncecharge;
        if (input->ExpectTag(50)) goto parse_totalcharge;
        break;
      }

      // repeated .GM_RewardInfo totalcharge = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_totalcharge:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_totalcharge()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_totalcharge;
        if (input->ExpectTag(58)) goto parse_dailycharge;
        break;
      }

      // repeated .GM_RewardInfo dailycharge = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dailycharge:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dailycharge()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_dailycharge;
        if (input->ExpectTag(64)) goto parse_dailychargedata;
        break;
      }

      // optional int32 dailychargedata = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dailychargedata:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dailychargedata_)));
          set_has_dailychargedata();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_dailychargecount;
        break;
      }

      // optional int32 dailychargecount = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dailychargecount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dailychargecount_)));
          set_has_dailychargecount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_totalchargecount;
        break;
      }

      // optional int32 totalchargecount = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_totalchargecount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalchargecount_)));
          set_has_totalchargecount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_firsttxt1;
        break;
      }

      // optional string firsttxt1 = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_firsttxt1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firsttxt1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->firsttxt1().data(), this->firsttxt1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_firsttxt2;
        break;
      }

      // optional string firsttxt2 = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_firsttxt2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firsttxt2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->firsttxt2().data(), this->firsttxt2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_dailytxt1;
        break;
      }

      // optional string dailytxt1 = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dailytxt1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dailytxt1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->dailytxt1().data(), this->dailytxt1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_dailytxt2;
        break;
      }

      // optional string dailytxt2 = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dailytxt2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dailytxt2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->dailytxt2().data(), this->dailytxt2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_oncetxt1;
        break;
      }

      // optional string oncetxt1 = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_oncetxt1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oncetxt1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->oncetxt1().data(), this->oncetxt1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_oncetxt2;
        break;
      }

      // optional string oncetxt2 = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_oncetxt2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oncetxt2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->oncetxt2().data(), this->oncetxt2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_totaltxt1;
        break;
      }

      // optional string totaltxt1 = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_totaltxt1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totaltxt1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->totaltxt1().data(), this->totaltxt1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_totaltxt2;
        break;
      }

      // optional string totaltxt2 = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_totaltxt2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totaltxt2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->totaltxt2().data(), this->totaltxt2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_ChargeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 firstchargedata = 1;
  if (has_firstchargedata()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->firstchargedata(), output);
  }

  // repeated int32 oncechargedata = 2;
  for (int i = 0; i < this->oncechargedata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->oncechargedata(i), output);
  }

  // repeated int32 totalchargedata = 3;
  for (int i = 0; i < this->totalchargedata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->totalchargedata(i), output);
  }

  // repeated .GM_RewardInfo firstcharge = 4;
  for (int i = 0; i < this->firstcharge_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->firstcharge(i), output);
  }

  // repeated .GM_RewardInfo oncecharge = 5;
  for (int i = 0; i < this->oncecharge_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->oncecharge(i), output);
  }

  // repeated .GM_RewardInfo totalcharge = 6;
  for (int i = 0; i < this->totalcharge_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->totalcharge(i), output);
  }

  // repeated .GM_RewardInfo dailycharge = 7;
  for (int i = 0; i < this->dailycharge_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->dailycharge(i), output);
  }

  // optional int32 dailychargedata = 8;
  if (has_dailychargedata()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->dailychargedata(), output);
  }

  // optional int32 dailychargecount = 9;
  if (has_dailychargecount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->dailychargecount(), output);
  }

  // optional int32 totalchargecount = 10;
  if (has_totalchargecount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->totalchargecount(), output);
  }

  // optional string firsttxt1 = 11;
  if (has_firsttxt1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->firsttxt1().data(), this->firsttxt1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->firsttxt1(), output);
  }

  // optional string firsttxt2 = 12;
  if (has_firsttxt2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->firsttxt2().data(), this->firsttxt2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->firsttxt2(), output);
  }

  // optional string dailytxt1 = 13;
  if (has_dailytxt1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dailytxt1().data(), this->dailytxt1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->dailytxt1(), output);
  }

  // optional string dailytxt2 = 14;
  if (has_dailytxt2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dailytxt2().data(), this->dailytxt2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->dailytxt2(), output);
  }

  // optional string oncetxt1 = 15;
  if (has_oncetxt1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oncetxt1().data(), this->oncetxt1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->oncetxt1(), output);
  }

  // optional string oncetxt2 = 16;
  if (has_oncetxt2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oncetxt2().data(), this->oncetxt2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->oncetxt2(), output);
  }

  // optional string totaltxt1 = 17;
  if (has_totaltxt1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->totaltxt1().data(), this->totaltxt1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->totaltxt1(), output);
  }

  // optional string totaltxt2 = 18;
  if (has_totaltxt2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->totaltxt2().data(), this->totaltxt2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->totaltxt2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_ChargeInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 firstchargedata = 1;
  if (has_firstchargedata()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->firstchargedata(), target);
  }

  // repeated int32 oncechargedata = 2;
  for (int i = 0; i < this->oncechargedata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->oncechargedata(i), target);
  }

  // repeated int32 totalchargedata = 3;
  for (int i = 0; i < this->totalchargedata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->totalchargedata(i), target);
  }

  // repeated .GM_RewardInfo firstcharge = 4;
  for (int i = 0; i < this->firstcharge_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->firstcharge(i), target);
  }

  // repeated .GM_RewardInfo oncecharge = 5;
  for (int i = 0; i < this->oncecharge_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->oncecharge(i), target);
  }

  // repeated .GM_RewardInfo totalcharge = 6;
  for (int i = 0; i < this->totalcharge_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->totalcharge(i), target);
  }

  // repeated .GM_RewardInfo dailycharge = 7;
  for (int i = 0; i < this->dailycharge_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->dailycharge(i), target);
  }

  // optional int32 dailychargedata = 8;
  if (has_dailychargedata()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->dailychargedata(), target);
  }

  // optional int32 dailychargecount = 9;
  if (has_dailychargecount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->dailychargecount(), target);
  }

  // optional int32 totalchargecount = 10;
  if (has_totalchargecount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->totalchargecount(), target);
  }

  // optional string firsttxt1 = 11;
  if (has_firsttxt1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->firsttxt1().data(), this->firsttxt1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->firsttxt1(), target);
  }

  // optional string firsttxt2 = 12;
  if (has_firsttxt2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->firsttxt2().data(), this->firsttxt2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->firsttxt2(), target);
  }

  // optional string dailytxt1 = 13;
  if (has_dailytxt1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dailytxt1().data(), this->dailytxt1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->dailytxt1(), target);
  }

  // optional string dailytxt2 = 14;
  if (has_dailytxt2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dailytxt2().data(), this->dailytxt2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->dailytxt2(), target);
  }

  // optional string oncetxt1 = 15;
  if (has_oncetxt1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oncetxt1().data(), this->oncetxt1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->oncetxt1(), target);
  }

  // optional string oncetxt2 = 16;
  if (has_oncetxt2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oncetxt2().data(), this->oncetxt2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->oncetxt2(), target);
  }

  // optional string totaltxt1 = 17;
  if (has_totaltxt1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->totaltxt1().data(), this->totaltxt1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->totaltxt1(), target);
  }

  // optional string totaltxt2 = 18;
  if (has_totaltxt2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->totaltxt2().data(), this->totaltxt2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->totaltxt2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_ChargeInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 firstchargedata = 1;
    if (has_firstchargedata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->firstchargedata());
    }

    // optional int32 dailychargedata = 8;
    if (has_dailychargedata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dailychargedata());
    }

    // optional int32 dailychargecount = 9;
    if (has_dailychargecount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dailychargecount());
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // optional string firsttxt1 = 11;
    if (has_firsttxt1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->firsttxt1());
    }

    // optional string firsttxt2 = 12;
    if (has_firsttxt2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->firsttxt2());
    }

    // optional string dailytxt1 = 13;
    if (has_dailytxt1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dailytxt1());
    }

    // optional string dailytxt2 = 14;
    if (has_dailytxt2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dailytxt2());
    }

    // optional string oncetxt1 = 15;
    if (has_oncetxt1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oncetxt1());
    }

    // optional string oncetxt2 = 16;
    if (has_oncetxt2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oncetxt2());
    }

    // optional string totaltxt1 = 17;
    if (has_totaltxt1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->totaltxt1());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string totaltxt2 = 18;
    if (has_totaltxt2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->totaltxt2());
    }

    // optional int32 totalchargecount = 10;
    if (has_totalchargecount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->totalchargecount());
    }

  }
  // repeated int32 oncechargedata = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->oncechargedata_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->oncechargedata(i));
    }
    total_size += 1 * this->oncechargedata_size() + data_size;
  }

  // repeated int32 totalchargedata = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->totalchargedata_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->totalchargedata(i));
    }
    total_size += 1 * this->totalchargedata_size() + data_size;
  }

  // repeated .GM_RewardInfo firstcharge = 4;
  total_size += 1 * this->firstcharge_size();
  for (int i = 0; i < this->firstcharge_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->firstcharge(i));
  }

  // repeated .GM_RewardInfo oncecharge = 5;
  total_size += 1 * this->oncecharge_size();
  for (int i = 0; i < this->oncecharge_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->oncecharge(i));
  }

  // repeated .GM_RewardInfo totalcharge = 6;
  total_size += 1 * this->totalcharge_size();
  for (int i = 0; i < this->totalcharge_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->totalcharge(i));
  }

  // repeated .GM_RewardInfo dailycharge = 7;
  total_size += 1 * this->dailycharge_size();
  for (int i = 0; i < this->dailycharge_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dailycharge(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_ChargeInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_ChargeInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_ChargeInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_ChargeInfo::MergeFrom(const GM_ChargeInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  oncechargedata_.MergeFrom(from.oncechargedata_);
  totalchargedata_.MergeFrom(from.totalchargedata_);
  firstcharge_.MergeFrom(from.firstcharge_);
  oncecharge_.MergeFrom(from.oncecharge_);
  totalcharge_.MergeFrom(from.totalcharge_);
  dailycharge_.MergeFrom(from.dailycharge_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_firstchargedata()) {
      set_firstchargedata(from.firstchargedata());
    }
    if (from.has_dailychargedata()) {
      set_dailychargedata(from.dailychargedata());
    }
    if (from.has_dailychargecount()) {
      set_dailychargecount(from.dailychargecount());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_firsttxt1()) {
      set_firsttxt1(from.firsttxt1());
    }
    if (from.has_firsttxt2()) {
      set_firsttxt2(from.firsttxt2());
    }
    if (from.has_dailytxt1()) {
      set_dailytxt1(from.dailytxt1());
    }
    if (from.has_dailytxt2()) {
      set_dailytxt2(from.dailytxt2());
    }
    if (from.has_oncetxt1()) {
      set_oncetxt1(from.oncetxt1());
    }
    if (from.has_oncetxt2()) {
      set_oncetxt2(from.oncetxt2());
    }
    if (from.has_totaltxt1()) {
      set_totaltxt1(from.totaltxt1());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_totaltxt2()) {
      set_totaltxt2(from.totaltxt2());
    }
    if (from.has_totalchargecount()) {
      set_totalchargecount(from.totalchargecount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_ChargeInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_ChargeInfo::CopyFrom(const GM_ChargeInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_ChargeInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < firstcharge_size(); i++) {
    if (!this->firstcharge(i).IsInitialized()) return false;
  }
  for (int i = 0; i < oncecharge_size(); i++) {
    if (!this->oncecharge(i).IsInitialized()) return false;
  }
  for (int i = 0; i < totalcharge_size(); i++) {
    if (!this->totalcharge(i).IsInitialized()) return false;
  }
  for (int i = 0; i < dailycharge_size(); i++) {
    if (!this->dailycharge(i).IsInitialized()) return false;
  }
  return true;
}

void GM_ChargeInfo::Swap(GM_ChargeInfo* other) {
  if (other != this) {
    std::swap(firstchargedata_, other->firstchargedata_);
    oncechargedata_.Swap(&other->oncechargedata_);
    totalchargedata_.Swap(&other->totalchargedata_);
    std::swap(dailychargedata_, other->dailychargedata_);
    std::swap(dailychargecount_, other->dailychargecount_);
    firstcharge_.Swap(&other->firstcharge_);
    oncecharge_.Swap(&other->oncecharge_);
    totalcharge_.Swap(&other->totalcharge_);
    dailycharge_.Swap(&other->dailycharge_);
    std::swap(firsttxt1_, other->firsttxt1_);
    std::swap(firsttxt2_, other->firsttxt2_);
    std::swap(dailytxt1_, other->dailytxt1_);
    std::swap(dailytxt2_, other->dailytxt2_);
    std::swap(oncetxt1_, other->oncetxt1_);
    std::swap(oncetxt2_, other->oncetxt2_);
    std::swap(totaltxt1_, other->totaltxt1_);
    std::swap(totaltxt2_, other->totaltxt2_);
    std::swap(totalchargecount_, other->totalchargecount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_ChargeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_ChargeInfo_descriptor_;
  metadata.reflection = GM_ChargeInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_GetReward_Result::kResultFieldNumber;
const int GM_GetReward_Result::kLeftTimesFieldNumber;
#endif  // !_MSC_VER

GM_GetReward_Result::GM_GetReward_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_GetReward_Result::InitAsDefaultInstance() {
}

GM_GetReward_Result::GM_GetReward_Result(const GM_GetReward_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_GetReward_Result::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  lefttimes_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_GetReward_Result::~GM_GetReward_Result() {
  SharedDtor();
}

void GM_GetReward_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_GetReward_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_GetReward_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_GetReward_Result_descriptor_;
}

const GM_GetReward_Result& GM_GetReward_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activity_2etxt();
  return *default_instance_;
}

GM_GetReward_Result* GM_GetReward_Result::default_instance_ = NULL;

GM_GetReward_Result* GM_GetReward_Result::New() const {
  return new GM_GetReward_Result;
}

void GM_GetReward_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    lefttimes_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_GetReward_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_leftTimes;
        break;
      }

      // optional uint32 leftTimes = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leftTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lefttimes_)));
          set_has_lefttimes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_GetReward_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional uint32 leftTimes = 2;
  if (has_lefttimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->lefttimes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_GetReward_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional uint32 leftTimes = 2;
  if (has_lefttimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->lefttimes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_GetReward_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional uint32 leftTimes = 2;
    if (has_lefttimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lefttimes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_GetReward_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_GetReward_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_GetReward_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_GetReward_Result::MergeFrom(const GM_GetReward_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_lefttimes()) {
      set_lefttimes(from.lefttimes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_GetReward_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_GetReward_Result::CopyFrom(const GM_GetReward_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_GetReward_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_GetReward_Result::Swap(GM_GetReward_Result* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(lefttimes_, other->lefttimes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_GetReward_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_GetReward_Result_descriptor_;
  metadata.reflection = GM_GetReward_Result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_RequestGetReward::kTypeFieldNumber;
const int GM_RequestGetReward::kWhichoneFieldNumber;
const int GM_RequestGetReward::kObjectidFieldNumber;
#endif  // !_MSC_VER

GM_RequestGetReward::GM_RequestGetReward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_RequestGetReward::InitAsDefaultInstance() {
}

GM_RequestGetReward::GM_RequestGetReward(const GM_RequestGetReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_RequestGetReward::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  whichone_ = 0;
  objectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_RequestGetReward::~GM_RequestGetReward() {
  SharedDtor();
}

void GM_RequestGetReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_RequestGetReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_RequestGetReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_RequestGetReward_descriptor_;
}

const GM_RequestGetReward& GM_RequestGetReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activity_2etxt();
  return *default_instance_;
}

GM_RequestGetReward* GM_RequestGetReward::default_instance_ = NULL;

GM_RequestGetReward* GM_RequestGetReward::New() const {
  return new GM_RequestGetReward;
}

void GM_RequestGetReward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    whichone_ = 0;
    objectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_RequestGetReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_whichone;
        break;
      }

      // optional int32 whichone = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_whichone:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whichone_)));
          set_has_whichone();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_objectid;
        break;
      }

      // optional int32 objectid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_objectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_RequestGetReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 whichone = 2;
  if (has_whichone()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->whichone(), output);
  }

  // optional int32 objectid = 3;
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->objectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_RequestGetReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 whichone = 2;
  if (has_whichone()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->whichone(), target);
  }

  // optional int32 objectid = 3;
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->objectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_RequestGetReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 whichone = 2;
    if (has_whichone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->whichone());
    }

    // optional int32 objectid = 3;
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_RequestGetReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_RequestGetReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_RequestGetReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_RequestGetReward::MergeFrom(const GM_RequestGetReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_whichone()) {
      set_whichone(from.whichone());
    }
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_RequestGetReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_RequestGetReward::CopyFrom(const GM_RequestGetReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_RequestGetReward::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_RequestGetReward::Swap(GM_RequestGetReward* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(whichone_, other->whichone_);
    std::swap(objectid_, other->objectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_RequestGetReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_RequestGetReward_descriptor_;
  metadata.reflection = GM_RequestGetReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_FristChargeData::kMFirststateFieldNumber;
const int GM_FristChargeData::kMObjectidFieldNumber;
#endif  // !_MSC_VER

GM_FristChargeData::GM_FristChargeData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_FristChargeData::InitAsDefaultInstance() {
}

GM_FristChargeData::GM_FristChargeData(const GM_FristChargeData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_FristChargeData::SharedCtor() {
  _cached_size_ = 0;
  m_firststate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_FristChargeData::~GM_FristChargeData() {
  SharedDtor();
}

void GM_FristChargeData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_FristChargeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_FristChargeData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_FristChargeData_descriptor_;
}

const GM_FristChargeData& GM_FristChargeData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activity_2etxt();
  return *default_instance_;
}

GM_FristChargeData* GM_FristChargeData::default_instance_ = NULL;

GM_FristChargeData* GM_FristChargeData::New() const {
  return new GM_FristChargeData;
}

void GM_FristChargeData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_firststate_ = 0;
  }
  m_objectid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_FristChargeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_firststate = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_firststate_)));
          set_has_m_firststate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_objectid;
        break;
      }

      // repeated .GM_RewardObj m_objectid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_objectid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_objectid()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_objectid;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_FristChargeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_firststate = 1;
  if (has_m_firststate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_firststate(), output);
  }

  // repeated .GM_RewardObj m_objectid = 2;
  for (int i = 0; i < this->m_objectid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_objectid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_FristChargeData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_firststate = 1;
  if (has_m_firststate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_firststate(), target);
  }

  // repeated .GM_RewardObj m_objectid = 2;
  for (int i = 0; i < this->m_objectid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_objectid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_FristChargeData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_firststate = 1;
    if (has_m_firststate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_firststate());
    }

  }
  // repeated .GM_RewardObj m_objectid = 2;
  total_size += 1 * this->m_objectid_size();
  for (int i = 0; i < this->m_objectid_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_objectid(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_FristChargeData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_FristChargeData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_FristChargeData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_FristChargeData::MergeFrom(const GM_FristChargeData& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_objectid_.MergeFrom(from.m_objectid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_firststate()) {
      set_m_firststate(from.m_firststate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_FristChargeData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_FristChargeData::CopyFrom(const GM_FristChargeData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_FristChargeData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < m_objectid_size(); i++) {
    if (!this->m_objectid(i).IsInitialized()) return false;
  }
  return true;
}

void GM_FristChargeData::Swap(GM_FristChargeData* other) {
  if (other != this) {
    std::swap(m_firststate_, other->m_firststate_);
    m_objectid_.Swap(&other->m_objectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_FristChargeData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_FristChargeData_descriptor_;
  metadata.reflection = GM_FristChargeData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_GetWeaponResult::kMResultFieldNumber;
#endif  // !_MSC_VER

GM_GetWeaponResult::GM_GetWeaponResult()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_GetWeaponResult::InitAsDefaultInstance() {
}

GM_GetWeaponResult::GM_GetWeaponResult(const GM_GetWeaponResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_GetWeaponResult::SharedCtor() {
  _cached_size_ = 0;
  m_result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_GetWeaponResult::~GM_GetWeaponResult() {
  SharedDtor();
}

void GM_GetWeaponResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_GetWeaponResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_GetWeaponResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_GetWeaponResult_descriptor_;
}

const GM_GetWeaponResult& GM_GetWeaponResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activity_2etxt();
  return *default_instance_;
}

GM_GetWeaponResult* GM_GetWeaponResult::default_instance_ = NULL;

GM_GetWeaponResult* GM_GetWeaponResult::New() const {
  return new GM_GetWeaponResult;
}

void GM_GetWeaponResult::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_GetWeaponResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_result_)));
          set_has_m_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_GetWeaponResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_result = 1;
  if (has_m_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_GetWeaponResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_result = 1;
  if (has_m_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_GetWeaponResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_result = 1;
    if (has_m_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_GetWeaponResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_GetWeaponResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_GetWeaponResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_GetWeaponResult::MergeFrom(const GM_GetWeaponResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_result()) {
      set_m_result(from.m_result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_GetWeaponResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_GetWeaponResult::CopyFrom(const GM_GetWeaponResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_GetWeaponResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_GetWeaponResult::Swap(GM_GetWeaponResult* other) {
  if (other != this) {
    std::swap(m_result_, other->m_result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_GetWeaponResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_GetWeaponResult_descriptor_;
  metadata.reflection = GM_GetWeaponResult_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
