// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_Recharge.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SP_Recharge.txt.pb.h"
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* SM_SendRechargeToGs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SM_SendRechargeToGs_reflection_ = NULL;
const ::google::protobuf::Descriptor* SM_SendRechargeData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SM_SendRechargeData_reflection_ = NULL;
const ::google::protobuf::Descriptor* SM_SendWalfareToGs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SM_SendWalfareToGs_reflection_ = NULL;
const ::google::protobuf::Descriptor* SM_SendWalfareData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SM_SendWalfareData_reflection_ = NULL;
const ::google::protobuf::Descriptor* SM_SendShopobjToGs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SM_SendShopobjToGs_reflection_ = NULL;
const ::google::protobuf::Descriptor* SM_SendShopobjData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SM_SendShopobjData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_SP_5fRecharge_2etxt() {
  protobuf_AddDesc_SP_5fRecharge_2etxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SP_Recharge.txt");
  GOOGLE_CHECK(file != NULL);
  SM_SendRechargeToGs_descriptor_ = file->message_type(0);
  static const int SM_SendRechargeToGs_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendRechargeToGs, m_roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendRechargeToGs, m_rechargedata_),
  };
  SM_SendRechargeToGs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SM_SendRechargeToGs_descriptor_,
      SM_SendRechargeToGs::default_instance_,
      SM_SendRechargeToGs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendRechargeToGs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendRechargeToGs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SM_SendRechargeToGs));
  SM_SendRechargeData_descriptor_ = file->message_type(1);
  static const int SM_SendRechargeData_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendRechargeData, m_roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendRechargeData, m_productid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendRechargeData, m_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendRechargeData, m_endtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendRechargeData, m_lastclick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendRechargeData, m_chargetype_),
  };
  SM_SendRechargeData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SM_SendRechargeData_descriptor_,
      SM_SendRechargeData::default_instance_,
      SM_SendRechargeData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendRechargeData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendRechargeData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SM_SendRechargeData));
  SM_SendWalfareToGs_descriptor_ = file->message_type(2);
  static const int SM_SendWalfareToGs_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendWalfareToGs, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendWalfareToGs, m_data_),
  };
  SM_SendWalfareToGs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SM_SendWalfareToGs_descriptor_,
      SM_SendWalfareToGs::default_instance_,
      SM_SendWalfareToGs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendWalfareToGs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendWalfareToGs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SM_SendWalfareToGs));
  SM_SendWalfareData_descriptor_ = file->message_type(3);
  static const int SM_SendWalfareData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendWalfareData, m_objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendWalfareData, m_buycount_),
  };
  SM_SendWalfareData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SM_SendWalfareData_descriptor_,
      SM_SendWalfareData::default_instance_,
      SM_SendWalfareData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendWalfareData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendWalfareData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SM_SendWalfareData));
  SM_SendShopobjToGs_descriptor_ = file->message_type(4);
  static const int SM_SendShopobjToGs_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendShopobjToGs, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendShopobjToGs, m_data_),
  };
  SM_SendShopobjToGs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SM_SendShopobjToGs_descriptor_,
      SM_SendShopobjToGs::default_instance_,
      SM_SendShopobjToGs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendShopobjToGs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendShopobjToGs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SM_SendShopobjToGs));
  SM_SendShopobjData_descriptor_ = file->message_type(5);
  static const int SM_SendShopobjData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendShopobjData, m_objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendShopobjData, m_buytimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendShopobjData, m_objtype_),
  };
  SM_SendShopobjData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SM_SendShopobjData_descriptor_,
      SM_SendShopobjData::default_instance_,
      SM_SendShopobjData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendShopobjData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendShopobjData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SM_SendShopobjData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SP_5fRecharge_2etxt);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SM_SendRechargeToGs_descriptor_, &SM_SendRechargeToGs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SM_SendRechargeData_descriptor_, &SM_SendRechargeData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SM_SendWalfareToGs_descriptor_, &SM_SendWalfareToGs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SM_SendWalfareData_descriptor_, &SM_SendWalfareData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SM_SendShopobjToGs_descriptor_, &SM_SendShopobjToGs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SM_SendShopobjData_descriptor_, &SM_SendShopobjData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SP_5fRecharge_2etxt() {
  delete SM_SendRechargeToGs::default_instance_;
  delete SM_SendRechargeToGs_reflection_;
  delete SM_SendRechargeData::default_instance_;
  delete SM_SendRechargeData_reflection_;
  delete SM_SendWalfareToGs::default_instance_;
  delete SM_SendWalfareToGs_reflection_;
  delete SM_SendWalfareData::default_instance_;
  delete SM_SendWalfareData_reflection_;
  delete SM_SendShopobjToGs::default_instance_;
  delete SM_SendShopobjToGs_reflection_;
  delete SM_SendShopobjData::default_instance_;
  delete SM_SendShopobjData_reflection_;
}

void protobuf_AddDesc_SP_5fRecharge_2etxt() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017SP_Recharge.txt\"U\n\023SM_SendRechargeToGs"
    "\022\020\n\010m_roleid\030\001 \002(\005\022,\n\016m_rechargedata\030\002 \003"
    "(\0132\024.SM_SendRechargeData\"\213\001\n\023SM_SendRech"
    "argeData\022\020\n\010m_roleid\030\001 \002(\005\022\023\n\013m_producti"
    "d\030\002 \002(\005\022\017\n\007m_times\030\003 \002(\005\022\021\n\tm_endtime\030\004 "
    "\002(\005\022\023\n\013m_lastclick\030\005 \002(\005\022\024\n\014m_chargetype"
    "\030\006 \002(\005\"I\n\022SM_SendWalfareToGs\022\016\n\006roleid\030\001"
    " \001(\005\022#\n\006m_data\030\002 \003(\0132\023.SM_SendWalfareDat"
    "a\"<\n\022SM_SendWalfareData\022\022\n\nm_objectid\030\001 "
    "\001(\005\022\022\n\nm_buycount\030\002 \001(\005\"I\n\022SM_SendShopob"
    "jToGs\022\016\n\006roleid\030\001 \001(\005\022#\n\006m_data\030\002 \003(\0132\023."
    "SM_SendShopobjData\"O\n\022SM_SendShopobjData"
    "\022\022\n\nm_objectid\030\001 \001(\005\022\022\n\nm_buytimes\030\002 \001(\005"
    "\022\021\n\tm_objtype\030\003 \001(\005", 539);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SP_Recharge.txt", &protobuf_RegisterTypes);
  SM_SendRechargeToGs::default_instance_ = new SM_SendRechargeToGs();
  SM_SendRechargeData::default_instance_ = new SM_SendRechargeData();
  SM_SendWalfareToGs::default_instance_ = new SM_SendWalfareToGs();
  SM_SendWalfareData::default_instance_ = new SM_SendWalfareData();
  SM_SendShopobjToGs::default_instance_ = new SM_SendShopobjToGs();
  SM_SendShopobjData::default_instance_ = new SM_SendShopobjData();
  SM_SendRechargeToGs::default_instance_->InitAsDefaultInstance();
  SM_SendRechargeData::default_instance_->InitAsDefaultInstance();
  SM_SendWalfareToGs::default_instance_->InitAsDefaultInstance();
  SM_SendWalfareData::default_instance_->InitAsDefaultInstance();
  SM_SendShopobjToGs::default_instance_->InitAsDefaultInstance();
  SM_SendShopobjData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SP_5fRecharge_2etxt);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SP_5fRecharge_2etxt {
  StaticDescriptorInitializer_SP_5fRecharge_2etxt() {
    protobuf_AddDesc_SP_5fRecharge_2etxt();
  }
} static_descriptor_initializer_SP_5fRecharge_2etxt_;

// ===================================================================

#ifndef _MSC_VER
const int SM_SendRechargeToGs::kMRoleidFieldNumber;
const int SM_SendRechargeToGs::kMRechargedataFieldNumber;
#endif  // !_MSC_VER

SM_SendRechargeToGs::SM_SendRechargeToGs()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SM_SendRechargeToGs::InitAsDefaultInstance() {
}

SM_SendRechargeToGs::SM_SendRechargeToGs(const SM_SendRechargeToGs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SM_SendRechargeToGs::SharedCtor() {
  _cached_size_ = 0;
  m_roleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SM_SendRechargeToGs::~SM_SendRechargeToGs() {
  SharedDtor();
}

void SM_SendRechargeToGs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SM_SendRechargeToGs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SM_SendRechargeToGs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SM_SendRechargeToGs_descriptor_;
}

const SM_SendRechargeToGs& SM_SendRechargeToGs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fRecharge_2etxt();
  return *default_instance_;
}

SM_SendRechargeToGs* SM_SendRechargeToGs::default_instance_ = NULL;

SM_SendRechargeToGs* SM_SendRechargeToGs::New() const {
  return new SM_SendRechargeToGs;
}

void SM_SendRechargeToGs::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_roleid_ = 0;
  }
  m_rechargedata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SM_SendRechargeToGs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid_)));
          set_has_m_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_rechargedata;
        break;
      }

      // repeated .SM_SendRechargeData m_rechargedata = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_rechargedata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_rechargedata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_rechargedata;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SM_SendRechargeToGs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_roleid = 1;
  if (has_m_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_roleid(), output);
  }

  // repeated .SM_SendRechargeData m_rechargedata = 2;
  for (int i = 0; i < this->m_rechargedata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_rechargedata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SM_SendRechargeToGs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_roleid = 1;
  if (has_m_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_roleid(), target);
  }

  // repeated .SM_SendRechargeData m_rechargedata = 2;
  for (int i = 0; i < this->m_rechargedata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_rechargedata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SM_SendRechargeToGs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_roleid = 1;
    if (has_m_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid());
    }

  }
  // repeated .SM_SendRechargeData m_rechargedata = 2;
  total_size += 1 * this->m_rechargedata_size();
  for (int i = 0; i < this->m_rechargedata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_rechargedata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SM_SendRechargeToGs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SM_SendRechargeToGs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SM_SendRechargeToGs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SM_SendRechargeToGs::MergeFrom(const SM_SendRechargeToGs& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_rechargedata_.MergeFrom(from.m_rechargedata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_roleid()) {
      set_m_roleid(from.m_roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SM_SendRechargeToGs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SM_SendRechargeToGs::CopyFrom(const SM_SendRechargeToGs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SM_SendRechargeToGs::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < m_rechargedata_size(); i++) {
    if (!this->m_rechargedata(i).IsInitialized()) return false;
  }
  return true;
}

void SM_SendRechargeToGs::Swap(SM_SendRechargeToGs* other) {
  if (other != this) {
    std::swap(m_roleid_, other->m_roleid_);
    m_rechargedata_.Swap(&other->m_rechargedata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SM_SendRechargeToGs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SM_SendRechargeToGs_descriptor_;
  metadata.reflection = SM_SendRechargeToGs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SM_SendRechargeData::kMRoleidFieldNumber;
const int SM_SendRechargeData::kMProductidFieldNumber;
const int SM_SendRechargeData::kMTimesFieldNumber;
const int SM_SendRechargeData::kMEndtimeFieldNumber;
const int SM_SendRechargeData::kMLastclickFieldNumber;
const int SM_SendRechargeData::kMChargetypeFieldNumber;
#endif  // !_MSC_VER

SM_SendRechargeData::SM_SendRechargeData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SM_SendRechargeData::InitAsDefaultInstance() {
}

SM_SendRechargeData::SM_SendRechargeData(const SM_SendRechargeData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SM_SendRechargeData::SharedCtor() {
  _cached_size_ = 0;
  m_roleid_ = 0;
  m_productid_ = 0;
  m_times_ = 0;
  m_endtime_ = 0;
  m_lastclick_ = 0;
  m_chargetype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SM_SendRechargeData::~SM_SendRechargeData() {
  SharedDtor();
}

void SM_SendRechargeData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SM_SendRechargeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SM_SendRechargeData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SM_SendRechargeData_descriptor_;
}

const SM_SendRechargeData& SM_SendRechargeData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fRecharge_2etxt();
  return *default_instance_;
}

SM_SendRechargeData* SM_SendRechargeData::default_instance_ = NULL;

SM_SendRechargeData* SM_SendRechargeData::New() const {
  return new SM_SendRechargeData;
}

void SM_SendRechargeData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_roleid_ = 0;
    m_productid_ = 0;
    m_times_ = 0;
    m_endtime_ = 0;
    m_lastclick_ = 0;
    m_chargetype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SM_SendRechargeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid_)));
          set_has_m_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_productid;
        break;
      }

      // required int32 m_productid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_productid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_productid_)));
          set_has_m_productid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_times;
        break;
      }

      // required int32 m_times = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_times_)));
          set_has_m_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_endtime;
        break;
      }

      // required int32 m_endtime = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_endtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_endtime_)));
          set_has_m_endtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_lastclick;
        break;
      }

      // required int32 m_lastclick = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lastclick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lastclick_)));
          set_has_m_lastclick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_chargetype;
        break;
      }

      // required int32 m_chargetype = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_chargetype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_chargetype_)));
          set_has_m_chargetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SM_SendRechargeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_roleid = 1;
  if (has_m_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_roleid(), output);
  }

  // required int32 m_productid = 2;
  if (has_m_productid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_productid(), output);
  }

  // required int32 m_times = 3;
  if (has_m_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_times(), output);
  }

  // required int32 m_endtime = 4;
  if (has_m_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_endtime(), output);
  }

  // required int32 m_lastclick = 5;
  if (has_m_lastclick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_lastclick(), output);
  }

  // required int32 m_chargetype = 6;
  if (has_m_chargetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_chargetype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SM_SendRechargeData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_roleid = 1;
  if (has_m_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_roleid(), target);
  }

  // required int32 m_productid = 2;
  if (has_m_productid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_productid(), target);
  }

  // required int32 m_times = 3;
  if (has_m_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_times(), target);
  }

  // required int32 m_endtime = 4;
  if (has_m_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_endtime(), target);
  }

  // required int32 m_lastclick = 5;
  if (has_m_lastclick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_lastclick(), target);
  }

  // required int32 m_chargetype = 6;
  if (has_m_chargetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_chargetype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SM_SendRechargeData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_roleid = 1;
    if (has_m_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid());
    }

    // required int32 m_productid = 2;
    if (has_m_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_productid());
    }

    // required int32 m_times = 3;
    if (has_m_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_times());
    }

    // required int32 m_endtime = 4;
    if (has_m_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_endtime());
    }

    // required int32 m_lastclick = 5;
    if (has_m_lastclick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lastclick());
    }

    // required int32 m_chargetype = 6;
    if (has_m_chargetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_chargetype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SM_SendRechargeData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SM_SendRechargeData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SM_SendRechargeData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SM_SendRechargeData::MergeFrom(const SM_SendRechargeData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_roleid()) {
      set_m_roleid(from.m_roleid());
    }
    if (from.has_m_productid()) {
      set_m_productid(from.m_productid());
    }
    if (from.has_m_times()) {
      set_m_times(from.m_times());
    }
    if (from.has_m_endtime()) {
      set_m_endtime(from.m_endtime());
    }
    if (from.has_m_lastclick()) {
      set_m_lastclick(from.m_lastclick());
    }
    if (from.has_m_chargetype()) {
      set_m_chargetype(from.m_chargetype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SM_SendRechargeData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SM_SendRechargeData::CopyFrom(const SM_SendRechargeData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SM_SendRechargeData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void SM_SendRechargeData::Swap(SM_SendRechargeData* other) {
  if (other != this) {
    std::swap(m_roleid_, other->m_roleid_);
    std::swap(m_productid_, other->m_productid_);
    std::swap(m_times_, other->m_times_);
    std::swap(m_endtime_, other->m_endtime_);
    std::swap(m_lastclick_, other->m_lastclick_);
    std::swap(m_chargetype_, other->m_chargetype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SM_SendRechargeData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SM_SendRechargeData_descriptor_;
  metadata.reflection = SM_SendRechargeData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SM_SendWalfareToGs::kRoleidFieldNumber;
const int SM_SendWalfareToGs::kMDataFieldNumber;
#endif  // !_MSC_VER

SM_SendWalfareToGs::SM_SendWalfareToGs()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SM_SendWalfareToGs::InitAsDefaultInstance() {
}

SM_SendWalfareToGs::SM_SendWalfareToGs(const SM_SendWalfareToGs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SM_SendWalfareToGs::SharedCtor() {
  _cached_size_ = 0;
  roleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SM_SendWalfareToGs::~SM_SendWalfareToGs() {
  SharedDtor();
}

void SM_SendWalfareToGs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SM_SendWalfareToGs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SM_SendWalfareToGs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SM_SendWalfareToGs_descriptor_;
}

const SM_SendWalfareToGs& SM_SendWalfareToGs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fRecharge_2etxt();
  return *default_instance_;
}

SM_SendWalfareToGs* SM_SendWalfareToGs::default_instance_ = NULL;

SM_SendWalfareToGs* SM_SendWalfareToGs::New() const {
  return new SM_SendWalfareToGs;
}

void SM_SendWalfareToGs::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    roleid_ = 0;
  }
  m_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SM_SendWalfareToGs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_data;
        break;
      }

      // repeated .SM_SendWalfareData m_data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SM_SendWalfareToGs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 roleid = 1;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // repeated .SM_SendWalfareData m_data = 2;
  for (int i = 0; i < this->m_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SM_SendWalfareToGs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 roleid = 1;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // repeated .SM_SendWalfareData m_data = 2;
  for (int i = 0; i < this->m_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SM_SendWalfareToGs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 roleid = 1;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleid());
    }

  }
  // repeated .SM_SendWalfareData m_data = 2;
  total_size += 1 * this->m_data_size();
  for (int i = 0; i < this->m_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SM_SendWalfareToGs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SM_SendWalfareToGs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SM_SendWalfareToGs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SM_SendWalfareToGs::MergeFrom(const SM_SendWalfareToGs& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_data_.MergeFrom(from.m_data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SM_SendWalfareToGs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SM_SendWalfareToGs::CopyFrom(const SM_SendWalfareToGs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SM_SendWalfareToGs::IsInitialized() const {

  return true;
}

void SM_SendWalfareToGs::Swap(SM_SendWalfareToGs* other) {
  if (other != this) {
    std::swap(roleid_, other->roleid_);
    m_data_.Swap(&other->m_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SM_SendWalfareToGs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SM_SendWalfareToGs_descriptor_;
  metadata.reflection = SM_SendWalfareToGs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SM_SendWalfareData::kMObjectidFieldNumber;
const int SM_SendWalfareData::kMBuycountFieldNumber;
#endif  // !_MSC_VER

SM_SendWalfareData::SM_SendWalfareData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SM_SendWalfareData::InitAsDefaultInstance() {
}

SM_SendWalfareData::SM_SendWalfareData(const SM_SendWalfareData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SM_SendWalfareData::SharedCtor() {
  _cached_size_ = 0;
  m_objectid_ = 0;
  m_buycount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SM_SendWalfareData::~SM_SendWalfareData() {
  SharedDtor();
}

void SM_SendWalfareData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SM_SendWalfareData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SM_SendWalfareData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SM_SendWalfareData_descriptor_;
}

const SM_SendWalfareData& SM_SendWalfareData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fRecharge_2etxt();
  return *default_instance_;
}

SM_SendWalfareData* SM_SendWalfareData::default_instance_ = NULL;

SM_SendWalfareData* SM_SendWalfareData::New() const {
  return new SM_SendWalfareData;
}

void SM_SendWalfareData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_objectid_ = 0;
    m_buycount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SM_SendWalfareData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_objectid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_objectid_)));
          set_has_m_objectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_buycount;
        break;
      }

      // optional int32 m_buycount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_buycount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_buycount_)));
          set_has_m_buycount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SM_SendWalfareData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_objectid = 1;
  if (has_m_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_objectid(), output);
  }

  // optional int32 m_buycount = 2;
  if (has_m_buycount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_buycount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SM_SendWalfareData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_objectid = 1;
  if (has_m_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_objectid(), target);
  }

  // optional int32 m_buycount = 2;
  if (has_m_buycount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_buycount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SM_SendWalfareData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_objectid = 1;
    if (has_m_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_objectid());
    }

    // optional int32 m_buycount = 2;
    if (has_m_buycount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_buycount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SM_SendWalfareData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SM_SendWalfareData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SM_SendWalfareData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SM_SendWalfareData::MergeFrom(const SM_SendWalfareData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_objectid()) {
      set_m_objectid(from.m_objectid());
    }
    if (from.has_m_buycount()) {
      set_m_buycount(from.m_buycount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SM_SendWalfareData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SM_SendWalfareData::CopyFrom(const SM_SendWalfareData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SM_SendWalfareData::IsInitialized() const {

  return true;
}

void SM_SendWalfareData::Swap(SM_SendWalfareData* other) {
  if (other != this) {
    std::swap(m_objectid_, other->m_objectid_);
    std::swap(m_buycount_, other->m_buycount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SM_SendWalfareData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SM_SendWalfareData_descriptor_;
  metadata.reflection = SM_SendWalfareData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SM_SendShopobjToGs::kRoleidFieldNumber;
const int SM_SendShopobjToGs::kMDataFieldNumber;
#endif  // !_MSC_VER

SM_SendShopobjToGs::SM_SendShopobjToGs()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SM_SendShopobjToGs::InitAsDefaultInstance() {
}

SM_SendShopobjToGs::SM_SendShopobjToGs(const SM_SendShopobjToGs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SM_SendShopobjToGs::SharedCtor() {
  _cached_size_ = 0;
  roleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SM_SendShopobjToGs::~SM_SendShopobjToGs() {
  SharedDtor();
}

void SM_SendShopobjToGs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SM_SendShopobjToGs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SM_SendShopobjToGs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SM_SendShopobjToGs_descriptor_;
}

const SM_SendShopobjToGs& SM_SendShopobjToGs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fRecharge_2etxt();
  return *default_instance_;
}

SM_SendShopobjToGs* SM_SendShopobjToGs::default_instance_ = NULL;

SM_SendShopobjToGs* SM_SendShopobjToGs::New() const {
  return new SM_SendShopobjToGs;
}

void SM_SendShopobjToGs::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    roleid_ = 0;
  }
  m_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SM_SendShopobjToGs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_data;
        break;
      }

      // repeated .SM_SendShopobjData m_data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SM_SendShopobjToGs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 roleid = 1;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // repeated .SM_SendShopobjData m_data = 2;
  for (int i = 0; i < this->m_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SM_SendShopobjToGs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 roleid = 1;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // repeated .SM_SendShopobjData m_data = 2;
  for (int i = 0; i < this->m_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SM_SendShopobjToGs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 roleid = 1;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleid());
    }

  }
  // repeated .SM_SendShopobjData m_data = 2;
  total_size += 1 * this->m_data_size();
  for (int i = 0; i < this->m_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SM_SendShopobjToGs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SM_SendShopobjToGs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SM_SendShopobjToGs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SM_SendShopobjToGs::MergeFrom(const SM_SendShopobjToGs& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_data_.MergeFrom(from.m_data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SM_SendShopobjToGs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SM_SendShopobjToGs::CopyFrom(const SM_SendShopobjToGs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SM_SendShopobjToGs::IsInitialized() const {

  return true;
}

void SM_SendShopobjToGs::Swap(SM_SendShopobjToGs* other) {
  if (other != this) {
    std::swap(roleid_, other->roleid_);
    m_data_.Swap(&other->m_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SM_SendShopobjToGs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SM_SendShopobjToGs_descriptor_;
  metadata.reflection = SM_SendShopobjToGs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SM_SendShopobjData::kMObjectidFieldNumber;
const int SM_SendShopobjData::kMBuytimesFieldNumber;
const int SM_SendShopobjData::kMObjtypeFieldNumber;
#endif  // !_MSC_VER

SM_SendShopobjData::SM_SendShopobjData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SM_SendShopobjData::InitAsDefaultInstance() {
}

SM_SendShopobjData::SM_SendShopobjData(const SM_SendShopobjData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SM_SendShopobjData::SharedCtor() {
  _cached_size_ = 0;
  m_objectid_ = 0;
  m_buytimes_ = 0;
  m_objtype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SM_SendShopobjData::~SM_SendShopobjData() {
  SharedDtor();
}

void SM_SendShopobjData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SM_SendShopobjData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SM_SendShopobjData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SM_SendShopobjData_descriptor_;
}

const SM_SendShopobjData& SM_SendShopobjData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fRecharge_2etxt();
  return *default_instance_;
}

SM_SendShopobjData* SM_SendShopobjData::default_instance_ = NULL;

SM_SendShopobjData* SM_SendShopobjData::New() const {
  return new SM_SendShopobjData;
}

void SM_SendShopobjData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_objectid_ = 0;
    m_buytimes_ = 0;
    m_objtype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SM_SendShopobjData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_objectid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_objectid_)));
          set_has_m_objectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_buytimes;
        break;
      }

      // optional int32 m_buytimes = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_buytimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_buytimes_)));
          set_has_m_buytimes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_objtype;
        break;
      }

      // optional int32 m_objtype = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_objtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_objtype_)));
          set_has_m_objtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SM_SendShopobjData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_objectid = 1;
  if (has_m_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_objectid(), output);
  }

  // optional int32 m_buytimes = 2;
  if (has_m_buytimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_buytimes(), output);
  }

  // optional int32 m_objtype = 3;
  if (has_m_objtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_objtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SM_SendShopobjData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_objectid = 1;
  if (has_m_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_objectid(), target);
  }

  // optional int32 m_buytimes = 2;
  if (has_m_buytimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_buytimes(), target);
  }

  // optional int32 m_objtype = 3;
  if (has_m_objtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_objtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SM_SendShopobjData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_objectid = 1;
    if (has_m_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_objectid());
    }

    // optional int32 m_buytimes = 2;
    if (has_m_buytimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_buytimes());
    }

    // optional int32 m_objtype = 3;
    if (has_m_objtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_objtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SM_SendShopobjData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SM_SendShopobjData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SM_SendShopobjData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SM_SendShopobjData::MergeFrom(const SM_SendShopobjData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_objectid()) {
      set_m_objectid(from.m_objectid());
    }
    if (from.has_m_buytimes()) {
      set_m_buytimes(from.m_buytimes());
    }
    if (from.has_m_objtype()) {
      set_m_objtype(from.m_objtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SM_SendShopobjData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SM_SendShopobjData::CopyFrom(const SM_SendShopobjData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SM_SendShopobjData::IsInitialized() const {

  return true;
}

void SM_SendShopobjData::Swap(SM_SendShopobjData* other) {
  if (other != this) {
    std::swap(m_objectid_, other->m_objectid_);
    std::swap(m_buytimes_, other->m_buytimes_);
    std::swap(m_objtype_, other->m_objtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SM_SendShopobjData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SM_SendShopobjData_descriptor_;
  metadata.reflection = SM_SendShopobjData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
