// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fbunlock.txt

#ifndef PROTOBUF_fbunlock_2etxt__INCLUDED
#define PROTOBUF_fbunlock_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_fbunlock_2etxt();
void protobuf_AssignDesc_fbunlock_2etxt();
void protobuf_ShutdownFile_fbunlock_2etxt();

class GM_UnlockReturn;
class GM_UnlockFB;
class GM_ChestsData;
class GM_cChests;
class GM_StarRank;
class GM_StarInfo;
class GM_SweepResult;
class GM_SweepObject;
class GM_FBNotify;
class GM_ChestsNotify;
class GM_SanHuangReturn;
class GM_SanHuang;

// ===================================================================

class GM_UnlockReturn : public ::google::protobuf::Message {
 public:
  GM_UnlockReturn();
  virtual ~GM_UnlockReturn();

  GM_UnlockReturn(const GM_UnlockReturn& from);

  inline GM_UnlockReturn& operator=(const GM_UnlockReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_UnlockReturn& default_instance();

  void Swap(GM_UnlockReturn* other);

  // implements Message ----------------------------------------------

  GM_UnlockReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_UnlockReturn& from);
  void MergeFrom(const GM_UnlockReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_lastfbid = 1;
  inline bool has_m_lastfbid() const;
  inline void clear_m_lastfbid();
  static const int kMLastfbidFieldNumber = 1;
  inline ::google::protobuf::int32 m_lastfbid() const;
  inline void set_m_lastfbid(::google::protobuf::int32 value);

  // required int32 m_maxelite = 2;
  inline bool has_m_maxelite() const;
  inline void clear_m_maxelite();
  static const int kMMaxeliteFieldNumber = 2;
  inline ::google::protobuf::int32 m_maxelite() const;
  inline void set_m_maxelite(::google::protobuf::int32 value);

  // repeated .GM_UnlockFB m_fbdata = 3;
  inline int m_fbdata_size() const;
  inline void clear_m_fbdata();
  static const int kMFbdataFieldNumber = 3;
  inline const ::GM_UnlockFB& m_fbdata(int index) const;
  inline ::GM_UnlockFB* mutable_m_fbdata(int index);
  inline ::GM_UnlockFB* add_m_fbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_UnlockFB >&
      m_fbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_UnlockFB >*
      mutable_m_fbdata();

  // repeated .GM_ChestsData m_chestsData = 4;
  inline int m_chestsdata_size() const;
  inline void clear_m_chestsdata();
  static const int kMChestsDataFieldNumber = 4;
  inline const ::GM_ChestsData& m_chestsdata(int index) const;
  inline ::GM_ChestsData* mutable_m_chestsdata(int index);
  inline ::GM_ChestsData* add_m_chestsdata();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_ChestsData >&
      m_chestsdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_ChestsData >*
      mutable_m_chestsdata();

  // @@protoc_insertion_point(class_scope:GM_UnlockReturn)
 private:
  inline void set_has_m_lastfbid();
  inline void clear_has_m_lastfbid();
  inline void set_has_m_maxelite();
  inline void clear_has_m_maxelite();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_lastfbid_;
  ::google::protobuf::int32 m_maxelite_;
  ::google::protobuf::RepeatedPtrField< ::GM_UnlockFB > m_fbdata_;
  ::google::protobuf::RepeatedPtrField< ::GM_ChestsData > m_chestsdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_fbunlock_2etxt();
  friend void protobuf_AssignDesc_fbunlock_2etxt();
  friend void protobuf_ShutdownFile_fbunlock_2etxt();

  void InitAsDefaultInstance();
  static GM_UnlockReturn* default_instance_;
};
// -------------------------------------------------------------------

class GM_UnlockFB : public ::google::protobuf::Message {
 public:
  GM_UnlockFB();
  virtual ~GM_UnlockFB();

  GM_UnlockFB(const GM_UnlockFB& from);

  inline GM_UnlockFB& operator=(const GM_UnlockFB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_UnlockFB& default_instance();

  void Swap(GM_UnlockFB* other);

  // implements Message ----------------------------------------------

  GM_UnlockFB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_UnlockFB& from);
  void MergeFrom(const GM_UnlockFB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_chapterId = 1;
  inline bool has_m_chapterid() const;
  inline void clear_m_chapterid();
  static const int kMChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_chapterid() const;
  inline void set_m_chapterid(::google::protobuf::int32 value);

  // required int32 m_fbid = 2;
  inline bool has_m_fbid() const;
  inline void clear_m_fbid();
  static const int kMFbidFieldNumber = 2;
  inline ::google::protobuf::int32 m_fbid() const;
  inline void set_m_fbid(::google::protobuf::int32 value);

  // required int32 m_star = 3;
  inline bool has_m_star() const;
  inline void clear_m_star();
  static const int kMStarFieldNumber = 3;
  inline ::google::protobuf::int32 m_star() const;
  inline void set_m_star(::google::protobuf::int32 value);

  // required int32 m_fight = 4;
  inline bool has_m_fight() const;
  inline void clear_m_fight();
  static const int kMFightFieldNumber = 4;
  inline ::google::protobuf::int32 m_fight() const;
  inline void set_m_fight(::google::protobuf::int32 value);

  // required int32 m_maxfight = 5;
  inline bool has_m_maxfight() const;
  inline void clear_m_maxfight();
  static const int kMMaxfightFieldNumber = 5;
  inline ::google::protobuf::int32 m_maxfight() const;
  inline void set_m_maxfight(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_UnlockFB)
 private:
  inline void set_has_m_chapterid();
  inline void clear_has_m_chapterid();
  inline void set_has_m_fbid();
  inline void clear_has_m_fbid();
  inline void set_has_m_star();
  inline void clear_has_m_star();
  inline void set_has_m_fight();
  inline void clear_has_m_fight();
  inline void set_has_m_maxfight();
  inline void clear_has_m_maxfight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_chapterid_;
  ::google::protobuf::int32 m_fbid_;
  ::google::protobuf::int32 m_star_;
  ::google::protobuf::int32 m_fight_;
  ::google::protobuf::int32 m_maxfight_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_fbunlock_2etxt();
  friend void protobuf_AssignDesc_fbunlock_2etxt();
  friend void protobuf_ShutdownFile_fbunlock_2etxt();

  void InitAsDefaultInstance();
  static GM_UnlockFB* default_instance_;
};
// -------------------------------------------------------------------

class GM_ChestsData : public ::google::protobuf::Message {
 public:
  GM_ChestsData();
  virtual ~GM_ChestsData();

  GM_ChestsData(const GM_ChestsData& from);

  inline GM_ChestsData& operator=(const GM_ChestsData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ChestsData& default_instance();

  void Swap(GM_ChestsData* other);

  // implements Message ----------------------------------------------

  GM_ChestsData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ChestsData& from);
  void MergeFrom(const GM_ChestsData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_chapterId = 1;
  inline bool has_m_chapterid() const;
  inline void clear_m_chapterid();
  static const int kMChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_chapterid() const;
  inline void set_m_chapterid(::google::protobuf::int32 value);

  // required int32 m_starCount = 2;
  inline bool has_m_starcount() const;
  inline void clear_m_starcount();
  static const int kMStarCountFieldNumber = 2;
  inline ::google::protobuf::int32 m_starcount() const;
  inline void set_m_starcount(::google::protobuf::int32 value);

  // repeated .GM_cChests m_chests = 3;
  inline int m_chests_size() const;
  inline void clear_m_chests();
  static const int kMChestsFieldNumber = 3;
  inline const ::GM_cChests& m_chests(int index) const;
  inline ::GM_cChests* mutable_m_chests(int index);
  inline ::GM_cChests* add_m_chests();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_cChests >&
      m_chests() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_cChests >*
      mutable_m_chests();

  // @@protoc_insertion_point(class_scope:GM_ChestsData)
 private:
  inline void set_has_m_chapterid();
  inline void clear_has_m_chapterid();
  inline void set_has_m_starcount();
  inline void clear_has_m_starcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_chapterid_;
  ::google::protobuf::int32 m_starcount_;
  ::google::protobuf::RepeatedPtrField< ::GM_cChests > m_chests_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_fbunlock_2etxt();
  friend void protobuf_AssignDesc_fbunlock_2etxt();
  friend void protobuf_ShutdownFile_fbunlock_2etxt();

  void InitAsDefaultInstance();
  static GM_ChestsData* default_instance_;
};
// -------------------------------------------------------------------

class GM_cChests : public ::google::protobuf::Message {
 public:
  GM_cChests();
  virtual ~GM_cChests();

  GM_cChests(const GM_cChests& from);

  inline GM_cChests& operator=(const GM_cChests& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_cChests& default_instance();

  void Swap(GM_cChests* other);

  // implements Message ----------------------------------------------

  GM_cChests* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_cChests& from);
  void MergeFrom(const GM_cChests& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_chestsId = 1;
  inline bool has_m_chestsid() const;
  inline void clear_m_chestsid();
  static const int kMChestsIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_chestsid() const;
  inline void set_m_chestsid(::google::protobuf::int32 value);

  // required int32 m_state = 2;
  inline bool has_m_state() const;
  inline void clear_m_state();
  static const int kMStateFieldNumber = 2;
  inline ::google::protobuf::int32 m_state() const;
  inline void set_m_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_cChests)
 private:
  inline void set_has_m_chestsid();
  inline void clear_has_m_chestsid();
  inline void set_has_m_state();
  inline void clear_has_m_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_chestsid_;
  ::google::protobuf::int32 m_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_fbunlock_2etxt();
  friend void protobuf_AssignDesc_fbunlock_2etxt();
  friend void protobuf_ShutdownFile_fbunlock_2etxt();

  void InitAsDefaultInstance();
  static GM_cChests* default_instance_;
};
// -------------------------------------------------------------------

class GM_StarRank : public ::google::protobuf::Message {
 public:
  GM_StarRank();
  virtual ~GM_StarRank();

  GM_StarRank(const GM_StarRank& from);

  inline GM_StarRank& operator=(const GM_StarRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_StarRank& default_instance();

  void Swap(GM_StarRank* other);

  // implements Message ----------------------------------------------

  GM_StarRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_StarRank& from);
  void MergeFrom(const GM_StarRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_myrank = 1;
  inline bool has_m_myrank() const;
  inline void clear_m_myrank();
  static const int kMMyrankFieldNumber = 1;
  inline ::google::protobuf::int32 m_myrank() const;
  inline void set_m_myrank(::google::protobuf::int32 value);

  // required int32 m_mystar = 2;
  inline bool has_m_mystar() const;
  inline void clear_m_mystar();
  static const int kMMystarFieldNumber = 2;
  inline ::google::protobuf::int32 m_mystar() const;
  inline void set_m_mystar(::google::protobuf::int32 value);

  // repeated .GM_StarInfo m_data = 3;
  inline int m_data_size() const;
  inline void clear_m_data();
  static const int kMDataFieldNumber = 3;
  inline const ::GM_StarInfo& m_data(int index) const;
  inline ::GM_StarInfo* mutable_m_data(int index);
  inline ::GM_StarInfo* add_m_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_StarInfo >&
      m_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_StarInfo >*
      mutable_m_data();

  // @@protoc_insertion_point(class_scope:GM_StarRank)
 private:
  inline void set_has_m_myrank();
  inline void clear_has_m_myrank();
  inline void set_has_m_mystar();
  inline void clear_has_m_mystar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_myrank_;
  ::google::protobuf::int32 m_mystar_;
  ::google::protobuf::RepeatedPtrField< ::GM_StarInfo > m_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_fbunlock_2etxt();
  friend void protobuf_AssignDesc_fbunlock_2etxt();
  friend void protobuf_ShutdownFile_fbunlock_2etxt();

  void InitAsDefaultInstance();
  static GM_StarRank* default_instance_;
};
// -------------------------------------------------------------------

class GM_StarInfo : public ::google::protobuf::Message {
 public:
  GM_StarInfo();
  virtual ~GM_StarInfo();

  GM_StarInfo(const GM_StarInfo& from);

  inline GM_StarInfo& operator=(const GM_StarInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_StarInfo& default_instance();

  void Swap(GM_StarInfo* other);

  // implements Message ----------------------------------------------

  GM_StarInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_StarInfo& from);
  void MergeFrom(const GM_StarInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string m_rolename = 1;
  inline bool has_m_rolename() const;
  inline void clear_m_rolename();
  static const int kMRolenameFieldNumber = 1;
  inline const ::std::string& m_rolename() const;
  inline void set_m_rolename(const ::std::string& value);
  inline void set_m_rolename(const char* value);
  inline void set_m_rolename(const char* value, size_t size);
  inline ::std::string* mutable_m_rolename();
  inline ::std::string* release_m_rolename();
  inline void set_allocated_m_rolename(::std::string* m_rolename);

  // required int32 m_rolelv = 2;
  inline bool has_m_rolelv() const;
  inline void clear_m_rolelv();
  static const int kMRolelvFieldNumber = 2;
  inline ::google::protobuf::int32 m_rolelv() const;
  inline void set_m_rolelv(::google::protobuf::int32 value);

  // required int32 m_starcount = 3;
  inline bool has_m_starcount() const;
  inline void clear_m_starcount();
  static const int kMStarcountFieldNumber = 3;
  inline ::google::protobuf::int32 m_starcount() const;
  inline void set_m_starcount(::google::protobuf::int32 value);

  // required int32 m_roleid = 4;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 4;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // required int32 m_profession = 5;
  inline bool has_m_profession() const;
  inline void clear_m_profession();
  static const int kMProfessionFieldNumber = 5;
  inline ::google::protobuf::int32 m_profession() const;
  inline void set_m_profession(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_StarInfo)
 private:
  inline void set_has_m_rolename();
  inline void clear_has_m_rolename();
  inline void set_has_m_rolelv();
  inline void clear_has_m_rolelv();
  inline void set_has_m_starcount();
  inline void clear_has_m_starcount();
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_profession();
  inline void clear_has_m_profession();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_rolename_;
  ::google::protobuf::int32 m_rolelv_;
  ::google::protobuf::int32 m_starcount_;
  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_profession_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_fbunlock_2etxt();
  friend void protobuf_AssignDesc_fbunlock_2etxt();
  friend void protobuf_ShutdownFile_fbunlock_2etxt();

  void InitAsDefaultInstance();
  static GM_StarInfo* default_instance_;
};
// -------------------------------------------------------------------

class GM_SweepResult : public ::google::protobuf::Message {
 public:
  GM_SweepResult();
  virtual ~GM_SweepResult();

  GM_SweepResult(const GM_SweepResult& from);

  inline GM_SweepResult& operator=(const GM_SweepResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_SweepResult& default_instance();

  void Swap(GM_SweepResult* other);

  // implements Message ----------------------------------------------

  GM_SweepResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_SweepResult& from);
  void MergeFrom(const GM_SweepResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // repeated .GM_SweepObject m_objects = 2;
  inline int m_objects_size() const;
  inline void clear_m_objects();
  static const int kMObjectsFieldNumber = 2;
  inline const ::GM_SweepObject& m_objects(int index) const;
  inline ::GM_SweepObject* mutable_m_objects(int index);
  inline ::GM_SweepObject* add_m_objects();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_SweepObject >&
      m_objects() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_SweepObject >*
      mutable_m_objects();

  // @@protoc_insertion_point(class_scope:GM_SweepResult)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_SweepObject > m_objects_;
  ::google::protobuf::int32 m_result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_fbunlock_2etxt();
  friend void protobuf_AssignDesc_fbunlock_2etxt();
  friend void protobuf_ShutdownFile_fbunlock_2etxt();

  void InitAsDefaultInstance();
  static GM_SweepResult* default_instance_;
};
// -------------------------------------------------------------------

class GM_SweepObject : public ::google::protobuf::Message {
 public:
  GM_SweepObject();
  virtual ~GM_SweepObject();

  GM_SweepObject(const GM_SweepObject& from);

  inline GM_SweepObject& operator=(const GM_SweepObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_SweepObject& default_instance();

  void Swap(GM_SweepObject* other);

  // implements Message ----------------------------------------------

  GM_SweepObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_SweepObject& from);
  void MergeFrom(const GM_SweepObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_objid = 1;
  inline bool has_m_objid() const;
  inline void clear_m_objid();
  static const int kMObjidFieldNumber = 1;
  inline ::google::protobuf::int32 m_objid() const;
  inline void set_m_objid(::google::protobuf::int32 value);

  // required int32 m_count = 2;
  inline bool has_m_count() const;
  inline void clear_m_count();
  static const int kMCountFieldNumber = 2;
  inline ::google::protobuf::int32 m_count() const;
  inline void set_m_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_SweepObject)
 private:
  inline void set_has_m_objid();
  inline void clear_has_m_objid();
  inline void set_has_m_count();
  inline void clear_has_m_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_objid_;
  ::google::protobuf::int32 m_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_fbunlock_2etxt();
  friend void protobuf_AssignDesc_fbunlock_2etxt();
  friend void protobuf_ShutdownFile_fbunlock_2etxt();

  void InitAsDefaultInstance();
  static GM_SweepObject* default_instance_;
};
// -------------------------------------------------------------------

class GM_FBNotify : public ::google::protobuf::Message {
 public:
  GM_FBNotify();
  virtual ~GM_FBNotify();

  GM_FBNotify(const GM_FBNotify& from);

  inline GM_FBNotify& operator=(const GM_FBNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_FBNotify& default_instance();

  void Swap(GM_FBNotify* other);

  // implements Message ----------------------------------------------

  GM_FBNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_FBNotify& from);
  void MergeFrom(const GM_FBNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_chapterId = 1;
  inline bool has_m_chapterid() const;
  inline void clear_m_chapterid();
  static const int kMChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_chapterid() const;
  inline void set_m_chapterid(::google::protobuf::int32 value);

  // required int32 m_fbId = 2;
  inline bool has_m_fbid() const;
  inline void clear_m_fbid();
  static const int kMFbIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_fbid() const;
  inline void set_m_fbid(::google::protobuf::int32 value);

  // required int32 m_starcount = 3;
  inline bool has_m_starcount() const;
  inline void clear_m_starcount();
  static const int kMStarcountFieldNumber = 3;
  inline ::google::protobuf::int32 m_starcount() const;
  inline void set_m_starcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_FBNotify)
 private:
  inline void set_has_m_chapterid();
  inline void clear_has_m_chapterid();
  inline void set_has_m_fbid();
  inline void clear_has_m_fbid();
  inline void set_has_m_starcount();
  inline void clear_has_m_starcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_chapterid_;
  ::google::protobuf::int32 m_fbid_;
  ::google::protobuf::int32 m_starcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_fbunlock_2etxt();
  friend void protobuf_AssignDesc_fbunlock_2etxt();
  friend void protobuf_ShutdownFile_fbunlock_2etxt();

  void InitAsDefaultInstance();
  static GM_FBNotify* default_instance_;
};
// -------------------------------------------------------------------

class GM_ChestsNotify : public ::google::protobuf::Message {
 public:
  GM_ChestsNotify();
  virtual ~GM_ChestsNotify();

  GM_ChestsNotify(const GM_ChestsNotify& from);

  inline GM_ChestsNotify& operator=(const GM_ChestsNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ChestsNotify& default_instance();

  void Swap(GM_ChestsNotify* other);

  // implements Message ----------------------------------------------

  GM_ChestsNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ChestsNotify& from);
  void MergeFrom(const GM_ChestsNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_chapterId = 1;
  inline bool has_m_chapterid() const;
  inline void clear_m_chapterid();
  static const int kMChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_chapterid() const;
  inline void set_m_chapterid(::google::protobuf::int32 value);

  // required int32 m_chestsId = 2;
  inline bool has_m_chestsid() const;
  inline void clear_m_chestsid();
  static const int kMChestsIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_chestsid() const;
  inline void set_m_chestsid(::google::protobuf::int32 value);

  // required int32 m_state = 3;
  inline bool has_m_state() const;
  inline void clear_m_state();
  static const int kMStateFieldNumber = 3;
  inline ::google::protobuf::int32 m_state() const;
  inline void set_m_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_ChestsNotify)
 private:
  inline void set_has_m_chapterid();
  inline void clear_has_m_chapterid();
  inline void set_has_m_chestsid();
  inline void clear_has_m_chestsid();
  inline void set_has_m_state();
  inline void clear_has_m_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_chapterid_;
  ::google::protobuf::int32 m_chestsid_;
  ::google::protobuf::int32 m_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_fbunlock_2etxt();
  friend void protobuf_AssignDesc_fbunlock_2etxt();
  friend void protobuf_ShutdownFile_fbunlock_2etxt();

  void InitAsDefaultInstance();
  static GM_ChestsNotify* default_instance_;
};
// -------------------------------------------------------------------

class GM_SanHuangReturn : public ::google::protobuf::Message {
 public:
  GM_SanHuangReturn();
  virtual ~GM_SanHuangReturn();

  GM_SanHuangReturn(const GM_SanHuangReturn& from);

  inline GM_SanHuangReturn& operator=(const GM_SanHuangReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_SanHuangReturn& default_instance();

  void Swap(GM_SanHuangReturn* other);

  // implements Message ----------------------------------------------

  GM_SanHuangReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_SanHuangReturn& from);
  void MergeFrom(const GM_SanHuangReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_totalcount = 1;
  inline bool has_m_totalcount() const;
  inline void clear_m_totalcount();
  static const int kMTotalcountFieldNumber = 1;
  inline ::google::protobuf::int32 m_totalcount() const;
  inline void set_m_totalcount(::google::protobuf::int32 value);

  // repeated .GM_SanHuang m_fbdata = 2;
  inline int m_fbdata_size() const;
  inline void clear_m_fbdata();
  static const int kMFbdataFieldNumber = 2;
  inline const ::GM_SanHuang& m_fbdata(int index) const;
  inline ::GM_SanHuang* mutable_m_fbdata(int index);
  inline ::GM_SanHuang* add_m_fbdata();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_SanHuang >&
      m_fbdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_SanHuang >*
      mutable_m_fbdata();

  // optional int32 matchtime = 5;
  inline bool has_matchtime() const;
  inline void clear_matchtime();
  static const int kMatchtimeFieldNumber = 5;
  inline ::google::protobuf::int32 matchtime() const;
  inline void set_matchtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_SanHuangReturn)
 private:
  inline void set_has_m_totalcount();
  inline void clear_has_m_totalcount();
  inline void set_has_matchtime();
  inline void clear_has_matchtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_SanHuang > m_fbdata_;
  ::google::protobuf::int32 m_totalcount_;
  ::google::protobuf::int32 matchtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_fbunlock_2etxt();
  friend void protobuf_AssignDesc_fbunlock_2etxt();
  friend void protobuf_ShutdownFile_fbunlock_2etxt();

  void InitAsDefaultInstance();
  static GM_SanHuangReturn* default_instance_;
};
// -------------------------------------------------------------------

class GM_SanHuang : public ::google::protobuf::Message {
 public:
  GM_SanHuang();
  virtual ~GM_SanHuang();

  GM_SanHuang(const GM_SanHuang& from);

  inline GM_SanHuang& operator=(const GM_SanHuang& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_SanHuang& default_instance();

  void Swap(GM_SanHuang* other);

  // implements Message ----------------------------------------------

  GM_SanHuang* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_SanHuang& from);
  void MergeFrom(const GM_SanHuang& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_fbid = 1;
  inline bool has_m_fbid() const;
  inline void clear_m_fbid();
  static const int kMFbidFieldNumber = 1;
  inline ::google::protobuf::int32 m_fbid() const;
  inline void set_m_fbid(::google::protobuf::int32 value);

  // required int32 m_fightcount = 2;
  inline bool has_m_fightcount() const;
  inline void clear_m_fightcount();
  static const int kMFightcountFieldNumber = 2;
  inline ::google::protobuf::int32 m_fightcount() const;
  inline void set_m_fightcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_SanHuang)
 private:
  inline void set_has_m_fbid();
  inline void clear_has_m_fbid();
  inline void set_has_m_fightcount();
  inline void clear_has_m_fightcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_fbid_;
  ::google::protobuf::int32 m_fightcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_fbunlock_2etxt();
  friend void protobuf_AssignDesc_fbunlock_2etxt();
  friend void protobuf_ShutdownFile_fbunlock_2etxt();

  void InitAsDefaultInstance();
  static GM_SanHuang* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_UnlockReturn

// required int32 m_lastfbid = 1;
inline bool GM_UnlockReturn::has_m_lastfbid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_UnlockReturn::set_has_m_lastfbid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_UnlockReturn::clear_has_m_lastfbid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_UnlockReturn::clear_m_lastfbid() {
  m_lastfbid_ = 0;
  clear_has_m_lastfbid();
}
inline ::google::protobuf::int32 GM_UnlockReturn::m_lastfbid() const {
  return m_lastfbid_;
}
inline void GM_UnlockReturn::set_m_lastfbid(::google::protobuf::int32 value) {
  set_has_m_lastfbid();
  m_lastfbid_ = value;
}

// required int32 m_maxelite = 2;
inline bool GM_UnlockReturn::has_m_maxelite() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_UnlockReturn::set_has_m_maxelite() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_UnlockReturn::clear_has_m_maxelite() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_UnlockReturn::clear_m_maxelite() {
  m_maxelite_ = 0;
  clear_has_m_maxelite();
}
inline ::google::protobuf::int32 GM_UnlockReturn::m_maxelite() const {
  return m_maxelite_;
}
inline void GM_UnlockReturn::set_m_maxelite(::google::protobuf::int32 value) {
  set_has_m_maxelite();
  m_maxelite_ = value;
}

// repeated .GM_UnlockFB m_fbdata = 3;
inline int GM_UnlockReturn::m_fbdata_size() const {
  return m_fbdata_.size();
}
inline void GM_UnlockReturn::clear_m_fbdata() {
  m_fbdata_.Clear();
}
inline const ::GM_UnlockFB& GM_UnlockReturn::m_fbdata(int index) const {
  return m_fbdata_.Get(index);
}
inline ::GM_UnlockFB* GM_UnlockReturn::mutable_m_fbdata(int index) {
  return m_fbdata_.Mutable(index);
}
inline ::GM_UnlockFB* GM_UnlockReturn::add_m_fbdata() {
  return m_fbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_UnlockFB >&
GM_UnlockReturn::m_fbdata() const {
  return m_fbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_UnlockFB >*
GM_UnlockReturn::mutable_m_fbdata() {
  return &m_fbdata_;
}

// repeated .GM_ChestsData m_chestsData = 4;
inline int GM_UnlockReturn::m_chestsdata_size() const {
  return m_chestsdata_.size();
}
inline void GM_UnlockReturn::clear_m_chestsdata() {
  m_chestsdata_.Clear();
}
inline const ::GM_ChestsData& GM_UnlockReturn::m_chestsdata(int index) const {
  return m_chestsdata_.Get(index);
}
inline ::GM_ChestsData* GM_UnlockReturn::mutable_m_chestsdata(int index) {
  return m_chestsdata_.Mutable(index);
}
inline ::GM_ChestsData* GM_UnlockReturn::add_m_chestsdata() {
  return m_chestsdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_ChestsData >&
GM_UnlockReturn::m_chestsdata() const {
  return m_chestsdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_ChestsData >*
GM_UnlockReturn::mutable_m_chestsdata() {
  return &m_chestsdata_;
}

// -------------------------------------------------------------------

// GM_UnlockFB

// required int32 m_chapterId = 1;
inline bool GM_UnlockFB::has_m_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_UnlockFB::set_has_m_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_UnlockFB::clear_has_m_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_UnlockFB::clear_m_chapterid() {
  m_chapterid_ = 0;
  clear_has_m_chapterid();
}
inline ::google::protobuf::int32 GM_UnlockFB::m_chapterid() const {
  return m_chapterid_;
}
inline void GM_UnlockFB::set_m_chapterid(::google::protobuf::int32 value) {
  set_has_m_chapterid();
  m_chapterid_ = value;
}

// required int32 m_fbid = 2;
inline bool GM_UnlockFB::has_m_fbid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_UnlockFB::set_has_m_fbid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_UnlockFB::clear_has_m_fbid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_UnlockFB::clear_m_fbid() {
  m_fbid_ = 0;
  clear_has_m_fbid();
}
inline ::google::protobuf::int32 GM_UnlockFB::m_fbid() const {
  return m_fbid_;
}
inline void GM_UnlockFB::set_m_fbid(::google::protobuf::int32 value) {
  set_has_m_fbid();
  m_fbid_ = value;
}

// required int32 m_star = 3;
inline bool GM_UnlockFB::has_m_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_UnlockFB::set_has_m_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_UnlockFB::clear_has_m_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_UnlockFB::clear_m_star() {
  m_star_ = 0;
  clear_has_m_star();
}
inline ::google::protobuf::int32 GM_UnlockFB::m_star() const {
  return m_star_;
}
inline void GM_UnlockFB::set_m_star(::google::protobuf::int32 value) {
  set_has_m_star();
  m_star_ = value;
}

// required int32 m_fight = 4;
inline bool GM_UnlockFB::has_m_fight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_UnlockFB::set_has_m_fight() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_UnlockFB::clear_has_m_fight() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_UnlockFB::clear_m_fight() {
  m_fight_ = 0;
  clear_has_m_fight();
}
inline ::google::protobuf::int32 GM_UnlockFB::m_fight() const {
  return m_fight_;
}
inline void GM_UnlockFB::set_m_fight(::google::protobuf::int32 value) {
  set_has_m_fight();
  m_fight_ = value;
}

// required int32 m_maxfight = 5;
inline bool GM_UnlockFB::has_m_maxfight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_UnlockFB::set_has_m_maxfight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_UnlockFB::clear_has_m_maxfight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_UnlockFB::clear_m_maxfight() {
  m_maxfight_ = 0;
  clear_has_m_maxfight();
}
inline ::google::protobuf::int32 GM_UnlockFB::m_maxfight() const {
  return m_maxfight_;
}
inline void GM_UnlockFB::set_m_maxfight(::google::protobuf::int32 value) {
  set_has_m_maxfight();
  m_maxfight_ = value;
}

// -------------------------------------------------------------------

// GM_ChestsData

// required int32 m_chapterId = 1;
inline bool GM_ChestsData::has_m_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ChestsData::set_has_m_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ChestsData::clear_has_m_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ChestsData::clear_m_chapterid() {
  m_chapterid_ = 0;
  clear_has_m_chapterid();
}
inline ::google::protobuf::int32 GM_ChestsData::m_chapterid() const {
  return m_chapterid_;
}
inline void GM_ChestsData::set_m_chapterid(::google::protobuf::int32 value) {
  set_has_m_chapterid();
  m_chapterid_ = value;
}

// required int32 m_starCount = 2;
inline bool GM_ChestsData::has_m_starcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_ChestsData::set_has_m_starcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_ChestsData::clear_has_m_starcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_ChestsData::clear_m_starcount() {
  m_starcount_ = 0;
  clear_has_m_starcount();
}
inline ::google::protobuf::int32 GM_ChestsData::m_starcount() const {
  return m_starcount_;
}
inline void GM_ChestsData::set_m_starcount(::google::protobuf::int32 value) {
  set_has_m_starcount();
  m_starcount_ = value;
}

// repeated .GM_cChests m_chests = 3;
inline int GM_ChestsData::m_chests_size() const {
  return m_chests_.size();
}
inline void GM_ChestsData::clear_m_chests() {
  m_chests_.Clear();
}
inline const ::GM_cChests& GM_ChestsData::m_chests(int index) const {
  return m_chests_.Get(index);
}
inline ::GM_cChests* GM_ChestsData::mutable_m_chests(int index) {
  return m_chests_.Mutable(index);
}
inline ::GM_cChests* GM_ChestsData::add_m_chests() {
  return m_chests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_cChests >&
GM_ChestsData::m_chests() const {
  return m_chests_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_cChests >*
GM_ChestsData::mutable_m_chests() {
  return &m_chests_;
}

// -------------------------------------------------------------------

// GM_cChests

// required int32 m_chestsId = 1;
inline bool GM_cChests::has_m_chestsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_cChests::set_has_m_chestsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_cChests::clear_has_m_chestsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_cChests::clear_m_chestsid() {
  m_chestsid_ = 0;
  clear_has_m_chestsid();
}
inline ::google::protobuf::int32 GM_cChests::m_chestsid() const {
  return m_chestsid_;
}
inline void GM_cChests::set_m_chestsid(::google::protobuf::int32 value) {
  set_has_m_chestsid();
  m_chestsid_ = value;
}

// required int32 m_state = 2;
inline bool GM_cChests::has_m_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_cChests::set_has_m_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_cChests::clear_has_m_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_cChests::clear_m_state() {
  m_state_ = 0;
  clear_has_m_state();
}
inline ::google::protobuf::int32 GM_cChests::m_state() const {
  return m_state_;
}
inline void GM_cChests::set_m_state(::google::protobuf::int32 value) {
  set_has_m_state();
  m_state_ = value;
}

// -------------------------------------------------------------------

// GM_StarRank

// required int32 m_myrank = 1;
inline bool GM_StarRank::has_m_myrank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_StarRank::set_has_m_myrank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_StarRank::clear_has_m_myrank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_StarRank::clear_m_myrank() {
  m_myrank_ = 0;
  clear_has_m_myrank();
}
inline ::google::protobuf::int32 GM_StarRank::m_myrank() const {
  return m_myrank_;
}
inline void GM_StarRank::set_m_myrank(::google::protobuf::int32 value) {
  set_has_m_myrank();
  m_myrank_ = value;
}

// required int32 m_mystar = 2;
inline bool GM_StarRank::has_m_mystar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_StarRank::set_has_m_mystar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_StarRank::clear_has_m_mystar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_StarRank::clear_m_mystar() {
  m_mystar_ = 0;
  clear_has_m_mystar();
}
inline ::google::protobuf::int32 GM_StarRank::m_mystar() const {
  return m_mystar_;
}
inline void GM_StarRank::set_m_mystar(::google::protobuf::int32 value) {
  set_has_m_mystar();
  m_mystar_ = value;
}

// repeated .GM_StarInfo m_data = 3;
inline int GM_StarRank::m_data_size() const {
  return m_data_.size();
}
inline void GM_StarRank::clear_m_data() {
  m_data_.Clear();
}
inline const ::GM_StarInfo& GM_StarRank::m_data(int index) const {
  return m_data_.Get(index);
}
inline ::GM_StarInfo* GM_StarRank::mutable_m_data(int index) {
  return m_data_.Mutable(index);
}
inline ::GM_StarInfo* GM_StarRank::add_m_data() {
  return m_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_StarInfo >&
GM_StarRank::m_data() const {
  return m_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_StarInfo >*
GM_StarRank::mutable_m_data() {
  return &m_data_;
}

// -------------------------------------------------------------------

// GM_StarInfo

// required string m_rolename = 1;
inline bool GM_StarInfo::has_m_rolename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_StarInfo::set_has_m_rolename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_StarInfo::clear_has_m_rolename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_StarInfo::clear_m_rolename() {
  if (m_rolename_ != &::google::protobuf::internal::kEmptyString) {
    m_rolename_->clear();
  }
  clear_has_m_rolename();
}
inline const ::std::string& GM_StarInfo::m_rolename() const {
  return *m_rolename_;
}
inline void GM_StarInfo::set_m_rolename(const ::std::string& value) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(value);
}
inline void GM_StarInfo::set_m_rolename(const char* value) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(value);
}
inline void GM_StarInfo::set_m_rolename(const char* value, size_t size) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_StarInfo::mutable_m_rolename() {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  return m_rolename_;
}
inline ::std::string* GM_StarInfo::release_m_rolename() {
  clear_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_rolename_;
    m_rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_StarInfo::set_allocated_m_rolename(::std::string* m_rolename) {
  if (m_rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete m_rolename_;
  }
  if (m_rolename) {
    set_has_m_rolename();
    m_rolename_ = m_rolename;
  } else {
    clear_has_m_rolename();
    m_rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 m_rolelv = 2;
inline bool GM_StarInfo::has_m_rolelv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_StarInfo::set_has_m_rolelv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_StarInfo::clear_has_m_rolelv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_StarInfo::clear_m_rolelv() {
  m_rolelv_ = 0;
  clear_has_m_rolelv();
}
inline ::google::protobuf::int32 GM_StarInfo::m_rolelv() const {
  return m_rolelv_;
}
inline void GM_StarInfo::set_m_rolelv(::google::protobuf::int32 value) {
  set_has_m_rolelv();
  m_rolelv_ = value;
}

// required int32 m_starcount = 3;
inline bool GM_StarInfo::has_m_starcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_StarInfo::set_has_m_starcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_StarInfo::clear_has_m_starcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_StarInfo::clear_m_starcount() {
  m_starcount_ = 0;
  clear_has_m_starcount();
}
inline ::google::protobuf::int32 GM_StarInfo::m_starcount() const {
  return m_starcount_;
}
inline void GM_StarInfo::set_m_starcount(::google::protobuf::int32 value) {
  set_has_m_starcount();
  m_starcount_ = value;
}

// required int32 m_roleid = 4;
inline bool GM_StarInfo::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_StarInfo::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_StarInfo::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_StarInfo::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_StarInfo::m_roleid() const {
  return m_roleid_;
}
inline void GM_StarInfo::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// required int32 m_profession = 5;
inline bool GM_StarInfo::has_m_profession() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_StarInfo::set_has_m_profession() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_StarInfo::clear_has_m_profession() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_StarInfo::clear_m_profession() {
  m_profession_ = 0;
  clear_has_m_profession();
}
inline ::google::protobuf::int32 GM_StarInfo::m_profession() const {
  return m_profession_;
}
inline void GM_StarInfo::set_m_profession(::google::protobuf::int32 value) {
  set_has_m_profession();
  m_profession_ = value;
}

// -------------------------------------------------------------------

// GM_SweepResult

// required int32 m_result = 1;
inline bool GM_SweepResult::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_SweepResult::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_SweepResult::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_SweepResult::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GM_SweepResult::m_result() const {
  return m_result_;
}
inline void GM_SweepResult::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// repeated .GM_SweepObject m_objects = 2;
inline int GM_SweepResult::m_objects_size() const {
  return m_objects_.size();
}
inline void GM_SweepResult::clear_m_objects() {
  m_objects_.Clear();
}
inline const ::GM_SweepObject& GM_SweepResult::m_objects(int index) const {
  return m_objects_.Get(index);
}
inline ::GM_SweepObject* GM_SweepResult::mutable_m_objects(int index) {
  return m_objects_.Mutable(index);
}
inline ::GM_SweepObject* GM_SweepResult::add_m_objects() {
  return m_objects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_SweepObject >&
GM_SweepResult::m_objects() const {
  return m_objects_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_SweepObject >*
GM_SweepResult::mutable_m_objects() {
  return &m_objects_;
}

// -------------------------------------------------------------------

// GM_SweepObject

// required int32 m_objid = 1;
inline bool GM_SweepObject::has_m_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_SweepObject::set_has_m_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_SweepObject::clear_has_m_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_SweepObject::clear_m_objid() {
  m_objid_ = 0;
  clear_has_m_objid();
}
inline ::google::protobuf::int32 GM_SweepObject::m_objid() const {
  return m_objid_;
}
inline void GM_SweepObject::set_m_objid(::google::protobuf::int32 value) {
  set_has_m_objid();
  m_objid_ = value;
}

// required int32 m_count = 2;
inline bool GM_SweepObject::has_m_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_SweepObject::set_has_m_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_SweepObject::clear_has_m_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_SweepObject::clear_m_count() {
  m_count_ = 0;
  clear_has_m_count();
}
inline ::google::protobuf::int32 GM_SweepObject::m_count() const {
  return m_count_;
}
inline void GM_SweepObject::set_m_count(::google::protobuf::int32 value) {
  set_has_m_count();
  m_count_ = value;
}

// -------------------------------------------------------------------

// GM_FBNotify

// required int32 m_chapterId = 1;
inline bool GM_FBNotify::has_m_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_FBNotify::set_has_m_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_FBNotify::clear_has_m_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_FBNotify::clear_m_chapterid() {
  m_chapterid_ = 0;
  clear_has_m_chapterid();
}
inline ::google::protobuf::int32 GM_FBNotify::m_chapterid() const {
  return m_chapterid_;
}
inline void GM_FBNotify::set_m_chapterid(::google::protobuf::int32 value) {
  set_has_m_chapterid();
  m_chapterid_ = value;
}

// required int32 m_fbId = 2;
inline bool GM_FBNotify::has_m_fbid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_FBNotify::set_has_m_fbid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_FBNotify::clear_has_m_fbid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_FBNotify::clear_m_fbid() {
  m_fbid_ = 0;
  clear_has_m_fbid();
}
inline ::google::protobuf::int32 GM_FBNotify::m_fbid() const {
  return m_fbid_;
}
inline void GM_FBNotify::set_m_fbid(::google::protobuf::int32 value) {
  set_has_m_fbid();
  m_fbid_ = value;
}

// required int32 m_starcount = 3;
inline bool GM_FBNotify::has_m_starcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_FBNotify::set_has_m_starcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_FBNotify::clear_has_m_starcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_FBNotify::clear_m_starcount() {
  m_starcount_ = 0;
  clear_has_m_starcount();
}
inline ::google::protobuf::int32 GM_FBNotify::m_starcount() const {
  return m_starcount_;
}
inline void GM_FBNotify::set_m_starcount(::google::protobuf::int32 value) {
  set_has_m_starcount();
  m_starcount_ = value;
}

// -------------------------------------------------------------------

// GM_ChestsNotify

// required int32 m_chapterId = 1;
inline bool GM_ChestsNotify::has_m_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ChestsNotify::set_has_m_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ChestsNotify::clear_has_m_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ChestsNotify::clear_m_chapterid() {
  m_chapterid_ = 0;
  clear_has_m_chapterid();
}
inline ::google::protobuf::int32 GM_ChestsNotify::m_chapterid() const {
  return m_chapterid_;
}
inline void GM_ChestsNotify::set_m_chapterid(::google::protobuf::int32 value) {
  set_has_m_chapterid();
  m_chapterid_ = value;
}

// required int32 m_chestsId = 2;
inline bool GM_ChestsNotify::has_m_chestsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_ChestsNotify::set_has_m_chestsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_ChestsNotify::clear_has_m_chestsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_ChestsNotify::clear_m_chestsid() {
  m_chestsid_ = 0;
  clear_has_m_chestsid();
}
inline ::google::protobuf::int32 GM_ChestsNotify::m_chestsid() const {
  return m_chestsid_;
}
inline void GM_ChestsNotify::set_m_chestsid(::google::protobuf::int32 value) {
  set_has_m_chestsid();
  m_chestsid_ = value;
}

// required int32 m_state = 3;
inline bool GM_ChestsNotify::has_m_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_ChestsNotify::set_has_m_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_ChestsNotify::clear_has_m_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_ChestsNotify::clear_m_state() {
  m_state_ = 0;
  clear_has_m_state();
}
inline ::google::protobuf::int32 GM_ChestsNotify::m_state() const {
  return m_state_;
}
inline void GM_ChestsNotify::set_m_state(::google::protobuf::int32 value) {
  set_has_m_state();
  m_state_ = value;
}

// -------------------------------------------------------------------

// GM_SanHuangReturn

// required int32 m_totalcount = 1;
inline bool GM_SanHuangReturn::has_m_totalcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_SanHuangReturn::set_has_m_totalcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_SanHuangReturn::clear_has_m_totalcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_SanHuangReturn::clear_m_totalcount() {
  m_totalcount_ = 0;
  clear_has_m_totalcount();
}
inline ::google::protobuf::int32 GM_SanHuangReturn::m_totalcount() const {
  return m_totalcount_;
}
inline void GM_SanHuangReturn::set_m_totalcount(::google::protobuf::int32 value) {
  set_has_m_totalcount();
  m_totalcount_ = value;
}

// repeated .GM_SanHuang m_fbdata = 2;
inline int GM_SanHuangReturn::m_fbdata_size() const {
  return m_fbdata_.size();
}
inline void GM_SanHuangReturn::clear_m_fbdata() {
  m_fbdata_.Clear();
}
inline const ::GM_SanHuang& GM_SanHuangReturn::m_fbdata(int index) const {
  return m_fbdata_.Get(index);
}
inline ::GM_SanHuang* GM_SanHuangReturn::mutable_m_fbdata(int index) {
  return m_fbdata_.Mutable(index);
}
inline ::GM_SanHuang* GM_SanHuangReturn::add_m_fbdata() {
  return m_fbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_SanHuang >&
GM_SanHuangReturn::m_fbdata() const {
  return m_fbdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_SanHuang >*
GM_SanHuangReturn::mutable_m_fbdata() {
  return &m_fbdata_;
}

// optional int32 matchtime = 5;
inline bool GM_SanHuangReturn::has_matchtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_SanHuangReturn::set_has_matchtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_SanHuangReturn::clear_has_matchtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_SanHuangReturn::clear_matchtime() {
  matchtime_ = 0;
  clear_has_matchtime();
}
inline ::google::protobuf::int32 GM_SanHuangReturn::matchtime() const {
  return matchtime_;
}
inline void GM_SanHuangReturn::set_matchtime(::google::protobuf::int32 value) {
  set_has_matchtime();
  matchtime_ = value;
}

// -------------------------------------------------------------------

// GM_SanHuang

// required int32 m_fbid = 1;
inline bool GM_SanHuang::has_m_fbid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_SanHuang::set_has_m_fbid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_SanHuang::clear_has_m_fbid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_SanHuang::clear_m_fbid() {
  m_fbid_ = 0;
  clear_has_m_fbid();
}
inline ::google::protobuf::int32 GM_SanHuang::m_fbid() const {
  return m_fbid_;
}
inline void GM_SanHuang::set_m_fbid(::google::protobuf::int32 value) {
  set_has_m_fbid();
  m_fbid_ = value;
}

// required int32 m_fightcount = 2;
inline bool GM_SanHuang::has_m_fightcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_SanHuang::set_has_m_fightcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_SanHuang::clear_has_m_fightcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_SanHuang::clear_m_fightcount() {
  m_fightcount_ = 0;
  clear_has_m_fightcount();
}
inline ::google::protobuf::int32 GM_SanHuang::m_fightcount() const {
  return m_fightcount_;
}
inline void GM_SanHuang::set_m_fightcount(::google::protobuf::int32 value) {
  set_has_m_fightcount();
  m_fightcount_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_fbunlock_2etxt__INCLUDED
