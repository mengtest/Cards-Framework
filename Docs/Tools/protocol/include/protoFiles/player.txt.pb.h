// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player.txt

#ifndef PROTOBUF_player_2etxt__INCLUDED
#define PROTOBUF_player_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_player_2etxt();
void protobuf_AssignDesc_player_2etxt();
void protobuf_ShutdownFile_player_2etxt();

class GMRoleListRequest;
class GMRoleListEx;
class GMEquipInfo;
class GMLogServerInfo;
class GMRoleCreate;
class GMRoleCreateReturn;
class GMRoleLogin;
class GMOffLineReconnect;
class GMRoleNameRequest;
class GMRoleNameReturn;
class GM_UPDATEFightVal;
class GM_ProfessionChange;
class GM_ProfessionChangeReturn;
class GM_FightDataChangeItem;
class GM_FightDataChangeNotifyInFB;
class GM_FightDataChangeNotify;
class GM_UnlockSystem;
class GM_UnlockSystemList;
class GM_Commonint32ChangeNotify;
class GM_CommonLONG64ChangeNotify;
class GM_CommonfloatChangeNotify;
class GM_RoleDelete_Request;
class GM_RoleDelete_Return;
class GM_TiredValueInfo;
class GM_QueryOtherPlayer;
class GM_GangInfoResult;
class GM_Crckey;
class GM_Recover_DeleteRole_Request;
class GM_Recover_DeleteRole_Return;
class GM_Cancel_Recover_DeleteRole_Request;
class GM_Cancel_Recover_DeleteRole_Return;
class GM_Recover_DeleteRole_Notify;
class GM_Player_Recovery;
class GM_Player_changeSex;
class GM_Ip_request;
class GM_Ip_return;

// ===================================================================

class GMRoleListRequest : public ::google::protobuf::Message {
 public:
  GMRoleListRequest();
  virtual ~GMRoleListRequest();

  GMRoleListRequest(const GMRoleListRequest& from);

  inline GMRoleListRequest& operator=(const GMRoleListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMRoleListRequest& default_instance();

  void Swap(GMRoleListRequest* other);

  // implements Message ----------------------------------------------

  GMRoleListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMRoleListRequest& from);
  void MergeFrom(const GMRoleListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_accountID = 1;
  inline bool has_m_accountid() const;
  inline void clear_m_accountid();
  static const int kMAccountIDFieldNumber = 1;
  inline ::google::protobuf::int32 m_accountid() const;
  inline void set_m_accountid(::google::protobuf::int32 value);

  // required int32 m_area = 2;
  inline bool has_m_area() const;
  inline void clear_m_area();
  static const int kMAreaFieldNumber = 2;
  inline ::google::protobuf::int32 m_area() const;
  inline void set_m_area(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMRoleListRequest)
 private:
  inline void set_has_m_accountid();
  inline void clear_has_m_accountid();
  inline void set_has_m_area();
  inline void clear_has_m_area();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_accountid_;
  ::google::protobuf::int32 m_area_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GMRoleListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GMRoleListEx : public ::google::protobuf::Message {
 public:
  GMRoleListEx();
  virtual ~GMRoleListEx();

  GMRoleListEx(const GMRoleListEx& from);

  inline GMRoleListEx& operator=(const GMRoleListEx& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMRoleListEx& default_instance();

  void Swap(GMRoleListEx* other);

  // implements Message ----------------------------------------------

  GMRoleListEx* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMRoleListEx& from);
  void MergeFrom(const GMRoleListEx& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional int32 communid = 2;
  inline bool has_communid() const;
  inline void clear_communid();
  static const int kCommunidFieldNumber = 2;
  inline ::google::protobuf::int32 communid() const;
  inline void set_communid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMRoleListEx)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_communid();
  inline void clear_has_communid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 communid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GMRoleListEx* default_instance_;
};
// -------------------------------------------------------------------

class GMEquipInfo : public ::google::protobuf::Message {
 public:
  GMEquipInfo();
  virtual ~GMEquipInfo();

  GMEquipInfo(const GMEquipInfo& from);

  inline GMEquipInfo& operator=(const GMEquipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMEquipInfo& default_instance();

  void Swap(GMEquipInfo* other);

  // implements Message ----------------------------------------------

  GMEquipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMEquipInfo& from);
  void MergeFrom(const GMEquipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 packid = 1;
  inline bool has_packid() const;
  inline void clear_packid();
  static const int kPackidFieldNumber = 1;
  inline ::google::protobuf::int32 packid() const;
  inline void set_packid(::google::protobuf::int32 value);

  // required int32 grid = 2;
  inline bool has_grid() const;
  inline void clear_grid();
  static const int kGridFieldNumber = 2;
  inline ::google::protobuf::int32 grid() const;
  inline void set_grid(::google::protobuf::int32 value);

  // required int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GMEquipInfo)
 private:
  inline void set_has_packid();
  inline void clear_has_packid();
  inline void set_has_grid();
  inline void clear_has_grid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 packid_;
  ::google::protobuf::int32 grid_;
  ::google::protobuf::int64 gmid_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GMEquipInfo* default_instance_;
};
// -------------------------------------------------------------------

class GMLogServerInfo : public ::google::protobuf::Message {
 public:
  GMLogServerInfo();
  virtual ~GMLogServerInfo();

  GMLogServerInfo(const GMLogServerInfo& from);

  inline GMLogServerInfo& operator=(const GMLogServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMLogServerInfo& default_instance();

  void Swap(GMLogServerInfo* other);

  // implements Message ----------------------------------------------

  GMLogServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMLogServerInfo& from);
  void MergeFrom(const GMLogServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 platformid = 1;
  inline bool has_platformid() const;
  inline void clear_platformid();
  static const int kPlatformidFieldNumber = 1;
  inline ::google::protobuf::int32 platformid() const;
  inline void set_platformid(::google::protobuf::int32 value);

  // required string ditchid = 2;
  inline bool has_ditchid() const;
  inline void clear_ditchid();
  static const int kDitchidFieldNumber = 2;
  inline const ::std::string& ditchid() const;
  inline void set_ditchid(const ::std::string& value);
  inline void set_ditchid(const char* value);
  inline void set_ditchid(const char* value, size_t size);
  inline ::std::string* mutable_ditchid();
  inline ::std::string* release_ditchid();
  inline void set_allocated_ditchid(::std::string* ditchid);

  // required string version = 3;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 3;
  inline const ::std::string& version() const;
  inline void set_version(const ::std::string& value);
  inline void set_version(const char* value);
  inline void set_version(const char* value, size_t size);
  inline ::std::string* mutable_version();
  inline ::std::string* release_version();
  inline void set_allocated_version(::std::string* version);

  // optional int32 serverid = 4;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 4;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);

  // optional string ipaddress = 5;
  inline bool has_ipaddress() const;
  inline void clear_ipaddress();
  static const int kIpaddressFieldNumber = 5;
  inline const ::std::string& ipaddress() const;
  inline void set_ipaddress(const ::std::string& value);
  inline void set_ipaddress(const char* value);
  inline void set_ipaddress(const char* value, size_t size);
  inline ::std::string* mutable_ipaddress();
  inline ::std::string* release_ipaddress();
  inline void set_allocated_ipaddress(::std::string* ipaddress);

  // optional string macAddress = 6;
  inline bool has_macaddress() const;
  inline void clear_macaddress();
  static const int kMacAddressFieldNumber = 6;
  inline const ::std::string& macaddress() const;
  inline void set_macaddress(const ::std::string& value);
  inline void set_macaddress(const char* value);
  inline void set_macaddress(const char* value, size_t size);
  inline ::std::string* mutable_macaddress();
  inline ::std::string* release_macaddress();
  inline void set_allocated_macaddress(::std::string* macaddress);

  // optional string deviceUUID = 7;
  inline bool has_deviceuuid() const;
  inline void clear_deviceuuid();
  static const int kDeviceUUIDFieldNumber = 7;
  inline const ::std::string& deviceuuid() const;
  inline void set_deviceuuid(const ::std::string& value);
  inline void set_deviceuuid(const char* value);
  inline void set_deviceuuid(const char* value, size_t size);
  inline ::std::string* mutable_deviceuuid();
  inline ::std::string* release_deviceuuid();
  inline void set_allocated_deviceuuid(::std::string* deviceuuid);

  // optional string token = 8;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 8;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // optional string idfa = 9;
  inline bool has_idfa() const;
  inline void clear_idfa();
  static const int kIdfaFieldNumber = 9;
  inline const ::std::string& idfa() const;
  inline void set_idfa(const ::std::string& value);
  inline void set_idfa(const char* value);
  inline void set_idfa(const char* value, size_t size);
  inline ::std::string* mutable_idfa();
  inline ::std::string* release_idfa();
  inline void set_allocated_idfa(::std::string* idfa);

  // optional string devicetype = 10;
  inline bool has_devicetype() const;
  inline void clear_devicetype();
  static const int kDevicetypeFieldNumber = 10;
  inline const ::std::string& devicetype() const;
  inline void set_devicetype(const ::std::string& value);
  inline void set_devicetype(const char* value);
  inline void set_devicetype(const char* value, size_t size);
  inline ::std::string* mutable_devicetype();
  inline ::std::string* release_devicetype();
  inline void set_allocated_devicetype(::std::string* devicetype);

  // optional string networktype = 11;
  inline bool has_networktype() const;
  inline void clear_networktype();
  static const int kNetworktypeFieldNumber = 11;
  inline const ::std::string& networktype() const;
  inline void set_networktype(const ::std::string& value);
  inline void set_networktype(const char* value);
  inline void set_networktype(const char* value, size_t size);
  inline ::std::string* mutable_networktype();
  inline ::std::string* release_networktype();
  inline void set_allocated_networktype(::std::string* networktype);

  // @@protoc_insertion_point(class_scope:GMLogServerInfo)
 private:
  inline void set_has_platformid();
  inline void clear_has_platformid();
  inline void set_has_ditchid();
  inline void clear_has_ditchid();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_ipaddress();
  inline void clear_has_ipaddress();
  inline void set_has_macaddress();
  inline void clear_has_macaddress();
  inline void set_has_deviceuuid();
  inline void clear_has_deviceuuid();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_idfa();
  inline void clear_has_idfa();
  inline void set_has_devicetype();
  inline void clear_has_devicetype();
  inline void set_has_networktype();
  inline void clear_has_networktype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ditchid_;
  ::google::protobuf::int32 platformid_;
  ::google::protobuf::int32 serverid_;
  ::std::string* version_;
  ::std::string* ipaddress_;
  ::std::string* macaddress_;
  ::std::string* deviceuuid_;
  ::std::string* token_;
  ::std::string* idfa_;
  ::std::string* devicetype_;
  ::std::string* networktype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GMLogServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class GMRoleCreate : public ::google::protobuf::Message {
 public:
  GMRoleCreate();
  virtual ~GMRoleCreate();

  GMRoleCreate(const GMRoleCreate& from);

  inline GMRoleCreate& operator=(const GMRoleCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMRoleCreate& default_instance();

  void Swap(GMRoleCreate* other);

  // implements Message ----------------------------------------------

  GMRoleCreate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMRoleCreate& from);
  void MergeFrom(const GMRoleCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_AccountID = 1;
  inline bool has_m_accountid() const;
  inline void clear_m_accountid();
  static const int kMAccountIDFieldNumber = 1;
  inline ::google::protobuf::int32 m_accountid() const;
  inline void set_m_accountid(::google::protobuf::int32 value);

  // optional .GMLogServerInfo m_info = 2;
  inline bool has_m_info() const;
  inline void clear_m_info();
  static const int kMInfoFieldNumber = 2;
  inline const ::GMLogServerInfo& m_info() const;
  inline ::GMLogServerInfo* mutable_m_info();
  inline ::GMLogServerInfo* release_m_info();
  inline void set_allocated_m_info(::GMLogServerInfo* m_info);

  // optional string m_NickName = 3;
  inline bool has_m_nickname() const;
  inline void clear_m_nickname();
  static const int kMNickNameFieldNumber = 3;
  inline const ::std::string& m_nickname() const;
  inline void set_m_nickname(const ::std::string& value);
  inline void set_m_nickname(const char* value);
  inline void set_m_nickname(const char* value, size_t size);
  inline ::std::string* mutable_m_nickname();
  inline ::std::string* release_m_nickname();
  inline void set_allocated_m_nickname(::std::string* m_nickname);

  // optional string m_HeadPhotoUrl = 4;
  inline bool has_m_headphotourl() const;
  inline void clear_m_headphotourl();
  static const int kMHeadPhotoUrlFieldNumber = 4;
  inline const ::std::string& m_headphotourl() const;
  inline void set_m_headphotourl(const ::std::string& value);
  inline void set_m_headphotourl(const char* value);
  inline void set_m_headphotourl(const char* value, size_t size);
  inline ::std::string* mutable_m_headphotourl();
  inline ::std::string* release_m_headphotourl();
  inline void set_allocated_m_headphotourl(::std::string* m_headphotourl);

  // optional int32 m_sex = 5;
  inline bool has_m_sex() const;
  inline void clear_m_sex();
  static const int kMSexFieldNumber = 5;
  inline ::google::protobuf::int32 m_sex() const;
  inline void set_m_sex(::google::protobuf::int32 value);

  // optional string m_UnionID = 6;
  inline bool has_m_unionid() const;
  inline void clear_m_unionid();
  static const int kMUnionIDFieldNumber = 6;
  inline const ::std::string& m_unionid() const;
  inline void set_m_unionid(const ::std::string& value);
  inline void set_m_unionid(const char* value);
  inline void set_m_unionid(const char* value, size_t size);
  inline ::std::string* mutable_m_unionid();
  inline ::std::string* release_m_unionid();
  inline void set_allocated_m_unionid(::std::string* m_unionid);

  // @@protoc_insertion_point(class_scope:GMRoleCreate)
 private:
  inline void set_has_m_accountid();
  inline void clear_has_m_accountid();
  inline void set_has_m_info();
  inline void clear_has_m_info();
  inline void set_has_m_nickname();
  inline void clear_has_m_nickname();
  inline void set_has_m_headphotourl();
  inline void clear_has_m_headphotourl();
  inline void set_has_m_sex();
  inline void clear_has_m_sex();
  inline void set_has_m_unionid();
  inline void clear_has_m_unionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GMLogServerInfo* m_info_;
  ::std::string* m_nickname_;
  ::google::protobuf::int32 m_accountid_;
  ::google::protobuf::int32 m_sex_;
  ::std::string* m_headphotourl_;
  ::std::string* m_unionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GMRoleCreate* default_instance_;
};
// -------------------------------------------------------------------

class GMRoleCreateReturn : public ::google::protobuf::Message {
 public:
  GMRoleCreateReturn();
  virtual ~GMRoleCreateReturn();

  GMRoleCreateReturn(const GMRoleCreateReturn& from);

  inline GMRoleCreateReturn& operator=(const GMRoleCreateReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMRoleCreateReturn& default_instance();

  void Swap(GMRoleCreateReturn* other);

  // implements Message ----------------------------------------------

  GMRoleCreateReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMRoleCreateReturn& from);
  void MergeFrom(const GMRoleCreateReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_Result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // required int32 m_RoleID = 2;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleIDFieldNumber = 2;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional int32 m_accountid = 3;
  inline bool has_m_accountid() const;
  inline void clear_m_accountid();
  static const int kMAccountidFieldNumber = 3;
  inline ::google::protobuf::int32 m_accountid() const;
  inline void set_m_accountid(::google::protobuf::int32 value);

  // optional string m_rolename = 4;
  inline bool has_m_rolename() const;
  inline void clear_m_rolename();
  static const int kMRolenameFieldNumber = 4;
  inline const ::std::string& m_rolename() const;
  inline void set_m_rolename(const ::std::string& value);
  inline void set_m_rolename(const char* value);
  inline void set_m_rolename(const char* value, size_t size);
  inline ::std::string* mutable_m_rolename();
  inline ::std::string* release_m_rolename();
  inline void set_allocated_m_rolename(::std::string* m_rolename);

  // @@protoc_insertion_point(class_scope:GMRoleCreateReturn)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_accountid();
  inline void clear_has_m_accountid();
  inline void set_has_m_rolename();
  inline void clear_has_m_rolename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_result_;
  ::google::protobuf::int32 m_roleid_;
  ::std::string* m_rolename_;
  ::google::protobuf::int32 m_accountid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GMRoleCreateReturn* default_instance_;
};
// -------------------------------------------------------------------

class GMRoleLogin : public ::google::protobuf::Message {
 public:
  GMRoleLogin();
  virtual ~GMRoleLogin();

  GMRoleLogin(const GMRoleLogin& from);

  inline GMRoleLogin& operator=(const GMRoleLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMRoleLogin& default_instance();

  void Swap(GMRoleLogin* other);

  // implements Message ----------------------------------------------

  GMRoleLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMRoleLogin& from);
  void MergeFrom(const GMRoleLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_AccountID = 1;
  inline bool has_m_accountid() const;
  inline void clear_m_accountid();
  static const int kMAccountIDFieldNumber = 1;
  inline ::google::protobuf::int32 m_accountid() const;
  inline void set_m_accountid(::google::protobuf::int32 value);

  // required int32 m_RoleID = 2;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleIDFieldNumber = 2;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // required string m_randstr = 3;
  inline bool has_m_randstr() const;
  inline void clear_m_randstr();
  static const int kMRandstrFieldNumber = 3;
  inline const ::std::string& m_randstr() const;
  inline void set_m_randstr(const ::std::string& value);
  inline void set_m_randstr(const char* value);
  inline void set_m_randstr(const char* value, size_t size);
  inline ::std::string* mutable_m_randstr();
  inline ::std::string* release_m_randstr();
  inline void set_allocated_m_randstr(::std::string* m_randstr);

  // optional .GMLogServerInfo m_info = 4;
  inline bool has_m_info() const;
  inline void clear_m_info();
  static const int kMInfoFieldNumber = 4;
  inline const ::GMLogServerInfo& m_info() const;
  inline ::GMLogServerInfo* mutable_m_info();
  inline ::GMLogServerInfo* release_m_info();
  inline void set_allocated_m_info(::GMLogServerInfo* m_info);

  // @@protoc_insertion_point(class_scope:GMRoleLogin)
 private:
  inline void set_has_m_accountid();
  inline void clear_has_m_accountid();
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_randstr();
  inline void clear_has_m_randstr();
  inline void set_has_m_info();
  inline void clear_has_m_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_accountid_;
  ::google::protobuf::int32 m_roleid_;
  ::std::string* m_randstr_;
  ::GMLogServerInfo* m_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GMRoleLogin* default_instance_;
};
// -------------------------------------------------------------------

class GMOffLineReconnect : public ::google::protobuf::Message {
 public:
  GMOffLineReconnect();
  virtual ~GMOffLineReconnect();

  GMOffLineReconnect(const GMOffLineReconnect& from);

  inline GMOffLineReconnect& operator=(const GMOffLineReconnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMOffLineReconnect& default_instance();

  void Swap(GMOffLineReconnect* other);

  // implements Message ----------------------------------------------

  GMOffLineReconnect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMOffLineReconnect& from);
  void MergeFrom(const GMOffLineReconnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_AccountID = 1;
  inline bool has_m_accountid() const;
  inline void clear_m_accountid();
  static const int kMAccountIDFieldNumber = 1;
  inline ::google::protobuf::int32 m_accountid() const;
  inline void set_m_accountid(::google::protobuf::int32 value);

  // required int32 m_RoleID = 2;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleIDFieldNumber = 2;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // required string m_randstr = 3;
  inline bool has_m_randstr() const;
  inline void clear_m_randstr();
  static const int kMRandstrFieldNumber = 3;
  inline const ::std::string& m_randstr() const;
  inline void set_m_randstr(const ::std::string& value);
  inline void set_m_randstr(const char* value);
  inline void set_m_randstr(const char* value, size_t size);
  inline ::std::string* mutable_m_randstr();
  inline ::std::string* release_m_randstr();
  inline void set_allocated_m_randstr(::std::string* m_randstr);

  // @@protoc_insertion_point(class_scope:GMOffLineReconnect)
 private:
  inline void set_has_m_accountid();
  inline void clear_has_m_accountid();
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_randstr();
  inline void clear_has_m_randstr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_accountid_;
  ::google::protobuf::int32 m_roleid_;
  ::std::string* m_randstr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GMOffLineReconnect* default_instance_;
};
// -------------------------------------------------------------------

class GMRoleNameRequest : public ::google::protobuf::Message {
 public:
  GMRoleNameRequest();
  virtual ~GMRoleNameRequest();

  GMRoleNameRequest(const GMRoleNameRequest& from);

  inline GMRoleNameRequest& operator=(const GMRoleNameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMRoleNameRequest& default_instance();

  void Swap(GMRoleNameRequest* other);

  // implements Message ----------------------------------------------

  GMRoleNameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMRoleNameRequest& from);
  void MergeFrom(const GMRoleNameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_RoleProfession = 1;
  inline bool has_m_roleprofession() const;
  inline void clear_m_roleprofession();
  static const int kMRoleProfessionFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleprofession() const;
  inline void set_m_roleprofession(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMRoleNameRequest)
 private:
  inline void set_has_m_roleprofession();
  inline void clear_has_m_roleprofession();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleprofession_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GMRoleNameRequest* default_instance_;
};
// -------------------------------------------------------------------

class GMRoleNameReturn : public ::google::protobuf::Message {
 public:
  GMRoleNameReturn();
  virtual ~GMRoleNameReturn();

  GMRoleNameReturn(const GMRoleNameReturn& from);

  inline GMRoleNameReturn& operator=(const GMRoleNameReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMRoleNameReturn& default_instance();

  void Swap(GMRoleNameReturn* other);

  // implements Message ----------------------------------------------

  GMRoleNameReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMRoleNameReturn& from);
  void MergeFrom(const GMRoleNameReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string Name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMRoleNameReturn)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GMRoleNameReturn* default_instance_;
};
// -------------------------------------------------------------------

class GM_UPDATEFightVal : public ::google::protobuf::Message {
 public:
  GM_UPDATEFightVal();
  virtual ~GM_UPDATEFightVal();

  GM_UPDATEFightVal(const GM_UPDATEFightVal& from);

  inline GM_UPDATEFightVal& operator=(const GM_UPDATEFightVal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_UPDATEFightVal& default_instance();

  void Swap(GM_UPDATEFightVal* other);

  // implements Message ----------------------------------------------

  GM_UPDATEFightVal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_UPDATEFightVal& from);
  void MergeFrom(const GM_UPDATEFightVal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 fightval = 1;
  inline bool has_fightval() const;
  inline void clear_fightval();
  static const int kFightvalFieldNumber = 1;
  inline ::google::protobuf::int32 fightval() const;
  inline void set_fightval(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_UPDATEFightVal)
 private:
  inline void set_has_fightval();
  inline void clear_has_fightval();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 fightval_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_UPDATEFightVal* default_instance_;
};
// -------------------------------------------------------------------

class GM_ProfessionChange : public ::google::protobuf::Message {
 public:
  GM_ProfessionChange();
  virtual ~GM_ProfessionChange();

  GM_ProfessionChange(const GM_ProfessionChange& from);

  inline GM_ProfessionChange& operator=(const GM_ProfessionChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ProfessionChange& default_instance();

  void Swap(GM_ProfessionChange* other);

  // implements Message ----------------------------------------------

  GM_ProfessionChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ProfessionChange& from);
  void MergeFrom(const GM_ProfessionChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 professionID = 1;
  inline bool has_professionid() const;
  inline void clear_professionid();
  static const int kProfessionIDFieldNumber = 1;
  inline ::google::protobuf::int32 professionid() const;
  inline void set_professionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_ProfessionChange)
 private:
  inline void set_has_professionid();
  inline void clear_has_professionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 professionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_ProfessionChange* default_instance_;
};
// -------------------------------------------------------------------

class GM_ProfessionChangeReturn : public ::google::protobuf::Message {
 public:
  GM_ProfessionChangeReturn();
  virtual ~GM_ProfessionChangeReturn();

  GM_ProfessionChangeReturn(const GM_ProfessionChangeReturn& from);

  inline GM_ProfessionChangeReturn& operator=(const GM_ProfessionChangeReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ProfessionChangeReturn& default_instance();

  void Swap(GM_ProfessionChangeReturn* other);

  // implements Message ----------------------------------------------

  GM_ProfessionChangeReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ProfessionChangeReturn& from);
  void MergeFrom(const GM_ProfessionChangeReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_ProfessionChangeReturn)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_ProfessionChangeReturn* default_instance_;
};
// -------------------------------------------------------------------

class GM_FightDataChangeItem : public ::google::protobuf::Message {
 public:
  GM_FightDataChangeItem();
  virtual ~GM_FightDataChangeItem();

  GM_FightDataChangeItem(const GM_FightDataChangeItem& from);

  inline GM_FightDataChangeItem& operator=(const GM_FightDataChangeItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_FightDataChangeItem& default_instance();

  void Swap(GM_FightDataChangeItem* other);

  // implements Message ----------------------------------------------

  GM_FightDataChangeItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_FightDataChangeItem& from);
  void MergeFrom(const GM_FightDataChangeItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 property = 1;
  inline bool has_property() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 1;
  inline ::google::protobuf::int32 property() const;
  inline void set_property(::google::protobuf::int32 value);

  // required int32 changevalue = 2;
  inline bool has_changevalue() const;
  inline void clear_changevalue();
  static const int kChangevalueFieldNumber = 2;
  inline ::google::protobuf::int32 changevalue() const;
  inline void set_changevalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_FightDataChangeItem)
 private:
  inline void set_has_property();
  inline void clear_has_property();
  inline void set_has_changevalue();
  inline void clear_has_changevalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 property_;
  ::google::protobuf::int32 changevalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_FightDataChangeItem* default_instance_;
};
// -------------------------------------------------------------------

class GM_FightDataChangeNotifyInFB : public ::google::protobuf::Message {
 public:
  GM_FightDataChangeNotifyInFB();
  virtual ~GM_FightDataChangeNotifyInFB();

  GM_FightDataChangeNotifyInFB(const GM_FightDataChangeNotifyInFB& from);

  inline GM_FightDataChangeNotifyInFB& operator=(const GM_FightDataChangeNotifyInFB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_FightDataChangeNotifyInFB& default_instance();

  void Swap(GM_FightDataChangeNotifyInFB* other);

  // implements Message ----------------------------------------------

  GM_FightDataChangeNotifyInFB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_FightDataChangeNotifyInFB& from);
  void MergeFrom(const GM_FightDataChangeNotifyInFB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 roleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // required uint32 roleType = 3;
  inline bool has_roletype() const;
  inline void clear_roletype();
  static const int kRoleTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 roletype() const;
  inline void set_roletype(::google::protobuf::uint32 value);

  // repeated .GM_FightDataChangeItem changeitems = 1;
  inline int changeitems_size() const;
  inline void clear_changeitems();
  static const int kChangeitemsFieldNumber = 1;
  inline const ::GM_FightDataChangeItem& changeitems(int index) const;
  inline ::GM_FightDataChangeItem* mutable_changeitems(int index);
  inline ::GM_FightDataChangeItem* add_changeitems();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_FightDataChangeItem >&
      changeitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_FightDataChangeItem >*
      mutable_changeitems();

  // @@protoc_insertion_point(class_scope:GM_FightDataChangeNotifyInFB)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_roletype();
  inline void clear_has_roletype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 roletype_;
  ::google::protobuf::RepeatedPtrField< ::GM_FightDataChangeItem > changeitems_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_FightDataChangeNotifyInFB* default_instance_;
};
// -------------------------------------------------------------------

class GM_FightDataChangeNotify : public ::google::protobuf::Message {
 public:
  GM_FightDataChangeNotify();
  virtual ~GM_FightDataChangeNotify();

  GM_FightDataChangeNotify(const GM_FightDataChangeNotify& from);

  inline GM_FightDataChangeNotify& operator=(const GM_FightDataChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_FightDataChangeNotify& default_instance();

  void Swap(GM_FightDataChangeNotify* other);

  // implements Message ----------------------------------------------

  GM_FightDataChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_FightDataChangeNotify& from);
  void MergeFrom(const GM_FightDataChangeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GM_FightDataChangeItem changeitems = 1;
  inline int changeitems_size() const;
  inline void clear_changeitems();
  static const int kChangeitemsFieldNumber = 1;
  inline const ::GM_FightDataChangeItem& changeitems(int index) const;
  inline ::GM_FightDataChangeItem* mutable_changeitems(int index);
  inline ::GM_FightDataChangeItem* add_changeitems();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_FightDataChangeItem >&
      changeitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_FightDataChangeItem >*
      mutable_changeitems();

  // @@protoc_insertion_point(class_scope:GM_FightDataChangeNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_FightDataChangeItem > changeitems_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_FightDataChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

class GM_UnlockSystem : public ::google::protobuf::Message {
 public:
  GM_UnlockSystem();
  virtual ~GM_UnlockSystem();

  GM_UnlockSystem(const GM_UnlockSystem& from);

  inline GM_UnlockSystem& operator=(const GM_UnlockSystem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_UnlockSystem& default_instance();

  void Swap(GM_UnlockSystem* other);

  // implements Message ----------------------------------------------

  GM_UnlockSystem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_UnlockSystem& from);
  void MergeFrom(const GM_UnlockSystem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 enumID = 1;
  inline bool has_enumid() const;
  inline void clear_enumid();
  static const int kEnumIDFieldNumber = 1;
  inline ::google::protobuf::int32 enumid() const;
  inline void set_enumid(::google::protobuf::int32 value);

  // required int32 isSpecialEffect = 2;
  inline bool has_isspecialeffect() const;
  inline void clear_isspecialeffect();
  static const int kIsSpecialEffectFieldNumber = 2;
  inline ::google::protobuf::int32 isspecialeffect() const;
  inline void set_isspecialeffect(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_UnlockSystem)
 private:
  inline void set_has_enumid();
  inline void clear_has_enumid();
  inline void set_has_isspecialeffect();
  inline void clear_has_isspecialeffect();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 enumid_;
  ::google::protobuf::int32 isspecialeffect_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_UnlockSystem* default_instance_;
};
// -------------------------------------------------------------------

class GM_UnlockSystemList : public ::google::protobuf::Message {
 public:
  GM_UnlockSystemList();
  virtual ~GM_UnlockSystemList();

  GM_UnlockSystemList(const GM_UnlockSystemList& from);

  inline GM_UnlockSystemList& operator=(const GM_UnlockSystemList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_UnlockSystemList& default_instance();

  void Swap(GM_UnlockSystemList* other);

  // implements Message ----------------------------------------------

  GM_UnlockSystemList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_UnlockSystemList& from);
  void MergeFrom(const GM_UnlockSystemList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // repeated int32 enumID = 1;
  inline int enumid_size() const;
  inline void clear_enumid();
  static const int kEnumIDFieldNumber = 1;
  inline ::google::protobuf::int32 enumid(int index) const;
  inline void set_enumid(int index, ::google::protobuf::int32 value);
  inline void add_enumid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      enumid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_enumid();

  // @@protoc_insertion_point(class_scope:GM_UnlockSystemList)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > enumid_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_UnlockSystemList* default_instance_;
};
// -------------------------------------------------------------------

class GM_Commonint32ChangeNotify : public ::google::protobuf::Message {
 public:
  GM_Commonint32ChangeNotify();
  virtual ~GM_Commonint32ChangeNotify();

  GM_Commonint32ChangeNotify(const GM_Commonint32ChangeNotify& from);

  inline GM_Commonint32ChangeNotify& operator=(const GM_Commonint32ChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Commonint32ChangeNotify& default_instance();

  void Swap(GM_Commonint32ChangeNotify* other);

  // implements Message ----------------------------------------------

  GM_Commonint32ChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Commonint32ChangeNotify& from);
  void MergeFrom(const GM_Commonint32ChangeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 property = 1;
  inline bool has_property() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 1;
  inline ::google::protobuf::int32 property() const;
  inline void set_property(::google::protobuf::int32 value);

  // required int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Commonint32ChangeNotify)
 private:
  inline void set_has_property();
  inline void clear_has_property();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 property_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_Commonint32ChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

class GM_CommonLONG64ChangeNotify : public ::google::protobuf::Message {
 public:
  GM_CommonLONG64ChangeNotify();
  virtual ~GM_CommonLONG64ChangeNotify();

  GM_CommonLONG64ChangeNotify(const GM_CommonLONG64ChangeNotify& from);

  inline GM_CommonLONG64ChangeNotify& operator=(const GM_CommonLONG64ChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_CommonLONG64ChangeNotify& default_instance();

  void Swap(GM_CommonLONG64ChangeNotify* other);

  // implements Message ----------------------------------------------

  GM_CommonLONG64ChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_CommonLONG64ChangeNotify& from);
  void MergeFrom(const GM_CommonLONG64ChangeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 property = 1;
  inline bool has_property() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 1;
  inline ::google::protobuf::int32 property() const;
  inline void set_property(::google::protobuf::int32 value);

  // required int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_CommonLONG64ChangeNotify)
 private:
  inline void set_has_property();
  inline void clear_has_property();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 value_;
  ::google::protobuf::int32 property_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_CommonLONG64ChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

class GM_CommonfloatChangeNotify : public ::google::protobuf::Message {
 public:
  GM_CommonfloatChangeNotify();
  virtual ~GM_CommonfloatChangeNotify();

  GM_CommonfloatChangeNotify(const GM_CommonfloatChangeNotify& from);

  inline GM_CommonfloatChangeNotify& operator=(const GM_CommonfloatChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_CommonfloatChangeNotify& default_instance();

  void Swap(GM_CommonfloatChangeNotify* other);

  // implements Message ----------------------------------------------

  GM_CommonfloatChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_CommonfloatChangeNotify& from);
  void MergeFrom(const GM_CommonfloatChangeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 property = 1;
  inline bool has_property() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 1;
  inline ::google::protobuf::int32 property() const;
  inline void set_property(::google::protobuf::int32 value);

  // required float value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline float value() const;
  inline void set_value(float value);

  // @@protoc_insertion_point(class_scope:GM_CommonfloatChangeNotify)
 private:
  inline void set_has_property();
  inline void clear_has_property();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 property_;
  float value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_CommonfloatChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

class GM_RoleDelete_Request : public ::google::protobuf::Message {
 public:
  GM_RoleDelete_Request();
  virtual ~GM_RoleDelete_Request();

  GM_RoleDelete_Request(const GM_RoleDelete_Request& from);

  inline GM_RoleDelete_Request& operator=(const GM_RoleDelete_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RoleDelete_Request& default_instance();

  void Swap(GM_RoleDelete_Request* other);

  // implements Message ----------------------------------------------

  GM_RoleDelete_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RoleDelete_Request& from);
  void MergeFrom(const GM_RoleDelete_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 accountid = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  inline ::google::protobuf::int32 accountid() const;
  inline void set_accountid(::google::protobuf::int32 value);

  // required int32 roleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional .GMLogServerInfo m_info = 3;
  inline bool has_m_info() const;
  inline void clear_m_info();
  static const int kMInfoFieldNumber = 3;
  inline const ::GMLogServerInfo& m_info() const;
  inline ::GMLogServerInfo* mutable_m_info();
  inline ::GMLogServerInfo* release_m_info();
  inline void set_allocated_m_info(::GMLogServerInfo* m_info);

  // @@protoc_insertion_point(class_scope:GM_RoleDelete_Request)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_m_info();
  inline void clear_has_m_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 accountid_;
  ::google::protobuf::int32 roleid_;
  ::GMLogServerInfo* m_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_RoleDelete_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_RoleDelete_Return : public ::google::protobuf::Message {
 public:
  GM_RoleDelete_Return();
  virtual ~GM_RoleDelete_Return();

  GM_RoleDelete_Return(const GM_RoleDelete_Return& from);

  inline GM_RoleDelete_Return& operator=(const GM_RoleDelete_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RoleDelete_Return& default_instance();

  void Swap(GM_RoleDelete_Return* other);

  // implements Message ----------------------------------------------

  GM_RoleDelete_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RoleDelete_Return& from);
  void MergeFrom(const GM_RoleDelete_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_RoleDelete_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_RoleDelete_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_TiredValueInfo : public ::google::protobuf::Message {
 public:
  GM_TiredValueInfo();
  virtual ~GM_TiredValueInfo();

  GM_TiredValueInfo(const GM_TiredValueInfo& from);

  inline GM_TiredValueInfo& operator=(const GM_TiredValueInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_TiredValueInfo& default_instance();

  void Swap(GM_TiredValueInfo* other);

  // implements Message ----------------------------------------------

  GM_TiredValueInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_TiredValueInfo& from);
  void MergeFrom(const GM_TiredValueInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 tiredvaluemax = 1;
  inline bool has_tiredvaluemax() const;
  inline void clear_tiredvaluemax();
  static const int kTiredvaluemaxFieldNumber = 1;
  inline ::google::protobuf::int32 tiredvaluemax() const;
  inline void set_tiredvaluemax(::google::protobuf::int32 value);

  // required int32 tiredvalue = 2;
  inline bool has_tiredvalue() const;
  inline void clear_tiredvalue();
  static const int kTiredvalueFieldNumber = 2;
  inline ::google::protobuf::int32 tiredvalue() const;
  inline void set_tiredvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_TiredValueInfo)
 private:
  inline void set_has_tiredvaluemax();
  inline void clear_has_tiredvaluemax();
  inline void set_has_tiredvalue();
  inline void clear_has_tiredvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 tiredvaluemax_;
  ::google::protobuf::int32 tiredvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_TiredValueInfo* default_instance_;
};
// -------------------------------------------------------------------

class GM_QueryOtherPlayer : public ::google::protobuf::Message {
 public:
  GM_QueryOtherPlayer();
  virtual ~GM_QueryOtherPlayer();

  GM_QueryOtherPlayer(const GM_QueryOtherPlayer& from);

  inline GM_QueryOtherPlayer& operator=(const GM_QueryOtherPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_QueryOtherPlayer& default_instance();

  void Swap(GM_QueryOtherPlayer* other);

  // implements Message ----------------------------------------------

  GM_QueryOtherPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_QueryOtherPlayer& from);
  void MergeFrom(const GM_QueryOtherPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 targetid = 1;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 1;
  inline ::google::protobuf::int32 targetid() const;
  inline void set_targetid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_QueryOtherPlayer)
 private:
  inline void set_has_targetid();
  inline void clear_has_targetid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 targetid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_QueryOtherPlayer* default_instance_;
};
// -------------------------------------------------------------------

class GM_GangInfoResult : public ::google::protobuf::Message {
 public:
  GM_GangInfoResult();
  virtual ~GM_GangInfoResult();

  GM_GangInfoResult(const GM_GangInfoResult& from);

  inline GM_GangInfoResult& operator=(const GM_GangInfoResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_GangInfoResult& default_instance();

  void Swap(GM_GangInfoResult* other);

  // implements Message ----------------------------------------------

  GM_GangInfoResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_GangInfoResult& from);
  void MergeFrom(const GM_GangInfoResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string gangname = 1;
  inline bool has_gangname() const;
  inline void clear_gangname();
  static const int kGangnameFieldNumber = 1;
  inline const ::std::string& gangname() const;
  inline void set_gangname(const ::std::string& value);
  inline void set_gangname(const char* value);
  inline void set_gangname(const char* value, size_t size);
  inline ::std::string* mutable_gangname();
  inline ::std::string* release_gangname();
  inline void set_allocated_gangname(::std::string* gangname);

  // required int32 gangjob = 2;
  inline bool has_gangjob() const;
  inline void clear_gangjob();
  static const int kGangjobFieldNumber = 2;
  inline ::google::protobuf::int32 gangjob() const;
  inline void set_gangjob(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_GangInfoResult)
 private:
  inline void set_has_gangname();
  inline void clear_has_gangname();
  inline void set_has_gangjob();
  inline void clear_has_gangjob();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* gangname_;
  ::google::protobuf::int32 gangjob_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_GangInfoResult* default_instance_;
};
// -------------------------------------------------------------------

class GM_Crckey : public ::google::protobuf::Message {
 public:
  GM_Crckey();
  virtual ~GM_Crckey();

  GM_Crckey(const GM_Crckey& from);

  inline GM_Crckey& operator=(const GM_Crckey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Crckey& default_instance();

  void Swap(GM_Crckey* other);

  // implements Message ----------------------------------------------

  GM_Crckey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Crckey& from);
  void MergeFrom(const GM_Crckey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 crcKey = 1;
  inline bool has_crckey() const;
  inline void clear_crckey();
  static const int kCrcKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 crckey() const;
  inline void set_crckey(::google::protobuf::uint32 value);

  // repeated int32 messageid = 2;
  inline int messageid_size() const;
  inline void clear_messageid();
  static const int kMessageidFieldNumber = 2;
  inline ::google::protobuf::int32 messageid(int index) const;
  inline void set_messageid(int index, ::google::protobuf::int32 value);
  inline void add_messageid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      messageid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_messageid();

  // @@protoc_insertion_point(class_scope:GM_Crckey)
 private:
  inline void set_has_crckey();
  inline void clear_has_crckey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > messageid_;
  ::google::protobuf::uint32 crckey_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_Crckey* default_instance_;
};
// -------------------------------------------------------------------

class GM_Recover_DeleteRole_Request : public ::google::protobuf::Message {
 public:
  GM_Recover_DeleteRole_Request();
  virtual ~GM_Recover_DeleteRole_Request();

  GM_Recover_DeleteRole_Request(const GM_Recover_DeleteRole_Request& from);

  inline GM_Recover_DeleteRole_Request& operator=(const GM_Recover_DeleteRole_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Recover_DeleteRole_Request& default_instance();

  void Swap(GM_Recover_DeleteRole_Request* other);

  // implements Message ----------------------------------------------

  GM_Recover_DeleteRole_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Recover_DeleteRole_Request& from);
  void MergeFrom(const GM_Recover_DeleteRole_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 accountid = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  inline ::google::protobuf::int32 accountid() const;
  inline void set_accountid(::google::protobuf::int32 value);

  // required int32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Recover_DeleteRole_Request)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 accountid_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_Recover_DeleteRole_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Recover_DeleteRole_Return : public ::google::protobuf::Message {
 public:
  GM_Recover_DeleteRole_Return();
  virtual ~GM_Recover_DeleteRole_Return();

  GM_Recover_DeleteRole_Return(const GM_Recover_DeleteRole_Return& from);

  inline GM_Recover_DeleteRole_Return& operator=(const GM_Recover_DeleteRole_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Recover_DeleteRole_Return& default_instance();

  void Swap(GM_Recover_DeleteRole_Return* other);

  // implements Message ----------------------------------------------

  GM_Recover_DeleteRole_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Recover_DeleteRole_Return& from);
  void MergeFrom(const GM_Recover_DeleteRole_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Recover_DeleteRole_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_Recover_DeleteRole_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Cancel_Recover_DeleteRole_Request : public ::google::protobuf::Message {
 public:
  GM_Cancel_Recover_DeleteRole_Request();
  virtual ~GM_Cancel_Recover_DeleteRole_Request();

  GM_Cancel_Recover_DeleteRole_Request(const GM_Cancel_Recover_DeleteRole_Request& from);

  inline GM_Cancel_Recover_DeleteRole_Request& operator=(const GM_Cancel_Recover_DeleteRole_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Cancel_Recover_DeleteRole_Request& default_instance();

  void Swap(GM_Cancel_Recover_DeleteRole_Request* other);

  // implements Message ----------------------------------------------

  GM_Cancel_Recover_DeleteRole_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Cancel_Recover_DeleteRole_Request& from);
  void MergeFrom(const GM_Cancel_Recover_DeleteRole_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Cancel_Recover_DeleteRole_Request)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_Cancel_Recover_DeleteRole_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Cancel_Recover_DeleteRole_Return : public ::google::protobuf::Message {
 public:
  GM_Cancel_Recover_DeleteRole_Return();
  virtual ~GM_Cancel_Recover_DeleteRole_Return();

  GM_Cancel_Recover_DeleteRole_Return(const GM_Cancel_Recover_DeleteRole_Return& from);

  inline GM_Cancel_Recover_DeleteRole_Return& operator=(const GM_Cancel_Recover_DeleteRole_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Cancel_Recover_DeleteRole_Return& default_instance();

  void Swap(GM_Cancel_Recover_DeleteRole_Return* other);

  // implements Message ----------------------------------------------

  GM_Cancel_Recover_DeleteRole_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Cancel_Recover_DeleteRole_Return& from);
  void MergeFrom(const GM_Cancel_Recover_DeleteRole_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Cancel_Recover_DeleteRole_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_Cancel_Recover_DeleteRole_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Recover_DeleteRole_Notify : public ::google::protobuf::Message {
 public:
  GM_Recover_DeleteRole_Notify();
  virtual ~GM_Recover_DeleteRole_Notify();

  GM_Recover_DeleteRole_Notify(const GM_Recover_DeleteRole_Notify& from);

  inline GM_Recover_DeleteRole_Notify& operator=(const GM_Recover_DeleteRole_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Recover_DeleteRole_Notify& default_instance();

  void Swap(GM_Recover_DeleteRole_Notify* other);

  // implements Message ----------------------------------------------

  GM_Recover_DeleteRole_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Recover_DeleteRole_Notify& from);
  void MergeFrom(const GM_Recover_DeleteRole_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Recover_DeleteRole_Notify)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_Recover_DeleteRole_Notify* default_instance_;
};
// -------------------------------------------------------------------

class GM_Player_Recovery : public ::google::protobuf::Message {
 public:
  GM_Player_Recovery();
  virtual ~GM_Player_Recovery();

  GM_Player_Recovery(const GM_Player_Recovery& from);

  inline GM_Player_Recovery& operator=(const GM_Player_Recovery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Player_Recovery& default_instance();

  void Swap(GM_Player_Recovery* other);

  // implements Message ----------------------------------------------

  GM_Player_Recovery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Player_Recovery& from);
  void MergeFrom(const GM_Player_Recovery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 tiredremainder = 1;
  inline bool has_tiredremainder() const;
  inline void clear_tiredremainder();
  static const int kTiredremainderFieldNumber = 1;
  inline ::google::protobuf::int32 tiredremainder() const;
  inline void set_tiredremainder(::google::protobuf::int32 value);

  // optional int32 chastenremainder = 2;
  inline bool has_chastenremainder() const;
  inline void clear_chastenremainder();
  static const int kChastenremainderFieldNumber = 2;
  inline ::google::protobuf::int32 chastenremainder() const;
  inline void set_chastenremainder(::google::protobuf::int32 value);

  // optional int32 tiredRecover = 3;
  inline bool has_tiredrecover() const;
  inline void clear_tiredrecover();
  static const int kTiredRecoverFieldNumber = 3;
  inline ::google::protobuf::int32 tiredrecover() const;
  inline void set_tiredrecover(::google::protobuf::int32 value);

  // optional int32 chastenRecover = 4;
  inline bool has_chastenrecover() const;
  inline void clear_chastenrecover();
  static const int kChastenRecoverFieldNumber = 4;
  inline ::google::protobuf::int32 chastenrecover() const;
  inline void set_chastenrecover(::google::protobuf::int32 value);

  // optional int32 tirednum = 5;
  inline bool has_tirednum() const;
  inline void clear_tirednum();
  static const int kTirednumFieldNumber = 5;
  inline ::google::protobuf::int32 tirednum() const;
  inline void set_tirednum(::google::protobuf::int32 value);

  // optional int32 chastennum = 6;
  inline bool has_chastennum() const;
  inline void clear_chastennum();
  static const int kChastennumFieldNumber = 6;
  inline ::google::protobuf::int32 chastennum() const;
  inline void set_chastennum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Player_Recovery)
 private:
  inline void set_has_tiredremainder();
  inline void clear_has_tiredremainder();
  inline void set_has_chastenremainder();
  inline void clear_has_chastenremainder();
  inline void set_has_tiredrecover();
  inline void clear_has_tiredrecover();
  inline void set_has_chastenrecover();
  inline void clear_has_chastenrecover();
  inline void set_has_tirednum();
  inline void clear_has_tirednum();
  inline void set_has_chastennum();
  inline void clear_has_chastennum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 tiredremainder_;
  ::google::protobuf::int32 chastenremainder_;
  ::google::protobuf::int32 tiredrecover_;
  ::google::protobuf::int32 chastenrecover_;
  ::google::protobuf::int32 tirednum_;
  ::google::protobuf::int32 chastennum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_Player_Recovery* default_instance_;
};
// -------------------------------------------------------------------

class GM_Player_changeSex : public ::google::protobuf::Message {
 public:
  GM_Player_changeSex();
  virtual ~GM_Player_changeSex();

  GM_Player_changeSex(const GM_Player_changeSex& from);

  inline GM_Player_changeSex& operator=(const GM_Player_changeSex& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Player_changeSex& default_instance();

  void Swap(GM_Player_changeSex* other);

  // implements Message ----------------------------------------------

  GM_Player_changeSex* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Player_changeSex& from);
  void MergeFrom(const GM_Player_changeSex& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sex = 1;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 1;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);

  // optional int32 head = 2;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 2;
  inline ::google::protobuf::int32 head() const;
  inline void set_head(::google::protobuf::int32 value);

  // optional int32 frame = 3;
  inline bool has_frame() const;
  inline void clear_frame();
  static const int kFrameFieldNumber = 3;
  inline ::google::protobuf::int32 frame() const;
  inline void set_frame(::google::protobuf::int32 value);

  // optional int32 errorid = 4;
  inline bool has_errorid() const;
  inline void clear_errorid();
  static const int kErroridFieldNumber = 4;
  inline ::google::protobuf::int32 errorid() const;
  inline void set_errorid(::google::protobuf::int32 value);

  // optional string headurl = 5;
  inline bool has_headurl() const;
  inline void clear_headurl();
  static const int kHeadurlFieldNumber = 5;
  inline const ::std::string& headurl() const;
  inline void set_headurl(const ::std::string& value);
  inline void set_headurl(const char* value);
  inline void set_headurl(const char* value, size_t size);
  inline ::std::string* mutable_headurl();
  inline ::std::string* release_headurl();
  inline void set_allocated_headurl(::std::string* headurl);

  // @@protoc_insertion_point(class_scope:GM_Player_changeSex)
 private:
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_frame();
  inline void clear_has_frame();
  inline void set_has_errorid();
  inline void clear_has_errorid();
  inline void set_has_headurl();
  inline void clear_has_headurl();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 head_;
  ::google::protobuf::int32 frame_;
  ::google::protobuf::int32 errorid_;
  ::std::string* headurl_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_Player_changeSex* default_instance_;
};
// -------------------------------------------------------------------

class GM_Ip_request : public ::google::protobuf::Message {
 public:
  GM_Ip_request();
  virtual ~GM_Ip_request();

  GM_Ip_request(const GM_Ip_request& from);

  inline GM_Ip_request& operator=(const GM_Ip_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Ip_request& default_instance();

  void Swap(GM_Ip_request* other);

  // implements Message ----------------------------------------------

  GM_Ip_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Ip_request& from);
  void MergeFrom(const GM_Ip_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 serverid = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 1;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);

  // optional int32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Ip_request)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 serverid_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_Ip_request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Ip_return : public ::google::protobuf::Message {
 public:
  GM_Ip_return();
  virtual ~GM_Ip_return();

  GM_Ip_return(const GM_Ip_return& from);

  inline GM_Ip_return& operator=(const GM_Ip_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Ip_return& default_instance();

  void Swap(GM_Ip_return* other);

  // implements Message ----------------------------------------------

  GM_Ip_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Ip_return& from);
  void MergeFrom(const GM_Ip_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional int32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Ip_return)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ip_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2etxt();
  friend void protobuf_AssignDesc_player_2etxt();
  friend void protobuf_ShutdownFile_player_2etxt();

  void InitAsDefaultInstance();
  static GM_Ip_return* default_instance_;
};
// ===================================================================


// ===================================================================

// GMRoleListRequest

// required int32 m_accountID = 1;
inline bool GMRoleListRequest::has_m_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMRoleListRequest::set_has_m_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMRoleListRequest::clear_has_m_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMRoleListRequest::clear_m_accountid() {
  m_accountid_ = 0;
  clear_has_m_accountid();
}
inline ::google::protobuf::int32 GMRoleListRequest::m_accountid() const {
  return m_accountid_;
}
inline void GMRoleListRequest::set_m_accountid(::google::protobuf::int32 value) {
  set_has_m_accountid();
  m_accountid_ = value;
}

// required int32 m_area = 2;
inline bool GMRoleListRequest::has_m_area() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMRoleListRequest::set_has_m_area() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMRoleListRequest::clear_has_m_area() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMRoleListRequest::clear_m_area() {
  m_area_ = 0;
  clear_has_m_area();
}
inline ::google::protobuf::int32 GMRoleListRequest::m_area() const {
  return m_area_;
}
inline void GMRoleListRequest::set_m_area(::google::protobuf::int32 value) {
  set_has_m_area();
  m_area_ = value;
}

// -------------------------------------------------------------------

// GMRoleListEx

// optional int32 m_roleid = 1;
inline bool GMRoleListEx::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMRoleListEx::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMRoleListEx::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMRoleListEx::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GMRoleListEx::m_roleid() const {
  return m_roleid_;
}
inline void GMRoleListEx::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional int32 communid = 2;
inline bool GMRoleListEx::has_communid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMRoleListEx::set_has_communid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMRoleListEx::clear_has_communid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMRoleListEx::clear_communid() {
  communid_ = 0;
  clear_has_communid();
}
inline ::google::protobuf::int32 GMRoleListEx::communid() const {
  return communid_;
}
inline void GMRoleListEx::set_communid(::google::protobuf::int32 value) {
  set_has_communid();
  communid_ = value;
}

// -------------------------------------------------------------------

// GMEquipInfo

// required int32 packid = 1;
inline bool GMEquipInfo::has_packid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMEquipInfo::set_has_packid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMEquipInfo::clear_has_packid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMEquipInfo::clear_packid() {
  packid_ = 0;
  clear_has_packid();
}
inline ::google::protobuf::int32 GMEquipInfo::packid() const {
  return packid_;
}
inline void GMEquipInfo::set_packid(::google::protobuf::int32 value) {
  set_has_packid();
  packid_ = value;
}

// required int32 grid = 2;
inline bool GMEquipInfo::has_grid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMEquipInfo::set_has_grid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMEquipInfo::clear_has_grid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMEquipInfo::clear_grid() {
  grid_ = 0;
  clear_has_grid();
}
inline ::google::protobuf::int32 GMEquipInfo::grid() const {
  return grid_;
}
inline void GMEquipInfo::set_grid(::google::protobuf::int32 value) {
  set_has_grid();
  grid_ = value;
}

// required int32 type = 3;
inline bool GMEquipInfo::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMEquipInfo::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMEquipInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMEquipInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GMEquipInfo::type() const {
  return type_;
}
inline void GMEquipInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int64 gmid = 4;
inline bool GMEquipInfo::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMEquipInfo::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMEquipInfo::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMEquipInfo::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GMEquipInfo::gmid() const {
  return gmid_;
}
inline void GMEquipInfo::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// -------------------------------------------------------------------

// GMLogServerInfo

// required int32 platformid = 1;
inline bool GMLogServerInfo::has_platformid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMLogServerInfo::set_has_platformid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMLogServerInfo::clear_has_platformid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMLogServerInfo::clear_platformid() {
  platformid_ = 0;
  clear_has_platformid();
}
inline ::google::protobuf::int32 GMLogServerInfo::platformid() const {
  return platformid_;
}
inline void GMLogServerInfo::set_platformid(::google::protobuf::int32 value) {
  set_has_platformid();
  platformid_ = value;
}

// required string ditchid = 2;
inline bool GMLogServerInfo::has_ditchid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMLogServerInfo::set_has_ditchid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMLogServerInfo::clear_has_ditchid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMLogServerInfo::clear_ditchid() {
  if (ditchid_ != &::google::protobuf::internal::kEmptyString) {
    ditchid_->clear();
  }
  clear_has_ditchid();
}
inline const ::std::string& GMLogServerInfo::ditchid() const {
  return *ditchid_;
}
inline void GMLogServerInfo::set_ditchid(const ::std::string& value) {
  set_has_ditchid();
  if (ditchid_ == &::google::protobuf::internal::kEmptyString) {
    ditchid_ = new ::std::string;
  }
  ditchid_->assign(value);
}
inline void GMLogServerInfo::set_ditchid(const char* value) {
  set_has_ditchid();
  if (ditchid_ == &::google::protobuf::internal::kEmptyString) {
    ditchid_ = new ::std::string;
  }
  ditchid_->assign(value);
}
inline void GMLogServerInfo::set_ditchid(const char* value, size_t size) {
  set_has_ditchid();
  if (ditchid_ == &::google::protobuf::internal::kEmptyString) {
    ditchid_ = new ::std::string;
  }
  ditchid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMLogServerInfo::mutable_ditchid() {
  set_has_ditchid();
  if (ditchid_ == &::google::protobuf::internal::kEmptyString) {
    ditchid_ = new ::std::string;
  }
  return ditchid_;
}
inline ::std::string* GMLogServerInfo::release_ditchid() {
  clear_has_ditchid();
  if (ditchid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ditchid_;
    ditchid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMLogServerInfo::set_allocated_ditchid(::std::string* ditchid) {
  if (ditchid_ != &::google::protobuf::internal::kEmptyString) {
    delete ditchid_;
  }
  if (ditchid) {
    set_has_ditchid();
    ditchid_ = ditchid;
  } else {
    clear_has_ditchid();
    ditchid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string version = 3;
inline bool GMLogServerInfo::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMLogServerInfo::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMLogServerInfo::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMLogServerInfo::clear_version() {
  if (version_ != &::google::protobuf::internal::kEmptyString) {
    version_->clear();
  }
  clear_has_version();
}
inline const ::std::string& GMLogServerInfo::version() const {
  return *version_;
}
inline void GMLogServerInfo::set_version(const ::std::string& value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    version_ = new ::std::string;
  }
  version_->assign(value);
}
inline void GMLogServerInfo::set_version(const char* value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    version_ = new ::std::string;
  }
  version_->assign(value);
}
inline void GMLogServerInfo::set_version(const char* value, size_t size) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    version_ = new ::std::string;
  }
  version_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMLogServerInfo::mutable_version() {
  set_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    version_ = new ::std::string;
  }
  return version_;
}
inline ::std::string* GMLogServerInfo::release_version() {
  clear_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = version_;
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMLogServerInfo::set_allocated_version(::std::string* version) {
  if (version_ != &::google::protobuf::internal::kEmptyString) {
    delete version_;
  }
  if (version) {
    set_has_version();
    version_ = version;
  } else {
    clear_has_version();
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 serverid = 4;
inline bool GMLogServerInfo::has_serverid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMLogServerInfo::set_has_serverid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMLogServerInfo::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMLogServerInfo::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 GMLogServerInfo::serverid() const {
  return serverid_;
}
inline void GMLogServerInfo::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
}

// optional string ipaddress = 5;
inline bool GMLogServerInfo::has_ipaddress() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GMLogServerInfo::set_has_ipaddress() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GMLogServerInfo::clear_has_ipaddress() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GMLogServerInfo::clear_ipaddress() {
  if (ipaddress_ != &::google::protobuf::internal::kEmptyString) {
    ipaddress_->clear();
  }
  clear_has_ipaddress();
}
inline const ::std::string& GMLogServerInfo::ipaddress() const {
  return *ipaddress_;
}
inline void GMLogServerInfo::set_ipaddress(const ::std::string& value) {
  set_has_ipaddress();
  if (ipaddress_ == &::google::protobuf::internal::kEmptyString) {
    ipaddress_ = new ::std::string;
  }
  ipaddress_->assign(value);
}
inline void GMLogServerInfo::set_ipaddress(const char* value) {
  set_has_ipaddress();
  if (ipaddress_ == &::google::protobuf::internal::kEmptyString) {
    ipaddress_ = new ::std::string;
  }
  ipaddress_->assign(value);
}
inline void GMLogServerInfo::set_ipaddress(const char* value, size_t size) {
  set_has_ipaddress();
  if (ipaddress_ == &::google::protobuf::internal::kEmptyString) {
    ipaddress_ = new ::std::string;
  }
  ipaddress_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMLogServerInfo::mutable_ipaddress() {
  set_has_ipaddress();
  if (ipaddress_ == &::google::protobuf::internal::kEmptyString) {
    ipaddress_ = new ::std::string;
  }
  return ipaddress_;
}
inline ::std::string* GMLogServerInfo::release_ipaddress() {
  clear_has_ipaddress();
  if (ipaddress_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ipaddress_;
    ipaddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMLogServerInfo::set_allocated_ipaddress(::std::string* ipaddress) {
  if (ipaddress_ != &::google::protobuf::internal::kEmptyString) {
    delete ipaddress_;
  }
  if (ipaddress) {
    set_has_ipaddress();
    ipaddress_ = ipaddress;
  } else {
    clear_has_ipaddress();
    ipaddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string macAddress = 6;
inline bool GMLogServerInfo::has_macaddress() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GMLogServerInfo::set_has_macaddress() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GMLogServerInfo::clear_has_macaddress() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GMLogServerInfo::clear_macaddress() {
  if (macaddress_ != &::google::protobuf::internal::kEmptyString) {
    macaddress_->clear();
  }
  clear_has_macaddress();
}
inline const ::std::string& GMLogServerInfo::macaddress() const {
  return *macaddress_;
}
inline void GMLogServerInfo::set_macaddress(const ::std::string& value) {
  set_has_macaddress();
  if (macaddress_ == &::google::protobuf::internal::kEmptyString) {
    macaddress_ = new ::std::string;
  }
  macaddress_->assign(value);
}
inline void GMLogServerInfo::set_macaddress(const char* value) {
  set_has_macaddress();
  if (macaddress_ == &::google::protobuf::internal::kEmptyString) {
    macaddress_ = new ::std::string;
  }
  macaddress_->assign(value);
}
inline void GMLogServerInfo::set_macaddress(const char* value, size_t size) {
  set_has_macaddress();
  if (macaddress_ == &::google::protobuf::internal::kEmptyString) {
    macaddress_ = new ::std::string;
  }
  macaddress_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMLogServerInfo::mutable_macaddress() {
  set_has_macaddress();
  if (macaddress_ == &::google::protobuf::internal::kEmptyString) {
    macaddress_ = new ::std::string;
  }
  return macaddress_;
}
inline ::std::string* GMLogServerInfo::release_macaddress() {
  clear_has_macaddress();
  if (macaddress_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = macaddress_;
    macaddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMLogServerInfo::set_allocated_macaddress(::std::string* macaddress) {
  if (macaddress_ != &::google::protobuf::internal::kEmptyString) {
    delete macaddress_;
  }
  if (macaddress) {
    set_has_macaddress();
    macaddress_ = macaddress;
  } else {
    clear_has_macaddress();
    macaddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string deviceUUID = 7;
inline bool GMLogServerInfo::has_deviceuuid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GMLogServerInfo::set_has_deviceuuid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GMLogServerInfo::clear_has_deviceuuid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GMLogServerInfo::clear_deviceuuid() {
  if (deviceuuid_ != &::google::protobuf::internal::kEmptyString) {
    deviceuuid_->clear();
  }
  clear_has_deviceuuid();
}
inline const ::std::string& GMLogServerInfo::deviceuuid() const {
  return *deviceuuid_;
}
inline void GMLogServerInfo::set_deviceuuid(const ::std::string& value) {
  set_has_deviceuuid();
  if (deviceuuid_ == &::google::protobuf::internal::kEmptyString) {
    deviceuuid_ = new ::std::string;
  }
  deviceuuid_->assign(value);
}
inline void GMLogServerInfo::set_deviceuuid(const char* value) {
  set_has_deviceuuid();
  if (deviceuuid_ == &::google::protobuf::internal::kEmptyString) {
    deviceuuid_ = new ::std::string;
  }
  deviceuuid_->assign(value);
}
inline void GMLogServerInfo::set_deviceuuid(const char* value, size_t size) {
  set_has_deviceuuid();
  if (deviceuuid_ == &::google::protobuf::internal::kEmptyString) {
    deviceuuid_ = new ::std::string;
  }
  deviceuuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMLogServerInfo::mutable_deviceuuid() {
  set_has_deviceuuid();
  if (deviceuuid_ == &::google::protobuf::internal::kEmptyString) {
    deviceuuid_ = new ::std::string;
  }
  return deviceuuid_;
}
inline ::std::string* GMLogServerInfo::release_deviceuuid() {
  clear_has_deviceuuid();
  if (deviceuuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = deviceuuid_;
    deviceuuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMLogServerInfo::set_allocated_deviceuuid(::std::string* deviceuuid) {
  if (deviceuuid_ != &::google::protobuf::internal::kEmptyString) {
    delete deviceuuid_;
  }
  if (deviceuuid) {
    set_has_deviceuuid();
    deviceuuid_ = deviceuuid;
  } else {
    clear_has_deviceuuid();
    deviceuuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string token = 8;
inline bool GMLogServerInfo::has_token() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GMLogServerInfo::set_has_token() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GMLogServerInfo::clear_has_token() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GMLogServerInfo::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& GMLogServerInfo::token() const {
  return *token_;
}
inline void GMLogServerInfo::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void GMLogServerInfo::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void GMLogServerInfo::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMLogServerInfo::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* GMLogServerInfo::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMLogServerInfo::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string idfa = 9;
inline bool GMLogServerInfo::has_idfa() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GMLogServerInfo::set_has_idfa() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GMLogServerInfo::clear_has_idfa() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GMLogServerInfo::clear_idfa() {
  if (idfa_ != &::google::protobuf::internal::kEmptyString) {
    idfa_->clear();
  }
  clear_has_idfa();
}
inline const ::std::string& GMLogServerInfo::idfa() const {
  return *idfa_;
}
inline void GMLogServerInfo::set_idfa(const ::std::string& value) {
  set_has_idfa();
  if (idfa_ == &::google::protobuf::internal::kEmptyString) {
    idfa_ = new ::std::string;
  }
  idfa_->assign(value);
}
inline void GMLogServerInfo::set_idfa(const char* value) {
  set_has_idfa();
  if (idfa_ == &::google::protobuf::internal::kEmptyString) {
    idfa_ = new ::std::string;
  }
  idfa_->assign(value);
}
inline void GMLogServerInfo::set_idfa(const char* value, size_t size) {
  set_has_idfa();
  if (idfa_ == &::google::protobuf::internal::kEmptyString) {
    idfa_ = new ::std::string;
  }
  idfa_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMLogServerInfo::mutable_idfa() {
  set_has_idfa();
  if (idfa_ == &::google::protobuf::internal::kEmptyString) {
    idfa_ = new ::std::string;
  }
  return idfa_;
}
inline ::std::string* GMLogServerInfo::release_idfa() {
  clear_has_idfa();
  if (idfa_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = idfa_;
    idfa_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMLogServerInfo::set_allocated_idfa(::std::string* idfa) {
  if (idfa_ != &::google::protobuf::internal::kEmptyString) {
    delete idfa_;
  }
  if (idfa) {
    set_has_idfa();
    idfa_ = idfa;
  } else {
    clear_has_idfa();
    idfa_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string devicetype = 10;
inline bool GMLogServerInfo::has_devicetype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GMLogServerInfo::set_has_devicetype() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GMLogServerInfo::clear_has_devicetype() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GMLogServerInfo::clear_devicetype() {
  if (devicetype_ != &::google::protobuf::internal::kEmptyString) {
    devicetype_->clear();
  }
  clear_has_devicetype();
}
inline const ::std::string& GMLogServerInfo::devicetype() const {
  return *devicetype_;
}
inline void GMLogServerInfo::set_devicetype(const ::std::string& value) {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::kEmptyString) {
    devicetype_ = new ::std::string;
  }
  devicetype_->assign(value);
}
inline void GMLogServerInfo::set_devicetype(const char* value) {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::kEmptyString) {
    devicetype_ = new ::std::string;
  }
  devicetype_->assign(value);
}
inline void GMLogServerInfo::set_devicetype(const char* value, size_t size) {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::kEmptyString) {
    devicetype_ = new ::std::string;
  }
  devicetype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMLogServerInfo::mutable_devicetype() {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::kEmptyString) {
    devicetype_ = new ::std::string;
  }
  return devicetype_;
}
inline ::std::string* GMLogServerInfo::release_devicetype() {
  clear_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = devicetype_;
    devicetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMLogServerInfo::set_allocated_devicetype(::std::string* devicetype) {
  if (devicetype_ != &::google::protobuf::internal::kEmptyString) {
    delete devicetype_;
  }
  if (devicetype) {
    set_has_devicetype();
    devicetype_ = devicetype;
  } else {
    clear_has_devicetype();
    devicetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string networktype = 11;
inline bool GMLogServerInfo::has_networktype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GMLogServerInfo::set_has_networktype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GMLogServerInfo::clear_has_networktype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GMLogServerInfo::clear_networktype() {
  if (networktype_ != &::google::protobuf::internal::kEmptyString) {
    networktype_->clear();
  }
  clear_has_networktype();
}
inline const ::std::string& GMLogServerInfo::networktype() const {
  return *networktype_;
}
inline void GMLogServerInfo::set_networktype(const ::std::string& value) {
  set_has_networktype();
  if (networktype_ == &::google::protobuf::internal::kEmptyString) {
    networktype_ = new ::std::string;
  }
  networktype_->assign(value);
}
inline void GMLogServerInfo::set_networktype(const char* value) {
  set_has_networktype();
  if (networktype_ == &::google::protobuf::internal::kEmptyString) {
    networktype_ = new ::std::string;
  }
  networktype_->assign(value);
}
inline void GMLogServerInfo::set_networktype(const char* value, size_t size) {
  set_has_networktype();
  if (networktype_ == &::google::protobuf::internal::kEmptyString) {
    networktype_ = new ::std::string;
  }
  networktype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMLogServerInfo::mutable_networktype() {
  set_has_networktype();
  if (networktype_ == &::google::protobuf::internal::kEmptyString) {
    networktype_ = new ::std::string;
  }
  return networktype_;
}
inline ::std::string* GMLogServerInfo::release_networktype() {
  clear_has_networktype();
  if (networktype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = networktype_;
    networktype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMLogServerInfo::set_allocated_networktype(::std::string* networktype) {
  if (networktype_ != &::google::protobuf::internal::kEmptyString) {
    delete networktype_;
  }
  if (networktype) {
    set_has_networktype();
    networktype_ = networktype;
  } else {
    clear_has_networktype();
    networktype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GMRoleCreate

// required int32 m_AccountID = 1;
inline bool GMRoleCreate::has_m_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMRoleCreate::set_has_m_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMRoleCreate::clear_has_m_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMRoleCreate::clear_m_accountid() {
  m_accountid_ = 0;
  clear_has_m_accountid();
}
inline ::google::protobuf::int32 GMRoleCreate::m_accountid() const {
  return m_accountid_;
}
inline void GMRoleCreate::set_m_accountid(::google::protobuf::int32 value) {
  set_has_m_accountid();
  m_accountid_ = value;
}

// optional .GMLogServerInfo m_info = 2;
inline bool GMRoleCreate::has_m_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMRoleCreate::set_has_m_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMRoleCreate::clear_has_m_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMRoleCreate::clear_m_info() {
  if (m_info_ != NULL) m_info_->::GMLogServerInfo::Clear();
  clear_has_m_info();
}
inline const ::GMLogServerInfo& GMRoleCreate::m_info() const {
  return m_info_ != NULL ? *m_info_ : *default_instance_->m_info_;
}
inline ::GMLogServerInfo* GMRoleCreate::mutable_m_info() {
  set_has_m_info();
  if (m_info_ == NULL) m_info_ = new ::GMLogServerInfo;
  return m_info_;
}
inline ::GMLogServerInfo* GMRoleCreate::release_m_info() {
  clear_has_m_info();
  ::GMLogServerInfo* temp = m_info_;
  m_info_ = NULL;
  return temp;
}
inline void GMRoleCreate::set_allocated_m_info(::GMLogServerInfo* m_info) {
  delete m_info_;
  m_info_ = m_info;
  if (m_info) {
    set_has_m_info();
  } else {
    clear_has_m_info();
  }
}

// optional string m_NickName = 3;
inline bool GMRoleCreate::has_m_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMRoleCreate::set_has_m_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMRoleCreate::clear_has_m_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMRoleCreate::clear_m_nickname() {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    m_nickname_->clear();
  }
  clear_has_m_nickname();
}
inline const ::std::string& GMRoleCreate::m_nickname() const {
  return *m_nickname_;
}
inline void GMRoleCreate::set_m_nickname(const ::std::string& value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void GMRoleCreate::set_m_nickname(const char* value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void GMRoleCreate::set_m_nickname(const char* value, size_t size) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMRoleCreate::mutable_m_nickname() {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  return m_nickname_;
}
inline ::std::string* GMRoleCreate::release_m_nickname() {
  clear_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_nickname_;
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMRoleCreate::set_allocated_m_nickname(::std::string* m_nickname) {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_nickname_;
  }
  if (m_nickname) {
    set_has_m_nickname();
    m_nickname_ = m_nickname;
  } else {
    clear_has_m_nickname();
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_HeadPhotoUrl = 4;
inline bool GMRoleCreate::has_m_headphotourl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMRoleCreate::set_has_m_headphotourl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMRoleCreate::clear_has_m_headphotourl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMRoleCreate::clear_m_headphotourl() {
  if (m_headphotourl_ != &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_->clear();
  }
  clear_has_m_headphotourl();
}
inline const ::std::string& GMRoleCreate::m_headphotourl() const {
  return *m_headphotourl_;
}
inline void GMRoleCreate::set_m_headphotourl(const ::std::string& value) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(value);
}
inline void GMRoleCreate::set_m_headphotourl(const char* value) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(value);
}
inline void GMRoleCreate::set_m_headphotourl(const char* value, size_t size) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMRoleCreate::mutable_m_headphotourl() {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  return m_headphotourl_;
}
inline ::std::string* GMRoleCreate::release_m_headphotourl() {
  clear_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_headphotourl_;
    m_headphotourl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMRoleCreate::set_allocated_m_headphotourl(::std::string* m_headphotourl) {
  if (m_headphotourl_ != &::google::protobuf::internal::kEmptyString) {
    delete m_headphotourl_;
  }
  if (m_headphotourl) {
    set_has_m_headphotourl();
    m_headphotourl_ = m_headphotourl;
  } else {
    clear_has_m_headphotourl();
    m_headphotourl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_sex = 5;
inline bool GMRoleCreate::has_m_sex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GMRoleCreate::set_has_m_sex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GMRoleCreate::clear_has_m_sex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GMRoleCreate::clear_m_sex() {
  m_sex_ = 0;
  clear_has_m_sex();
}
inline ::google::protobuf::int32 GMRoleCreate::m_sex() const {
  return m_sex_;
}
inline void GMRoleCreate::set_m_sex(::google::protobuf::int32 value) {
  set_has_m_sex();
  m_sex_ = value;
}

// optional string m_UnionID = 6;
inline bool GMRoleCreate::has_m_unionid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GMRoleCreate::set_has_m_unionid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GMRoleCreate::clear_has_m_unionid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GMRoleCreate::clear_m_unionid() {
  if (m_unionid_ != &::google::protobuf::internal::kEmptyString) {
    m_unionid_->clear();
  }
  clear_has_m_unionid();
}
inline const ::std::string& GMRoleCreate::m_unionid() const {
  return *m_unionid_;
}
inline void GMRoleCreate::set_m_unionid(const ::std::string& value) {
  set_has_m_unionid();
  if (m_unionid_ == &::google::protobuf::internal::kEmptyString) {
    m_unionid_ = new ::std::string;
  }
  m_unionid_->assign(value);
}
inline void GMRoleCreate::set_m_unionid(const char* value) {
  set_has_m_unionid();
  if (m_unionid_ == &::google::protobuf::internal::kEmptyString) {
    m_unionid_ = new ::std::string;
  }
  m_unionid_->assign(value);
}
inline void GMRoleCreate::set_m_unionid(const char* value, size_t size) {
  set_has_m_unionid();
  if (m_unionid_ == &::google::protobuf::internal::kEmptyString) {
    m_unionid_ = new ::std::string;
  }
  m_unionid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMRoleCreate::mutable_m_unionid() {
  set_has_m_unionid();
  if (m_unionid_ == &::google::protobuf::internal::kEmptyString) {
    m_unionid_ = new ::std::string;
  }
  return m_unionid_;
}
inline ::std::string* GMRoleCreate::release_m_unionid() {
  clear_has_m_unionid();
  if (m_unionid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_unionid_;
    m_unionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMRoleCreate::set_allocated_m_unionid(::std::string* m_unionid) {
  if (m_unionid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_unionid_;
  }
  if (m_unionid) {
    set_has_m_unionid();
    m_unionid_ = m_unionid;
  } else {
    clear_has_m_unionid();
    m_unionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GMRoleCreateReturn

// required int32 m_Result = 1;
inline bool GMRoleCreateReturn::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMRoleCreateReturn::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMRoleCreateReturn::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMRoleCreateReturn::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GMRoleCreateReturn::m_result() const {
  return m_result_;
}
inline void GMRoleCreateReturn::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// required int32 m_RoleID = 2;
inline bool GMRoleCreateReturn::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMRoleCreateReturn::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMRoleCreateReturn::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMRoleCreateReturn::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GMRoleCreateReturn::m_roleid() const {
  return m_roleid_;
}
inline void GMRoleCreateReturn::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional int32 m_accountid = 3;
inline bool GMRoleCreateReturn::has_m_accountid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMRoleCreateReturn::set_has_m_accountid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMRoleCreateReturn::clear_has_m_accountid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMRoleCreateReturn::clear_m_accountid() {
  m_accountid_ = 0;
  clear_has_m_accountid();
}
inline ::google::protobuf::int32 GMRoleCreateReturn::m_accountid() const {
  return m_accountid_;
}
inline void GMRoleCreateReturn::set_m_accountid(::google::protobuf::int32 value) {
  set_has_m_accountid();
  m_accountid_ = value;
}

// optional string m_rolename = 4;
inline bool GMRoleCreateReturn::has_m_rolename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMRoleCreateReturn::set_has_m_rolename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMRoleCreateReturn::clear_has_m_rolename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMRoleCreateReturn::clear_m_rolename() {
  if (m_rolename_ != &::google::protobuf::internal::kEmptyString) {
    m_rolename_->clear();
  }
  clear_has_m_rolename();
}
inline const ::std::string& GMRoleCreateReturn::m_rolename() const {
  return *m_rolename_;
}
inline void GMRoleCreateReturn::set_m_rolename(const ::std::string& value) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(value);
}
inline void GMRoleCreateReturn::set_m_rolename(const char* value) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(value);
}
inline void GMRoleCreateReturn::set_m_rolename(const char* value, size_t size) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMRoleCreateReturn::mutable_m_rolename() {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  return m_rolename_;
}
inline ::std::string* GMRoleCreateReturn::release_m_rolename() {
  clear_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_rolename_;
    m_rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMRoleCreateReturn::set_allocated_m_rolename(::std::string* m_rolename) {
  if (m_rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete m_rolename_;
  }
  if (m_rolename) {
    set_has_m_rolename();
    m_rolename_ = m_rolename;
  } else {
    clear_has_m_rolename();
    m_rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GMRoleLogin

// required int32 m_AccountID = 1;
inline bool GMRoleLogin::has_m_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMRoleLogin::set_has_m_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMRoleLogin::clear_has_m_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMRoleLogin::clear_m_accountid() {
  m_accountid_ = 0;
  clear_has_m_accountid();
}
inline ::google::protobuf::int32 GMRoleLogin::m_accountid() const {
  return m_accountid_;
}
inline void GMRoleLogin::set_m_accountid(::google::protobuf::int32 value) {
  set_has_m_accountid();
  m_accountid_ = value;
}

// required int32 m_RoleID = 2;
inline bool GMRoleLogin::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMRoleLogin::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMRoleLogin::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMRoleLogin::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GMRoleLogin::m_roleid() const {
  return m_roleid_;
}
inline void GMRoleLogin::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// required string m_randstr = 3;
inline bool GMRoleLogin::has_m_randstr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMRoleLogin::set_has_m_randstr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMRoleLogin::clear_has_m_randstr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMRoleLogin::clear_m_randstr() {
  if (m_randstr_ != &::google::protobuf::internal::kEmptyString) {
    m_randstr_->clear();
  }
  clear_has_m_randstr();
}
inline const ::std::string& GMRoleLogin::m_randstr() const {
  return *m_randstr_;
}
inline void GMRoleLogin::set_m_randstr(const ::std::string& value) {
  set_has_m_randstr();
  if (m_randstr_ == &::google::protobuf::internal::kEmptyString) {
    m_randstr_ = new ::std::string;
  }
  m_randstr_->assign(value);
}
inline void GMRoleLogin::set_m_randstr(const char* value) {
  set_has_m_randstr();
  if (m_randstr_ == &::google::protobuf::internal::kEmptyString) {
    m_randstr_ = new ::std::string;
  }
  m_randstr_->assign(value);
}
inline void GMRoleLogin::set_m_randstr(const char* value, size_t size) {
  set_has_m_randstr();
  if (m_randstr_ == &::google::protobuf::internal::kEmptyString) {
    m_randstr_ = new ::std::string;
  }
  m_randstr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMRoleLogin::mutable_m_randstr() {
  set_has_m_randstr();
  if (m_randstr_ == &::google::protobuf::internal::kEmptyString) {
    m_randstr_ = new ::std::string;
  }
  return m_randstr_;
}
inline ::std::string* GMRoleLogin::release_m_randstr() {
  clear_has_m_randstr();
  if (m_randstr_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_randstr_;
    m_randstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMRoleLogin::set_allocated_m_randstr(::std::string* m_randstr) {
  if (m_randstr_ != &::google::protobuf::internal::kEmptyString) {
    delete m_randstr_;
  }
  if (m_randstr) {
    set_has_m_randstr();
    m_randstr_ = m_randstr;
  } else {
    clear_has_m_randstr();
    m_randstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .GMLogServerInfo m_info = 4;
inline bool GMRoleLogin::has_m_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMRoleLogin::set_has_m_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMRoleLogin::clear_has_m_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMRoleLogin::clear_m_info() {
  if (m_info_ != NULL) m_info_->::GMLogServerInfo::Clear();
  clear_has_m_info();
}
inline const ::GMLogServerInfo& GMRoleLogin::m_info() const {
  return m_info_ != NULL ? *m_info_ : *default_instance_->m_info_;
}
inline ::GMLogServerInfo* GMRoleLogin::mutable_m_info() {
  set_has_m_info();
  if (m_info_ == NULL) m_info_ = new ::GMLogServerInfo;
  return m_info_;
}
inline ::GMLogServerInfo* GMRoleLogin::release_m_info() {
  clear_has_m_info();
  ::GMLogServerInfo* temp = m_info_;
  m_info_ = NULL;
  return temp;
}
inline void GMRoleLogin::set_allocated_m_info(::GMLogServerInfo* m_info) {
  delete m_info_;
  m_info_ = m_info;
  if (m_info) {
    set_has_m_info();
  } else {
    clear_has_m_info();
  }
}

// -------------------------------------------------------------------

// GMOffLineReconnect

// required int32 m_AccountID = 1;
inline bool GMOffLineReconnect::has_m_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMOffLineReconnect::set_has_m_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMOffLineReconnect::clear_has_m_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMOffLineReconnect::clear_m_accountid() {
  m_accountid_ = 0;
  clear_has_m_accountid();
}
inline ::google::protobuf::int32 GMOffLineReconnect::m_accountid() const {
  return m_accountid_;
}
inline void GMOffLineReconnect::set_m_accountid(::google::protobuf::int32 value) {
  set_has_m_accountid();
  m_accountid_ = value;
}

// required int32 m_RoleID = 2;
inline bool GMOffLineReconnect::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMOffLineReconnect::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMOffLineReconnect::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMOffLineReconnect::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GMOffLineReconnect::m_roleid() const {
  return m_roleid_;
}
inline void GMOffLineReconnect::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// required string m_randstr = 3;
inline bool GMOffLineReconnect::has_m_randstr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMOffLineReconnect::set_has_m_randstr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMOffLineReconnect::clear_has_m_randstr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMOffLineReconnect::clear_m_randstr() {
  if (m_randstr_ != &::google::protobuf::internal::kEmptyString) {
    m_randstr_->clear();
  }
  clear_has_m_randstr();
}
inline const ::std::string& GMOffLineReconnect::m_randstr() const {
  return *m_randstr_;
}
inline void GMOffLineReconnect::set_m_randstr(const ::std::string& value) {
  set_has_m_randstr();
  if (m_randstr_ == &::google::protobuf::internal::kEmptyString) {
    m_randstr_ = new ::std::string;
  }
  m_randstr_->assign(value);
}
inline void GMOffLineReconnect::set_m_randstr(const char* value) {
  set_has_m_randstr();
  if (m_randstr_ == &::google::protobuf::internal::kEmptyString) {
    m_randstr_ = new ::std::string;
  }
  m_randstr_->assign(value);
}
inline void GMOffLineReconnect::set_m_randstr(const char* value, size_t size) {
  set_has_m_randstr();
  if (m_randstr_ == &::google::protobuf::internal::kEmptyString) {
    m_randstr_ = new ::std::string;
  }
  m_randstr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMOffLineReconnect::mutable_m_randstr() {
  set_has_m_randstr();
  if (m_randstr_ == &::google::protobuf::internal::kEmptyString) {
    m_randstr_ = new ::std::string;
  }
  return m_randstr_;
}
inline ::std::string* GMOffLineReconnect::release_m_randstr() {
  clear_has_m_randstr();
  if (m_randstr_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_randstr_;
    m_randstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMOffLineReconnect::set_allocated_m_randstr(::std::string* m_randstr) {
  if (m_randstr_ != &::google::protobuf::internal::kEmptyString) {
    delete m_randstr_;
  }
  if (m_randstr) {
    set_has_m_randstr();
    m_randstr_ = m_randstr;
  } else {
    clear_has_m_randstr();
    m_randstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GMRoleNameRequest

// required int32 m_RoleProfession = 1;
inline bool GMRoleNameRequest::has_m_roleprofession() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMRoleNameRequest::set_has_m_roleprofession() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMRoleNameRequest::clear_has_m_roleprofession() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMRoleNameRequest::clear_m_roleprofession() {
  m_roleprofession_ = 0;
  clear_has_m_roleprofession();
}
inline ::google::protobuf::int32 GMRoleNameRequest::m_roleprofession() const {
  return m_roleprofession_;
}
inline void GMRoleNameRequest::set_m_roleprofession(::google::protobuf::int32 value) {
  set_has_m_roleprofession();
  m_roleprofession_ = value;
}

// -------------------------------------------------------------------

// GMRoleNameReturn

// required string Name = 1;
inline bool GMRoleNameReturn::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMRoleNameReturn::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMRoleNameReturn::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMRoleNameReturn::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GMRoleNameReturn::name() const {
  return *name_;
}
inline void GMRoleNameReturn::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GMRoleNameReturn::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GMRoleNameReturn::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMRoleNameReturn::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GMRoleNameReturn::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMRoleNameReturn::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 result = 2;
inline bool GMRoleNameReturn::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMRoleNameReturn::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMRoleNameReturn::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMRoleNameReturn::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GMRoleNameReturn::result() const {
  return result_;
}
inline void GMRoleNameReturn::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 type = 3;
inline bool GMRoleNameReturn::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMRoleNameReturn::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMRoleNameReturn::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMRoleNameReturn::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GMRoleNameReturn::type() const {
  return type_;
}
inline void GMRoleNameReturn::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// GM_UPDATEFightVal

// required int32 fightval = 1;
inline bool GM_UPDATEFightVal::has_fightval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_UPDATEFightVal::set_has_fightval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_UPDATEFightVal::clear_has_fightval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_UPDATEFightVal::clear_fightval() {
  fightval_ = 0;
  clear_has_fightval();
}
inline ::google::protobuf::int32 GM_UPDATEFightVal::fightval() const {
  return fightval_;
}
inline void GM_UPDATEFightVal::set_fightval(::google::protobuf::int32 value) {
  set_has_fightval();
  fightval_ = value;
}

// -------------------------------------------------------------------

// GM_ProfessionChange

// required int32 professionID = 1;
inline bool GM_ProfessionChange::has_professionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ProfessionChange::set_has_professionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ProfessionChange::clear_has_professionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ProfessionChange::clear_professionid() {
  professionid_ = 0;
  clear_has_professionid();
}
inline ::google::protobuf::int32 GM_ProfessionChange::professionid() const {
  return professionid_;
}
inline void GM_ProfessionChange::set_professionid(::google::protobuf::int32 value) {
  set_has_professionid();
  professionid_ = value;
}

// -------------------------------------------------------------------

// GM_ProfessionChangeReturn

// required int32 result = 1;
inline bool GM_ProfessionChangeReturn::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ProfessionChangeReturn::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ProfessionChangeReturn::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ProfessionChangeReturn::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_ProfessionChangeReturn::result() const {
  return result_;
}
inline void GM_ProfessionChangeReturn::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GM_FightDataChangeItem

// required int32 property = 1;
inline bool GM_FightDataChangeItem::has_property() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_FightDataChangeItem::set_has_property() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_FightDataChangeItem::clear_has_property() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_FightDataChangeItem::clear_property() {
  property_ = 0;
  clear_has_property();
}
inline ::google::protobuf::int32 GM_FightDataChangeItem::property() const {
  return property_;
}
inline void GM_FightDataChangeItem::set_property(::google::protobuf::int32 value) {
  set_has_property();
  property_ = value;
}

// required int32 changevalue = 2;
inline bool GM_FightDataChangeItem::has_changevalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_FightDataChangeItem::set_has_changevalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_FightDataChangeItem::clear_has_changevalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_FightDataChangeItem::clear_changevalue() {
  changevalue_ = 0;
  clear_has_changevalue();
}
inline ::google::protobuf::int32 GM_FightDataChangeItem::changevalue() const {
  return changevalue_;
}
inline void GM_FightDataChangeItem::set_changevalue(::google::protobuf::int32 value) {
  set_has_changevalue();
  changevalue_ = value;
}

// -------------------------------------------------------------------

// GM_FightDataChangeNotifyInFB

// required uint32 roleID = 2;
inline bool GM_FightDataChangeNotifyInFB::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_FightDataChangeNotifyInFB::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_FightDataChangeNotifyInFB::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_FightDataChangeNotifyInFB::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 GM_FightDataChangeNotifyInFB::roleid() const {
  return roleid_;
}
inline void GM_FightDataChangeNotifyInFB::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required uint32 roleType = 3;
inline bool GM_FightDataChangeNotifyInFB::has_roletype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_FightDataChangeNotifyInFB::set_has_roletype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_FightDataChangeNotifyInFB::clear_has_roletype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_FightDataChangeNotifyInFB::clear_roletype() {
  roletype_ = 0u;
  clear_has_roletype();
}
inline ::google::protobuf::uint32 GM_FightDataChangeNotifyInFB::roletype() const {
  return roletype_;
}
inline void GM_FightDataChangeNotifyInFB::set_roletype(::google::protobuf::uint32 value) {
  set_has_roletype();
  roletype_ = value;
}

// repeated .GM_FightDataChangeItem changeitems = 1;
inline int GM_FightDataChangeNotifyInFB::changeitems_size() const {
  return changeitems_.size();
}
inline void GM_FightDataChangeNotifyInFB::clear_changeitems() {
  changeitems_.Clear();
}
inline const ::GM_FightDataChangeItem& GM_FightDataChangeNotifyInFB::changeitems(int index) const {
  return changeitems_.Get(index);
}
inline ::GM_FightDataChangeItem* GM_FightDataChangeNotifyInFB::mutable_changeitems(int index) {
  return changeitems_.Mutable(index);
}
inline ::GM_FightDataChangeItem* GM_FightDataChangeNotifyInFB::add_changeitems() {
  return changeitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_FightDataChangeItem >&
GM_FightDataChangeNotifyInFB::changeitems() const {
  return changeitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_FightDataChangeItem >*
GM_FightDataChangeNotifyInFB::mutable_changeitems() {
  return &changeitems_;
}

// -------------------------------------------------------------------

// GM_FightDataChangeNotify

// repeated .GM_FightDataChangeItem changeitems = 1;
inline int GM_FightDataChangeNotify::changeitems_size() const {
  return changeitems_.size();
}
inline void GM_FightDataChangeNotify::clear_changeitems() {
  changeitems_.Clear();
}
inline const ::GM_FightDataChangeItem& GM_FightDataChangeNotify::changeitems(int index) const {
  return changeitems_.Get(index);
}
inline ::GM_FightDataChangeItem* GM_FightDataChangeNotify::mutable_changeitems(int index) {
  return changeitems_.Mutable(index);
}
inline ::GM_FightDataChangeItem* GM_FightDataChangeNotify::add_changeitems() {
  return changeitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_FightDataChangeItem >&
GM_FightDataChangeNotify::changeitems() const {
  return changeitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_FightDataChangeItem >*
GM_FightDataChangeNotify::mutable_changeitems() {
  return &changeitems_;
}

// -------------------------------------------------------------------

// GM_UnlockSystem

// required int32 enumID = 1;
inline bool GM_UnlockSystem::has_enumid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_UnlockSystem::set_has_enumid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_UnlockSystem::clear_has_enumid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_UnlockSystem::clear_enumid() {
  enumid_ = 0;
  clear_has_enumid();
}
inline ::google::protobuf::int32 GM_UnlockSystem::enumid() const {
  return enumid_;
}
inline void GM_UnlockSystem::set_enumid(::google::protobuf::int32 value) {
  set_has_enumid();
  enumid_ = value;
}

// required int32 isSpecialEffect = 2;
inline bool GM_UnlockSystem::has_isspecialeffect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_UnlockSystem::set_has_isspecialeffect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_UnlockSystem::clear_has_isspecialeffect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_UnlockSystem::clear_isspecialeffect() {
  isspecialeffect_ = 0;
  clear_has_isspecialeffect();
}
inline ::google::protobuf::int32 GM_UnlockSystem::isspecialeffect() const {
  return isspecialeffect_;
}
inline void GM_UnlockSystem::set_isspecialeffect(::google::protobuf::int32 value) {
  set_has_isspecialeffect();
  isspecialeffect_ = value;
}

// -------------------------------------------------------------------

// GM_UnlockSystemList

// required int32 count = 2;
inline bool GM_UnlockSystemList::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_UnlockSystemList::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_UnlockSystemList::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_UnlockSystemList::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GM_UnlockSystemList::count() const {
  return count_;
}
inline void GM_UnlockSystemList::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// repeated int32 enumID = 1;
inline int GM_UnlockSystemList::enumid_size() const {
  return enumid_.size();
}
inline void GM_UnlockSystemList::clear_enumid() {
  enumid_.Clear();
}
inline ::google::protobuf::int32 GM_UnlockSystemList::enumid(int index) const {
  return enumid_.Get(index);
}
inline void GM_UnlockSystemList::set_enumid(int index, ::google::protobuf::int32 value) {
  enumid_.Set(index, value);
}
inline void GM_UnlockSystemList::add_enumid(::google::protobuf::int32 value) {
  enumid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GM_UnlockSystemList::enumid() const {
  return enumid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GM_UnlockSystemList::mutable_enumid() {
  return &enumid_;
}

// -------------------------------------------------------------------

// GM_Commonint32ChangeNotify

// required int32 property = 1;
inline bool GM_Commonint32ChangeNotify::has_property() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Commonint32ChangeNotify::set_has_property() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Commonint32ChangeNotify::clear_has_property() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Commonint32ChangeNotify::clear_property() {
  property_ = 0;
  clear_has_property();
}
inline ::google::protobuf::int32 GM_Commonint32ChangeNotify::property() const {
  return property_;
}
inline void GM_Commonint32ChangeNotify::set_property(::google::protobuf::int32 value) {
  set_has_property();
  property_ = value;
}

// required int32 value = 2;
inline bool GM_Commonint32ChangeNotify::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Commonint32ChangeNotify::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Commonint32ChangeNotify::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Commonint32ChangeNotify::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 GM_Commonint32ChangeNotify::value() const {
  return value_;
}
inline void GM_Commonint32ChangeNotify::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// GM_CommonLONG64ChangeNotify

// required int32 property = 1;
inline bool GM_CommonLONG64ChangeNotify::has_property() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_CommonLONG64ChangeNotify::set_has_property() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_CommonLONG64ChangeNotify::clear_has_property() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_CommonLONG64ChangeNotify::clear_property() {
  property_ = 0;
  clear_has_property();
}
inline ::google::protobuf::int32 GM_CommonLONG64ChangeNotify::property() const {
  return property_;
}
inline void GM_CommonLONG64ChangeNotify::set_property(::google::protobuf::int32 value) {
  set_has_property();
  property_ = value;
}

// required int64 value = 2;
inline bool GM_CommonLONG64ChangeNotify::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_CommonLONG64ChangeNotify::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_CommonLONG64ChangeNotify::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_CommonLONG64ChangeNotify::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 GM_CommonLONG64ChangeNotify::value() const {
  return value_;
}
inline void GM_CommonLONG64ChangeNotify::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// GM_CommonfloatChangeNotify

// required int32 property = 1;
inline bool GM_CommonfloatChangeNotify::has_property() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_CommonfloatChangeNotify::set_has_property() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_CommonfloatChangeNotify::clear_has_property() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_CommonfloatChangeNotify::clear_property() {
  property_ = 0;
  clear_has_property();
}
inline ::google::protobuf::int32 GM_CommonfloatChangeNotify::property() const {
  return property_;
}
inline void GM_CommonfloatChangeNotify::set_property(::google::protobuf::int32 value) {
  set_has_property();
  property_ = value;
}

// required float value = 2;
inline bool GM_CommonfloatChangeNotify::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_CommonfloatChangeNotify::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_CommonfloatChangeNotify::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_CommonfloatChangeNotify::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline float GM_CommonfloatChangeNotify::value() const {
  return value_;
}
inline void GM_CommonfloatChangeNotify::set_value(float value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// GM_RoleDelete_Request

// required int32 accountid = 1;
inline bool GM_RoleDelete_Request::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RoleDelete_Request::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RoleDelete_Request::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RoleDelete_Request::clear_accountid() {
  accountid_ = 0;
  clear_has_accountid();
}
inline ::google::protobuf::int32 GM_RoleDelete_Request::accountid() const {
  return accountid_;
}
inline void GM_RoleDelete_Request::set_accountid(::google::protobuf::int32 value) {
  set_has_accountid();
  accountid_ = value;
}

// required int32 roleID = 2;
inline bool GM_RoleDelete_Request::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RoleDelete_Request::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RoleDelete_Request::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RoleDelete_Request::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_RoleDelete_Request::roleid() const {
  return roleid_;
}
inline void GM_RoleDelete_Request::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional .GMLogServerInfo m_info = 3;
inline bool GM_RoleDelete_Request::has_m_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_RoleDelete_Request::set_has_m_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_RoleDelete_Request::clear_has_m_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_RoleDelete_Request::clear_m_info() {
  if (m_info_ != NULL) m_info_->::GMLogServerInfo::Clear();
  clear_has_m_info();
}
inline const ::GMLogServerInfo& GM_RoleDelete_Request::m_info() const {
  return m_info_ != NULL ? *m_info_ : *default_instance_->m_info_;
}
inline ::GMLogServerInfo* GM_RoleDelete_Request::mutable_m_info() {
  set_has_m_info();
  if (m_info_ == NULL) m_info_ = new ::GMLogServerInfo;
  return m_info_;
}
inline ::GMLogServerInfo* GM_RoleDelete_Request::release_m_info() {
  clear_has_m_info();
  ::GMLogServerInfo* temp = m_info_;
  m_info_ = NULL;
  return temp;
}
inline void GM_RoleDelete_Request::set_allocated_m_info(::GMLogServerInfo* m_info) {
  delete m_info_;
  m_info_ = m_info;
  if (m_info) {
    set_has_m_info();
  } else {
    clear_has_m_info();
  }
}

// -------------------------------------------------------------------

// GM_RoleDelete_Return

// required int32 result = 1;
inline bool GM_RoleDelete_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RoleDelete_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RoleDelete_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RoleDelete_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_RoleDelete_Return::result() const {
  return result_;
}
inline void GM_RoleDelete_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 roleid = 2;
inline bool GM_RoleDelete_Return::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RoleDelete_Return::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RoleDelete_Return::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RoleDelete_Return::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_RoleDelete_Return::roleid() const {
  return roleid_;
}
inline void GM_RoleDelete_Return::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// GM_TiredValueInfo

// required int32 tiredvaluemax = 1;
inline bool GM_TiredValueInfo::has_tiredvaluemax() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_TiredValueInfo::set_has_tiredvaluemax() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_TiredValueInfo::clear_has_tiredvaluemax() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_TiredValueInfo::clear_tiredvaluemax() {
  tiredvaluemax_ = 0;
  clear_has_tiredvaluemax();
}
inline ::google::protobuf::int32 GM_TiredValueInfo::tiredvaluemax() const {
  return tiredvaluemax_;
}
inline void GM_TiredValueInfo::set_tiredvaluemax(::google::protobuf::int32 value) {
  set_has_tiredvaluemax();
  tiredvaluemax_ = value;
}

// required int32 tiredvalue = 2;
inline bool GM_TiredValueInfo::has_tiredvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_TiredValueInfo::set_has_tiredvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_TiredValueInfo::clear_has_tiredvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_TiredValueInfo::clear_tiredvalue() {
  tiredvalue_ = 0;
  clear_has_tiredvalue();
}
inline ::google::protobuf::int32 GM_TiredValueInfo::tiredvalue() const {
  return tiredvalue_;
}
inline void GM_TiredValueInfo::set_tiredvalue(::google::protobuf::int32 value) {
  set_has_tiredvalue();
  tiredvalue_ = value;
}

// -------------------------------------------------------------------

// GM_QueryOtherPlayer

// required int32 targetid = 1;
inline bool GM_QueryOtherPlayer::has_targetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_QueryOtherPlayer::set_has_targetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_QueryOtherPlayer::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_QueryOtherPlayer::clear_targetid() {
  targetid_ = 0;
  clear_has_targetid();
}
inline ::google::protobuf::int32 GM_QueryOtherPlayer::targetid() const {
  return targetid_;
}
inline void GM_QueryOtherPlayer::set_targetid(::google::protobuf::int32 value) {
  set_has_targetid();
  targetid_ = value;
}

// -------------------------------------------------------------------

// GM_GangInfoResult

// required string gangname = 1;
inline bool GM_GangInfoResult::has_gangname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_GangInfoResult::set_has_gangname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_GangInfoResult::clear_has_gangname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_GangInfoResult::clear_gangname() {
  if (gangname_ != &::google::protobuf::internal::kEmptyString) {
    gangname_->clear();
  }
  clear_has_gangname();
}
inline const ::std::string& GM_GangInfoResult::gangname() const {
  return *gangname_;
}
inline void GM_GangInfoResult::set_gangname(const ::std::string& value) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::kEmptyString) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(value);
}
inline void GM_GangInfoResult::set_gangname(const char* value) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::kEmptyString) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(value);
}
inline void GM_GangInfoResult::set_gangname(const char* value, size_t size) {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::kEmptyString) {
    gangname_ = new ::std::string;
  }
  gangname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_GangInfoResult::mutable_gangname() {
  set_has_gangname();
  if (gangname_ == &::google::protobuf::internal::kEmptyString) {
    gangname_ = new ::std::string;
  }
  return gangname_;
}
inline ::std::string* GM_GangInfoResult::release_gangname() {
  clear_has_gangname();
  if (gangname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gangname_;
    gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_GangInfoResult::set_allocated_gangname(::std::string* gangname) {
  if (gangname_ != &::google::protobuf::internal::kEmptyString) {
    delete gangname_;
  }
  if (gangname) {
    set_has_gangname();
    gangname_ = gangname;
  } else {
    clear_has_gangname();
    gangname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 gangjob = 2;
inline bool GM_GangInfoResult::has_gangjob() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_GangInfoResult::set_has_gangjob() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_GangInfoResult::clear_has_gangjob() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_GangInfoResult::clear_gangjob() {
  gangjob_ = 0;
  clear_has_gangjob();
}
inline ::google::protobuf::int32 GM_GangInfoResult::gangjob() const {
  return gangjob_;
}
inline void GM_GangInfoResult::set_gangjob(::google::protobuf::int32 value) {
  set_has_gangjob();
  gangjob_ = value;
}

// -------------------------------------------------------------------

// GM_Crckey

// required uint32 crcKey = 1;
inline bool GM_Crckey::has_crckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Crckey::set_has_crckey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Crckey::clear_has_crckey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Crckey::clear_crckey() {
  crckey_ = 0u;
  clear_has_crckey();
}
inline ::google::protobuf::uint32 GM_Crckey::crckey() const {
  return crckey_;
}
inline void GM_Crckey::set_crckey(::google::protobuf::uint32 value) {
  set_has_crckey();
  crckey_ = value;
}

// repeated int32 messageid = 2;
inline int GM_Crckey::messageid_size() const {
  return messageid_.size();
}
inline void GM_Crckey::clear_messageid() {
  messageid_.Clear();
}
inline ::google::protobuf::int32 GM_Crckey::messageid(int index) const {
  return messageid_.Get(index);
}
inline void GM_Crckey::set_messageid(int index, ::google::protobuf::int32 value) {
  messageid_.Set(index, value);
}
inline void GM_Crckey::add_messageid(::google::protobuf::int32 value) {
  messageid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GM_Crckey::messageid() const {
  return messageid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GM_Crckey::mutable_messageid() {
  return &messageid_;
}

// -------------------------------------------------------------------

// GM_Recover_DeleteRole_Request

// required int32 accountid = 1;
inline bool GM_Recover_DeleteRole_Request::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Recover_DeleteRole_Request::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Recover_DeleteRole_Request::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Recover_DeleteRole_Request::clear_accountid() {
  accountid_ = 0;
  clear_has_accountid();
}
inline ::google::protobuf::int32 GM_Recover_DeleteRole_Request::accountid() const {
  return accountid_;
}
inline void GM_Recover_DeleteRole_Request::set_accountid(::google::protobuf::int32 value) {
  set_has_accountid();
  accountid_ = value;
}

// required int32 roleid = 2;
inline bool GM_Recover_DeleteRole_Request::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Recover_DeleteRole_Request::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Recover_DeleteRole_Request::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Recover_DeleteRole_Request::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Recover_DeleteRole_Request::roleid() const {
  return roleid_;
}
inline void GM_Recover_DeleteRole_Request::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// GM_Recover_DeleteRole_Return

// required int32 result = 1;
inline bool GM_Recover_DeleteRole_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Recover_DeleteRole_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Recover_DeleteRole_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Recover_DeleteRole_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_Recover_DeleteRole_Return::result() const {
  return result_;
}
inline void GM_Recover_DeleteRole_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GM_Cancel_Recover_DeleteRole_Request

// required int32 roleid = 1;
inline bool GM_Cancel_Recover_DeleteRole_Request::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Cancel_Recover_DeleteRole_Request::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Cancel_Recover_DeleteRole_Request::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Cancel_Recover_DeleteRole_Request::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Cancel_Recover_DeleteRole_Request::roleid() const {
  return roleid_;
}
inline void GM_Cancel_Recover_DeleteRole_Request::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// GM_Cancel_Recover_DeleteRole_Return

// required int32 result = 1;
inline bool GM_Cancel_Recover_DeleteRole_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Cancel_Recover_DeleteRole_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Cancel_Recover_DeleteRole_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Cancel_Recover_DeleteRole_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_Cancel_Recover_DeleteRole_Return::result() const {
  return result_;
}
inline void GM_Cancel_Recover_DeleteRole_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GM_Recover_DeleteRole_Notify

// required int32 roleid = 1;
inline bool GM_Recover_DeleteRole_Notify::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Recover_DeleteRole_Notify::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Recover_DeleteRole_Notify::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Recover_DeleteRole_Notify::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Recover_DeleteRole_Notify::roleid() const {
  return roleid_;
}
inline void GM_Recover_DeleteRole_Notify::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// GM_Player_Recovery

// required int32 tiredremainder = 1;
inline bool GM_Player_Recovery::has_tiredremainder() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Player_Recovery::set_has_tiredremainder() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Player_Recovery::clear_has_tiredremainder() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Player_Recovery::clear_tiredremainder() {
  tiredremainder_ = 0;
  clear_has_tiredremainder();
}
inline ::google::protobuf::int32 GM_Player_Recovery::tiredremainder() const {
  return tiredremainder_;
}
inline void GM_Player_Recovery::set_tiredremainder(::google::protobuf::int32 value) {
  set_has_tiredremainder();
  tiredremainder_ = value;
}

// optional int32 chastenremainder = 2;
inline bool GM_Player_Recovery::has_chastenremainder() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Player_Recovery::set_has_chastenremainder() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Player_Recovery::clear_has_chastenremainder() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Player_Recovery::clear_chastenremainder() {
  chastenremainder_ = 0;
  clear_has_chastenremainder();
}
inline ::google::protobuf::int32 GM_Player_Recovery::chastenremainder() const {
  return chastenremainder_;
}
inline void GM_Player_Recovery::set_chastenremainder(::google::protobuf::int32 value) {
  set_has_chastenremainder();
  chastenremainder_ = value;
}

// optional int32 tiredRecover = 3;
inline bool GM_Player_Recovery::has_tiredrecover() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Player_Recovery::set_has_tiredrecover() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Player_Recovery::clear_has_tiredrecover() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Player_Recovery::clear_tiredrecover() {
  tiredrecover_ = 0;
  clear_has_tiredrecover();
}
inline ::google::protobuf::int32 GM_Player_Recovery::tiredrecover() const {
  return tiredrecover_;
}
inline void GM_Player_Recovery::set_tiredrecover(::google::protobuf::int32 value) {
  set_has_tiredrecover();
  tiredrecover_ = value;
}

// optional int32 chastenRecover = 4;
inline bool GM_Player_Recovery::has_chastenrecover() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Player_Recovery::set_has_chastenrecover() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Player_Recovery::clear_has_chastenrecover() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Player_Recovery::clear_chastenrecover() {
  chastenrecover_ = 0;
  clear_has_chastenrecover();
}
inline ::google::protobuf::int32 GM_Player_Recovery::chastenrecover() const {
  return chastenrecover_;
}
inline void GM_Player_Recovery::set_chastenrecover(::google::protobuf::int32 value) {
  set_has_chastenrecover();
  chastenrecover_ = value;
}

// optional int32 tirednum = 5;
inline bool GM_Player_Recovery::has_tirednum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Player_Recovery::set_has_tirednum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Player_Recovery::clear_has_tirednum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Player_Recovery::clear_tirednum() {
  tirednum_ = 0;
  clear_has_tirednum();
}
inline ::google::protobuf::int32 GM_Player_Recovery::tirednum() const {
  return tirednum_;
}
inline void GM_Player_Recovery::set_tirednum(::google::protobuf::int32 value) {
  set_has_tirednum();
  tirednum_ = value;
}

// optional int32 chastennum = 6;
inline bool GM_Player_Recovery::has_chastennum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_Player_Recovery::set_has_chastennum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_Player_Recovery::clear_has_chastennum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_Player_Recovery::clear_chastennum() {
  chastennum_ = 0;
  clear_has_chastennum();
}
inline ::google::protobuf::int32 GM_Player_Recovery::chastennum() const {
  return chastennum_;
}
inline void GM_Player_Recovery::set_chastennum(::google::protobuf::int32 value) {
  set_has_chastennum();
  chastennum_ = value;
}

// -------------------------------------------------------------------

// GM_Player_changeSex

// required int32 sex = 1;
inline bool GM_Player_changeSex::has_sex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Player_changeSex::set_has_sex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Player_changeSex::clear_has_sex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Player_changeSex::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 GM_Player_changeSex::sex() const {
  return sex_;
}
inline void GM_Player_changeSex::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
}

// optional int32 head = 2;
inline bool GM_Player_changeSex::has_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Player_changeSex::set_has_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Player_changeSex::clear_has_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Player_changeSex::clear_head() {
  head_ = 0;
  clear_has_head();
}
inline ::google::protobuf::int32 GM_Player_changeSex::head() const {
  return head_;
}
inline void GM_Player_changeSex::set_head(::google::protobuf::int32 value) {
  set_has_head();
  head_ = value;
}

// optional int32 frame = 3;
inline bool GM_Player_changeSex::has_frame() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Player_changeSex::set_has_frame() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Player_changeSex::clear_has_frame() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Player_changeSex::clear_frame() {
  frame_ = 0;
  clear_has_frame();
}
inline ::google::protobuf::int32 GM_Player_changeSex::frame() const {
  return frame_;
}
inline void GM_Player_changeSex::set_frame(::google::protobuf::int32 value) {
  set_has_frame();
  frame_ = value;
}

// optional int32 errorid = 4;
inline bool GM_Player_changeSex::has_errorid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Player_changeSex::set_has_errorid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Player_changeSex::clear_has_errorid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Player_changeSex::clear_errorid() {
  errorid_ = 0;
  clear_has_errorid();
}
inline ::google::protobuf::int32 GM_Player_changeSex::errorid() const {
  return errorid_;
}
inline void GM_Player_changeSex::set_errorid(::google::protobuf::int32 value) {
  set_has_errorid();
  errorid_ = value;
}

// optional string headurl = 5;
inline bool GM_Player_changeSex::has_headurl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Player_changeSex::set_has_headurl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Player_changeSex::clear_has_headurl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Player_changeSex::clear_headurl() {
  if (headurl_ != &::google::protobuf::internal::kEmptyString) {
    headurl_->clear();
  }
  clear_has_headurl();
}
inline const ::std::string& GM_Player_changeSex::headurl() const {
  return *headurl_;
}
inline void GM_Player_changeSex::set_headurl(const ::std::string& value) {
  set_has_headurl();
  if (headurl_ == &::google::protobuf::internal::kEmptyString) {
    headurl_ = new ::std::string;
  }
  headurl_->assign(value);
}
inline void GM_Player_changeSex::set_headurl(const char* value) {
  set_has_headurl();
  if (headurl_ == &::google::protobuf::internal::kEmptyString) {
    headurl_ = new ::std::string;
  }
  headurl_->assign(value);
}
inline void GM_Player_changeSex::set_headurl(const char* value, size_t size) {
  set_has_headurl();
  if (headurl_ == &::google::protobuf::internal::kEmptyString) {
    headurl_ = new ::std::string;
  }
  headurl_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Player_changeSex::mutable_headurl() {
  set_has_headurl();
  if (headurl_ == &::google::protobuf::internal::kEmptyString) {
    headurl_ = new ::std::string;
  }
  return headurl_;
}
inline ::std::string* GM_Player_changeSex::release_headurl() {
  clear_has_headurl();
  if (headurl_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = headurl_;
    headurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Player_changeSex::set_allocated_headurl(::std::string* headurl) {
  if (headurl_ != &::google::protobuf::internal::kEmptyString) {
    delete headurl_;
  }
  if (headurl) {
    set_has_headurl();
    headurl_ = headurl;
  } else {
    clear_has_headurl();
    headurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GM_Ip_request

// required int32 serverid = 1;
inline bool GM_Ip_request::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Ip_request::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Ip_request::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Ip_request::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 GM_Ip_request::serverid() const {
  return serverid_;
}
inline void GM_Ip_request::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
}

// optional int32 roleid = 2;
inline bool GM_Ip_request::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Ip_request::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Ip_request::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Ip_request::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Ip_request::roleid() const {
  return roleid_;
}
inline void GM_Ip_request::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// GM_Ip_return

// required string ip = 1;
inline bool GM_Ip_return::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Ip_return::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Ip_return::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Ip_return::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& GM_Ip_return::ip() const {
  return *ip_;
}
inline void GM_Ip_return::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void GM_Ip_return::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void GM_Ip_return::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Ip_return::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* GM_Ip_return::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Ip_return::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 roleid = 2;
inline bool GM_Ip_return::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Ip_return::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Ip_return::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Ip_return::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Ip_return::roleid() const {
  return roleid_;
}
inline void GM_Ip_return::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_player_2etxt__INCLUDED
