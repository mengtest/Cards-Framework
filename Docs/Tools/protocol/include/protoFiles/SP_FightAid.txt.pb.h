// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_FightAid.txt

#ifndef PROTOBUF_SP_5fFightAid_2etxt__INCLUDED
#define PROTOBUF_SP_5fFightAid_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SP_5fFightAid_2etxt();
void protobuf_AssignDesc_SP_5fFightAid_2etxt();
void protobuf_ShutdownFile_SP_5fFightAid_2etxt();

class SMFightAidReturn;
class DB_FightAidDataRequest;

// ===================================================================

class SMFightAidReturn : public ::google::protobuf::Message {
 public:
  SMFightAidReturn();
  virtual ~SMFightAidReturn();

  SMFightAidReturn(const SMFightAidReturn& from);

  inline SMFightAidReturn& operator=(const SMFightAidReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SMFightAidReturn& default_instance();

  void Swap(SMFightAidReturn* other);

  // implements Message ----------------------------------------------

  SMFightAidReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SMFightAidReturn& from);
  void MergeFrom(const SMFightAidReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional string bagState = 2;
  inline bool has_bagstate() const;
  inline void clear_bagstate();
  static const int kBagStateFieldNumber = 2;
  inline const ::std::string& bagstate() const;
  inline void set_bagstate(const ::std::string& value);
  inline void set_bagstate(const char* value);
  inline void set_bagstate(const char* value, size_t size);
  inline ::std::string* mutable_bagstate();
  inline ::std::string* release_bagstate();
  inline void set_allocated_bagstate(::std::string* bagstate);

  // optional int32 leftTime = 3;
  inline bool has_lefttime() const;
  inline void clear_lefttime();
  static const int kLeftTimeFieldNumber = 3;
  inline ::google::protobuf::int32 lefttime() const;
  inline void set_lefttime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SMFightAidReturn)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_bagstate();
  inline void clear_has_bagstate();
  inline void set_has_lefttime();
  inline void clear_has_lefttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* bagstate_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 lefttime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fFightAid_2etxt();
  friend void protobuf_AssignDesc_SP_5fFightAid_2etxt();
  friend void protobuf_ShutdownFile_SP_5fFightAid_2etxt();

  void InitAsDefaultInstance();
  static SMFightAidReturn* default_instance_;
};
// -------------------------------------------------------------------

class DB_FightAidDataRequest : public ::google::protobuf::Message {
 public:
  DB_FightAidDataRequest();
  virtual ~DB_FightAidDataRequest();

  DB_FightAidDataRequest(const DB_FightAidDataRequest& from);

  inline DB_FightAidDataRequest& operator=(const DB_FightAidDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_FightAidDataRequest& default_instance();

  void Swap(DB_FightAidDataRequest* other);

  // implements Message ----------------------------------------------

  DB_FightAidDataRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_FightAidDataRequest& from);
  void MergeFrom(const DB_FightAidDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleId = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DB_FightAidDataRequest)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fFightAid_2etxt();
  friend void protobuf_AssignDesc_SP_5fFightAid_2etxt();
  friend void protobuf_ShutdownFile_SP_5fFightAid_2etxt();

  void InitAsDefaultInstance();
  static DB_FightAidDataRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// SMFightAidReturn

// required int32 roleid = 1;
inline bool SMFightAidReturn::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SMFightAidReturn::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SMFightAidReturn::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SMFightAidReturn::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SMFightAidReturn::roleid() const {
  return roleid_;
}
inline void SMFightAidReturn::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional string bagState = 2;
inline bool SMFightAidReturn::has_bagstate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SMFightAidReturn::set_has_bagstate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SMFightAidReturn::clear_has_bagstate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SMFightAidReturn::clear_bagstate() {
  if (bagstate_ != &::google::protobuf::internal::kEmptyString) {
    bagstate_->clear();
  }
  clear_has_bagstate();
}
inline const ::std::string& SMFightAidReturn::bagstate() const {
  return *bagstate_;
}
inline void SMFightAidReturn::set_bagstate(const ::std::string& value) {
  set_has_bagstate();
  if (bagstate_ == &::google::protobuf::internal::kEmptyString) {
    bagstate_ = new ::std::string;
  }
  bagstate_->assign(value);
}
inline void SMFightAidReturn::set_bagstate(const char* value) {
  set_has_bagstate();
  if (bagstate_ == &::google::protobuf::internal::kEmptyString) {
    bagstate_ = new ::std::string;
  }
  bagstate_->assign(value);
}
inline void SMFightAidReturn::set_bagstate(const char* value, size_t size) {
  set_has_bagstate();
  if (bagstate_ == &::google::protobuf::internal::kEmptyString) {
    bagstate_ = new ::std::string;
  }
  bagstate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SMFightAidReturn::mutable_bagstate() {
  set_has_bagstate();
  if (bagstate_ == &::google::protobuf::internal::kEmptyString) {
    bagstate_ = new ::std::string;
  }
  return bagstate_;
}
inline ::std::string* SMFightAidReturn::release_bagstate() {
  clear_has_bagstate();
  if (bagstate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bagstate_;
    bagstate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SMFightAidReturn::set_allocated_bagstate(::std::string* bagstate) {
  if (bagstate_ != &::google::protobuf::internal::kEmptyString) {
    delete bagstate_;
  }
  if (bagstate) {
    set_has_bagstate();
    bagstate_ = bagstate;
  } else {
    clear_has_bagstate();
    bagstate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 leftTime = 3;
inline bool SMFightAidReturn::has_lefttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SMFightAidReturn::set_has_lefttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SMFightAidReturn::clear_has_lefttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SMFightAidReturn::clear_lefttime() {
  lefttime_ = 0;
  clear_has_lefttime();
}
inline ::google::protobuf::int32 SMFightAidReturn::lefttime() const {
  return lefttime_;
}
inline void SMFightAidReturn::set_lefttime(::google::protobuf::int32 value) {
  set_has_lefttime();
  lefttime_ = value;
}

// -------------------------------------------------------------------

// DB_FightAidDataRequest

// required int32 m_roleId = 1;
inline bool DB_FightAidDataRequest::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB_FightAidDataRequest::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB_FightAidDataRequest::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB_FightAidDataRequest::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 DB_FightAidDataRequest::m_roleid() const {
  return m_roleid_;
}
inline void DB_FightAidDataRequest::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_SP_5fFightAid_2etxt__INCLUDED
