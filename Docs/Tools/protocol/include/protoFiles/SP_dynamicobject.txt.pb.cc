// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_dynamicobject.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SP_dynamicobject.txt.pb.h"
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GM_DynamicObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_DynamicObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_DynamicObjectTypeId_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_DynamicObjectTypeId_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_DynObjects_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_DynObjects_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_SP_5fdynamicobject_2etxt() {
  protobuf_AddDesc_SP_5fdynamicobject_2etxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SP_dynamicobject.txt");
  GOOGLE_CHECK(file != NULL);
  GM_DynamicObject_descriptor_ = file->message_type(0);
  static const int GM_DynamicObject_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObject, m_typeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObject, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObject, m_usedlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObject, m_bagtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObject, m_objtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObject, m_color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObject, m_stacklimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObject, m_buygold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObject, m_icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObject, m_sellgold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObject, m_validtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObject, m_describe_),
  };
  GM_DynamicObject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_DynamicObject_descriptor_,
      GM_DynamicObject::default_instance_,
      GM_DynamicObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_DynamicObject));
  GM_DynamicObjectTypeId_descriptor_ = file->message_type(1);
  static const int GM_DynamicObjectTypeId_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObjectTypeId, type_id_),
  };
  GM_DynamicObjectTypeId_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_DynamicObjectTypeId_descriptor_,
      GM_DynamicObjectTypeId::default_instance_,
      GM_DynamicObjectTypeId_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObjectTypeId, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynamicObjectTypeId, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_DynamicObjectTypeId));
  GM_DynObjects_descriptor_ = file->message_type(2);
  static const int GM_DynObjects_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynObjects, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynObjects, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynObjects, object_),
  };
  GM_DynObjects_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_DynObjects_descriptor_,
      GM_DynObjects::default_instance_,
      GM_DynObjects_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynObjects, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_DynObjects, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_DynObjects));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SP_5fdynamicobject_2etxt);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_DynamicObject_descriptor_, &GM_DynamicObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_DynamicObjectTypeId_descriptor_, &GM_DynamicObjectTypeId::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_DynObjects_descriptor_, &GM_DynObjects::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SP_5fdynamicobject_2etxt() {
  delete GM_DynamicObject::default_instance_;
  delete GM_DynamicObject_reflection_;
  delete GM_DynamicObjectTypeId::default_instance_;
  delete GM_DynamicObjectTypeId_reflection_;
  delete GM_DynObjects::default_instance_;
  delete GM_DynObjects_reflection_;
}

void protobuf_AddDesc_SP_5fdynamicobject_2etxt() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024SP_dynamicobject.txt\"\366\001\n\020GM_DynamicObj"
    "ect\022\020\n\010m_TypeID\030\001 \002(\005\022\016\n\006m_Name\030\002 \002(\t\022\023\n"
    "\013m_UsedLevel\030\003 \002(\005\022\021\n\tm_bagType\030\004 \002(\005\022\021\n"
    "\tm_objType\030\005 \002(\005\022\017\n\007m_Color\030\006 \002(\005\022\024\n\014m_S"
    "tackLimit\030\007 \002(\005\022\021\n\tm_BuyGold\030\010 \002(\005\022\016\n\006m_"
    "Icon\030\t \002(\t\022\022\n\nm_SellGold\030\n \002(\005\022\023\n\013m_Vali"
    "dTime\030\013 \002(\005\022\022\n\nm_Describe\030\014 \002(\t\")\n\026GM_Dy"
    "namicObjectTypeId\022\017\n\007type_id\030\001 \002(\005\"R\n\rGM"
    "_DynObjects\022\r\n\005count\030\001 \002(\005\022\017\n\007version\030\002 "
    "\002(\005\022!\n\006object\030\003 \003(\0132\021.GM_DynamicObject", 398);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SP_dynamicobject.txt", &protobuf_RegisterTypes);
  GM_DynamicObject::default_instance_ = new GM_DynamicObject();
  GM_DynamicObjectTypeId::default_instance_ = new GM_DynamicObjectTypeId();
  GM_DynObjects::default_instance_ = new GM_DynObjects();
  GM_DynamicObject::default_instance_->InitAsDefaultInstance();
  GM_DynamicObjectTypeId::default_instance_->InitAsDefaultInstance();
  GM_DynObjects::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SP_5fdynamicobject_2etxt);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SP_5fdynamicobject_2etxt {
  StaticDescriptorInitializer_SP_5fdynamicobject_2etxt() {
    protobuf_AddDesc_SP_5fdynamicobject_2etxt();
  }
} static_descriptor_initializer_SP_5fdynamicobject_2etxt_;

// ===================================================================

#ifndef _MSC_VER
const int GM_DynamicObject::kMTypeIDFieldNumber;
const int GM_DynamicObject::kMNameFieldNumber;
const int GM_DynamicObject::kMUsedLevelFieldNumber;
const int GM_DynamicObject::kMBagTypeFieldNumber;
const int GM_DynamicObject::kMObjTypeFieldNumber;
const int GM_DynamicObject::kMColorFieldNumber;
const int GM_DynamicObject::kMStackLimitFieldNumber;
const int GM_DynamicObject::kMBuyGoldFieldNumber;
const int GM_DynamicObject::kMIconFieldNumber;
const int GM_DynamicObject::kMSellGoldFieldNumber;
const int GM_DynamicObject::kMValidTimeFieldNumber;
const int GM_DynamicObject::kMDescribeFieldNumber;
#endif  // !_MSC_VER

GM_DynamicObject::GM_DynamicObject()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_DynamicObject::InitAsDefaultInstance() {
}

GM_DynamicObject::GM_DynamicObject(const GM_DynamicObject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_DynamicObject::SharedCtor() {
  _cached_size_ = 0;
  m_typeid_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_usedlevel_ = 0;
  m_bagtype_ = 0;
  m_objtype_ = 0;
  m_color_ = 0;
  m_stacklimit_ = 0;
  m_buygold_ = 0;
  m_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_sellgold_ = 0;
  m_validtime_ = 0;
  m_describe_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_DynamicObject::~GM_DynamicObject() {
  SharedDtor();
}

void GM_DynamicObject::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
    delete m_icon_;
  }
  if (m_describe_ != &::google::protobuf::internal::kEmptyString) {
    delete m_describe_;
  }
  if (this != default_instance_) {
  }
}

void GM_DynamicObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_DynamicObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_DynamicObject_descriptor_;
}

const GM_DynamicObject& GM_DynamicObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fdynamicobject_2etxt();
  return *default_instance_;
}

GM_DynamicObject* GM_DynamicObject::default_instance_ = NULL;

GM_DynamicObject* GM_DynamicObject::New() const {
  return new GM_DynamicObject;
}

void GM_DynamicObject::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_typeid_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    m_usedlevel_ = 0;
    m_bagtype_ = 0;
    m_objtype_ = 0;
    m_color_ = 0;
    m_stacklimit_ = 0;
    m_buygold_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_m_icon()) {
      if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
        m_icon_->clear();
      }
    }
    m_sellgold_ = 0;
    m_validtime_ = 0;
    if (has_m_describe()) {
      if (m_describe_ != &::google::protobuf::internal::kEmptyString) {
        m_describe_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_DynamicObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_TypeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_typeid_)));
          set_has_m_typeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_Name;
        break;
      }

      // required string m_Name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_UsedLevel;
        break;
      }

      // required int32 m_UsedLevel = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_UsedLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_usedlevel_)));
          set_has_m_usedlevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_bagType;
        break;
      }

      // required int32 m_bagType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_bagType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_bagtype_)));
          set_has_m_bagtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_objType;
        break;
      }

      // required int32 m_objType = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_objType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_objtype_)));
          set_has_m_objtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_Color;
        break;
      }

      // required int32 m_Color = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_Color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_color_)));
          set_has_m_color();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_StackLimit;
        break;
      }

      // required int32 m_StackLimit = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_StackLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_stacklimit_)));
          set_has_m_stacklimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_BuyGold;
        break;
      }

      // required int32 m_BuyGold = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_BuyGold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_buygold_)));
          set_has_m_buygold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_Icon;
        break;
      }

      // required string m_Icon = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_Icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_icon().data(), this->m_icon().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_SellGold;
        break;
      }

      // required int32 m_SellGold = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_SellGold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_sellgold_)));
          set_has_m_sellgold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_ValidTime;
        break;
      }

      // required int32 m_ValidTime = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ValidTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_validtime_)));
          set_has_m_validtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_m_Describe;
        break;
      }

      // required string m_Describe = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_Describe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_describe()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_describe().data(), this->m_describe().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_DynamicObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_TypeID = 1;
  if (has_m_typeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_typeid(), output);
  }

  // required string m_Name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_name(), output);
  }

  // required int32 m_UsedLevel = 3;
  if (has_m_usedlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_usedlevel(), output);
  }

  // required int32 m_bagType = 4;
  if (has_m_bagtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_bagtype(), output);
  }

  // required int32 m_objType = 5;
  if (has_m_objtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_objtype(), output);
  }

  // required int32 m_Color = 6;
  if (has_m_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_color(), output);
  }

  // required int32 m_StackLimit = 7;
  if (has_m_stacklimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_stacklimit(), output);
  }

  // required int32 m_BuyGold = 8;
  if (has_m_buygold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_buygold(), output);
  }

  // required string m_Icon = 9;
  if (has_m_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_icon().data(), this->m_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->m_icon(), output);
  }

  // required int32 m_SellGold = 10;
  if (has_m_sellgold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_sellgold(), output);
  }

  // required int32 m_ValidTime = 11;
  if (has_m_validtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_validtime(), output);
  }

  // required string m_Describe = 12;
  if (has_m_describe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_describe().data(), this->m_describe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->m_describe(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_DynamicObject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_TypeID = 1;
  if (has_m_typeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_typeid(), target);
  }

  // required string m_Name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_name(), target);
  }

  // required int32 m_UsedLevel = 3;
  if (has_m_usedlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_usedlevel(), target);
  }

  // required int32 m_bagType = 4;
  if (has_m_bagtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_bagtype(), target);
  }

  // required int32 m_objType = 5;
  if (has_m_objtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_objtype(), target);
  }

  // required int32 m_Color = 6;
  if (has_m_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_color(), target);
  }

  // required int32 m_StackLimit = 7;
  if (has_m_stacklimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_stacklimit(), target);
  }

  // required int32 m_BuyGold = 8;
  if (has_m_buygold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_buygold(), target);
  }

  // required string m_Icon = 9;
  if (has_m_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_icon().data(), this->m_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->m_icon(), target);
  }

  // required int32 m_SellGold = 10;
  if (has_m_sellgold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_sellgold(), target);
  }

  // required int32 m_ValidTime = 11;
  if (has_m_validtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_validtime(), target);
  }

  // required string m_Describe = 12;
  if (has_m_describe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_describe().data(), this->m_describe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->m_describe(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_DynamicObject::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_TypeID = 1;
    if (has_m_typeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_typeid());
    }

    // required string m_Name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // required int32 m_UsedLevel = 3;
    if (has_m_usedlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_usedlevel());
    }

    // required int32 m_bagType = 4;
    if (has_m_bagtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_bagtype());
    }

    // required int32 m_objType = 5;
    if (has_m_objtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_objtype());
    }

    // required int32 m_Color = 6;
    if (has_m_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_color());
    }

    // required int32 m_StackLimit = 7;
    if (has_m_stacklimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_stacklimit());
    }

    // required int32 m_BuyGold = 8;
    if (has_m_buygold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_buygold());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string m_Icon = 9;
    if (has_m_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_icon());
    }

    // required int32 m_SellGold = 10;
    if (has_m_sellgold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_sellgold());
    }

    // required int32 m_ValidTime = 11;
    if (has_m_validtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_validtime());
    }

    // required string m_Describe = 12;
    if (has_m_describe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_describe());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_DynamicObject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_DynamicObject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_DynamicObject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_DynamicObject::MergeFrom(const GM_DynamicObject& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_typeid()) {
      set_m_typeid(from.m_typeid());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_usedlevel()) {
      set_m_usedlevel(from.m_usedlevel());
    }
    if (from.has_m_bagtype()) {
      set_m_bagtype(from.m_bagtype());
    }
    if (from.has_m_objtype()) {
      set_m_objtype(from.m_objtype());
    }
    if (from.has_m_color()) {
      set_m_color(from.m_color());
    }
    if (from.has_m_stacklimit()) {
      set_m_stacklimit(from.m_stacklimit());
    }
    if (from.has_m_buygold()) {
      set_m_buygold(from.m_buygold());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_icon()) {
      set_m_icon(from.m_icon());
    }
    if (from.has_m_sellgold()) {
      set_m_sellgold(from.m_sellgold());
    }
    if (from.has_m_validtime()) {
      set_m_validtime(from.m_validtime());
    }
    if (from.has_m_describe()) {
      set_m_describe(from.m_describe());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_DynamicObject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_DynamicObject::CopyFrom(const GM_DynamicObject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_DynamicObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000fff) != 0x00000fff) return false;

  return true;
}

void GM_DynamicObject::Swap(GM_DynamicObject* other) {
  if (other != this) {
    std::swap(m_typeid_, other->m_typeid_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_usedlevel_, other->m_usedlevel_);
    std::swap(m_bagtype_, other->m_bagtype_);
    std::swap(m_objtype_, other->m_objtype_);
    std::swap(m_color_, other->m_color_);
    std::swap(m_stacklimit_, other->m_stacklimit_);
    std::swap(m_buygold_, other->m_buygold_);
    std::swap(m_icon_, other->m_icon_);
    std::swap(m_sellgold_, other->m_sellgold_);
    std::swap(m_validtime_, other->m_validtime_);
    std::swap(m_describe_, other->m_describe_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_DynamicObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_DynamicObject_descriptor_;
  metadata.reflection = GM_DynamicObject_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_DynamicObjectTypeId::kTypeIdFieldNumber;
#endif  // !_MSC_VER

GM_DynamicObjectTypeId::GM_DynamicObjectTypeId()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_DynamicObjectTypeId::InitAsDefaultInstance() {
}

GM_DynamicObjectTypeId::GM_DynamicObjectTypeId(const GM_DynamicObjectTypeId& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_DynamicObjectTypeId::SharedCtor() {
  _cached_size_ = 0;
  type_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_DynamicObjectTypeId::~GM_DynamicObjectTypeId() {
  SharedDtor();
}

void GM_DynamicObjectTypeId::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_DynamicObjectTypeId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_DynamicObjectTypeId::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_DynamicObjectTypeId_descriptor_;
}

const GM_DynamicObjectTypeId& GM_DynamicObjectTypeId::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fdynamicobject_2etxt();
  return *default_instance_;
}

GM_DynamicObjectTypeId* GM_DynamicObjectTypeId::default_instance_ = NULL;

GM_DynamicObjectTypeId* GM_DynamicObjectTypeId::New() const {
  return new GM_DynamicObjectTypeId;
}

void GM_DynamicObjectTypeId::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_DynamicObjectTypeId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_id_)));
          set_has_type_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_DynamicObjectTypeId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 type_id = 1;
  if (has_type_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_DynamicObjectTypeId::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 type_id = 1;
  if (has_type_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_DynamicObjectTypeId::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type_id = 1;
    if (has_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_DynamicObjectTypeId::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_DynamicObjectTypeId* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_DynamicObjectTypeId*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_DynamicObjectTypeId::MergeFrom(const GM_DynamicObjectTypeId& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type_id()) {
      set_type_id(from.type_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_DynamicObjectTypeId::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_DynamicObjectTypeId::CopyFrom(const GM_DynamicObjectTypeId& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_DynamicObjectTypeId::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_DynamicObjectTypeId::Swap(GM_DynamicObjectTypeId* other) {
  if (other != this) {
    std::swap(type_id_, other->type_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_DynamicObjectTypeId::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_DynamicObjectTypeId_descriptor_;
  metadata.reflection = GM_DynamicObjectTypeId_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_DynObjects::kCountFieldNumber;
const int GM_DynObjects::kVersionFieldNumber;
const int GM_DynObjects::kObjectFieldNumber;
#endif  // !_MSC_VER

GM_DynObjects::GM_DynObjects()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_DynObjects::InitAsDefaultInstance() {
}

GM_DynObjects::GM_DynObjects(const GM_DynObjects& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_DynObjects::SharedCtor() {
  _cached_size_ = 0;
  count_ = 0;
  version_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_DynObjects::~GM_DynObjects() {
  SharedDtor();
}

void GM_DynObjects::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_DynObjects::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_DynObjects::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_DynObjects_descriptor_;
}

const GM_DynObjects& GM_DynObjects::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fdynamicobject_2etxt();
  return *default_instance_;
}

GM_DynObjects* GM_DynObjects::default_instance_ = NULL;

GM_DynObjects* GM_DynObjects::New() const {
  return new GM_DynObjects;
}

void GM_DynObjects::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    count_ = 0;
    version_ = 0;
  }
  object_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_DynObjects::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 count = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_version;
        break;
      }

      // required int32 version = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_object;
        break;
      }

      // repeated .GM_DynamicObject object = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_object:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_object()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_object;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_DynObjects::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 count = 1;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // required int32 version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->version(), output);
  }

  // repeated .GM_DynamicObject object = 3;
  for (int i = 0; i < this->object_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->object(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_DynObjects::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 count = 1;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // required int32 version = 2;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->version(), target);
  }

  // repeated .GM_DynamicObject object = 3;
  for (int i = 0; i < this->object_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->object(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_DynObjects::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 count = 1;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // required int32 version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }

  }
  // repeated .GM_DynamicObject object = 3;
  total_size += 1 * this->object_size();
  for (int i = 0; i < this->object_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->object(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_DynObjects::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_DynObjects* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_DynObjects*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_DynObjects::MergeFrom(const GM_DynObjects& from) {
  GOOGLE_CHECK_NE(&from, this);
  object_.MergeFrom(from.object_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_DynObjects::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_DynObjects::CopyFrom(const GM_DynObjects& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_DynObjects::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < object_size(); i++) {
    if (!this->object(i).IsInitialized()) return false;
  }
  return true;
}

void GM_DynObjects::Swap(GM_DynObjects* other) {
  if (other != this) {
    std::swap(count_, other->count_);
    std::swap(version_, other->version_);
    object_.Swap(&other->object_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_DynObjects::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_DynObjects_descriptor_;
  metadata.reflection = GM_DynObjects_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
