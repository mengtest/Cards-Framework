// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: majiang.txt

#ifndef PROTOBUF_majiang_2etxt__INCLUDED
#define PROTOBUF_majiang_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_majiang_2etxt();
void protobuf_AssignDesc_majiang_2etxt();
void protobuf_ShutdownFile_majiang_2etxt();

class GMMJRequest;
class GMHandCard;
class GMHandCard_PlayerBack;
class GMHandCard_Info;
class GM_PlayerHandCard;
class GM_MJCanOperator;
class GM_OperatorData;
class GM_MJOperator;
class GM_HUOperator;
class GM_HuHandCardData;
class GM_AskFriend;
class GM_AutoInfo;
class GM_ReconnectMJData;
class GM_ReconnectPlayerData;
class GM_ReconnectCloseRoomData;
class GM_ReconnectFunHandCard;
class GM_PlayerFunHandCard;
class GM_MJCardRoomResult;
class GM_MJCardRoomOneData;
class GM_PlayerResultInfo;
class GM_PlayerRollRequest;
class GM_PlayerRecivePack;
class GM_MJOperatorError;

// ===================================================================

class GMMJRequest : public ::google::protobuf::Message {
 public:
  GMMJRequest();
  virtual ~GMMJRequest();

  GMMJRequest(const GMMJRequest& from);

  inline GMMJRequest& operator=(const GMMJRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMMJRequest& default_instance();

  void Swap(GMMJRequest* other);

  // implements Message ----------------------------------------------

  GMMJRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMMJRequest& from);
  void MergeFrom(const GMMJRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional int32 m_fbtypeid = 2;
  inline bool has_m_fbtypeid() const;
  inline void clear_m_fbtypeid();
  static const int kMFbtypeidFieldNumber = 2;
  inline ::google::protobuf::int32 m_fbtypeid() const;
  inline void set_m_fbtypeid(::google::protobuf::int32 value);

  // optional string m_fbplayway = 3;
  inline bool has_m_fbplayway() const;
  inline void clear_m_fbplayway();
  static const int kMFbplaywayFieldNumber = 3;
  inline const ::std::string& m_fbplayway() const;
  inline void set_m_fbplayway(const ::std::string& value);
  inline void set_m_fbplayway(const char* value);
  inline void set_m_fbplayway(const char* value, size_t size);
  inline ::std::string* mutable_m_fbplayway();
  inline ::std::string* release_m_fbplayway();
  inline void set_allocated_m_fbplayway(::std::string* m_fbplayway);

  // optional int32 m_roomcount = 4;
  inline bool has_m_roomcount() const;
  inline void clear_m_roomcount();
  static const int kMRoomcountFieldNumber = 4;
  inline ::google::protobuf::int32 m_roomcount() const;
  inline void set_m_roomcount(::google::protobuf::int32 value);

  // optional int32 m_playerCount = 5;
  inline bool has_m_playercount() const;
  inline void clear_m_playercount();
  static const int kMPlayerCountFieldNumber = 5;
  inline ::google::protobuf::int32 m_playercount() const;
  inline void set_m_playercount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMMJRequest)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_fbtypeid();
  inline void clear_has_m_fbtypeid();
  inline void set_has_m_fbplayway();
  inline void clear_has_m_fbplayway();
  inline void set_has_m_roomcount();
  inline void clear_has_m_roomcount();
  inline void set_has_m_playercount();
  inline void clear_has_m_playercount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_fbtypeid_;
  ::std::string* m_fbplayway_;
  ::google::protobuf::int32 m_roomcount_;
  ::google::protobuf::int32 m_playercount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GMMJRequest* default_instance_;
};
// -------------------------------------------------------------------

class GMHandCard : public ::google::protobuf::Message {
 public:
  GMHandCard();
  virtual ~GMHandCard();

  GMHandCard(const GMHandCard& from);

  inline GMHandCard& operator=(const GMHandCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMHandCard& default_instance();

  void Swap(GMHandCard* other);

  // implements Message ----------------------------------------------

  GMHandCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMHandCard& from);
  void MergeFrom(const GMHandCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_bankerPos = 1;
  inline bool has_m_bankerpos() const;
  inline void clear_m_bankerpos();
  static const int kMBankerPosFieldNumber = 1;
  inline ::google::protobuf::int32 m_bankerpos() const;
  inline void set_m_bankerpos(::google::protobuf::int32 value);

  // optional int32 m_leftCount = 2;
  inline bool has_m_leftcount() const;
  inline void clear_m_leftcount();
  static const int kMLeftCountFieldNumber = 2;
  inline ::google::protobuf::int32 m_leftcount() const;
  inline void set_m_leftcount(::google::protobuf::int32 value);

  // optional int32 m_totalCount = 3;
  inline bool has_m_totalcount() const;
  inline void clear_m_totalcount();
  static const int kMTotalCountFieldNumber = 3;
  inline ::google::protobuf::int32 m_totalcount() const;
  inline void set_m_totalcount(::google::protobuf::int32 value);

  // optional int32 m_getCardId = 4;
  inline bool has_m_getcardid() const;
  inline void clear_m_getcardid();
  static const int kMGetCardIdFieldNumber = 4;
  inline ::google::protobuf::int32 m_getcardid() const;
  inline void set_m_getcardid(::google::protobuf::int32 value);

  // optional int32 m_getCardNum = 5;
  inline bool has_m_getcardnum() const;
  inline void clear_m_getcardnum();
  static const int kMGetCardNumFieldNumber = 5;
  inline ::google::protobuf::int32 m_getcardnum() const;
  inline void set_m_getcardnum(::google::protobuf::int32 value);

  // repeated int32 m_saizi = 20;
  inline int m_saizi_size() const;
  inline void clear_m_saizi();
  static const int kMSaiziFieldNumber = 20;
  inline ::google::protobuf::int32 m_saizi(int index) const;
  inline void set_m_saizi(int index, ::google::protobuf::int32 value);
  inline void add_m_saizi(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_saizi() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_saizi();

  // repeated .GM_PlayerHandCard m_HandCard = 21;
  inline int m_handcard_size() const;
  inline void clear_m_handcard();
  static const int kMHandCardFieldNumber = 21;
  inline const ::GM_PlayerHandCard& m_handcard(int index) const;
  inline ::GM_PlayerHandCard* mutable_m_handcard(int index);
  inline ::GM_PlayerHandCard* add_m_handcard();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >&
      m_handcard() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >*
      mutable_m_handcard();

  // @@protoc_insertion_point(class_scope:GMHandCard)
 private:
  inline void set_has_m_bankerpos();
  inline void clear_has_m_bankerpos();
  inline void set_has_m_leftcount();
  inline void clear_has_m_leftcount();
  inline void set_has_m_totalcount();
  inline void clear_has_m_totalcount();
  inline void set_has_m_getcardid();
  inline void clear_has_m_getcardid();
  inline void set_has_m_getcardnum();
  inline void clear_has_m_getcardnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_bankerpos_;
  ::google::protobuf::int32 m_leftcount_;
  ::google::protobuf::int32 m_totalcount_;
  ::google::protobuf::int32 m_getcardid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_saizi_;
  ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard > m_handcard_;
  ::google::protobuf::int32 m_getcardnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GMHandCard* default_instance_;
};
// -------------------------------------------------------------------

class GMHandCard_PlayerBack : public ::google::protobuf::Message {
 public:
  GMHandCard_PlayerBack();
  virtual ~GMHandCard_PlayerBack();

  GMHandCard_PlayerBack(const GMHandCard_PlayerBack& from);

  inline GMHandCard_PlayerBack& operator=(const GMHandCard_PlayerBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMHandCard_PlayerBack& default_instance();

  void Swap(GMHandCard_PlayerBack* other);

  // implements Message ----------------------------------------------

  GMHandCard_PlayerBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMHandCard_PlayerBack& from);
  void MergeFrom(const GMHandCard_PlayerBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_bankerPos = 1;
  inline bool has_m_bankerpos() const;
  inline void clear_m_bankerpos();
  static const int kMBankerPosFieldNumber = 1;
  inline ::google::protobuf::int32 m_bankerpos() const;
  inline void set_m_bankerpos(::google::protobuf::int32 value);

  // optional int32 m_leftCount = 2;
  inline bool has_m_leftcount() const;
  inline void clear_m_leftcount();
  static const int kMLeftCountFieldNumber = 2;
  inline ::google::protobuf::int32 m_leftcount() const;
  inline void set_m_leftcount(::google::protobuf::int32 value);

  // optional int32 m_totalCount = 3;
  inline bool has_m_totalcount() const;
  inline void clear_m_totalcount();
  static const int kMTotalCountFieldNumber = 3;
  inline ::google::protobuf::int32 m_totalcount() const;
  inline void set_m_totalcount(::google::protobuf::int32 value);

  // optional int32 m_fbtypeid = 4;
  inline bool has_m_fbtypeid() const;
  inline void clear_m_fbtypeid();
  static const int kMFbtypeidFieldNumber = 4;
  inline ::google::protobuf::int32 m_fbtypeid() const;
  inline void set_m_fbtypeid(::google::protobuf::int32 value);

  // optional string m_fbplayway = 5;
  inline bool has_m_fbplayway() const;
  inline void clear_m_fbplayway();
  static const int kMFbplaywayFieldNumber = 5;
  inline const ::std::string& m_fbplayway() const;
  inline void set_m_fbplayway(const ::std::string& value);
  inline void set_m_fbplayway(const char* value);
  inline void set_m_fbplayway(const char* value, size_t size);
  inline ::std::string* mutable_m_fbplayway();
  inline ::std::string* release_m_fbplayway();
  inline void set_allocated_m_fbplayway(::std::string* m_fbplayway);

  // optional int32 m_playerCount = 6;
  inline bool has_m_playercount() const;
  inline void clear_m_playercount();
  static const int kMPlayerCountFieldNumber = 6;
  inline ::google::protobuf::int32 m_playercount() const;
  inline void set_m_playercount(::google::protobuf::int32 value);

  // optional int32 m_roomid = 7;
  inline bool has_m_roomid() const;
  inline void clear_m_roomid();
  static const int kMRoomidFieldNumber = 7;
  inline ::google::protobuf::int32 m_roomid() const;
  inline void set_m_roomid(::google::protobuf::int32 value);

  // repeated int32 m_saizi = 20;
  inline int m_saizi_size() const;
  inline void clear_m_saizi();
  static const int kMSaiziFieldNumber = 20;
  inline ::google::protobuf::int32 m_saizi(int index) const;
  inline void set_m_saizi(int index, ::google::protobuf::int32 value);
  inline void add_m_saizi(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_saizi() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_saizi();

  // repeated .GMHandCard_Info m_handCardData = 21;
  inline int m_handcarddata_size() const;
  inline void clear_m_handcarddata();
  static const int kMHandCardDataFieldNumber = 21;
  inline const ::GMHandCard_Info& m_handcarddata(int index) const;
  inline ::GMHandCard_Info* mutable_m_handcarddata(int index);
  inline ::GMHandCard_Info* add_m_handcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::GMHandCard_Info >&
      m_handcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GMHandCard_Info >*
      mutable_m_handcarddata();

  // @@protoc_insertion_point(class_scope:GMHandCard_PlayerBack)
 private:
  inline void set_has_m_bankerpos();
  inline void clear_has_m_bankerpos();
  inline void set_has_m_leftcount();
  inline void clear_has_m_leftcount();
  inline void set_has_m_totalcount();
  inline void clear_has_m_totalcount();
  inline void set_has_m_fbtypeid();
  inline void clear_has_m_fbtypeid();
  inline void set_has_m_fbplayway();
  inline void clear_has_m_fbplayway();
  inline void set_has_m_playercount();
  inline void clear_has_m_playercount();
  inline void set_has_m_roomid();
  inline void clear_has_m_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_bankerpos_;
  ::google::protobuf::int32 m_leftcount_;
  ::google::protobuf::int32 m_totalcount_;
  ::google::protobuf::int32 m_fbtypeid_;
  ::std::string* m_fbplayway_;
  ::google::protobuf::int32 m_playercount_;
  ::google::protobuf::int32 m_roomid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_saizi_;
  ::google::protobuf::RepeatedPtrField< ::GMHandCard_Info > m_handcarddata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GMHandCard_PlayerBack* default_instance_;
};
// -------------------------------------------------------------------

class GMHandCard_Info : public ::google::protobuf::Message {
 public:
  GMHandCard_Info();
  virtual ~GMHandCard_Info();

  GMHandCard_Info(const GMHandCard_Info& from);

  inline GMHandCard_Info& operator=(const GMHandCard_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMHandCard_Info& default_instance();

  void Swap(GMHandCard_Info* other);

  // implements Message ----------------------------------------------

  GMHandCard_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMHandCard_Info& from);
  void MergeFrom(const GMHandCard_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // repeated .GM_PlayerHandCard m_HandCard = 20;
  inline int m_handcard_size() const;
  inline void clear_m_handcard();
  static const int kMHandCardFieldNumber = 20;
  inline const ::GM_PlayerHandCard& m_handcard(int index) const;
  inline ::GM_PlayerHandCard* mutable_m_handcard(int index);
  inline ::GM_PlayerHandCard* add_m_handcard();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >&
      m_handcard() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >*
      mutable_m_handcard();

  // @@protoc_insertion_point(class_scope:GMHandCard_Info)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard > m_handcard_;
  ::google::protobuf::int32 m_roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GMHandCard_Info* default_instance_;
};
// -------------------------------------------------------------------

class GM_PlayerHandCard : public ::google::protobuf::Message {
 public:
  GM_PlayerHandCard();
  virtual ~GM_PlayerHandCard();

  GM_PlayerHandCard(const GM_PlayerHandCard& from);

  inline GM_PlayerHandCard& operator=(const GM_PlayerHandCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_PlayerHandCard& default_instance();

  void Swap(GM_PlayerHandCard* other);

  // implements Message ----------------------------------------------

  GM_PlayerHandCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_PlayerHandCard& from);
  void MergeFrom(const GM_PlayerHandCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_Index = 1;
  inline bool has_m_index() const;
  inline void clear_m_index();
  static const int kMIndexFieldNumber = 1;
  inline ::google::protobuf::int32 m_index() const;
  inline void set_m_index(::google::protobuf::int32 value);

  // optional int32 m_Type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_PlayerHandCard)
 private:
  inline void set_has_m_index();
  inline void clear_has_m_index();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_index_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_PlayerHandCard* default_instance_;
};
// -------------------------------------------------------------------

class GM_MJCanOperator : public ::google::protobuf::Message {
 public:
  GM_MJCanOperator();
  virtual ~GM_MJCanOperator();

  GM_MJCanOperator(const GM_MJCanOperator& from);

  inline GM_MJCanOperator& operator=(const GM_MJCanOperator& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_MJCanOperator& default_instance();

  void Swap(GM_MJCanOperator* other);

  // implements Message ----------------------------------------------

  GM_MJCanOperator* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_MJCanOperator& from);
  void MergeFrom(const GM_MJCanOperator& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // repeated .GM_OperatorData m_Operator = 2;
  inline int m_operator_size() const;
  inline void clear_m_operator();
  static const int kMOperatorFieldNumber = 2;
  inline const ::GM_OperatorData& m_operator(int index) const;
  inline ::GM_OperatorData* mutable_m_operator(int index);
  inline ::GM_OperatorData* add_m_operator();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_OperatorData >&
      m_operator() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_OperatorData >*
      mutable_m_operator();

  // @@protoc_insertion_point(class_scope:GM_MJCanOperator)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_OperatorData > m_operator_;
  ::google::protobuf::int32 m_roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_MJCanOperator* default_instance_;
};
// -------------------------------------------------------------------

class GM_OperatorData : public ::google::protobuf::Message {
 public:
  GM_OperatorData();
  virtual ~GM_OperatorData();

  GM_OperatorData(const GM_OperatorData& from);

  inline GM_OperatorData& operator=(const GM_OperatorData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_OperatorData& default_instance();

  void Swap(GM_OperatorData* other);

  // implements Message ----------------------------------------------

  GM_OperatorData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_OperatorData& from);
  void MergeFrom(const GM_OperatorData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_OperatorType = 1;
  inline bool has_m_operatortype() const;
  inline void clear_m_operatortype();
  static const int kMOperatorTypeFieldNumber = 1;
  inline ::google::protobuf::int32 m_operatortype() const;
  inline void set_m_operatortype(::google::protobuf::int32 value);

  // optional int32 m_FunID = 2;
  inline bool has_m_funid() const;
  inline void clear_m_funid();
  static const int kMFunIDFieldNumber = 2;
  inline ::google::protobuf::int32 m_funid() const;
  inline void set_m_funid(::google::protobuf::int32 value);

  // optional int32 m_OperatorCard = 3;
  inline bool has_m_operatorcard() const;
  inline void clear_m_operatorcard();
  static const int kMOperatorCardFieldNumber = 3;
  inline ::google::protobuf::int32 m_operatorcard() const;
  inline void set_m_operatorcard(::google::protobuf::int32 value);

  // optional int32 m_RoleVoice = 4;
  inline bool has_m_rolevoice() const;
  inline void clear_m_rolevoice();
  static const int kMRoleVoiceFieldNumber = 4;
  inline ::google::protobuf::int32 m_rolevoice() const;
  inline void set_m_rolevoice(::google::protobuf::int32 value);

  // optional int32 m_CardVoice = 5;
  inline bool has_m_cardvoice() const;
  inline void clear_m_cardvoice();
  static const int kMCardVoiceFieldNumber = 5;
  inline ::google::protobuf::int32 m_cardvoice() const;
  inline void set_m_cardvoice(::google::protobuf::int32 value);

  // optional int32 m_CardNum = 6;
  inline bool has_m_cardnum() const;
  inline void clear_m_cardnum();
  static const int kMCardNumFieldNumber = 6;
  inline ::google::protobuf::int32 m_cardnum() const;
  inline void set_m_cardnum(::google::protobuf::int32 value);

  // repeated .GM_PlayerHandCard m_HandCard = 10;
  inline int m_handcard_size() const;
  inline void clear_m_handcard();
  static const int kMHandCardFieldNumber = 10;
  inline const ::GM_PlayerHandCard& m_handcard(int index) const;
  inline ::GM_PlayerHandCard* mutable_m_handcard(int index);
  inline ::GM_PlayerHandCard* add_m_handcard();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >&
      m_handcard() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >*
      mutable_m_handcard();

  // @@protoc_insertion_point(class_scope:GM_OperatorData)
 private:
  inline void set_has_m_operatortype();
  inline void clear_has_m_operatortype();
  inline void set_has_m_funid();
  inline void clear_has_m_funid();
  inline void set_has_m_operatorcard();
  inline void clear_has_m_operatorcard();
  inline void set_has_m_rolevoice();
  inline void clear_has_m_rolevoice();
  inline void set_has_m_cardvoice();
  inline void clear_has_m_cardvoice();
  inline void set_has_m_cardnum();
  inline void clear_has_m_cardnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_operatortype_;
  ::google::protobuf::int32 m_funid_;
  ::google::protobuf::int32 m_operatorcard_;
  ::google::protobuf::int32 m_rolevoice_;
  ::google::protobuf::int32 m_cardvoice_;
  ::google::protobuf::int32 m_cardnum_;
  ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard > m_handcard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_OperatorData* default_instance_;
};
// -------------------------------------------------------------------

class GM_MJOperator : public ::google::protobuf::Message {
 public:
  GM_MJOperator();
  virtual ~GM_MJOperator();

  GM_MJOperator(const GM_MJOperator& from);

  inline GM_MJOperator& operator=(const GM_MJOperator& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_MJOperator& default_instance();

  void Swap(GM_MJOperator* other);

  // implements Message ----------------------------------------------

  GM_MJOperator* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_MJOperator& from);
  void MergeFrom(const GM_MJOperator& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional int32 m_OperatorType = 2;
  inline bool has_m_operatortype() const;
  inline void clear_m_operatortype();
  static const int kMOperatorTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_operatortype() const;
  inline void set_m_operatortype(::google::protobuf::int32 value);

  // optional int32 m_RoleVoice = 3;
  inline bool has_m_rolevoice() const;
  inline void clear_m_rolevoice();
  static const int kMRoleVoiceFieldNumber = 3;
  inline ::google::protobuf::int32 m_rolevoice() const;
  inline void set_m_rolevoice(::google::protobuf::int32 value);

  // optional int32 m_CardVoice = 4;
  inline bool has_m_cardvoice() const;
  inline void clear_m_cardvoice();
  static const int kMCardVoiceFieldNumber = 4;
  inline ::google::protobuf::int32 m_cardvoice() const;
  inline void set_m_cardvoice(::google::protobuf::int32 value);

  // optional int32 m_Order = 5;
  inline bool has_m_order() const;
  inline void clear_m_order();
  static const int kMOrderFieldNumber = 5;
  inline ::google::protobuf::int32 m_order() const;
  inline void set_m_order(::google::protobuf::int32 value);

  // optional int32 m_CardNum = 6;
  inline bool has_m_cardnum() const;
  inline void clear_m_cardnum();
  static const int kMCardNumFieldNumber = 6;
  inline ::google::protobuf::int32 m_cardnum() const;
  inline void set_m_cardnum(::google::protobuf::int32 value);

  // optional .GM_PlayerHandCard m_LastCard = 7;
  inline bool has_m_lastcard() const;
  inline void clear_m_lastcard();
  static const int kMLastCardFieldNumber = 7;
  inline const ::GM_PlayerHandCard& m_lastcard() const;
  inline ::GM_PlayerHandCard* mutable_m_lastcard();
  inline ::GM_PlayerHandCard* release_m_lastcard();
  inline void set_allocated_m_lastcard(::GM_PlayerHandCard* m_lastcard);

  // repeated .GM_PlayerHandCard m_HandCard = 10;
  inline int m_handcard_size() const;
  inline void clear_m_handcard();
  static const int kMHandCardFieldNumber = 10;
  inline const ::GM_PlayerHandCard& m_handcard(int index) const;
  inline ::GM_PlayerHandCard* mutable_m_handcard(int index);
  inline ::GM_PlayerHandCard* add_m_handcard();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >&
      m_handcard() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >*
      mutable_m_handcard();

  // @@protoc_insertion_point(class_scope:GM_MJOperator)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_operatortype();
  inline void clear_has_m_operatortype();
  inline void set_has_m_rolevoice();
  inline void clear_has_m_rolevoice();
  inline void set_has_m_cardvoice();
  inline void clear_has_m_cardvoice();
  inline void set_has_m_order();
  inline void clear_has_m_order();
  inline void set_has_m_cardnum();
  inline void clear_has_m_cardnum();
  inline void set_has_m_lastcard();
  inline void clear_has_m_lastcard();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_operatortype_;
  ::google::protobuf::int32 m_rolevoice_;
  ::google::protobuf::int32 m_cardvoice_;
  ::google::protobuf::int32 m_order_;
  ::google::protobuf::int32 m_cardnum_;
  ::GM_PlayerHandCard* m_lastcard_;
  ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard > m_handcard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_MJOperator* default_instance_;
};
// -------------------------------------------------------------------

class GM_HUOperator : public ::google::protobuf::Message {
 public:
  GM_HUOperator();
  virtual ~GM_HUOperator();

  GM_HUOperator(const GM_HUOperator& from);

  inline GM_HUOperator& operator=(const GM_HUOperator& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_HUOperator& default_instance();

  void Swap(GM_HUOperator* other);

  // implements Message ----------------------------------------------

  GM_HUOperator* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_HUOperator& from);
  void MergeFrom(const GM_HUOperator& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_huRoleid = 1;
  inline bool has_m_huroleid() const;
  inline void clear_m_huroleid();
  static const int kMHuRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_huroleid() const;
  inline void set_m_huroleid(::google::protobuf::int32 value);

  // optional int32 m_huType = 2;
  inline bool has_m_hutype() const;
  inline void clear_m_hutype();
  static const int kMHuTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_hutype() const;
  inline void set_m_hutype(::google::protobuf::int32 value);

  // optional int32 m_fpid = 3;
  inline bool has_m_fpid() const;
  inline void clear_m_fpid();
  static const int kMFpidFieldNumber = 3;
  inline ::google::protobuf::int32 m_fpid() const;
  inline void set_m_fpid(::google::protobuf::int32 value);

  // repeated .GM_HuHandCardData m_Data = 4;
  inline int m_data_size() const;
  inline void clear_m_data();
  static const int kMDataFieldNumber = 4;
  inline const ::GM_HuHandCardData& m_data(int index) const;
  inline ::GM_HuHandCardData* mutable_m_data(int index);
  inline ::GM_HuHandCardData* add_m_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_HuHandCardData >&
      m_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_HuHandCardData >*
      mutable_m_data();

  // optional int32 m_RoleVoice = 5;
  inline bool has_m_rolevoice() const;
  inline void clear_m_rolevoice();
  static const int kMRoleVoiceFieldNumber = 5;
  inline ::google::protobuf::int32 m_rolevoice() const;
  inline void set_m_rolevoice(::google::protobuf::int32 value);

  // optional int32 m_CardVoice = 6;
  inline bool has_m_cardvoice() const;
  inline void clear_m_cardvoice();
  static const int kMCardVoiceFieldNumber = 6;
  inline ::google::protobuf::int32 m_cardvoice() const;
  inline void set_m_cardvoice(::google::protobuf::int32 value);

  // optional .GM_PlayerHandCard m_huCard = 7;
  inline bool has_m_hucard() const;
  inline void clear_m_hucard();
  static const int kMHuCardFieldNumber = 7;
  inline const ::GM_PlayerHandCard& m_hucard() const;
  inline ::GM_PlayerHandCard* mutable_m_hucard();
  inline ::GM_PlayerHandCard* release_m_hucard();
  inline void set_allocated_m_hucard(::GM_PlayerHandCard* m_hucard);

  // @@protoc_insertion_point(class_scope:GM_HUOperator)
 private:
  inline void set_has_m_huroleid();
  inline void clear_has_m_huroleid();
  inline void set_has_m_hutype();
  inline void clear_has_m_hutype();
  inline void set_has_m_fpid();
  inline void clear_has_m_fpid();
  inline void set_has_m_rolevoice();
  inline void clear_has_m_rolevoice();
  inline void set_has_m_cardvoice();
  inline void clear_has_m_cardvoice();
  inline void set_has_m_hucard();
  inline void clear_has_m_hucard();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_huroleid_;
  ::google::protobuf::int32 m_hutype_;
  ::google::protobuf::RepeatedPtrField< ::GM_HuHandCardData > m_data_;
  ::google::protobuf::int32 m_fpid_;
  ::google::protobuf::int32 m_rolevoice_;
  ::GM_PlayerHandCard* m_hucard_;
  ::google::protobuf::int32 m_cardvoice_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_HUOperator* default_instance_;
};
// -------------------------------------------------------------------

class GM_HuHandCardData : public ::google::protobuf::Message {
 public:
  GM_HuHandCardData();
  virtual ~GM_HuHandCardData();

  GM_HuHandCardData(const GM_HuHandCardData& from);

  inline GM_HuHandCardData& operator=(const GM_HuHandCardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_HuHandCardData& default_instance();

  void Swap(GM_HuHandCardData* other);

  // implements Message ----------------------------------------------

  GM_HuHandCardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_HuHandCardData& from);
  void MergeFrom(const GM_HuHandCardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // repeated int32 m_HandCardType = 2;
  inline int m_handcardtype_size() const;
  inline void clear_m_handcardtype();
  static const int kMHandCardTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_handcardtype(int index) const;
  inline void set_m_handcardtype(int index, ::google::protobuf::int32 value);
  inline void add_m_handcardtype(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_handcardtype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_handcardtype();

  // optional int32 m_Hufeng = 3;
  inline bool has_m_hufeng() const;
  inline void clear_m_hufeng();
  static const int kMHufengFieldNumber = 3;
  inline ::google::protobuf::int32 m_hufeng() const;
  inline void set_m_hufeng(::google::protobuf::int32 value);

  // optional int32 m_ZongLei = 4;
  inline bool has_m_zonglei() const;
  inline void clear_m_zonglei();
  static const int kMZongLeiFieldNumber = 4;
  inline ::google::protobuf::int32 m_zonglei() const;
  inline void set_m_zonglei(::google::protobuf::int32 value);

  // optional int32 m_Tan = 5;
  inline bool has_m_tan() const;
  inline void clear_m_tan();
  static const int kMTanFieldNumber = 5;
  inline ::google::protobuf::int32 m_tan() const;
  inline void set_m_tan(::google::protobuf::int32 value);

  // optional int32 m_Sao = 6;
  inline bool has_m_sao() const;
  inline void clear_m_sao();
  static const int kMSaoFieldNumber = 6;
  inline ::google::protobuf::int32 m_sao() const;
  inline void set_m_sao(::google::protobuf::int32 value);

  // optional int32 m_Peng = 7;
  inline bool has_m_peng() const;
  inline void clear_m_peng();
  static const int kMPengFieldNumber = 7;
  inline ::google::protobuf::int32 m_peng() const;
  inline void set_m_peng(::google::protobuf::int32 value);

  // optional int32 m_Gang = 8;
  inline bool has_m_gang() const;
  inline void clear_m_gang();
  static const int kMGangFieldNumber = 8;
  inline ::google::protobuf::int32 m_gang() const;
  inline void set_m_gang(::google::protobuf::int32 value);

  // optional int32 m_anGang = 9;
  inline bool has_m_angang() const;
  inline void clear_m_angang();
  static const int kMAnGangFieldNumber = 9;
  inline ::google::protobuf::int32 m_angang() const;
  inline void set_m_angang(::google::protobuf::int32 value);

  // optional int32 m_reward = 10;
  inline bool has_m_reward() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 10;
  inline ::google::protobuf::int32 m_reward() const;
  inline void set_m_reward(::google::protobuf::int32 value);

  // optional int32 m_score = 11;
  inline bool has_m_score() const;
  inline void clear_m_score();
  static const int kMScoreFieldNumber = 11;
  inline ::google::protobuf::int32 m_score() const;
  inline void set_m_score(::google::protobuf::int32 value);

  // optional int32 m_TotalScore = 12;
  inline bool has_m_totalscore() const;
  inline void clear_m_totalscore();
  static const int kMTotalScoreFieldNumber = 12;
  inline ::google::protobuf::int32 m_totalscore() const;
  inline void set_m_totalscore(::google::protobuf::int32 value);

  // repeated int32 m_SaoType = 20;
  inline int m_saotype_size() const;
  inline void clear_m_saotype();
  static const int kMSaoTypeFieldNumber = 20;
  inline ::google::protobuf::int32 m_saotype(int index) const;
  inline void set_m_saotype(int index, ::google::protobuf::int32 value);
  inline void add_m_saotype(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_saotype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_saotype();

  // @@protoc_insertion_point(class_scope:GM_HuHandCardData)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_hufeng();
  inline void clear_has_m_hufeng();
  inline void set_has_m_zonglei();
  inline void clear_has_m_zonglei();
  inline void set_has_m_tan();
  inline void clear_has_m_tan();
  inline void set_has_m_sao();
  inline void clear_has_m_sao();
  inline void set_has_m_peng();
  inline void clear_has_m_peng();
  inline void set_has_m_gang();
  inline void clear_has_m_gang();
  inline void set_has_m_angang();
  inline void clear_has_m_angang();
  inline void set_has_m_reward();
  inline void clear_has_m_reward();
  inline void set_has_m_score();
  inline void clear_has_m_score();
  inline void set_has_m_totalscore();
  inline void clear_has_m_totalscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_handcardtype_;
  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_hufeng_;
  ::google::protobuf::int32 m_zonglei_;
  ::google::protobuf::int32 m_tan_;
  ::google::protobuf::int32 m_sao_;
  ::google::protobuf::int32 m_peng_;
  ::google::protobuf::int32 m_gang_;
  ::google::protobuf::int32 m_angang_;
  ::google::protobuf::int32 m_reward_;
  ::google::protobuf::int32 m_score_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_saotype_;
  ::google::protobuf::int32 m_totalscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_HuHandCardData* default_instance_;
};
// -------------------------------------------------------------------

class GM_AskFriend : public ::google::protobuf::Message {
 public:
  GM_AskFriend();
  virtual ~GM_AskFriend();

  GM_AskFriend(const GM_AskFriend& from);

  inline GM_AskFriend& operator=(const GM_AskFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_AskFriend& default_instance();

  void Swap(GM_AskFriend* other);

  // implements Message ----------------------------------------------

  GM_AskFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_AskFriend& from);
  void MergeFrom(const GM_AskFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_Roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional int32 m_Beinvited = 2;
  inline bool has_m_beinvited() const;
  inline void clear_m_beinvited();
  static const int kMBeinvitedFieldNumber = 2;
  inline ::google::protobuf::int32 m_beinvited() const;
  inline void set_m_beinvited(::google::protobuf::int32 value);

  // optional string m_Name = 3;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 3;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional int32 m_FBID = 4;
  inline bool has_m_fbid() const;
  inline void clear_m_fbid();
  static const int kMFBIDFieldNumber = 4;
  inline ::google::protobuf::int32 m_fbid() const;
  inline void set_m_fbid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_AskFriend)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_beinvited();
  inline void clear_has_m_beinvited();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_fbid();
  inline void clear_has_m_fbid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_beinvited_;
  ::std::string* m_name_;
  ::google::protobuf::int32 m_fbid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_AskFriend* default_instance_;
};
// -------------------------------------------------------------------

class GM_AutoInfo : public ::google::protobuf::Message {
 public:
  GM_AutoInfo();
  virtual ~GM_AutoInfo();

  GM_AutoInfo(const GM_AutoInfo& from);

  inline GM_AutoInfo& operator=(const GM_AutoInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_AutoInfo& default_instance();

  void Swap(GM_AutoInfo* other);

  // implements Message ----------------------------------------------

  GM_AutoInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_AutoInfo& from);
  void MergeFrom(const GM_AutoInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_Roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional int32 m_AutoFlag = 2;
  inline bool has_m_autoflag() const;
  inline void clear_m_autoflag();
  static const int kMAutoFlagFieldNumber = 2;
  inline ::google::protobuf::int32 m_autoflag() const;
  inline void set_m_autoflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_AutoInfo)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_autoflag();
  inline void clear_has_m_autoflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_autoflag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_AutoInfo* default_instance_;
};
// -------------------------------------------------------------------

class GM_ReconnectMJData : public ::google::protobuf::Message {
 public:
  GM_ReconnectMJData();
  virtual ~GM_ReconnectMJData();

  GM_ReconnectMJData(const GM_ReconnectMJData& from);

  inline GM_ReconnectMJData& operator=(const GM_ReconnectMJData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ReconnectMJData& default_instance();

  void Swap(GM_ReconnectMJData* other);

  // implements Message ----------------------------------------------

  GM_ReconnectMJData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ReconnectMJData& from);
  void MergeFrom(const GM_ReconnectMJData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_bankerPos = 1;
  inline bool has_m_bankerpos() const;
  inline void clear_m_bankerpos();
  static const int kMBankerPosFieldNumber = 1;
  inline ::google::protobuf::int32 m_bankerpos() const;
  inline void set_m_bankerpos(::google::protobuf::int32 value);

  // optional int32 m_RoomMasterID = 2;
  inline bool has_m_roommasterid() const;
  inline void clear_m_roommasterid();
  static const int kMRoomMasterIDFieldNumber = 2;
  inline ::google::protobuf::int32 m_roommasterid() const;
  inline void set_m_roommasterid(::google::protobuf::int32 value);

  // optional int32 m_FreeCard = 3;
  inline bool has_m_freecard() const;
  inline void clear_m_freecard();
  static const int kMFreeCardFieldNumber = 3;
  inline ::google::protobuf::int32 m_freecard() const;
  inline void set_m_freecard(::google::protobuf::int32 value);

  // optional int32 m_leftCount = 4;
  inline bool has_m_leftcount() const;
  inline void clear_m_leftcount();
  static const int kMLeftCountFieldNumber = 4;
  inline ::google::protobuf::int32 m_leftcount() const;
  inline void set_m_leftcount(::google::protobuf::int32 value);

  // optional int32 m_totalCount = 5;
  inline bool has_m_totalcount() const;
  inline void clear_m_totalcount();
  static const int kMTotalCountFieldNumber = 5;
  inline ::google::protobuf::int32 m_totalcount() const;
  inline void set_m_totalcount(::google::protobuf::int32 value);

  // optional int32 m_rollCount = 6;
  inline bool has_m_rollcount() const;
  inline void clear_m_rollcount();
  static const int kMRollCountFieldNumber = 6;
  inline ::google::protobuf::int32 m_rollcount() const;
  inline void set_m_rollcount(::google::protobuf::int32 value);

  // optional int32 m_playerCount = 7;
  inline bool has_m_playercount() const;
  inline void clear_m_playercount();
  static const int kMPlayerCountFieldNumber = 7;
  inline ::google::protobuf::int32 m_playercount() const;
  inline void set_m_playercount(::google::protobuf::int32 value);

  // optional int32 m_lastOutCardRoleId = 8;
  inline bool has_m_lastoutcardroleid() const;
  inline void clear_m_lastoutcardroleid();
  static const int kMLastOutCardRoleIdFieldNumber = 8;
  inline ::google::protobuf::int32 m_lastoutcardroleid() const;
  inline void set_m_lastoutcardroleid(::google::protobuf::int32 value);

  // optional int32 m_closeRoomLeftTime = 9;
  inline bool has_m_closeroomlefttime() const;
  inline void clear_m_closeroomlefttime();
  static const int kMCloseRoomLeftTimeFieldNumber = 9;
  inline ::google::protobuf::int32 m_closeroomlefttime() const;
  inline void set_m_closeroomlefttime(::google::protobuf::int32 value);

  // optional int32 m_huLastCard = 10;
  inline bool has_m_hulastcard() const;
  inline void clear_m_hulastcard();
  static const int kMHuLastCardFieldNumber = 10;
  inline ::google::protobuf::int32 m_hulastcard() const;
  inline void set_m_hulastcard(::google::protobuf::int32 value);

  // optional int32 m_getCardId = 11;
  inline bool has_m_getcardid() const;
  inline void clear_m_getcardid();
  static const int kMGetCardIdFieldNumber = 11;
  inline ::google::protobuf::int32 m_getcardid() const;
  inline void set_m_getcardid(::google::protobuf::int32 value);

  // optional int32 m_getCardNum = 12;
  inline bool has_m_getcardnum() const;
  inline void clear_m_getcardnum();
  static const int kMGetCardNumFieldNumber = 12;
  inline ::google::protobuf::int32 m_getcardnum() const;
  inline void set_m_getcardnum(::google::protobuf::int32 value);

  // optional int32 m_sendCardID = 13;
  inline bool has_m_sendcardid() const;
  inline void clear_m_sendcardid();
  static const int kMSendCardIDFieldNumber = 13;
  inline ::google::protobuf::int32 m_sendcardid() const;
  inline void set_m_sendcardid(::google::protobuf::int32 value);

  // repeated int32 m_saizi = 20;
  inline int m_saizi_size() const;
  inline void clear_m_saizi();
  static const int kMSaiziFieldNumber = 20;
  inline ::google::protobuf::int32 m_saizi(int index) const;
  inline void set_m_saizi(int index, ::google::protobuf::int32 value);
  inline void add_m_saizi(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_saizi() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_saizi();

  // repeated .GM_PlayerHandCard m_HandCard = 21;
  inline int m_handcard_size() const;
  inline void clear_m_handcard();
  static const int kMHandCardFieldNumber = 21;
  inline const ::GM_PlayerHandCard& m_handcard(int index) const;
  inline ::GM_PlayerHandCard* mutable_m_handcard(int index);
  inline ::GM_PlayerHandCard* add_m_handcard();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >&
      m_handcard() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >*
      mutable_m_handcard();

  // repeated .GM_ReconnectPlayerData m_AllData = 22;
  inline int m_alldata_size() const;
  inline void clear_m_alldata();
  static const int kMAllDataFieldNumber = 22;
  inline const ::GM_ReconnectPlayerData& m_alldata(int index) const;
  inline ::GM_ReconnectPlayerData* mutable_m_alldata(int index);
  inline ::GM_ReconnectPlayerData* add_m_alldata();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_ReconnectPlayerData >&
      m_alldata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_ReconnectPlayerData >*
      mutable_m_alldata();

  // repeated .GM_ReconnectCloseRoomData m_CloseRoomData = 23;
  inline int m_closeroomdata_size() const;
  inline void clear_m_closeroomdata();
  static const int kMCloseRoomDataFieldNumber = 23;
  inline const ::GM_ReconnectCloseRoomData& m_closeroomdata(int index) const;
  inline ::GM_ReconnectCloseRoomData* mutable_m_closeroomdata(int index);
  inline ::GM_ReconnectCloseRoomData* add_m_closeroomdata();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_ReconnectCloseRoomData >&
      m_closeroomdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_ReconnectCloseRoomData >*
      mutable_m_closeroomdata();

  // optional .GM_HUOperator m_huOperatorData = 24;
  inline bool has_m_huoperatordata() const;
  inline void clear_m_huoperatordata();
  static const int kMHuOperatorDataFieldNumber = 24;
  inline const ::GM_HUOperator& m_huoperatordata() const;
  inline ::GM_HUOperator* mutable_m_huoperatordata();
  inline ::GM_HUOperator* release_m_huoperatordata();
  inline void set_allocated_m_huoperatordata(::GM_HUOperator* m_huoperatordata);

  // @@protoc_insertion_point(class_scope:GM_ReconnectMJData)
 private:
  inline void set_has_m_bankerpos();
  inline void clear_has_m_bankerpos();
  inline void set_has_m_roommasterid();
  inline void clear_has_m_roommasterid();
  inline void set_has_m_freecard();
  inline void clear_has_m_freecard();
  inline void set_has_m_leftcount();
  inline void clear_has_m_leftcount();
  inline void set_has_m_totalcount();
  inline void clear_has_m_totalcount();
  inline void set_has_m_rollcount();
  inline void clear_has_m_rollcount();
  inline void set_has_m_playercount();
  inline void clear_has_m_playercount();
  inline void set_has_m_lastoutcardroleid();
  inline void clear_has_m_lastoutcardroleid();
  inline void set_has_m_closeroomlefttime();
  inline void clear_has_m_closeroomlefttime();
  inline void set_has_m_hulastcard();
  inline void clear_has_m_hulastcard();
  inline void set_has_m_getcardid();
  inline void clear_has_m_getcardid();
  inline void set_has_m_getcardnum();
  inline void clear_has_m_getcardnum();
  inline void set_has_m_sendcardid();
  inline void clear_has_m_sendcardid();
  inline void set_has_m_huoperatordata();
  inline void clear_has_m_huoperatordata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_bankerpos_;
  ::google::protobuf::int32 m_roommasterid_;
  ::google::protobuf::int32 m_freecard_;
  ::google::protobuf::int32 m_leftcount_;
  ::google::protobuf::int32 m_totalcount_;
  ::google::protobuf::int32 m_rollcount_;
  ::google::protobuf::int32 m_playercount_;
  ::google::protobuf::int32 m_lastoutcardroleid_;
  ::google::protobuf::int32 m_closeroomlefttime_;
  ::google::protobuf::int32 m_hulastcard_;
  ::google::protobuf::int32 m_getcardid_;
  ::google::protobuf::int32 m_getcardnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_saizi_;
  ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard > m_handcard_;
  ::google::protobuf::RepeatedPtrField< ::GM_ReconnectPlayerData > m_alldata_;
  ::google::protobuf::RepeatedPtrField< ::GM_ReconnectCloseRoomData > m_closeroomdata_;
  ::GM_HUOperator* m_huoperatordata_;
  ::google::protobuf::int32 m_sendcardid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_ReconnectMJData* default_instance_;
};
// -------------------------------------------------------------------

class GM_ReconnectPlayerData : public ::google::protobuf::Message {
 public:
  GM_ReconnectPlayerData();
  virtual ~GM_ReconnectPlayerData();

  GM_ReconnectPlayerData(const GM_ReconnectPlayerData& from);

  inline GM_ReconnectPlayerData& operator=(const GM_ReconnectPlayerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ReconnectPlayerData& default_instance();

  void Swap(GM_ReconnectPlayerData* other);

  // implements Message ----------------------------------------------

  GM_ReconnectPlayerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ReconnectPlayerData& from);
  void MergeFrom(const GM_ReconnectPlayerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional int64 m_Gold = 2;
  inline bool has_m_gold() const;
  inline void clear_m_gold();
  static const int kMGoldFieldNumber = 2;
  inline ::google::protobuf::int64 m_gold() const;
  inline void set_m_gold(::google::protobuf::int64 value);

  // optional int32 m_HeadPhoto = 3;
  inline bool has_m_headphoto() const;
  inline void clear_m_headphoto();
  static const int kMHeadPhotoFieldNumber = 3;
  inline ::google::protobuf::int32 m_headphoto() const;
  inline void set_m_headphoto(::google::protobuf::int32 value);

  // optional int32 m_CataterType = 4;
  inline bool has_m_catatertype() const;
  inline void clear_m_catatertype();
  static const int kMCataterTypeFieldNumber = 4;
  inline ::google::protobuf::int32 m_catatertype() const;
  inline void set_m_catatertype(::google::protobuf::int32 value);

  // optional int32 m_Postion = 5;
  inline bool has_m_postion() const;
  inline void clear_m_postion();
  static const int kMPostionFieldNumber = 5;
  inline ::google::protobuf::int32 m_postion() const;
  inline void set_m_postion(::google::protobuf::int32 value);

  // optional string m_Name = 6;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 6;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional int32 m_Sex = 7;
  inline bool has_m_sex() const;
  inline void clear_m_sex();
  static const int kMSexFieldNumber = 7;
  inline ::google::protobuf::int32 m_sex() const;
  inline void set_m_sex(::google::protobuf::int32 value);

  // optional int32 m_handCardNum = 8;
  inline bool has_m_handcardnum() const;
  inline void clear_m_handcardnum();
  static const int kMHandCardNumFieldNumber = 8;
  inline ::google::protobuf::int32 m_handcardnum() const;
  inline void set_m_handcardnum(::google::protobuf::int32 value);

  // optional int32 m_HeadFrame = 9;
  inline bool has_m_headframe() const;
  inline void clear_m_headframe();
  static const int kMHeadFrameFieldNumber = 9;
  inline ::google::protobuf::int32 m_headframe() const;
  inline void set_m_headframe(::google::protobuf::int32 value);

  // optional string m_NickName = 10;
  inline bool has_m_nickname() const;
  inline void clear_m_nickname();
  static const int kMNickNameFieldNumber = 10;
  inline const ::std::string& m_nickname() const;
  inline void set_m_nickname(const ::std::string& value);
  inline void set_m_nickname(const char* value);
  inline void set_m_nickname(const char* value, size_t size);
  inline ::std::string* mutable_m_nickname();
  inline ::std::string* release_m_nickname();
  inline void set_allocated_m_nickname(::std::string* m_nickname);

  // optional string m_HeadPhotoUrl = 11;
  inline bool has_m_headphotourl() const;
  inline void clear_m_headphotourl();
  static const int kMHeadPhotoUrlFieldNumber = 11;
  inline const ::std::string& m_headphotourl() const;
  inline void set_m_headphotourl(const ::std::string& value);
  inline void set_m_headphotourl(const char* value);
  inline void set_m_headphotourl(const char* value, size_t size);
  inline ::std::string* mutable_m_headphotourl();
  inline ::std::string* release_m_headphotourl();
  inline void set_allocated_m_headphotourl(::std::string* m_headphotourl);

  // optional int32 m_IsAuto = 12;
  inline bool has_m_isauto() const;
  inline void clear_m_isauto();
  static const int kMIsAutoFieldNumber = 12;
  inline ::google::protobuf::int32 m_isauto() const;
  inline void set_m_isauto(::google::protobuf::int32 value);

  // optional int32 m_TotalScore = 13;
  inline bool has_m_totalscore() const;
  inline void clear_m_totalscore();
  static const int kMTotalScoreFieldNumber = 13;
  inline ::google::protobuf::int32 m_totalscore() const;
  inline void set_m_totalscore(::google::protobuf::int32 value);

  // optional int32 m_IsReady = 14;
  inline bool has_m_isready() const;
  inline void clear_m_isready();
  static const int kMIsReadyFieldNumber = 14;
  inline ::google::protobuf::int32 m_isready() const;
  inline void set_m_isready(::google::protobuf::int32 value);

  // optional int32 m_RoleVoice = 15;
  inline bool has_m_rolevoice() const;
  inline void clear_m_rolevoice();
  static const int kMRoleVoiceFieldNumber = 15;
  inline ::google::protobuf::int32 m_rolevoice() const;
  inline void set_m_rolevoice(::google::protobuf::int32 value);

  // optional int32 m_CardVoice = 16;
  inline bool has_m_cardvoice() const;
  inline void clear_m_cardvoice();
  static const int kMCardVoiceFieldNumber = 16;
  inline ::google::protobuf::int32 m_cardvoice() const;
  inline void set_m_cardvoice(::google::protobuf::int32 value);

  // optional double m_Longitude = 17;
  inline bool has_m_longitude() const;
  inline void clear_m_longitude();
  static const int kMLongitudeFieldNumber = 17;
  inline double m_longitude() const;
  inline void set_m_longitude(double value);

  // optional double m_Latitude = 18;
  inline bool has_m_latitude() const;
  inline void clear_m_latitude();
  static const int kMLatitudeFieldNumber = 18;
  inline double m_latitude() const;
  inline void set_m_latitude(double value);

  // optional string m_reallyPos = 19;
  inline bool has_m_reallypos() const;
  inline void clear_m_reallypos();
  static const int kMReallyPosFieldNumber = 19;
  inline const ::std::string& m_reallypos() const;
  inline void set_m_reallypos(const ::std::string& value);
  inline void set_m_reallypos(const char* value);
  inline void set_m_reallypos(const char* value, size_t size);
  inline ::std::string* mutable_m_reallypos();
  inline ::std::string* release_m_reallypos();
  inline void set_allocated_m_reallypos(::std::string* m_reallypos);

  // optional int32 m_DingState = 20;
  inline bool has_m_dingstate() const;
  inline void clear_m_dingstate();
  static const int kMDingStateFieldNumber = 20;
  inline ::google::protobuf::int32 m_dingstate() const;
  inline void set_m_dingstate(::google::protobuf::int32 value);

  // repeated .GM_PlayerHandCard m_OutHandCard = 25;
  inline int m_outhandcard_size() const;
  inline void clear_m_outhandcard();
  static const int kMOutHandCardFieldNumber = 25;
  inline const ::GM_PlayerHandCard& m_outhandcard(int index) const;
  inline ::GM_PlayerHandCard* mutable_m_outhandcard(int index);
  inline ::GM_PlayerHandCard* add_m_outhandcard();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >&
      m_outhandcard() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >*
      mutable_m_outhandcard();

  // repeated .GM_ReconnectFunHandCard m_FunHandCardList = 26;
  inline int m_funhandcardlist_size() const;
  inline void clear_m_funhandcardlist();
  static const int kMFunHandCardListFieldNumber = 26;
  inline const ::GM_ReconnectFunHandCard& m_funhandcardlist(int index) const;
  inline ::GM_ReconnectFunHandCard* mutable_m_funhandcardlist(int index);
  inline ::GM_ReconnectFunHandCard* add_m_funhandcardlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_ReconnectFunHandCard >&
      m_funhandcardlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_ReconnectFunHandCard >*
      mutable_m_funhandcardlist();

  // @@protoc_insertion_point(class_scope:GM_ReconnectPlayerData)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_gold();
  inline void clear_has_m_gold();
  inline void set_has_m_headphoto();
  inline void clear_has_m_headphoto();
  inline void set_has_m_catatertype();
  inline void clear_has_m_catatertype();
  inline void set_has_m_postion();
  inline void clear_has_m_postion();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_sex();
  inline void clear_has_m_sex();
  inline void set_has_m_handcardnum();
  inline void clear_has_m_handcardnum();
  inline void set_has_m_headframe();
  inline void clear_has_m_headframe();
  inline void set_has_m_nickname();
  inline void clear_has_m_nickname();
  inline void set_has_m_headphotourl();
  inline void clear_has_m_headphotourl();
  inline void set_has_m_isauto();
  inline void clear_has_m_isauto();
  inline void set_has_m_totalscore();
  inline void clear_has_m_totalscore();
  inline void set_has_m_isready();
  inline void clear_has_m_isready();
  inline void set_has_m_rolevoice();
  inline void clear_has_m_rolevoice();
  inline void set_has_m_cardvoice();
  inline void clear_has_m_cardvoice();
  inline void set_has_m_longitude();
  inline void clear_has_m_longitude();
  inline void set_has_m_latitude();
  inline void clear_has_m_latitude();
  inline void set_has_m_reallypos();
  inline void clear_has_m_reallypos();
  inline void set_has_m_dingstate();
  inline void clear_has_m_dingstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_gold_;
  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_headphoto_;
  ::google::protobuf::int32 m_catatertype_;
  ::google::protobuf::int32 m_postion_;
  ::std::string* m_name_;
  ::google::protobuf::int32 m_sex_;
  ::google::protobuf::int32 m_handcardnum_;
  ::std::string* m_nickname_;
  ::google::protobuf::int32 m_headframe_;
  ::google::protobuf::int32 m_isauto_;
  ::std::string* m_headphotourl_;
  ::google::protobuf::int32 m_totalscore_;
  ::google::protobuf::int32 m_isready_;
  ::google::protobuf::int32 m_rolevoice_;
  ::google::protobuf::int32 m_cardvoice_;
  double m_longitude_;
  double m_latitude_;
  ::std::string* m_reallypos_;
  ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard > m_outhandcard_;
  ::google::protobuf::RepeatedPtrField< ::GM_ReconnectFunHandCard > m_funhandcardlist_;
  ::google::protobuf::int32 m_dingstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(22 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_ReconnectPlayerData* default_instance_;
};
// -------------------------------------------------------------------

class GM_ReconnectCloseRoomData : public ::google::protobuf::Message {
 public:
  GM_ReconnectCloseRoomData();
  virtual ~GM_ReconnectCloseRoomData();

  GM_ReconnectCloseRoomData(const GM_ReconnectCloseRoomData& from);

  inline GM_ReconnectCloseRoomData& operator=(const GM_ReconnectCloseRoomData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ReconnectCloseRoomData& default_instance();

  void Swap(GM_ReconnectCloseRoomData* other);

  // implements Message ----------------------------------------------

  GM_ReconnectCloseRoomData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ReconnectCloseRoomData& from);
  void MergeFrom(const GM_ReconnectCloseRoomData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional int32 m_state = 2;
  inline bool has_m_state() const;
  inline void clear_m_state();
  static const int kMStateFieldNumber = 2;
  inline ::google::protobuf::int32 m_state() const;
  inline void set_m_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_ReconnectCloseRoomData)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_state();
  inline void clear_has_m_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_ReconnectCloseRoomData* default_instance_;
};
// -------------------------------------------------------------------

class GM_ReconnectFunHandCard : public ::google::protobuf::Message {
 public:
  GM_ReconnectFunHandCard();
  virtual ~GM_ReconnectFunHandCard();

  GM_ReconnectFunHandCard(const GM_ReconnectFunHandCard& from);

  inline GM_ReconnectFunHandCard& operator=(const GM_ReconnectFunHandCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ReconnectFunHandCard& default_instance();

  void Swap(GM_ReconnectFunHandCard* other);

  // implements Message ----------------------------------------------

  GM_ReconnectFunHandCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ReconnectFunHandCard& from);
  void MergeFrom(const GM_ReconnectFunHandCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_OperatorType = 1;
  inline bool has_m_operatortype() const;
  inline void clear_m_operatortype();
  static const int kMOperatorTypeFieldNumber = 1;
  inline ::google::protobuf::int32 m_operatortype() const;
  inline void set_m_operatortype(::google::protobuf::int32 value);

  // repeated .GM_PlayerFunHandCard m_FunHandCard = 2;
  inline int m_funhandcard_size() const;
  inline void clear_m_funhandcard();
  static const int kMFunHandCardFieldNumber = 2;
  inline const ::GM_PlayerFunHandCard& m_funhandcard(int index) const;
  inline ::GM_PlayerFunHandCard* mutable_m_funhandcard(int index);
  inline ::GM_PlayerFunHandCard* add_m_funhandcard();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_PlayerFunHandCard >&
      m_funhandcard() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_PlayerFunHandCard >*
      mutable_m_funhandcard();

  // @@protoc_insertion_point(class_scope:GM_ReconnectFunHandCard)
 private:
  inline void set_has_m_operatortype();
  inline void clear_has_m_operatortype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_PlayerFunHandCard > m_funhandcard_;
  ::google::protobuf::int32 m_operatortype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_ReconnectFunHandCard* default_instance_;
};
// -------------------------------------------------------------------

class GM_PlayerFunHandCard : public ::google::protobuf::Message {
 public:
  GM_PlayerFunHandCard();
  virtual ~GM_PlayerFunHandCard();

  GM_PlayerFunHandCard(const GM_PlayerFunHandCard& from);

  inline GM_PlayerFunHandCard& operator=(const GM_PlayerFunHandCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_PlayerFunHandCard& default_instance();

  void Swap(GM_PlayerFunHandCard* other);

  // implements Message ----------------------------------------------

  GM_PlayerFunHandCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_PlayerFunHandCard& from);
  void MergeFrom(const GM_PlayerFunHandCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_Index = 1;
  inline bool has_m_index() const;
  inline void clear_m_index();
  static const int kMIndexFieldNumber = 1;
  inline ::google::protobuf::int32 m_index() const;
  inline void set_m_index(::google::protobuf::int32 value);

  // optional int32 m_Type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_RoleId = 3;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_PlayerFunHandCard)
 private:
  inline void set_has_m_index();
  inline void clear_has_m_index();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_index_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_PlayerFunHandCard* default_instance_;
};
// -------------------------------------------------------------------

class GM_MJCardRoomResult : public ::google::protobuf::Message {
 public:
  GM_MJCardRoomResult();
  virtual ~GM_MJCardRoomResult();

  GM_MJCardRoomResult(const GM_MJCardRoomResult& from);

  inline GM_MJCardRoomResult& operator=(const GM_MJCardRoomResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_MJCardRoomResult& default_instance();

  void Swap(GM_MJCardRoomResult* other);

  // implements Message ----------------------------------------------

  GM_MJCardRoomResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_MJCardRoomResult& from);
  void MergeFrom(const GM_MJCardRoomResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_count = 1;
  inline bool has_m_count() const;
  inline void clear_m_count();
  static const int kMCountFieldNumber = 1;
  inline ::google::protobuf::int32 m_count() const;
  inline void set_m_count(::google::protobuf::int32 value);

  // repeated .GM_MJCardRoomOneData m_OneData = 2;
  inline int m_onedata_size() const;
  inline void clear_m_onedata();
  static const int kMOneDataFieldNumber = 2;
  inline const ::GM_MJCardRoomOneData& m_onedata(int index) const;
  inline ::GM_MJCardRoomOneData* mutable_m_onedata(int index);
  inline ::GM_MJCardRoomOneData* add_m_onedata();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_MJCardRoomOneData >&
      m_onedata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_MJCardRoomOneData >*
      mutable_m_onedata();

  // @@protoc_insertion_point(class_scope:GM_MJCardRoomResult)
 private:
  inline void set_has_m_count();
  inline void clear_has_m_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_MJCardRoomOneData > m_onedata_;
  ::google::protobuf::int32 m_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_MJCardRoomResult* default_instance_;
};
// -------------------------------------------------------------------

class GM_MJCardRoomOneData : public ::google::protobuf::Message {
 public:
  GM_MJCardRoomOneData();
  virtual ~GM_MJCardRoomOneData();

  GM_MJCardRoomOneData(const GM_MJCardRoomOneData& from);

  inline GM_MJCardRoomOneData& operator=(const GM_MJCardRoomOneData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_MJCardRoomOneData& default_instance();

  void Swap(GM_MJCardRoomOneData* other);

  // implements Message ----------------------------------------------

  GM_MJCardRoomOneData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_MJCardRoomOneData& from);
  void MergeFrom(const GM_MJCardRoomOneData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_count = 1;
  inline bool has_m_count() const;
  inline void clear_m_count();
  static const int kMCountFieldNumber = 1;
  inline ::google::protobuf::int32 m_count() const;
  inline void set_m_count(::google::protobuf::int32 value);

  // repeated .GM_PlayerResultInfo m_ResultInfo = 2;
  inline int m_resultinfo_size() const;
  inline void clear_m_resultinfo();
  static const int kMResultInfoFieldNumber = 2;
  inline const ::GM_PlayerResultInfo& m_resultinfo(int index) const;
  inline ::GM_PlayerResultInfo* mutable_m_resultinfo(int index);
  inline ::GM_PlayerResultInfo* add_m_resultinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_PlayerResultInfo >&
      m_resultinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_PlayerResultInfo >*
      mutable_m_resultinfo();

  // @@protoc_insertion_point(class_scope:GM_MJCardRoomOneData)
 private:
  inline void set_has_m_count();
  inline void clear_has_m_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_PlayerResultInfo > m_resultinfo_;
  ::google::protobuf::int32 m_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_MJCardRoomOneData* default_instance_;
};
// -------------------------------------------------------------------

class GM_PlayerResultInfo : public ::google::protobuf::Message {
 public:
  GM_PlayerResultInfo();
  virtual ~GM_PlayerResultInfo();

  GM_PlayerResultInfo(const GM_PlayerResultInfo& from);

  inline GM_PlayerResultInfo& operator=(const GM_PlayerResultInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_PlayerResultInfo& default_instance();

  void Swap(GM_PlayerResultInfo* other);

  // implements Message ----------------------------------------------

  GM_PlayerResultInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_PlayerResultInfo& from);
  void MergeFrom(const GM_PlayerResultInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional int32 m_score = 2;
  inline bool has_m_score() const;
  inline void clear_m_score();
  static const int kMScoreFieldNumber = 2;
  inline ::google::protobuf::int32 m_score() const;
  inline void set_m_score(::google::protobuf::int32 value);

  // optional int32 m_sex = 3;
  inline bool has_m_sex() const;
  inline void clear_m_sex();
  static const int kMSexFieldNumber = 3;
  inline ::google::protobuf::int32 m_sex() const;
  inline void set_m_sex(::google::protobuf::int32 value);

  // optional int32 m_congguan = 4;
  inline bool has_m_congguan() const;
  inline void clear_m_congguan();
  static const int kMCongguanFieldNumber = 4;
  inline ::google::protobuf::int32 m_congguan() const;
  inline void set_m_congguan(::google::protobuf::int32 value);

  // optional int32 m_bawang = 5;
  inline bool has_m_bawang() const;
  inline void clear_m_bawang();
  static const int kMBawangFieldNumber = 5;
  inline ::google::protobuf::int32 m_bawang() const;
  inline void set_m_bawang(::google::protobuf::int32 value);

  // optional int32 m_vipLevel = 6;
  inline bool has_m_viplevel() const;
  inline void clear_m_viplevel();
  static const int kMVipLevelFieldNumber = 6;
  inline ::google::protobuf::int32 m_viplevel() const;
  inline void set_m_viplevel(::google::protobuf::int32 value);

  // optional string m_name = 7;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 7;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional string m_headUrl = 8;
  inline bool has_m_headurl() const;
  inline void clear_m_headurl();
  static const int kMHeadUrlFieldNumber = 8;
  inline const ::std::string& m_headurl() const;
  inline void set_m_headurl(const ::std::string& value);
  inline void set_m_headurl(const char* value);
  inline void set_m_headurl(const char* value, size_t size);
  inline ::std::string* mutable_m_headurl();
  inline ::std::string* release_m_headurl();
  inline void set_allocated_m_headurl(::std::string* m_headurl);

  // optional string m_id = 9;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 9;
  inline const ::std::string& m_id() const;
  inline void set_m_id(const ::std::string& value);
  inline void set_m_id(const char* value);
  inline void set_m_id(const char* value, size_t size);
  inline ::std::string* mutable_m_id();
  inline ::std::string* release_m_id();
  inline void set_allocated_m_id(::std::string* m_id);

  // @@protoc_insertion_point(class_scope:GM_PlayerResultInfo)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_score();
  inline void clear_has_m_score();
  inline void set_has_m_sex();
  inline void clear_has_m_sex();
  inline void set_has_m_congguan();
  inline void clear_has_m_congguan();
  inline void set_has_m_bawang();
  inline void clear_has_m_bawang();
  inline void set_has_m_viplevel();
  inline void clear_has_m_viplevel();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_headurl();
  inline void clear_has_m_headurl();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_score_;
  ::google::protobuf::int32 m_sex_;
  ::google::protobuf::int32 m_congguan_;
  ::google::protobuf::int32 m_bawang_;
  ::google::protobuf::int32 m_viplevel_;
  ::std::string* m_name_;
  ::std::string* m_headurl_;
  ::std::string* m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_PlayerResultInfo* default_instance_;
};
// -------------------------------------------------------------------

class GM_PlayerRollRequest : public ::google::protobuf::Message {
 public:
  GM_PlayerRollRequest();
  virtual ~GM_PlayerRollRequest();

  GM_PlayerRollRequest(const GM_PlayerRollRequest& from);

  inline GM_PlayerRollRequest& operator=(const GM_PlayerRollRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_PlayerRollRequest& default_instance();

  void Swap(GM_PlayerRollRequest* other);

  // implements Message ----------------------------------------------

  GM_PlayerRollRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_PlayerRollRequest& from);
  void MergeFrom(const GM_PlayerRollRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional int32 m_pos = 2;
  inline bool has_m_pos() const;
  inline void clear_m_pos();
  static const int kMPosFieldNumber = 2;
  inline ::google::protobuf::int32 m_pos() const;
  inline void set_m_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_PlayerRollRequest)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_pos();
  inline void clear_has_m_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_PlayerRollRequest* default_instance_;
};
// -------------------------------------------------------------------

class GM_PlayerRecivePack : public ::google::protobuf::Message {
 public:
  GM_PlayerRecivePack();
  virtual ~GM_PlayerRecivePack();

  GM_PlayerRecivePack(const GM_PlayerRecivePack& from);

  inline GM_PlayerRecivePack& operator=(const GM_PlayerRecivePack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_PlayerRecivePack& default_instance();

  void Swap(GM_PlayerRecivePack* other);

  // implements Message ----------------------------------------------

  GM_PlayerRecivePack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_PlayerRecivePack& from);
  void MergeFrom(const GM_PlayerRecivePack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional int32 m_packFlag = 2;
  inline bool has_m_packflag() const;
  inline void clear_m_packflag();
  static const int kMPackFlagFieldNumber = 2;
  inline ::google::protobuf::int32 m_packflag() const;
  inline void set_m_packflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_PlayerRecivePack)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_packflag();
  inline void clear_has_m_packflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_packflag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_PlayerRecivePack* default_instance_;
};
// -------------------------------------------------------------------

class GM_MJOperatorError : public ::google::protobuf::Message {
 public:
  GM_MJOperatorError();
  virtual ~GM_MJOperatorError();

  GM_MJOperatorError(const GM_MJOperatorError& from);

  inline GM_MJOperatorError& operator=(const GM_MJOperatorError& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_MJOperatorError& default_instance();

  void Swap(GM_MJOperatorError* other);

  // implements Message ----------------------------------------------

  GM_MJOperatorError* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_MJOperatorError& from);
  void MergeFrom(const GM_MJOperatorError& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_Result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_MJOperatorError)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_majiang_2etxt();
  friend void protobuf_AssignDesc_majiang_2etxt();
  friend void protobuf_ShutdownFile_majiang_2etxt();

  void InitAsDefaultInstance();
  static GM_MJOperatorError* default_instance_;
};
// ===================================================================


// ===================================================================

// GMMJRequest

// required int32 m_roleid = 1;
inline bool GMMJRequest::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMMJRequest::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMMJRequest::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMMJRequest::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GMMJRequest::m_roleid() const {
  return m_roleid_;
}
inline void GMMJRequest::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional int32 m_fbtypeid = 2;
inline bool GMMJRequest::has_m_fbtypeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMMJRequest::set_has_m_fbtypeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMMJRequest::clear_has_m_fbtypeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMMJRequest::clear_m_fbtypeid() {
  m_fbtypeid_ = 0;
  clear_has_m_fbtypeid();
}
inline ::google::protobuf::int32 GMMJRequest::m_fbtypeid() const {
  return m_fbtypeid_;
}
inline void GMMJRequest::set_m_fbtypeid(::google::protobuf::int32 value) {
  set_has_m_fbtypeid();
  m_fbtypeid_ = value;
}

// optional string m_fbplayway = 3;
inline bool GMMJRequest::has_m_fbplayway() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMMJRequest::set_has_m_fbplayway() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMMJRequest::clear_has_m_fbplayway() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMMJRequest::clear_m_fbplayway() {
  if (m_fbplayway_ != &::google::protobuf::internal::kEmptyString) {
    m_fbplayway_->clear();
  }
  clear_has_m_fbplayway();
}
inline const ::std::string& GMMJRequest::m_fbplayway() const {
  return *m_fbplayway_;
}
inline void GMMJRequest::set_m_fbplayway(const ::std::string& value) {
  set_has_m_fbplayway();
  if (m_fbplayway_ == &::google::protobuf::internal::kEmptyString) {
    m_fbplayway_ = new ::std::string;
  }
  m_fbplayway_->assign(value);
}
inline void GMMJRequest::set_m_fbplayway(const char* value) {
  set_has_m_fbplayway();
  if (m_fbplayway_ == &::google::protobuf::internal::kEmptyString) {
    m_fbplayway_ = new ::std::string;
  }
  m_fbplayway_->assign(value);
}
inline void GMMJRequest::set_m_fbplayway(const char* value, size_t size) {
  set_has_m_fbplayway();
  if (m_fbplayway_ == &::google::protobuf::internal::kEmptyString) {
    m_fbplayway_ = new ::std::string;
  }
  m_fbplayway_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMMJRequest::mutable_m_fbplayway() {
  set_has_m_fbplayway();
  if (m_fbplayway_ == &::google::protobuf::internal::kEmptyString) {
    m_fbplayway_ = new ::std::string;
  }
  return m_fbplayway_;
}
inline ::std::string* GMMJRequest::release_m_fbplayway() {
  clear_has_m_fbplayway();
  if (m_fbplayway_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_fbplayway_;
    m_fbplayway_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMMJRequest::set_allocated_m_fbplayway(::std::string* m_fbplayway) {
  if (m_fbplayway_ != &::google::protobuf::internal::kEmptyString) {
    delete m_fbplayway_;
  }
  if (m_fbplayway) {
    set_has_m_fbplayway();
    m_fbplayway_ = m_fbplayway;
  } else {
    clear_has_m_fbplayway();
    m_fbplayway_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_roomcount = 4;
inline bool GMMJRequest::has_m_roomcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMMJRequest::set_has_m_roomcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMMJRequest::clear_has_m_roomcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMMJRequest::clear_m_roomcount() {
  m_roomcount_ = 0;
  clear_has_m_roomcount();
}
inline ::google::protobuf::int32 GMMJRequest::m_roomcount() const {
  return m_roomcount_;
}
inline void GMMJRequest::set_m_roomcount(::google::protobuf::int32 value) {
  set_has_m_roomcount();
  m_roomcount_ = value;
}

// optional int32 m_playerCount = 5;
inline bool GMMJRequest::has_m_playercount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GMMJRequest::set_has_m_playercount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GMMJRequest::clear_has_m_playercount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GMMJRequest::clear_m_playercount() {
  m_playercount_ = 0;
  clear_has_m_playercount();
}
inline ::google::protobuf::int32 GMMJRequest::m_playercount() const {
  return m_playercount_;
}
inline void GMMJRequest::set_m_playercount(::google::protobuf::int32 value) {
  set_has_m_playercount();
  m_playercount_ = value;
}

// -------------------------------------------------------------------

// GMHandCard

// required int32 m_bankerPos = 1;
inline bool GMHandCard::has_m_bankerpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMHandCard::set_has_m_bankerpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMHandCard::clear_has_m_bankerpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMHandCard::clear_m_bankerpos() {
  m_bankerpos_ = 0;
  clear_has_m_bankerpos();
}
inline ::google::protobuf::int32 GMHandCard::m_bankerpos() const {
  return m_bankerpos_;
}
inline void GMHandCard::set_m_bankerpos(::google::protobuf::int32 value) {
  set_has_m_bankerpos();
  m_bankerpos_ = value;
}

// optional int32 m_leftCount = 2;
inline bool GMHandCard::has_m_leftcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMHandCard::set_has_m_leftcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMHandCard::clear_has_m_leftcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMHandCard::clear_m_leftcount() {
  m_leftcount_ = 0;
  clear_has_m_leftcount();
}
inline ::google::protobuf::int32 GMHandCard::m_leftcount() const {
  return m_leftcount_;
}
inline void GMHandCard::set_m_leftcount(::google::protobuf::int32 value) {
  set_has_m_leftcount();
  m_leftcount_ = value;
}

// optional int32 m_totalCount = 3;
inline bool GMHandCard::has_m_totalcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMHandCard::set_has_m_totalcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMHandCard::clear_has_m_totalcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMHandCard::clear_m_totalcount() {
  m_totalcount_ = 0;
  clear_has_m_totalcount();
}
inline ::google::protobuf::int32 GMHandCard::m_totalcount() const {
  return m_totalcount_;
}
inline void GMHandCard::set_m_totalcount(::google::protobuf::int32 value) {
  set_has_m_totalcount();
  m_totalcount_ = value;
}

// optional int32 m_getCardId = 4;
inline bool GMHandCard::has_m_getcardid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMHandCard::set_has_m_getcardid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMHandCard::clear_has_m_getcardid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMHandCard::clear_m_getcardid() {
  m_getcardid_ = 0;
  clear_has_m_getcardid();
}
inline ::google::protobuf::int32 GMHandCard::m_getcardid() const {
  return m_getcardid_;
}
inline void GMHandCard::set_m_getcardid(::google::protobuf::int32 value) {
  set_has_m_getcardid();
  m_getcardid_ = value;
}

// optional int32 m_getCardNum = 5;
inline bool GMHandCard::has_m_getcardnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GMHandCard::set_has_m_getcardnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GMHandCard::clear_has_m_getcardnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GMHandCard::clear_m_getcardnum() {
  m_getcardnum_ = 0;
  clear_has_m_getcardnum();
}
inline ::google::protobuf::int32 GMHandCard::m_getcardnum() const {
  return m_getcardnum_;
}
inline void GMHandCard::set_m_getcardnum(::google::protobuf::int32 value) {
  set_has_m_getcardnum();
  m_getcardnum_ = value;
}

// repeated int32 m_saizi = 20;
inline int GMHandCard::m_saizi_size() const {
  return m_saizi_.size();
}
inline void GMHandCard::clear_m_saizi() {
  m_saizi_.Clear();
}
inline ::google::protobuf::int32 GMHandCard::m_saizi(int index) const {
  return m_saizi_.Get(index);
}
inline void GMHandCard::set_m_saizi(int index, ::google::protobuf::int32 value) {
  m_saizi_.Set(index, value);
}
inline void GMHandCard::add_m_saizi(::google::protobuf::int32 value) {
  m_saizi_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GMHandCard::m_saizi() const {
  return m_saizi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GMHandCard::mutable_m_saizi() {
  return &m_saizi_;
}

// repeated .GM_PlayerHandCard m_HandCard = 21;
inline int GMHandCard::m_handcard_size() const {
  return m_handcard_.size();
}
inline void GMHandCard::clear_m_handcard() {
  m_handcard_.Clear();
}
inline const ::GM_PlayerHandCard& GMHandCard::m_handcard(int index) const {
  return m_handcard_.Get(index);
}
inline ::GM_PlayerHandCard* GMHandCard::mutable_m_handcard(int index) {
  return m_handcard_.Mutable(index);
}
inline ::GM_PlayerHandCard* GMHandCard::add_m_handcard() {
  return m_handcard_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >&
GMHandCard::m_handcard() const {
  return m_handcard_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >*
GMHandCard::mutable_m_handcard() {
  return &m_handcard_;
}

// -------------------------------------------------------------------

// GMHandCard_PlayerBack

// required int32 m_bankerPos = 1;
inline bool GMHandCard_PlayerBack::has_m_bankerpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMHandCard_PlayerBack::set_has_m_bankerpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMHandCard_PlayerBack::clear_has_m_bankerpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMHandCard_PlayerBack::clear_m_bankerpos() {
  m_bankerpos_ = 0;
  clear_has_m_bankerpos();
}
inline ::google::protobuf::int32 GMHandCard_PlayerBack::m_bankerpos() const {
  return m_bankerpos_;
}
inline void GMHandCard_PlayerBack::set_m_bankerpos(::google::protobuf::int32 value) {
  set_has_m_bankerpos();
  m_bankerpos_ = value;
}

// optional int32 m_leftCount = 2;
inline bool GMHandCard_PlayerBack::has_m_leftcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMHandCard_PlayerBack::set_has_m_leftcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMHandCard_PlayerBack::clear_has_m_leftcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMHandCard_PlayerBack::clear_m_leftcount() {
  m_leftcount_ = 0;
  clear_has_m_leftcount();
}
inline ::google::protobuf::int32 GMHandCard_PlayerBack::m_leftcount() const {
  return m_leftcount_;
}
inline void GMHandCard_PlayerBack::set_m_leftcount(::google::protobuf::int32 value) {
  set_has_m_leftcount();
  m_leftcount_ = value;
}

// optional int32 m_totalCount = 3;
inline bool GMHandCard_PlayerBack::has_m_totalcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMHandCard_PlayerBack::set_has_m_totalcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMHandCard_PlayerBack::clear_has_m_totalcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMHandCard_PlayerBack::clear_m_totalcount() {
  m_totalcount_ = 0;
  clear_has_m_totalcount();
}
inline ::google::protobuf::int32 GMHandCard_PlayerBack::m_totalcount() const {
  return m_totalcount_;
}
inline void GMHandCard_PlayerBack::set_m_totalcount(::google::protobuf::int32 value) {
  set_has_m_totalcount();
  m_totalcount_ = value;
}

// optional int32 m_fbtypeid = 4;
inline bool GMHandCard_PlayerBack::has_m_fbtypeid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMHandCard_PlayerBack::set_has_m_fbtypeid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMHandCard_PlayerBack::clear_has_m_fbtypeid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMHandCard_PlayerBack::clear_m_fbtypeid() {
  m_fbtypeid_ = 0;
  clear_has_m_fbtypeid();
}
inline ::google::protobuf::int32 GMHandCard_PlayerBack::m_fbtypeid() const {
  return m_fbtypeid_;
}
inline void GMHandCard_PlayerBack::set_m_fbtypeid(::google::protobuf::int32 value) {
  set_has_m_fbtypeid();
  m_fbtypeid_ = value;
}

// optional string m_fbplayway = 5;
inline bool GMHandCard_PlayerBack::has_m_fbplayway() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GMHandCard_PlayerBack::set_has_m_fbplayway() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GMHandCard_PlayerBack::clear_has_m_fbplayway() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GMHandCard_PlayerBack::clear_m_fbplayway() {
  if (m_fbplayway_ != &::google::protobuf::internal::kEmptyString) {
    m_fbplayway_->clear();
  }
  clear_has_m_fbplayway();
}
inline const ::std::string& GMHandCard_PlayerBack::m_fbplayway() const {
  return *m_fbplayway_;
}
inline void GMHandCard_PlayerBack::set_m_fbplayway(const ::std::string& value) {
  set_has_m_fbplayway();
  if (m_fbplayway_ == &::google::protobuf::internal::kEmptyString) {
    m_fbplayway_ = new ::std::string;
  }
  m_fbplayway_->assign(value);
}
inline void GMHandCard_PlayerBack::set_m_fbplayway(const char* value) {
  set_has_m_fbplayway();
  if (m_fbplayway_ == &::google::protobuf::internal::kEmptyString) {
    m_fbplayway_ = new ::std::string;
  }
  m_fbplayway_->assign(value);
}
inline void GMHandCard_PlayerBack::set_m_fbplayway(const char* value, size_t size) {
  set_has_m_fbplayway();
  if (m_fbplayway_ == &::google::protobuf::internal::kEmptyString) {
    m_fbplayway_ = new ::std::string;
  }
  m_fbplayway_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMHandCard_PlayerBack::mutable_m_fbplayway() {
  set_has_m_fbplayway();
  if (m_fbplayway_ == &::google::protobuf::internal::kEmptyString) {
    m_fbplayway_ = new ::std::string;
  }
  return m_fbplayway_;
}
inline ::std::string* GMHandCard_PlayerBack::release_m_fbplayway() {
  clear_has_m_fbplayway();
  if (m_fbplayway_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_fbplayway_;
    m_fbplayway_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMHandCard_PlayerBack::set_allocated_m_fbplayway(::std::string* m_fbplayway) {
  if (m_fbplayway_ != &::google::protobuf::internal::kEmptyString) {
    delete m_fbplayway_;
  }
  if (m_fbplayway) {
    set_has_m_fbplayway();
    m_fbplayway_ = m_fbplayway;
  } else {
    clear_has_m_fbplayway();
    m_fbplayway_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_playerCount = 6;
inline bool GMHandCard_PlayerBack::has_m_playercount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GMHandCard_PlayerBack::set_has_m_playercount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GMHandCard_PlayerBack::clear_has_m_playercount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GMHandCard_PlayerBack::clear_m_playercount() {
  m_playercount_ = 0;
  clear_has_m_playercount();
}
inline ::google::protobuf::int32 GMHandCard_PlayerBack::m_playercount() const {
  return m_playercount_;
}
inline void GMHandCard_PlayerBack::set_m_playercount(::google::protobuf::int32 value) {
  set_has_m_playercount();
  m_playercount_ = value;
}

// optional int32 m_roomid = 7;
inline bool GMHandCard_PlayerBack::has_m_roomid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GMHandCard_PlayerBack::set_has_m_roomid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GMHandCard_PlayerBack::clear_has_m_roomid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GMHandCard_PlayerBack::clear_m_roomid() {
  m_roomid_ = 0;
  clear_has_m_roomid();
}
inline ::google::protobuf::int32 GMHandCard_PlayerBack::m_roomid() const {
  return m_roomid_;
}
inline void GMHandCard_PlayerBack::set_m_roomid(::google::protobuf::int32 value) {
  set_has_m_roomid();
  m_roomid_ = value;
}

// repeated int32 m_saizi = 20;
inline int GMHandCard_PlayerBack::m_saizi_size() const {
  return m_saizi_.size();
}
inline void GMHandCard_PlayerBack::clear_m_saizi() {
  m_saizi_.Clear();
}
inline ::google::protobuf::int32 GMHandCard_PlayerBack::m_saizi(int index) const {
  return m_saizi_.Get(index);
}
inline void GMHandCard_PlayerBack::set_m_saizi(int index, ::google::protobuf::int32 value) {
  m_saizi_.Set(index, value);
}
inline void GMHandCard_PlayerBack::add_m_saizi(::google::protobuf::int32 value) {
  m_saizi_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GMHandCard_PlayerBack::m_saizi() const {
  return m_saizi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GMHandCard_PlayerBack::mutable_m_saizi() {
  return &m_saizi_;
}

// repeated .GMHandCard_Info m_handCardData = 21;
inline int GMHandCard_PlayerBack::m_handcarddata_size() const {
  return m_handcarddata_.size();
}
inline void GMHandCard_PlayerBack::clear_m_handcarddata() {
  m_handcarddata_.Clear();
}
inline const ::GMHandCard_Info& GMHandCard_PlayerBack::m_handcarddata(int index) const {
  return m_handcarddata_.Get(index);
}
inline ::GMHandCard_Info* GMHandCard_PlayerBack::mutable_m_handcarddata(int index) {
  return m_handcarddata_.Mutable(index);
}
inline ::GMHandCard_Info* GMHandCard_PlayerBack::add_m_handcarddata() {
  return m_handcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GMHandCard_Info >&
GMHandCard_PlayerBack::m_handcarddata() const {
  return m_handcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GMHandCard_Info >*
GMHandCard_PlayerBack::mutable_m_handcarddata() {
  return &m_handcarddata_;
}

// -------------------------------------------------------------------

// GMHandCard_Info

// required int32 m_roleid = 1;
inline bool GMHandCard_Info::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMHandCard_Info::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMHandCard_Info::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMHandCard_Info::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GMHandCard_Info::m_roleid() const {
  return m_roleid_;
}
inline void GMHandCard_Info::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// repeated .GM_PlayerHandCard m_HandCard = 20;
inline int GMHandCard_Info::m_handcard_size() const {
  return m_handcard_.size();
}
inline void GMHandCard_Info::clear_m_handcard() {
  m_handcard_.Clear();
}
inline const ::GM_PlayerHandCard& GMHandCard_Info::m_handcard(int index) const {
  return m_handcard_.Get(index);
}
inline ::GM_PlayerHandCard* GMHandCard_Info::mutable_m_handcard(int index) {
  return m_handcard_.Mutable(index);
}
inline ::GM_PlayerHandCard* GMHandCard_Info::add_m_handcard() {
  return m_handcard_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >&
GMHandCard_Info::m_handcard() const {
  return m_handcard_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >*
GMHandCard_Info::mutable_m_handcard() {
  return &m_handcard_;
}

// -------------------------------------------------------------------

// GM_PlayerHandCard

// required int32 m_Index = 1;
inline bool GM_PlayerHandCard::has_m_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_PlayerHandCard::set_has_m_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_PlayerHandCard::clear_has_m_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_PlayerHandCard::clear_m_index() {
  m_index_ = 0;
  clear_has_m_index();
}
inline ::google::protobuf::int32 GM_PlayerHandCard::m_index() const {
  return m_index_;
}
inline void GM_PlayerHandCard::set_m_index(::google::protobuf::int32 value) {
  set_has_m_index();
  m_index_ = value;
}

// optional int32 m_Type = 2;
inline bool GM_PlayerHandCard::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_PlayerHandCard::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_PlayerHandCard::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_PlayerHandCard::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 GM_PlayerHandCard::m_type() const {
  return m_type_;
}
inline void GM_PlayerHandCard::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// GM_MJCanOperator

// required int32 m_roleid = 1;
inline bool GM_MJCanOperator::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_MJCanOperator::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_MJCanOperator::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_MJCanOperator::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_MJCanOperator::m_roleid() const {
  return m_roleid_;
}
inline void GM_MJCanOperator::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// repeated .GM_OperatorData m_Operator = 2;
inline int GM_MJCanOperator::m_operator_size() const {
  return m_operator_.size();
}
inline void GM_MJCanOperator::clear_m_operator() {
  m_operator_.Clear();
}
inline const ::GM_OperatorData& GM_MJCanOperator::m_operator(int index) const {
  return m_operator_.Get(index);
}
inline ::GM_OperatorData* GM_MJCanOperator::mutable_m_operator(int index) {
  return m_operator_.Mutable(index);
}
inline ::GM_OperatorData* GM_MJCanOperator::add_m_operator() {
  return m_operator_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_OperatorData >&
GM_MJCanOperator::m_operator() const {
  return m_operator_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_OperatorData >*
GM_MJCanOperator::mutable_m_operator() {
  return &m_operator_;
}

// -------------------------------------------------------------------

// GM_OperatorData

// required int32 m_OperatorType = 1;
inline bool GM_OperatorData::has_m_operatortype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_OperatorData::set_has_m_operatortype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_OperatorData::clear_has_m_operatortype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_OperatorData::clear_m_operatortype() {
  m_operatortype_ = 0;
  clear_has_m_operatortype();
}
inline ::google::protobuf::int32 GM_OperatorData::m_operatortype() const {
  return m_operatortype_;
}
inline void GM_OperatorData::set_m_operatortype(::google::protobuf::int32 value) {
  set_has_m_operatortype();
  m_operatortype_ = value;
}

// optional int32 m_FunID = 2;
inline bool GM_OperatorData::has_m_funid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_OperatorData::set_has_m_funid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_OperatorData::clear_has_m_funid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_OperatorData::clear_m_funid() {
  m_funid_ = 0;
  clear_has_m_funid();
}
inline ::google::protobuf::int32 GM_OperatorData::m_funid() const {
  return m_funid_;
}
inline void GM_OperatorData::set_m_funid(::google::protobuf::int32 value) {
  set_has_m_funid();
  m_funid_ = value;
}

// optional int32 m_OperatorCard = 3;
inline bool GM_OperatorData::has_m_operatorcard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_OperatorData::set_has_m_operatorcard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_OperatorData::clear_has_m_operatorcard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_OperatorData::clear_m_operatorcard() {
  m_operatorcard_ = 0;
  clear_has_m_operatorcard();
}
inline ::google::protobuf::int32 GM_OperatorData::m_operatorcard() const {
  return m_operatorcard_;
}
inline void GM_OperatorData::set_m_operatorcard(::google::protobuf::int32 value) {
  set_has_m_operatorcard();
  m_operatorcard_ = value;
}

// optional int32 m_RoleVoice = 4;
inline bool GM_OperatorData::has_m_rolevoice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_OperatorData::set_has_m_rolevoice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_OperatorData::clear_has_m_rolevoice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_OperatorData::clear_m_rolevoice() {
  m_rolevoice_ = 0;
  clear_has_m_rolevoice();
}
inline ::google::protobuf::int32 GM_OperatorData::m_rolevoice() const {
  return m_rolevoice_;
}
inline void GM_OperatorData::set_m_rolevoice(::google::protobuf::int32 value) {
  set_has_m_rolevoice();
  m_rolevoice_ = value;
}

// optional int32 m_CardVoice = 5;
inline bool GM_OperatorData::has_m_cardvoice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_OperatorData::set_has_m_cardvoice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_OperatorData::clear_has_m_cardvoice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_OperatorData::clear_m_cardvoice() {
  m_cardvoice_ = 0;
  clear_has_m_cardvoice();
}
inline ::google::protobuf::int32 GM_OperatorData::m_cardvoice() const {
  return m_cardvoice_;
}
inline void GM_OperatorData::set_m_cardvoice(::google::protobuf::int32 value) {
  set_has_m_cardvoice();
  m_cardvoice_ = value;
}

// optional int32 m_CardNum = 6;
inline bool GM_OperatorData::has_m_cardnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_OperatorData::set_has_m_cardnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_OperatorData::clear_has_m_cardnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_OperatorData::clear_m_cardnum() {
  m_cardnum_ = 0;
  clear_has_m_cardnum();
}
inline ::google::protobuf::int32 GM_OperatorData::m_cardnum() const {
  return m_cardnum_;
}
inline void GM_OperatorData::set_m_cardnum(::google::protobuf::int32 value) {
  set_has_m_cardnum();
  m_cardnum_ = value;
}

// repeated .GM_PlayerHandCard m_HandCard = 10;
inline int GM_OperatorData::m_handcard_size() const {
  return m_handcard_.size();
}
inline void GM_OperatorData::clear_m_handcard() {
  m_handcard_.Clear();
}
inline const ::GM_PlayerHandCard& GM_OperatorData::m_handcard(int index) const {
  return m_handcard_.Get(index);
}
inline ::GM_PlayerHandCard* GM_OperatorData::mutable_m_handcard(int index) {
  return m_handcard_.Mutable(index);
}
inline ::GM_PlayerHandCard* GM_OperatorData::add_m_handcard() {
  return m_handcard_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >&
GM_OperatorData::m_handcard() const {
  return m_handcard_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >*
GM_OperatorData::mutable_m_handcard() {
  return &m_handcard_;
}

// -------------------------------------------------------------------

// GM_MJOperator

// required int32 m_roleid = 1;
inline bool GM_MJOperator::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_MJOperator::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_MJOperator::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_MJOperator::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_MJOperator::m_roleid() const {
  return m_roleid_;
}
inline void GM_MJOperator::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional int32 m_OperatorType = 2;
inline bool GM_MJOperator::has_m_operatortype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_MJOperator::set_has_m_operatortype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_MJOperator::clear_has_m_operatortype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_MJOperator::clear_m_operatortype() {
  m_operatortype_ = 0;
  clear_has_m_operatortype();
}
inline ::google::protobuf::int32 GM_MJOperator::m_operatortype() const {
  return m_operatortype_;
}
inline void GM_MJOperator::set_m_operatortype(::google::protobuf::int32 value) {
  set_has_m_operatortype();
  m_operatortype_ = value;
}

// optional int32 m_RoleVoice = 3;
inline bool GM_MJOperator::has_m_rolevoice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_MJOperator::set_has_m_rolevoice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_MJOperator::clear_has_m_rolevoice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_MJOperator::clear_m_rolevoice() {
  m_rolevoice_ = 0;
  clear_has_m_rolevoice();
}
inline ::google::protobuf::int32 GM_MJOperator::m_rolevoice() const {
  return m_rolevoice_;
}
inline void GM_MJOperator::set_m_rolevoice(::google::protobuf::int32 value) {
  set_has_m_rolevoice();
  m_rolevoice_ = value;
}

// optional int32 m_CardVoice = 4;
inline bool GM_MJOperator::has_m_cardvoice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_MJOperator::set_has_m_cardvoice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_MJOperator::clear_has_m_cardvoice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_MJOperator::clear_m_cardvoice() {
  m_cardvoice_ = 0;
  clear_has_m_cardvoice();
}
inline ::google::protobuf::int32 GM_MJOperator::m_cardvoice() const {
  return m_cardvoice_;
}
inline void GM_MJOperator::set_m_cardvoice(::google::protobuf::int32 value) {
  set_has_m_cardvoice();
  m_cardvoice_ = value;
}

// optional int32 m_Order = 5;
inline bool GM_MJOperator::has_m_order() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_MJOperator::set_has_m_order() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_MJOperator::clear_has_m_order() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_MJOperator::clear_m_order() {
  m_order_ = 0;
  clear_has_m_order();
}
inline ::google::protobuf::int32 GM_MJOperator::m_order() const {
  return m_order_;
}
inline void GM_MJOperator::set_m_order(::google::protobuf::int32 value) {
  set_has_m_order();
  m_order_ = value;
}

// optional int32 m_CardNum = 6;
inline bool GM_MJOperator::has_m_cardnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_MJOperator::set_has_m_cardnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_MJOperator::clear_has_m_cardnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_MJOperator::clear_m_cardnum() {
  m_cardnum_ = 0;
  clear_has_m_cardnum();
}
inline ::google::protobuf::int32 GM_MJOperator::m_cardnum() const {
  return m_cardnum_;
}
inline void GM_MJOperator::set_m_cardnum(::google::protobuf::int32 value) {
  set_has_m_cardnum();
  m_cardnum_ = value;
}

// optional .GM_PlayerHandCard m_LastCard = 7;
inline bool GM_MJOperator::has_m_lastcard() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_MJOperator::set_has_m_lastcard() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_MJOperator::clear_has_m_lastcard() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_MJOperator::clear_m_lastcard() {
  if (m_lastcard_ != NULL) m_lastcard_->::GM_PlayerHandCard::Clear();
  clear_has_m_lastcard();
}
inline const ::GM_PlayerHandCard& GM_MJOperator::m_lastcard() const {
  return m_lastcard_ != NULL ? *m_lastcard_ : *default_instance_->m_lastcard_;
}
inline ::GM_PlayerHandCard* GM_MJOperator::mutable_m_lastcard() {
  set_has_m_lastcard();
  if (m_lastcard_ == NULL) m_lastcard_ = new ::GM_PlayerHandCard;
  return m_lastcard_;
}
inline ::GM_PlayerHandCard* GM_MJOperator::release_m_lastcard() {
  clear_has_m_lastcard();
  ::GM_PlayerHandCard* temp = m_lastcard_;
  m_lastcard_ = NULL;
  return temp;
}
inline void GM_MJOperator::set_allocated_m_lastcard(::GM_PlayerHandCard* m_lastcard) {
  delete m_lastcard_;
  m_lastcard_ = m_lastcard;
  if (m_lastcard) {
    set_has_m_lastcard();
  } else {
    clear_has_m_lastcard();
  }
}

// repeated .GM_PlayerHandCard m_HandCard = 10;
inline int GM_MJOperator::m_handcard_size() const {
  return m_handcard_.size();
}
inline void GM_MJOperator::clear_m_handcard() {
  m_handcard_.Clear();
}
inline const ::GM_PlayerHandCard& GM_MJOperator::m_handcard(int index) const {
  return m_handcard_.Get(index);
}
inline ::GM_PlayerHandCard* GM_MJOperator::mutable_m_handcard(int index) {
  return m_handcard_.Mutable(index);
}
inline ::GM_PlayerHandCard* GM_MJOperator::add_m_handcard() {
  return m_handcard_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >&
GM_MJOperator::m_handcard() const {
  return m_handcard_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >*
GM_MJOperator::mutable_m_handcard() {
  return &m_handcard_;
}

// -------------------------------------------------------------------

// GM_HUOperator

// required int32 m_huRoleid = 1;
inline bool GM_HUOperator::has_m_huroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_HUOperator::set_has_m_huroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_HUOperator::clear_has_m_huroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_HUOperator::clear_m_huroleid() {
  m_huroleid_ = 0;
  clear_has_m_huroleid();
}
inline ::google::protobuf::int32 GM_HUOperator::m_huroleid() const {
  return m_huroleid_;
}
inline void GM_HUOperator::set_m_huroleid(::google::protobuf::int32 value) {
  set_has_m_huroleid();
  m_huroleid_ = value;
}

// optional int32 m_huType = 2;
inline bool GM_HUOperator::has_m_hutype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_HUOperator::set_has_m_hutype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_HUOperator::clear_has_m_hutype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_HUOperator::clear_m_hutype() {
  m_hutype_ = 0;
  clear_has_m_hutype();
}
inline ::google::protobuf::int32 GM_HUOperator::m_hutype() const {
  return m_hutype_;
}
inline void GM_HUOperator::set_m_hutype(::google::protobuf::int32 value) {
  set_has_m_hutype();
  m_hutype_ = value;
}

// optional int32 m_fpid = 3;
inline bool GM_HUOperator::has_m_fpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_HUOperator::set_has_m_fpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_HUOperator::clear_has_m_fpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_HUOperator::clear_m_fpid() {
  m_fpid_ = 0;
  clear_has_m_fpid();
}
inline ::google::protobuf::int32 GM_HUOperator::m_fpid() const {
  return m_fpid_;
}
inline void GM_HUOperator::set_m_fpid(::google::protobuf::int32 value) {
  set_has_m_fpid();
  m_fpid_ = value;
}

// repeated .GM_HuHandCardData m_Data = 4;
inline int GM_HUOperator::m_data_size() const {
  return m_data_.size();
}
inline void GM_HUOperator::clear_m_data() {
  m_data_.Clear();
}
inline const ::GM_HuHandCardData& GM_HUOperator::m_data(int index) const {
  return m_data_.Get(index);
}
inline ::GM_HuHandCardData* GM_HUOperator::mutable_m_data(int index) {
  return m_data_.Mutable(index);
}
inline ::GM_HuHandCardData* GM_HUOperator::add_m_data() {
  return m_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_HuHandCardData >&
GM_HUOperator::m_data() const {
  return m_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_HuHandCardData >*
GM_HUOperator::mutable_m_data() {
  return &m_data_;
}

// optional int32 m_RoleVoice = 5;
inline bool GM_HUOperator::has_m_rolevoice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_HUOperator::set_has_m_rolevoice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_HUOperator::clear_has_m_rolevoice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_HUOperator::clear_m_rolevoice() {
  m_rolevoice_ = 0;
  clear_has_m_rolevoice();
}
inline ::google::protobuf::int32 GM_HUOperator::m_rolevoice() const {
  return m_rolevoice_;
}
inline void GM_HUOperator::set_m_rolevoice(::google::protobuf::int32 value) {
  set_has_m_rolevoice();
  m_rolevoice_ = value;
}

// optional int32 m_CardVoice = 6;
inline bool GM_HUOperator::has_m_cardvoice() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_HUOperator::set_has_m_cardvoice() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_HUOperator::clear_has_m_cardvoice() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_HUOperator::clear_m_cardvoice() {
  m_cardvoice_ = 0;
  clear_has_m_cardvoice();
}
inline ::google::protobuf::int32 GM_HUOperator::m_cardvoice() const {
  return m_cardvoice_;
}
inline void GM_HUOperator::set_m_cardvoice(::google::protobuf::int32 value) {
  set_has_m_cardvoice();
  m_cardvoice_ = value;
}

// optional .GM_PlayerHandCard m_huCard = 7;
inline bool GM_HUOperator::has_m_hucard() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_HUOperator::set_has_m_hucard() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_HUOperator::clear_has_m_hucard() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_HUOperator::clear_m_hucard() {
  if (m_hucard_ != NULL) m_hucard_->::GM_PlayerHandCard::Clear();
  clear_has_m_hucard();
}
inline const ::GM_PlayerHandCard& GM_HUOperator::m_hucard() const {
  return m_hucard_ != NULL ? *m_hucard_ : *default_instance_->m_hucard_;
}
inline ::GM_PlayerHandCard* GM_HUOperator::mutable_m_hucard() {
  set_has_m_hucard();
  if (m_hucard_ == NULL) m_hucard_ = new ::GM_PlayerHandCard;
  return m_hucard_;
}
inline ::GM_PlayerHandCard* GM_HUOperator::release_m_hucard() {
  clear_has_m_hucard();
  ::GM_PlayerHandCard* temp = m_hucard_;
  m_hucard_ = NULL;
  return temp;
}
inline void GM_HUOperator::set_allocated_m_hucard(::GM_PlayerHandCard* m_hucard) {
  delete m_hucard_;
  m_hucard_ = m_hucard;
  if (m_hucard) {
    set_has_m_hucard();
  } else {
    clear_has_m_hucard();
  }
}

// -------------------------------------------------------------------

// GM_HuHandCardData

// required int32 m_roleid = 1;
inline bool GM_HuHandCardData::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_HuHandCardData::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_HuHandCardData::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_HuHandCardData::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_HuHandCardData::m_roleid() const {
  return m_roleid_;
}
inline void GM_HuHandCardData::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// repeated int32 m_HandCardType = 2;
inline int GM_HuHandCardData::m_handcardtype_size() const {
  return m_handcardtype_.size();
}
inline void GM_HuHandCardData::clear_m_handcardtype() {
  m_handcardtype_.Clear();
}
inline ::google::protobuf::int32 GM_HuHandCardData::m_handcardtype(int index) const {
  return m_handcardtype_.Get(index);
}
inline void GM_HuHandCardData::set_m_handcardtype(int index, ::google::protobuf::int32 value) {
  m_handcardtype_.Set(index, value);
}
inline void GM_HuHandCardData::add_m_handcardtype(::google::protobuf::int32 value) {
  m_handcardtype_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GM_HuHandCardData::m_handcardtype() const {
  return m_handcardtype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GM_HuHandCardData::mutable_m_handcardtype() {
  return &m_handcardtype_;
}

// optional int32 m_Hufeng = 3;
inline bool GM_HuHandCardData::has_m_hufeng() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_HuHandCardData::set_has_m_hufeng() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_HuHandCardData::clear_has_m_hufeng() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_HuHandCardData::clear_m_hufeng() {
  m_hufeng_ = 0;
  clear_has_m_hufeng();
}
inline ::google::protobuf::int32 GM_HuHandCardData::m_hufeng() const {
  return m_hufeng_;
}
inline void GM_HuHandCardData::set_m_hufeng(::google::protobuf::int32 value) {
  set_has_m_hufeng();
  m_hufeng_ = value;
}

// optional int32 m_ZongLei = 4;
inline bool GM_HuHandCardData::has_m_zonglei() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_HuHandCardData::set_has_m_zonglei() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_HuHandCardData::clear_has_m_zonglei() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_HuHandCardData::clear_m_zonglei() {
  m_zonglei_ = 0;
  clear_has_m_zonglei();
}
inline ::google::protobuf::int32 GM_HuHandCardData::m_zonglei() const {
  return m_zonglei_;
}
inline void GM_HuHandCardData::set_m_zonglei(::google::protobuf::int32 value) {
  set_has_m_zonglei();
  m_zonglei_ = value;
}

// optional int32 m_Tan = 5;
inline bool GM_HuHandCardData::has_m_tan() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_HuHandCardData::set_has_m_tan() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_HuHandCardData::clear_has_m_tan() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_HuHandCardData::clear_m_tan() {
  m_tan_ = 0;
  clear_has_m_tan();
}
inline ::google::protobuf::int32 GM_HuHandCardData::m_tan() const {
  return m_tan_;
}
inline void GM_HuHandCardData::set_m_tan(::google::protobuf::int32 value) {
  set_has_m_tan();
  m_tan_ = value;
}

// optional int32 m_Sao = 6;
inline bool GM_HuHandCardData::has_m_sao() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_HuHandCardData::set_has_m_sao() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_HuHandCardData::clear_has_m_sao() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_HuHandCardData::clear_m_sao() {
  m_sao_ = 0;
  clear_has_m_sao();
}
inline ::google::protobuf::int32 GM_HuHandCardData::m_sao() const {
  return m_sao_;
}
inline void GM_HuHandCardData::set_m_sao(::google::protobuf::int32 value) {
  set_has_m_sao();
  m_sao_ = value;
}

// optional int32 m_Peng = 7;
inline bool GM_HuHandCardData::has_m_peng() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_HuHandCardData::set_has_m_peng() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_HuHandCardData::clear_has_m_peng() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_HuHandCardData::clear_m_peng() {
  m_peng_ = 0;
  clear_has_m_peng();
}
inline ::google::protobuf::int32 GM_HuHandCardData::m_peng() const {
  return m_peng_;
}
inline void GM_HuHandCardData::set_m_peng(::google::protobuf::int32 value) {
  set_has_m_peng();
  m_peng_ = value;
}

// optional int32 m_Gang = 8;
inline bool GM_HuHandCardData::has_m_gang() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_HuHandCardData::set_has_m_gang() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_HuHandCardData::clear_has_m_gang() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_HuHandCardData::clear_m_gang() {
  m_gang_ = 0;
  clear_has_m_gang();
}
inline ::google::protobuf::int32 GM_HuHandCardData::m_gang() const {
  return m_gang_;
}
inline void GM_HuHandCardData::set_m_gang(::google::protobuf::int32 value) {
  set_has_m_gang();
  m_gang_ = value;
}

// optional int32 m_anGang = 9;
inline bool GM_HuHandCardData::has_m_angang() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_HuHandCardData::set_has_m_angang() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_HuHandCardData::clear_has_m_angang() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_HuHandCardData::clear_m_angang() {
  m_angang_ = 0;
  clear_has_m_angang();
}
inline ::google::protobuf::int32 GM_HuHandCardData::m_angang() const {
  return m_angang_;
}
inline void GM_HuHandCardData::set_m_angang(::google::protobuf::int32 value) {
  set_has_m_angang();
  m_angang_ = value;
}

// optional int32 m_reward = 10;
inline bool GM_HuHandCardData::has_m_reward() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GM_HuHandCardData::set_has_m_reward() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GM_HuHandCardData::clear_has_m_reward() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GM_HuHandCardData::clear_m_reward() {
  m_reward_ = 0;
  clear_has_m_reward();
}
inline ::google::protobuf::int32 GM_HuHandCardData::m_reward() const {
  return m_reward_;
}
inline void GM_HuHandCardData::set_m_reward(::google::protobuf::int32 value) {
  set_has_m_reward();
  m_reward_ = value;
}

// optional int32 m_score = 11;
inline bool GM_HuHandCardData::has_m_score() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GM_HuHandCardData::set_has_m_score() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GM_HuHandCardData::clear_has_m_score() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GM_HuHandCardData::clear_m_score() {
  m_score_ = 0;
  clear_has_m_score();
}
inline ::google::protobuf::int32 GM_HuHandCardData::m_score() const {
  return m_score_;
}
inline void GM_HuHandCardData::set_m_score(::google::protobuf::int32 value) {
  set_has_m_score();
  m_score_ = value;
}

// optional int32 m_TotalScore = 12;
inline bool GM_HuHandCardData::has_m_totalscore() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GM_HuHandCardData::set_has_m_totalscore() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GM_HuHandCardData::clear_has_m_totalscore() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GM_HuHandCardData::clear_m_totalscore() {
  m_totalscore_ = 0;
  clear_has_m_totalscore();
}
inline ::google::protobuf::int32 GM_HuHandCardData::m_totalscore() const {
  return m_totalscore_;
}
inline void GM_HuHandCardData::set_m_totalscore(::google::protobuf::int32 value) {
  set_has_m_totalscore();
  m_totalscore_ = value;
}

// repeated int32 m_SaoType = 20;
inline int GM_HuHandCardData::m_saotype_size() const {
  return m_saotype_.size();
}
inline void GM_HuHandCardData::clear_m_saotype() {
  m_saotype_.Clear();
}
inline ::google::protobuf::int32 GM_HuHandCardData::m_saotype(int index) const {
  return m_saotype_.Get(index);
}
inline void GM_HuHandCardData::set_m_saotype(int index, ::google::protobuf::int32 value) {
  m_saotype_.Set(index, value);
}
inline void GM_HuHandCardData::add_m_saotype(::google::protobuf::int32 value) {
  m_saotype_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GM_HuHandCardData::m_saotype() const {
  return m_saotype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GM_HuHandCardData::mutable_m_saotype() {
  return &m_saotype_;
}

// -------------------------------------------------------------------

// GM_AskFriend

// required int32 m_Roleid = 1;
inline bool GM_AskFriend::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_AskFriend::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_AskFriend::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_AskFriend::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_AskFriend::m_roleid() const {
  return m_roleid_;
}
inline void GM_AskFriend::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional int32 m_Beinvited = 2;
inline bool GM_AskFriend::has_m_beinvited() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_AskFriend::set_has_m_beinvited() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_AskFriend::clear_has_m_beinvited() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_AskFriend::clear_m_beinvited() {
  m_beinvited_ = 0;
  clear_has_m_beinvited();
}
inline ::google::protobuf::int32 GM_AskFriend::m_beinvited() const {
  return m_beinvited_;
}
inline void GM_AskFriend::set_m_beinvited(::google::protobuf::int32 value) {
  set_has_m_beinvited();
  m_beinvited_ = value;
}

// optional string m_Name = 3;
inline bool GM_AskFriend::has_m_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_AskFriend::set_has_m_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_AskFriend::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_AskFriend::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& GM_AskFriend::m_name() const {
  return *m_name_;
}
inline void GM_AskFriend::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GM_AskFriend::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GM_AskFriend::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_AskFriend::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* GM_AskFriend::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_AskFriend::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_FBID = 4;
inline bool GM_AskFriend::has_m_fbid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_AskFriend::set_has_m_fbid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_AskFriend::clear_has_m_fbid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_AskFriend::clear_m_fbid() {
  m_fbid_ = 0;
  clear_has_m_fbid();
}
inline ::google::protobuf::int32 GM_AskFriend::m_fbid() const {
  return m_fbid_;
}
inline void GM_AskFriend::set_m_fbid(::google::protobuf::int32 value) {
  set_has_m_fbid();
  m_fbid_ = value;
}

// -------------------------------------------------------------------

// GM_AutoInfo

// required int32 m_Roleid = 1;
inline bool GM_AutoInfo::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_AutoInfo::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_AutoInfo::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_AutoInfo::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_AutoInfo::m_roleid() const {
  return m_roleid_;
}
inline void GM_AutoInfo::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional int32 m_AutoFlag = 2;
inline bool GM_AutoInfo::has_m_autoflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_AutoInfo::set_has_m_autoflag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_AutoInfo::clear_has_m_autoflag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_AutoInfo::clear_m_autoflag() {
  m_autoflag_ = 0;
  clear_has_m_autoflag();
}
inline ::google::protobuf::int32 GM_AutoInfo::m_autoflag() const {
  return m_autoflag_;
}
inline void GM_AutoInfo::set_m_autoflag(::google::protobuf::int32 value) {
  set_has_m_autoflag();
  m_autoflag_ = value;
}

// -------------------------------------------------------------------

// GM_ReconnectMJData

// required int32 m_bankerPos = 1;
inline bool GM_ReconnectMJData::has_m_bankerpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ReconnectMJData::set_has_m_bankerpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ReconnectMJData::clear_has_m_bankerpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ReconnectMJData::clear_m_bankerpos() {
  m_bankerpos_ = 0;
  clear_has_m_bankerpos();
}
inline ::google::protobuf::int32 GM_ReconnectMJData::m_bankerpos() const {
  return m_bankerpos_;
}
inline void GM_ReconnectMJData::set_m_bankerpos(::google::protobuf::int32 value) {
  set_has_m_bankerpos();
  m_bankerpos_ = value;
}

// optional int32 m_RoomMasterID = 2;
inline bool GM_ReconnectMJData::has_m_roommasterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_ReconnectMJData::set_has_m_roommasterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_ReconnectMJData::clear_has_m_roommasterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_ReconnectMJData::clear_m_roommasterid() {
  m_roommasterid_ = 0;
  clear_has_m_roommasterid();
}
inline ::google::protobuf::int32 GM_ReconnectMJData::m_roommasterid() const {
  return m_roommasterid_;
}
inline void GM_ReconnectMJData::set_m_roommasterid(::google::protobuf::int32 value) {
  set_has_m_roommasterid();
  m_roommasterid_ = value;
}

// optional int32 m_FreeCard = 3;
inline bool GM_ReconnectMJData::has_m_freecard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_ReconnectMJData::set_has_m_freecard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_ReconnectMJData::clear_has_m_freecard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_ReconnectMJData::clear_m_freecard() {
  m_freecard_ = 0;
  clear_has_m_freecard();
}
inline ::google::protobuf::int32 GM_ReconnectMJData::m_freecard() const {
  return m_freecard_;
}
inline void GM_ReconnectMJData::set_m_freecard(::google::protobuf::int32 value) {
  set_has_m_freecard();
  m_freecard_ = value;
}

// optional int32 m_leftCount = 4;
inline bool GM_ReconnectMJData::has_m_leftcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_ReconnectMJData::set_has_m_leftcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_ReconnectMJData::clear_has_m_leftcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_ReconnectMJData::clear_m_leftcount() {
  m_leftcount_ = 0;
  clear_has_m_leftcount();
}
inline ::google::protobuf::int32 GM_ReconnectMJData::m_leftcount() const {
  return m_leftcount_;
}
inline void GM_ReconnectMJData::set_m_leftcount(::google::protobuf::int32 value) {
  set_has_m_leftcount();
  m_leftcount_ = value;
}

// optional int32 m_totalCount = 5;
inline bool GM_ReconnectMJData::has_m_totalcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_ReconnectMJData::set_has_m_totalcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_ReconnectMJData::clear_has_m_totalcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_ReconnectMJData::clear_m_totalcount() {
  m_totalcount_ = 0;
  clear_has_m_totalcount();
}
inline ::google::protobuf::int32 GM_ReconnectMJData::m_totalcount() const {
  return m_totalcount_;
}
inline void GM_ReconnectMJData::set_m_totalcount(::google::protobuf::int32 value) {
  set_has_m_totalcount();
  m_totalcount_ = value;
}

// optional int32 m_rollCount = 6;
inline bool GM_ReconnectMJData::has_m_rollcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_ReconnectMJData::set_has_m_rollcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_ReconnectMJData::clear_has_m_rollcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_ReconnectMJData::clear_m_rollcount() {
  m_rollcount_ = 0;
  clear_has_m_rollcount();
}
inline ::google::protobuf::int32 GM_ReconnectMJData::m_rollcount() const {
  return m_rollcount_;
}
inline void GM_ReconnectMJData::set_m_rollcount(::google::protobuf::int32 value) {
  set_has_m_rollcount();
  m_rollcount_ = value;
}

// optional int32 m_playerCount = 7;
inline bool GM_ReconnectMJData::has_m_playercount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_ReconnectMJData::set_has_m_playercount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_ReconnectMJData::clear_has_m_playercount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_ReconnectMJData::clear_m_playercount() {
  m_playercount_ = 0;
  clear_has_m_playercount();
}
inline ::google::protobuf::int32 GM_ReconnectMJData::m_playercount() const {
  return m_playercount_;
}
inline void GM_ReconnectMJData::set_m_playercount(::google::protobuf::int32 value) {
  set_has_m_playercount();
  m_playercount_ = value;
}

// optional int32 m_lastOutCardRoleId = 8;
inline bool GM_ReconnectMJData::has_m_lastoutcardroleid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_ReconnectMJData::set_has_m_lastoutcardroleid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_ReconnectMJData::clear_has_m_lastoutcardroleid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_ReconnectMJData::clear_m_lastoutcardroleid() {
  m_lastoutcardroleid_ = 0;
  clear_has_m_lastoutcardroleid();
}
inline ::google::protobuf::int32 GM_ReconnectMJData::m_lastoutcardroleid() const {
  return m_lastoutcardroleid_;
}
inline void GM_ReconnectMJData::set_m_lastoutcardroleid(::google::protobuf::int32 value) {
  set_has_m_lastoutcardroleid();
  m_lastoutcardroleid_ = value;
}

// optional int32 m_closeRoomLeftTime = 9;
inline bool GM_ReconnectMJData::has_m_closeroomlefttime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_ReconnectMJData::set_has_m_closeroomlefttime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_ReconnectMJData::clear_has_m_closeroomlefttime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_ReconnectMJData::clear_m_closeroomlefttime() {
  m_closeroomlefttime_ = 0;
  clear_has_m_closeroomlefttime();
}
inline ::google::protobuf::int32 GM_ReconnectMJData::m_closeroomlefttime() const {
  return m_closeroomlefttime_;
}
inline void GM_ReconnectMJData::set_m_closeroomlefttime(::google::protobuf::int32 value) {
  set_has_m_closeroomlefttime();
  m_closeroomlefttime_ = value;
}

// optional int32 m_huLastCard = 10;
inline bool GM_ReconnectMJData::has_m_hulastcard() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GM_ReconnectMJData::set_has_m_hulastcard() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GM_ReconnectMJData::clear_has_m_hulastcard() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GM_ReconnectMJData::clear_m_hulastcard() {
  m_hulastcard_ = 0;
  clear_has_m_hulastcard();
}
inline ::google::protobuf::int32 GM_ReconnectMJData::m_hulastcard() const {
  return m_hulastcard_;
}
inline void GM_ReconnectMJData::set_m_hulastcard(::google::protobuf::int32 value) {
  set_has_m_hulastcard();
  m_hulastcard_ = value;
}

// optional int32 m_getCardId = 11;
inline bool GM_ReconnectMJData::has_m_getcardid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GM_ReconnectMJData::set_has_m_getcardid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GM_ReconnectMJData::clear_has_m_getcardid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GM_ReconnectMJData::clear_m_getcardid() {
  m_getcardid_ = 0;
  clear_has_m_getcardid();
}
inline ::google::protobuf::int32 GM_ReconnectMJData::m_getcardid() const {
  return m_getcardid_;
}
inline void GM_ReconnectMJData::set_m_getcardid(::google::protobuf::int32 value) {
  set_has_m_getcardid();
  m_getcardid_ = value;
}

// optional int32 m_getCardNum = 12;
inline bool GM_ReconnectMJData::has_m_getcardnum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GM_ReconnectMJData::set_has_m_getcardnum() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GM_ReconnectMJData::clear_has_m_getcardnum() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GM_ReconnectMJData::clear_m_getcardnum() {
  m_getcardnum_ = 0;
  clear_has_m_getcardnum();
}
inline ::google::protobuf::int32 GM_ReconnectMJData::m_getcardnum() const {
  return m_getcardnum_;
}
inline void GM_ReconnectMJData::set_m_getcardnum(::google::protobuf::int32 value) {
  set_has_m_getcardnum();
  m_getcardnum_ = value;
}

// optional int32 m_sendCardID = 13;
inline bool GM_ReconnectMJData::has_m_sendcardid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GM_ReconnectMJData::set_has_m_sendcardid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GM_ReconnectMJData::clear_has_m_sendcardid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GM_ReconnectMJData::clear_m_sendcardid() {
  m_sendcardid_ = 0;
  clear_has_m_sendcardid();
}
inline ::google::protobuf::int32 GM_ReconnectMJData::m_sendcardid() const {
  return m_sendcardid_;
}
inline void GM_ReconnectMJData::set_m_sendcardid(::google::protobuf::int32 value) {
  set_has_m_sendcardid();
  m_sendcardid_ = value;
}

// repeated int32 m_saizi = 20;
inline int GM_ReconnectMJData::m_saizi_size() const {
  return m_saizi_.size();
}
inline void GM_ReconnectMJData::clear_m_saizi() {
  m_saizi_.Clear();
}
inline ::google::protobuf::int32 GM_ReconnectMJData::m_saizi(int index) const {
  return m_saizi_.Get(index);
}
inline void GM_ReconnectMJData::set_m_saizi(int index, ::google::protobuf::int32 value) {
  m_saizi_.Set(index, value);
}
inline void GM_ReconnectMJData::add_m_saizi(::google::protobuf::int32 value) {
  m_saizi_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GM_ReconnectMJData::m_saizi() const {
  return m_saizi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GM_ReconnectMJData::mutable_m_saizi() {
  return &m_saizi_;
}

// repeated .GM_PlayerHandCard m_HandCard = 21;
inline int GM_ReconnectMJData::m_handcard_size() const {
  return m_handcard_.size();
}
inline void GM_ReconnectMJData::clear_m_handcard() {
  m_handcard_.Clear();
}
inline const ::GM_PlayerHandCard& GM_ReconnectMJData::m_handcard(int index) const {
  return m_handcard_.Get(index);
}
inline ::GM_PlayerHandCard* GM_ReconnectMJData::mutable_m_handcard(int index) {
  return m_handcard_.Mutable(index);
}
inline ::GM_PlayerHandCard* GM_ReconnectMJData::add_m_handcard() {
  return m_handcard_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >&
GM_ReconnectMJData::m_handcard() const {
  return m_handcard_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >*
GM_ReconnectMJData::mutable_m_handcard() {
  return &m_handcard_;
}

// repeated .GM_ReconnectPlayerData m_AllData = 22;
inline int GM_ReconnectMJData::m_alldata_size() const {
  return m_alldata_.size();
}
inline void GM_ReconnectMJData::clear_m_alldata() {
  m_alldata_.Clear();
}
inline const ::GM_ReconnectPlayerData& GM_ReconnectMJData::m_alldata(int index) const {
  return m_alldata_.Get(index);
}
inline ::GM_ReconnectPlayerData* GM_ReconnectMJData::mutable_m_alldata(int index) {
  return m_alldata_.Mutable(index);
}
inline ::GM_ReconnectPlayerData* GM_ReconnectMJData::add_m_alldata() {
  return m_alldata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_ReconnectPlayerData >&
GM_ReconnectMJData::m_alldata() const {
  return m_alldata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_ReconnectPlayerData >*
GM_ReconnectMJData::mutable_m_alldata() {
  return &m_alldata_;
}

// repeated .GM_ReconnectCloseRoomData m_CloseRoomData = 23;
inline int GM_ReconnectMJData::m_closeroomdata_size() const {
  return m_closeroomdata_.size();
}
inline void GM_ReconnectMJData::clear_m_closeroomdata() {
  m_closeroomdata_.Clear();
}
inline const ::GM_ReconnectCloseRoomData& GM_ReconnectMJData::m_closeroomdata(int index) const {
  return m_closeroomdata_.Get(index);
}
inline ::GM_ReconnectCloseRoomData* GM_ReconnectMJData::mutable_m_closeroomdata(int index) {
  return m_closeroomdata_.Mutable(index);
}
inline ::GM_ReconnectCloseRoomData* GM_ReconnectMJData::add_m_closeroomdata() {
  return m_closeroomdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_ReconnectCloseRoomData >&
GM_ReconnectMJData::m_closeroomdata() const {
  return m_closeroomdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_ReconnectCloseRoomData >*
GM_ReconnectMJData::mutable_m_closeroomdata() {
  return &m_closeroomdata_;
}

// optional .GM_HUOperator m_huOperatorData = 24;
inline bool GM_ReconnectMJData::has_m_huoperatordata() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GM_ReconnectMJData::set_has_m_huoperatordata() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GM_ReconnectMJData::clear_has_m_huoperatordata() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GM_ReconnectMJData::clear_m_huoperatordata() {
  if (m_huoperatordata_ != NULL) m_huoperatordata_->::GM_HUOperator::Clear();
  clear_has_m_huoperatordata();
}
inline const ::GM_HUOperator& GM_ReconnectMJData::m_huoperatordata() const {
  return m_huoperatordata_ != NULL ? *m_huoperatordata_ : *default_instance_->m_huoperatordata_;
}
inline ::GM_HUOperator* GM_ReconnectMJData::mutable_m_huoperatordata() {
  set_has_m_huoperatordata();
  if (m_huoperatordata_ == NULL) m_huoperatordata_ = new ::GM_HUOperator;
  return m_huoperatordata_;
}
inline ::GM_HUOperator* GM_ReconnectMJData::release_m_huoperatordata() {
  clear_has_m_huoperatordata();
  ::GM_HUOperator* temp = m_huoperatordata_;
  m_huoperatordata_ = NULL;
  return temp;
}
inline void GM_ReconnectMJData::set_allocated_m_huoperatordata(::GM_HUOperator* m_huoperatordata) {
  delete m_huoperatordata_;
  m_huoperatordata_ = m_huoperatordata;
  if (m_huoperatordata) {
    set_has_m_huoperatordata();
  } else {
    clear_has_m_huoperatordata();
  }
}

// -------------------------------------------------------------------

// GM_ReconnectPlayerData

// required int32 m_roleid = 1;
inline bool GM_ReconnectPlayerData::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ReconnectPlayerData::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ReconnectPlayerData::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_ReconnectPlayerData::m_roleid() const {
  return m_roleid_;
}
inline void GM_ReconnectPlayerData::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional int64 m_Gold = 2;
inline bool GM_ReconnectPlayerData::has_m_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_ReconnectPlayerData::clear_has_m_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_ReconnectPlayerData::clear_m_gold() {
  m_gold_ = GOOGLE_LONGLONG(0);
  clear_has_m_gold();
}
inline ::google::protobuf::int64 GM_ReconnectPlayerData::m_gold() const {
  return m_gold_;
}
inline void GM_ReconnectPlayerData::set_m_gold(::google::protobuf::int64 value) {
  set_has_m_gold();
  m_gold_ = value;
}

// optional int32 m_HeadPhoto = 3;
inline bool GM_ReconnectPlayerData::has_m_headphoto() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_headphoto() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_ReconnectPlayerData::clear_has_m_headphoto() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_ReconnectPlayerData::clear_m_headphoto() {
  m_headphoto_ = 0;
  clear_has_m_headphoto();
}
inline ::google::protobuf::int32 GM_ReconnectPlayerData::m_headphoto() const {
  return m_headphoto_;
}
inline void GM_ReconnectPlayerData::set_m_headphoto(::google::protobuf::int32 value) {
  set_has_m_headphoto();
  m_headphoto_ = value;
}

// optional int32 m_CataterType = 4;
inline bool GM_ReconnectPlayerData::has_m_catatertype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_catatertype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_ReconnectPlayerData::clear_has_m_catatertype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_ReconnectPlayerData::clear_m_catatertype() {
  m_catatertype_ = 0;
  clear_has_m_catatertype();
}
inline ::google::protobuf::int32 GM_ReconnectPlayerData::m_catatertype() const {
  return m_catatertype_;
}
inline void GM_ReconnectPlayerData::set_m_catatertype(::google::protobuf::int32 value) {
  set_has_m_catatertype();
  m_catatertype_ = value;
}

// optional int32 m_Postion = 5;
inline bool GM_ReconnectPlayerData::has_m_postion() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_postion() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_ReconnectPlayerData::clear_has_m_postion() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_ReconnectPlayerData::clear_m_postion() {
  m_postion_ = 0;
  clear_has_m_postion();
}
inline ::google::protobuf::int32 GM_ReconnectPlayerData::m_postion() const {
  return m_postion_;
}
inline void GM_ReconnectPlayerData::set_m_postion(::google::protobuf::int32 value) {
  set_has_m_postion();
  m_postion_ = value;
}

// optional string m_Name = 6;
inline bool GM_ReconnectPlayerData::has_m_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_ReconnectPlayerData::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_ReconnectPlayerData::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& GM_ReconnectPlayerData::m_name() const {
  return *m_name_;
}
inline void GM_ReconnectPlayerData::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GM_ReconnectPlayerData::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GM_ReconnectPlayerData::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_ReconnectPlayerData::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* GM_ReconnectPlayerData::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_ReconnectPlayerData::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_Sex = 7;
inline bool GM_ReconnectPlayerData::has_m_sex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_sex() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_ReconnectPlayerData::clear_has_m_sex() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_ReconnectPlayerData::clear_m_sex() {
  m_sex_ = 0;
  clear_has_m_sex();
}
inline ::google::protobuf::int32 GM_ReconnectPlayerData::m_sex() const {
  return m_sex_;
}
inline void GM_ReconnectPlayerData::set_m_sex(::google::protobuf::int32 value) {
  set_has_m_sex();
  m_sex_ = value;
}

// optional int32 m_handCardNum = 8;
inline bool GM_ReconnectPlayerData::has_m_handcardnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_handcardnum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_ReconnectPlayerData::clear_has_m_handcardnum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_ReconnectPlayerData::clear_m_handcardnum() {
  m_handcardnum_ = 0;
  clear_has_m_handcardnum();
}
inline ::google::protobuf::int32 GM_ReconnectPlayerData::m_handcardnum() const {
  return m_handcardnum_;
}
inline void GM_ReconnectPlayerData::set_m_handcardnum(::google::protobuf::int32 value) {
  set_has_m_handcardnum();
  m_handcardnum_ = value;
}

// optional int32 m_HeadFrame = 9;
inline bool GM_ReconnectPlayerData::has_m_headframe() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_headframe() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_ReconnectPlayerData::clear_has_m_headframe() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_ReconnectPlayerData::clear_m_headframe() {
  m_headframe_ = 0;
  clear_has_m_headframe();
}
inline ::google::protobuf::int32 GM_ReconnectPlayerData::m_headframe() const {
  return m_headframe_;
}
inline void GM_ReconnectPlayerData::set_m_headframe(::google::protobuf::int32 value) {
  set_has_m_headframe();
  m_headframe_ = value;
}

// optional string m_NickName = 10;
inline bool GM_ReconnectPlayerData::has_m_nickname() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_nickname() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GM_ReconnectPlayerData::clear_has_m_nickname() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GM_ReconnectPlayerData::clear_m_nickname() {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    m_nickname_->clear();
  }
  clear_has_m_nickname();
}
inline const ::std::string& GM_ReconnectPlayerData::m_nickname() const {
  return *m_nickname_;
}
inline void GM_ReconnectPlayerData::set_m_nickname(const ::std::string& value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void GM_ReconnectPlayerData::set_m_nickname(const char* value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void GM_ReconnectPlayerData::set_m_nickname(const char* value, size_t size) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_ReconnectPlayerData::mutable_m_nickname() {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  return m_nickname_;
}
inline ::std::string* GM_ReconnectPlayerData::release_m_nickname() {
  clear_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_nickname_;
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_ReconnectPlayerData::set_allocated_m_nickname(::std::string* m_nickname) {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_nickname_;
  }
  if (m_nickname) {
    set_has_m_nickname();
    m_nickname_ = m_nickname;
  } else {
    clear_has_m_nickname();
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_HeadPhotoUrl = 11;
inline bool GM_ReconnectPlayerData::has_m_headphotourl() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_headphotourl() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GM_ReconnectPlayerData::clear_has_m_headphotourl() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GM_ReconnectPlayerData::clear_m_headphotourl() {
  if (m_headphotourl_ != &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_->clear();
  }
  clear_has_m_headphotourl();
}
inline const ::std::string& GM_ReconnectPlayerData::m_headphotourl() const {
  return *m_headphotourl_;
}
inline void GM_ReconnectPlayerData::set_m_headphotourl(const ::std::string& value) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(value);
}
inline void GM_ReconnectPlayerData::set_m_headphotourl(const char* value) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(value);
}
inline void GM_ReconnectPlayerData::set_m_headphotourl(const char* value, size_t size) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_ReconnectPlayerData::mutable_m_headphotourl() {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  return m_headphotourl_;
}
inline ::std::string* GM_ReconnectPlayerData::release_m_headphotourl() {
  clear_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_headphotourl_;
    m_headphotourl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_ReconnectPlayerData::set_allocated_m_headphotourl(::std::string* m_headphotourl) {
  if (m_headphotourl_ != &::google::protobuf::internal::kEmptyString) {
    delete m_headphotourl_;
  }
  if (m_headphotourl) {
    set_has_m_headphotourl();
    m_headphotourl_ = m_headphotourl;
  } else {
    clear_has_m_headphotourl();
    m_headphotourl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_IsAuto = 12;
inline bool GM_ReconnectPlayerData::has_m_isauto() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_isauto() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GM_ReconnectPlayerData::clear_has_m_isauto() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GM_ReconnectPlayerData::clear_m_isauto() {
  m_isauto_ = 0;
  clear_has_m_isauto();
}
inline ::google::protobuf::int32 GM_ReconnectPlayerData::m_isauto() const {
  return m_isauto_;
}
inline void GM_ReconnectPlayerData::set_m_isauto(::google::protobuf::int32 value) {
  set_has_m_isauto();
  m_isauto_ = value;
}

// optional int32 m_TotalScore = 13;
inline bool GM_ReconnectPlayerData::has_m_totalscore() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_totalscore() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GM_ReconnectPlayerData::clear_has_m_totalscore() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GM_ReconnectPlayerData::clear_m_totalscore() {
  m_totalscore_ = 0;
  clear_has_m_totalscore();
}
inline ::google::protobuf::int32 GM_ReconnectPlayerData::m_totalscore() const {
  return m_totalscore_;
}
inline void GM_ReconnectPlayerData::set_m_totalscore(::google::protobuf::int32 value) {
  set_has_m_totalscore();
  m_totalscore_ = value;
}

// optional int32 m_IsReady = 14;
inline bool GM_ReconnectPlayerData::has_m_isready() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_isready() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GM_ReconnectPlayerData::clear_has_m_isready() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GM_ReconnectPlayerData::clear_m_isready() {
  m_isready_ = 0;
  clear_has_m_isready();
}
inline ::google::protobuf::int32 GM_ReconnectPlayerData::m_isready() const {
  return m_isready_;
}
inline void GM_ReconnectPlayerData::set_m_isready(::google::protobuf::int32 value) {
  set_has_m_isready();
  m_isready_ = value;
}

// optional int32 m_RoleVoice = 15;
inline bool GM_ReconnectPlayerData::has_m_rolevoice() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_rolevoice() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GM_ReconnectPlayerData::clear_has_m_rolevoice() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GM_ReconnectPlayerData::clear_m_rolevoice() {
  m_rolevoice_ = 0;
  clear_has_m_rolevoice();
}
inline ::google::protobuf::int32 GM_ReconnectPlayerData::m_rolevoice() const {
  return m_rolevoice_;
}
inline void GM_ReconnectPlayerData::set_m_rolevoice(::google::protobuf::int32 value) {
  set_has_m_rolevoice();
  m_rolevoice_ = value;
}

// optional int32 m_CardVoice = 16;
inline bool GM_ReconnectPlayerData::has_m_cardvoice() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_cardvoice() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GM_ReconnectPlayerData::clear_has_m_cardvoice() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GM_ReconnectPlayerData::clear_m_cardvoice() {
  m_cardvoice_ = 0;
  clear_has_m_cardvoice();
}
inline ::google::protobuf::int32 GM_ReconnectPlayerData::m_cardvoice() const {
  return m_cardvoice_;
}
inline void GM_ReconnectPlayerData::set_m_cardvoice(::google::protobuf::int32 value) {
  set_has_m_cardvoice();
  m_cardvoice_ = value;
}

// optional double m_Longitude = 17;
inline bool GM_ReconnectPlayerData::has_m_longitude() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_longitude() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GM_ReconnectPlayerData::clear_has_m_longitude() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GM_ReconnectPlayerData::clear_m_longitude() {
  m_longitude_ = 0;
  clear_has_m_longitude();
}
inline double GM_ReconnectPlayerData::m_longitude() const {
  return m_longitude_;
}
inline void GM_ReconnectPlayerData::set_m_longitude(double value) {
  set_has_m_longitude();
  m_longitude_ = value;
}

// optional double m_Latitude = 18;
inline bool GM_ReconnectPlayerData::has_m_latitude() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_latitude() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GM_ReconnectPlayerData::clear_has_m_latitude() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GM_ReconnectPlayerData::clear_m_latitude() {
  m_latitude_ = 0;
  clear_has_m_latitude();
}
inline double GM_ReconnectPlayerData::m_latitude() const {
  return m_latitude_;
}
inline void GM_ReconnectPlayerData::set_m_latitude(double value) {
  set_has_m_latitude();
  m_latitude_ = value;
}

// optional string m_reallyPos = 19;
inline bool GM_ReconnectPlayerData::has_m_reallypos() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_reallypos() {
  _has_bits_[0] |= 0x00040000u;
}
inline void GM_ReconnectPlayerData::clear_has_m_reallypos() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void GM_ReconnectPlayerData::clear_m_reallypos() {
  if (m_reallypos_ != &::google::protobuf::internal::kEmptyString) {
    m_reallypos_->clear();
  }
  clear_has_m_reallypos();
}
inline const ::std::string& GM_ReconnectPlayerData::m_reallypos() const {
  return *m_reallypos_;
}
inline void GM_ReconnectPlayerData::set_m_reallypos(const ::std::string& value) {
  set_has_m_reallypos();
  if (m_reallypos_ == &::google::protobuf::internal::kEmptyString) {
    m_reallypos_ = new ::std::string;
  }
  m_reallypos_->assign(value);
}
inline void GM_ReconnectPlayerData::set_m_reallypos(const char* value) {
  set_has_m_reallypos();
  if (m_reallypos_ == &::google::protobuf::internal::kEmptyString) {
    m_reallypos_ = new ::std::string;
  }
  m_reallypos_->assign(value);
}
inline void GM_ReconnectPlayerData::set_m_reallypos(const char* value, size_t size) {
  set_has_m_reallypos();
  if (m_reallypos_ == &::google::protobuf::internal::kEmptyString) {
    m_reallypos_ = new ::std::string;
  }
  m_reallypos_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_ReconnectPlayerData::mutable_m_reallypos() {
  set_has_m_reallypos();
  if (m_reallypos_ == &::google::protobuf::internal::kEmptyString) {
    m_reallypos_ = new ::std::string;
  }
  return m_reallypos_;
}
inline ::std::string* GM_ReconnectPlayerData::release_m_reallypos() {
  clear_has_m_reallypos();
  if (m_reallypos_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_reallypos_;
    m_reallypos_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_ReconnectPlayerData::set_allocated_m_reallypos(::std::string* m_reallypos) {
  if (m_reallypos_ != &::google::protobuf::internal::kEmptyString) {
    delete m_reallypos_;
  }
  if (m_reallypos) {
    set_has_m_reallypos();
    m_reallypos_ = m_reallypos;
  } else {
    clear_has_m_reallypos();
    m_reallypos_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_DingState = 20;
inline bool GM_ReconnectPlayerData::has_m_dingstate() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void GM_ReconnectPlayerData::set_has_m_dingstate() {
  _has_bits_[0] |= 0x00080000u;
}
inline void GM_ReconnectPlayerData::clear_has_m_dingstate() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void GM_ReconnectPlayerData::clear_m_dingstate() {
  m_dingstate_ = 0;
  clear_has_m_dingstate();
}
inline ::google::protobuf::int32 GM_ReconnectPlayerData::m_dingstate() const {
  return m_dingstate_;
}
inline void GM_ReconnectPlayerData::set_m_dingstate(::google::protobuf::int32 value) {
  set_has_m_dingstate();
  m_dingstate_ = value;
}

// repeated .GM_PlayerHandCard m_OutHandCard = 25;
inline int GM_ReconnectPlayerData::m_outhandcard_size() const {
  return m_outhandcard_.size();
}
inline void GM_ReconnectPlayerData::clear_m_outhandcard() {
  m_outhandcard_.Clear();
}
inline const ::GM_PlayerHandCard& GM_ReconnectPlayerData::m_outhandcard(int index) const {
  return m_outhandcard_.Get(index);
}
inline ::GM_PlayerHandCard* GM_ReconnectPlayerData::mutable_m_outhandcard(int index) {
  return m_outhandcard_.Mutable(index);
}
inline ::GM_PlayerHandCard* GM_ReconnectPlayerData::add_m_outhandcard() {
  return m_outhandcard_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >&
GM_ReconnectPlayerData::m_outhandcard() const {
  return m_outhandcard_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_PlayerHandCard >*
GM_ReconnectPlayerData::mutable_m_outhandcard() {
  return &m_outhandcard_;
}

// repeated .GM_ReconnectFunHandCard m_FunHandCardList = 26;
inline int GM_ReconnectPlayerData::m_funhandcardlist_size() const {
  return m_funhandcardlist_.size();
}
inline void GM_ReconnectPlayerData::clear_m_funhandcardlist() {
  m_funhandcardlist_.Clear();
}
inline const ::GM_ReconnectFunHandCard& GM_ReconnectPlayerData::m_funhandcardlist(int index) const {
  return m_funhandcardlist_.Get(index);
}
inline ::GM_ReconnectFunHandCard* GM_ReconnectPlayerData::mutable_m_funhandcardlist(int index) {
  return m_funhandcardlist_.Mutable(index);
}
inline ::GM_ReconnectFunHandCard* GM_ReconnectPlayerData::add_m_funhandcardlist() {
  return m_funhandcardlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_ReconnectFunHandCard >&
GM_ReconnectPlayerData::m_funhandcardlist() const {
  return m_funhandcardlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_ReconnectFunHandCard >*
GM_ReconnectPlayerData::mutable_m_funhandcardlist() {
  return &m_funhandcardlist_;
}

// -------------------------------------------------------------------

// GM_ReconnectCloseRoomData

// required int32 m_roleid = 1;
inline bool GM_ReconnectCloseRoomData::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ReconnectCloseRoomData::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ReconnectCloseRoomData::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ReconnectCloseRoomData::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_ReconnectCloseRoomData::m_roleid() const {
  return m_roleid_;
}
inline void GM_ReconnectCloseRoomData::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional int32 m_state = 2;
inline bool GM_ReconnectCloseRoomData::has_m_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_ReconnectCloseRoomData::set_has_m_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_ReconnectCloseRoomData::clear_has_m_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_ReconnectCloseRoomData::clear_m_state() {
  m_state_ = 0;
  clear_has_m_state();
}
inline ::google::protobuf::int32 GM_ReconnectCloseRoomData::m_state() const {
  return m_state_;
}
inline void GM_ReconnectCloseRoomData::set_m_state(::google::protobuf::int32 value) {
  set_has_m_state();
  m_state_ = value;
}

// -------------------------------------------------------------------

// GM_ReconnectFunHandCard

// required int32 m_OperatorType = 1;
inline bool GM_ReconnectFunHandCard::has_m_operatortype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ReconnectFunHandCard::set_has_m_operatortype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ReconnectFunHandCard::clear_has_m_operatortype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ReconnectFunHandCard::clear_m_operatortype() {
  m_operatortype_ = 0;
  clear_has_m_operatortype();
}
inline ::google::protobuf::int32 GM_ReconnectFunHandCard::m_operatortype() const {
  return m_operatortype_;
}
inline void GM_ReconnectFunHandCard::set_m_operatortype(::google::protobuf::int32 value) {
  set_has_m_operatortype();
  m_operatortype_ = value;
}

// repeated .GM_PlayerFunHandCard m_FunHandCard = 2;
inline int GM_ReconnectFunHandCard::m_funhandcard_size() const {
  return m_funhandcard_.size();
}
inline void GM_ReconnectFunHandCard::clear_m_funhandcard() {
  m_funhandcard_.Clear();
}
inline const ::GM_PlayerFunHandCard& GM_ReconnectFunHandCard::m_funhandcard(int index) const {
  return m_funhandcard_.Get(index);
}
inline ::GM_PlayerFunHandCard* GM_ReconnectFunHandCard::mutable_m_funhandcard(int index) {
  return m_funhandcard_.Mutable(index);
}
inline ::GM_PlayerFunHandCard* GM_ReconnectFunHandCard::add_m_funhandcard() {
  return m_funhandcard_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_PlayerFunHandCard >&
GM_ReconnectFunHandCard::m_funhandcard() const {
  return m_funhandcard_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_PlayerFunHandCard >*
GM_ReconnectFunHandCard::mutable_m_funhandcard() {
  return &m_funhandcard_;
}

// -------------------------------------------------------------------

// GM_PlayerFunHandCard

// required int32 m_Index = 1;
inline bool GM_PlayerFunHandCard::has_m_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_PlayerFunHandCard::set_has_m_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_PlayerFunHandCard::clear_has_m_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_PlayerFunHandCard::clear_m_index() {
  m_index_ = 0;
  clear_has_m_index();
}
inline ::google::protobuf::int32 GM_PlayerFunHandCard::m_index() const {
  return m_index_;
}
inline void GM_PlayerFunHandCard::set_m_index(::google::protobuf::int32 value) {
  set_has_m_index();
  m_index_ = value;
}

// optional int32 m_Type = 2;
inline bool GM_PlayerFunHandCard::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_PlayerFunHandCard::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_PlayerFunHandCard::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_PlayerFunHandCard::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 GM_PlayerFunHandCard::m_type() const {
  return m_type_;
}
inline void GM_PlayerFunHandCard::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_RoleId = 3;
inline bool GM_PlayerFunHandCard::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_PlayerFunHandCard::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_PlayerFunHandCard::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_PlayerFunHandCard::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_PlayerFunHandCard::m_roleid() const {
  return m_roleid_;
}
inline void GM_PlayerFunHandCard::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// -------------------------------------------------------------------

// GM_MJCardRoomResult

// required int32 m_count = 1;
inline bool GM_MJCardRoomResult::has_m_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_MJCardRoomResult::set_has_m_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_MJCardRoomResult::clear_has_m_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_MJCardRoomResult::clear_m_count() {
  m_count_ = 0;
  clear_has_m_count();
}
inline ::google::protobuf::int32 GM_MJCardRoomResult::m_count() const {
  return m_count_;
}
inline void GM_MJCardRoomResult::set_m_count(::google::protobuf::int32 value) {
  set_has_m_count();
  m_count_ = value;
}

// repeated .GM_MJCardRoomOneData m_OneData = 2;
inline int GM_MJCardRoomResult::m_onedata_size() const {
  return m_onedata_.size();
}
inline void GM_MJCardRoomResult::clear_m_onedata() {
  m_onedata_.Clear();
}
inline const ::GM_MJCardRoomOneData& GM_MJCardRoomResult::m_onedata(int index) const {
  return m_onedata_.Get(index);
}
inline ::GM_MJCardRoomOneData* GM_MJCardRoomResult::mutable_m_onedata(int index) {
  return m_onedata_.Mutable(index);
}
inline ::GM_MJCardRoomOneData* GM_MJCardRoomResult::add_m_onedata() {
  return m_onedata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_MJCardRoomOneData >&
GM_MJCardRoomResult::m_onedata() const {
  return m_onedata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_MJCardRoomOneData >*
GM_MJCardRoomResult::mutable_m_onedata() {
  return &m_onedata_;
}

// -------------------------------------------------------------------

// GM_MJCardRoomOneData

// required int32 m_count = 1;
inline bool GM_MJCardRoomOneData::has_m_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_MJCardRoomOneData::set_has_m_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_MJCardRoomOneData::clear_has_m_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_MJCardRoomOneData::clear_m_count() {
  m_count_ = 0;
  clear_has_m_count();
}
inline ::google::protobuf::int32 GM_MJCardRoomOneData::m_count() const {
  return m_count_;
}
inline void GM_MJCardRoomOneData::set_m_count(::google::protobuf::int32 value) {
  set_has_m_count();
  m_count_ = value;
}

// repeated .GM_PlayerResultInfo m_ResultInfo = 2;
inline int GM_MJCardRoomOneData::m_resultinfo_size() const {
  return m_resultinfo_.size();
}
inline void GM_MJCardRoomOneData::clear_m_resultinfo() {
  m_resultinfo_.Clear();
}
inline const ::GM_PlayerResultInfo& GM_MJCardRoomOneData::m_resultinfo(int index) const {
  return m_resultinfo_.Get(index);
}
inline ::GM_PlayerResultInfo* GM_MJCardRoomOneData::mutable_m_resultinfo(int index) {
  return m_resultinfo_.Mutable(index);
}
inline ::GM_PlayerResultInfo* GM_MJCardRoomOneData::add_m_resultinfo() {
  return m_resultinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_PlayerResultInfo >&
GM_MJCardRoomOneData::m_resultinfo() const {
  return m_resultinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_PlayerResultInfo >*
GM_MJCardRoomOneData::mutable_m_resultinfo() {
  return &m_resultinfo_;
}

// -------------------------------------------------------------------

// GM_PlayerResultInfo

// required int32 m_roleid = 1;
inline bool GM_PlayerResultInfo::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_PlayerResultInfo::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_PlayerResultInfo::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_PlayerResultInfo::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_PlayerResultInfo::m_roleid() const {
  return m_roleid_;
}
inline void GM_PlayerResultInfo::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional int32 m_score = 2;
inline bool GM_PlayerResultInfo::has_m_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_PlayerResultInfo::set_has_m_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_PlayerResultInfo::clear_has_m_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_PlayerResultInfo::clear_m_score() {
  m_score_ = 0;
  clear_has_m_score();
}
inline ::google::protobuf::int32 GM_PlayerResultInfo::m_score() const {
  return m_score_;
}
inline void GM_PlayerResultInfo::set_m_score(::google::protobuf::int32 value) {
  set_has_m_score();
  m_score_ = value;
}

// optional int32 m_sex = 3;
inline bool GM_PlayerResultInfo::has_m_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_PlayerResultInfo::set_has_m_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_PlayerResultInfo::clear_has_m_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_PlayerResultInfo::clear_m_sex() {
  m_sex_ = 0;
  clear_has_m_sex();
}
inline ::google::protobuf::int32 GM_PlayerResultInfo::m_sex() const {
  return m_sex_;
}
inline void GM_PlayerResultInfo::set_m_sex(::google::protobuf::int32 value) {
  set_has_m_sex();
  m_sex_ = value;
}

// optional int32 m_congguan = 4;
inline bool GM_PlayerResultInfo::has_m_congguan() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_PlayerResultInfo::set_has_m_congguan() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_PlayerResultInfo::clear_has_m_congguan() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_PlayerResultInfo::clear_m_congguan() {
  m_congguan_ = 0;
  clear_has_m_congguan();
}
inline ::google::protobuf::int32 GM_PlayerResultInfo::m_congguan() const {
  return m_congguan_;
}
inline void GM_PlayerResultInfo::set_m_congguan(::google::protobuf::int32 value) {
  set_has_m_congguan();
  m_congguan_ = value;
}

// optional int32 m_bawang = 5;
inline bool GM_PlayerResultInfo::has_m_bawang() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_PlayerResultInfo::set_has_m_bawang() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_PlayerResultInfo::clear_has_m_bawang() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_PlayerResultInfo::clear_m_bawang() {
  m_bawang_ = 0;
  clear_has_m_bawang();
}
inline ::google::protobuf::int32 GM_PlayerResultInfo::m_bawang() const {
  return m_bawang_;
}
inline void GM_PlayerResultInfo::set_m_bawang(::google::protobuf::int32 value) {
  set_has_m_bawang();
  m_bawang_ = value;
}

// optional int32 m_vipLevel = 6;
inline bool GM_PlayerResultInfo::has_m_viplevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_PlayerResultInfo::set_has_m_viplevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_PlayerResultInfo::clear_has_m_viplevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_PlayerResultInfo::clear_m_viplevel() {
  m_viplevel_ = 0;
  clear_has_m_viplevel();
}
inline ::google::protobuf::int32 GM_PlayerResultInfo::m_viplevel() const {
  return m_viplevel_;
}
inline void GM_PlayerResultInfo::set_m_viplevel(::google::protobuf::int32 value) {
  set_has_m_viplevel();
  m_viplevel_ = value;
}

// optional string m_name = 7;
inline bool GM_PlayerResultInfo::has_m_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_PlayerResultInfo::set_has_m_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_PlayerResultInfo::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_PlayerResultInfo::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& GM_PlayerResultInfo::m_name() const {
  return *m_name_;
}
inline void GM_PlayerResultInfo::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GM_PlayerResultInfo::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GM_PlayerResultInfo::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_PlayerResultInfo::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* GM_PlayerResultInfo::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_PlayerResultInfo::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_headUrl = 8;
inline bool GM_PlayerResultInfo::has_m_headurl() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_PlayerResultInfo::set_has_m_headurl() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_PlayerResultInfo::clear_has_m_headurl() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_PlayerResultInfo::clear_m_headurl() {
  if (m_headurl_ != &::google::protobuf::internal::kEmptyString) {
    m_headurl_->clear();
  }
  clear_has_m_headurl();
}
inline const ::std::string& GM_PlayerResultInfo::m_headurl() const {
  return *m_headurl_;
}
inline void GM_PlayerResultInfo::set_m_headurl(const ::std::string& value) {
  set_has_m_headurl();
  if (m_headurl_ == &::google::protobuf::internal::kEmptyString) {
    m_headurl_ = new ::std::string;
  }
  m_headurl_->assign(value);
}
inline void GM_PlayerResultInfo::set_m_headurl(const char* value) {
  set_has_m_headurl();
  if (m_headurl_ == &::google::protobuf::internal::kEmptyString) {
    m_headurl_ = new ::std::string;
  }
  m_headurl_->assign(value);
}
inline void GM_PlayerResultInfo::set_m_headurl(const char* value, size_t size) {
  set_has_m_headurl();
  if (m_headurl_ == &::google::protobuf::internal::kEmptyString) {
    m_headurl_ = new ::std::string;
  }
  m_headurl_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_PlayerResultInfo::mutable_m_headurl() {
  set_has_m_headurl();
  if (m_headurl_ == &::google::protobuf::internal::kEmptyString) {
    m_headurl_ = new ::std::string;
  }
  return m_headurl_;
}
inline ::std::string* GM_PlayerResultInfo::release_m_headurl() {
  clear_has_m_headurl();
  if (m_headurl_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_headurl_;
    m_headurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_PlayerResultInfo::set_allocated_m_headurl(::std::string* m_headurl) {
  if (m_headurl_ != &::google::protobuf::internal::kEmptyString) {
    delete m_headurl_;
  }
  if (m_headurl) {
    set_has_m_headurl();
    m_headurl_ = m_headurl;
  } else {
    clear_has_m_headurl();
    m_headurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_id = 9;
inline bool GM_PlayerResultInfo::has_m_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_PlayerResultInfo::set_has_m_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_PlayerResultInfo::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_PlayerResultInfo::clear_m_id() {
  if (m_id_ != &::google::protobuf::internal::kEmptyString) {
    m_id_->clear();
  }
  clear_has_m_id();
}
inline const ::std::string& GM_PlayerResultInfo::m_id() const {
  return *m_id_;
}
inline void GM_PlayerResultInfo::set_m_id(const ::std::string& value) {
  set_has_m_id();
  if (m_id_ == &::google::protobuf::internal::kEmptyString) {
    m_id_ = new ::std::string;
  }
  m_id_->assign(value);
}
inline void GM_PlayerResultInfo::set_m_id(const char* value) {
  set_has_m_id();
  if (m_id_ == &::google::protobuf::internal::kEmptyString) {
    m_id_ = new ::std::string;
  }
  m_id_->assign(value);
}
inline void GM_PlayerResultInfo::set_m_id(const char* value, size_t size) {
  set_has_m_id();
  if (m_id_ == &::google::protobuf::internal::kEmptyString) {
    m_id_ = new ::std::string;
  }
  m_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_PlayerResultInfo::mutable_m_id() {
  set_has_m_id();
  if (m_id_ == &::google::protobuf::internal::kEmptyString) {
    m_id_ = new ::std::string;
  }
  return m_id_;
}
inline ::std::string* GM_PlayerResultInfo::release_m_id() {
  clear_has_m_id();
  if (m_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_id_;
    m_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_PlayerResultInfo::set_allocated_m_id(::std::string* m_id) {
  if (m_id_ != &::google::protobuf::internal::kEmptyString) {
    delete m_id_;
  }
  if (m_id) {
    set_has_m_id();
    m_id_ = m_id;
  } else {
    clear_has_m_id();
    m_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GM_PlayerRollRequest

// required int32 m_roleid = 1;
inline bool GM_PlayerRollRequest::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_PlayerRollRequest::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_PlayerRollRequest::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_PlayerRollRequest::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_PlayerRollRequest::m_roleid() const {
  return m_roleid_;
}
inline void GM_PlayerRollRequest::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional int32 m_pos = 2;
inline bool GM_PlayerRollRequest::has_m_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_PlayerRollRequest::set_has_m_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_PlayerRollRequest::clear_has_m_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_PlayerRollRequest::clear_m_pos() {
  m_pos_ = 0;
  clear_has_m_pos();
}
inline ::google::protobuf::int32 GM_PlayerRollRequest::m_pos() const {
  return m_pos_;
}
inline void GM_PlayerRollRequest::set_m_pos(::google::protobuf::int32 value) {
  set_has_m_pos();
  m_pos_ = value;
}

// -------------------------------------------------------------------

// GM_PlayerRecivePack

// required int32 m_roleid = 1;
inline bool GM_PlayerRecivePack::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_PlayerRecivePack::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_PlayerRecivePack::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_PlayerRecivePack::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_PlayerRecivePack::m_roleid() const {
  return m_roleid_;
}
inline void GM_PlayerRecivePack::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional int32 m_packFlag = 2;
inline bool GM_PlayerRecivePack::has_m_packflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_PlayerRecivePack::set_has_m_packflag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_PlayerRecivePack::clear_has_m_packflag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_PlayerRecivePack::clear_m_packflag() {
  m_packflag_ = 0;
  clear_has_m_packflag();
}
inline ::google::protobuf::int32 GM_PlayerRecivePack::m_packflag() const {
  return m_packflag_;
}
inline void GM_PlayerRecivePack::set_m_packflag(::google::protobuf::int32 value) {
  set_has_m_packflag();
  m_packflag_ = value;
}

// -------------------------------------------------------------------

// GM_MJOperatorError

// required int32 m_Result = 1;
inline bool GM_MJOperatorError::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_MJOperatorError::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_MJOperatorError::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_MJOperatorError::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GM_MJOperatorError::m_result() const {
  return m_result_;
}
inline void GM_MJOperatorError::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_majiang_2etxt__INCLUDED
