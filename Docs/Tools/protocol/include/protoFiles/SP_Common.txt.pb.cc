// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_Common.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SP_Common.txt.pb.h"
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GM_MessageStatiData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_MessageStatiData_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_MessageStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_MessageStatistics_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_SP_5fCommon_2etxt() {
  protobuf_AddDesc_SP_5fCommon_2etxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SP_Common.txt");
  GOOGLE_CHECK(file != NULL);
  GM_MessageStatiData_descriptor_ = file->message_type(0);
  static const int GM_MessageStatiData_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_MessageStatiData, message_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_MessageStatiData, receive_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_MessageStatiData, total_use_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_MessageStatiData, max_use_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_MessageStatiData, record_time_),
  };
  GM_MessageStatiData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_MessageStatiData_descriptor_,
      GM_MessageStatiData::default_instance_,
      GM_MessageStatiData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_MessageStatiData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_MessageStatiData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_MessageStatiData));
  GM_MessageStatistics_descriptor_ = file->message_type(1);
  static const int GM_MessageStatistics_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_MessageStatistics, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_MessageStatistics, datalist_),
  };
  GM_MessageStatistics_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_MessageStatistics_descriptor_,
      GM_MessageStatistics::default_instance_,
      GM_MessageStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_MessageStatistics, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_MessageStatistics, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_MessageStatistics));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SP_5fCommon_2etxt);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_MessageStatiData_descriptor_, &GM_MessageStatiData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_MessageStatistics_descriptor_, &GM_MessageStatistics::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SP_5fCommon_2etxt() {
  delete GM_MessageStatiData::default_instance_;
  delete GM_MessageStatiData_reflection_;
  delete GM_MessageStatistics::default_instance_;
  delete GM_MessageStatistics_reflection_;
}

void protobuf_AddDesc_SP_5fCommon_2etxt() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rSP_Common.txt\"\203\001\n\023GM_MessageStatiData\022"
    "\022\n\nmessage_id\030\001 \002(\005\022\025\n\rreceive_count\030\002 \002"
    "(\005\022\026\n\016total_use_time\030\003 \002(\002\022\024\n\014max_use_ti"
    "me\030\004 \002(\002\022\023\n\013record_time\030\005 \002(\005\"M\n\024GM_Mess"
    "ageStatistics\022\r\n\005count\030\001 \002(\005\022&\n\010datalist"
    "\030\002 \003(\0132\024.GM_MessageStatiData", 228);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SP_Common.txt", &protobuf_RegisterTypes);
  GM_MessageStatiData::default_instance_ = new GM_MessageStatiData();
  GM_MessageStatistics::default_instance_ = new GM_MessageStatistics();
  GM_MessageStatiData::default_instance_->InitAsDefaultInstance();
  GM_MessageStatistics::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SP_5fCommon_2etxt);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SP_5fCommon_2etxt {
  StaticDescriptorInitializer_SP_5fCommon_2etxt() {
    protobuf_AddDesc_SP_5fCommon_2etxt();
  }
} static_descriptor_initializer_SP_5fCommon_2etxt_;

// ===================================================================

#ifndef _MSC_VER
const int GM_MessageStatiData::kMessageIdFieldNumber;
const int GM_MessageStatiData::kReceiveCountFieldNumber;
const int GM_MessageStatiData::kTotalUseTimeFieldNumber;
const int GM_MessageStatiData::kMaxUseTimeFieldNumber;
const int GM_MessageStatiData::kRecordTimeFieldNumber;
#endif  // !_MSC_VER

GM_MessageStatiData::GM_MessageStatiData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_MessageStatiData::InitAsDefaultInstance() {
}

GM_MessageStatiData::GM_MessageStatiData(const GM_MessageStatiData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_MessageStatiData::SharedCtor() {
  _cached_size_ = 0;
  message_id_ = 0;
  receive_count_ = 0;
  total_use_time_ = 0;
  max_use_time_ = 0;
  record_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_MessageStatiData::~GM_MessageStatiData() {
  SharedDtor();
}

void GM_MessageStatiData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_MessageStatiData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_MessageStatiData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_MessageStatiData_descriptor_;
}

const GM_MessageStatiData& GM_MessageStatiData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fCommon_2etxt();
  return *default_instance_;
}

GM_MessageStatiData* GM_MessageStatiData::default_instance_ = NULL;

GM_MessageStatiData* GM_MessageStatiData::New() const {
  return new GM_MessageStatiData;
}

void GM_MessageStatiData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    message_id_ = 0;
    receive_count_ = 0;
    total_use_time_ = 0;
    max_use_time_ = 0;
    record_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_MessageStatiData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 message_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &message_id_)));
          set_has_message_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_receive_count;
        break;
      }

      // required int32 receive_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_receive_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &receive_count_)));
          set_has_receive_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_total_use_time;
        break;
      }

      // required float total_use_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_total_use_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &total_use_time_)));
          set_has_total_use_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(37)) goto parse_max_use_time;
        break;
      }

      // required float max_use_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_max_use_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_use_time_)));
          set_has_max_use_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_record_time;
        break;
      }

      // required int32 record_time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_record_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &record_time_)));
          set_has_record_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_MessageStatiData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 message_id = 1;
  if (has_message_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->message_id(), output);
  }

  // required int32 receive_count = 2;
  if (has_receive_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->receive_count(), output);
  }

  // required float total_use_time = 3;
  if (has_total_use_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->total_use_time(), output);
  }

  // required float max_use_time = 4;
  if (has_max_use_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->max_use_time(), output);
  }

  // required int32 record_time = 5;
  if (has_record_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->record_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_MessageStatiData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 message_id = 1;
  if (has_message_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->message_id(), target);
  }

  // required int32 receive_count = 2;
  if (has_receive_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->receive_count(), target);
  }

  // required float total_use_time = 3;
  if (has_total_use_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->total_use_time(), target);
  }

  // required float max_use_time = 4;
  if (has_max_use_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->max_use_time(), target);
  }

  // required int32 record_time = 5;
  if (has_record_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->record_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_MessageStatiData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 message_id = 1;
    if (has_message_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->message_id());
    }

    // required int32 receive_count = 2;
    if (has_receive_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->receive_count());
    }

    // required float total_use_time = 3;
    if (has_total_use_time()) {
      total_size += 1 + 4;
    }

    // required float max_use_time = 4;
    if (has_max_use_time()) {
      total_size += 1 + 4;
    }

    // required int32 record_time = 5;
    if (has_record_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->record_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_MessageStatiData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_MessageStatiData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_MessageStatiData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_MessageStatiData::MergeFrom(const GM_MessageStatiData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_message_id()) {
      set_message_id(from.message_id());
    }
    if (from.has_receive_count()) {
      set_receive_count(from.receive_count());
    }
    if (from.has_total_use_time()) {
      set_total_use_time(from.total_use_time());
    }
    if (from.has_max_use_time()) {
      set_max_use_time(from.max_use_time());
    }
    if (from.has_record_time()) {
      set_record_time(from.record_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_MessageStatiData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_MessageStatiData::CopyFrom(const GM_MessageStatiData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_MessageStatiData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void GM_MessageStatiData::Swap(GM_MessageStatiData* other) {
  if (other != this) {
    std::swap(message_id_, other->message_id_);
    std::swap(receive_count_, other->receive_count_);
    std::swap(total_use_time_, other->total_use_time_);
    std::swap(max_use_time_, other->max_use_time_);
    std::swap(record_time_, other->record_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_MessageStatiData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_MessageStatiData_descriptor_;
  metadata.reflection = GM_MessageStatiData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_MessageStatistics::kCountFieldNumber;
const int GM_MessageStatistics::kDatalistFieldNumber;
#endif  // !_MSC_VER

GM_MessageStatistics::GM_MessageStatistics()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_MessageStatistics::InitAsDefaultInstance() {
}

GM_MessageStatistics::GM_MessageStatistics(const GM_MessageStatistics& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_MessageStatistics::SharedCtor() {
  _cached_size_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_MessageStatistics::~GM_MessageStatistics() {
  SharedDtor();
}

void GM_MessageStatistics::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_MessageStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_MessageStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_MessageStatistics_descriptor_;
}

const GM_MessageStatistics& GM_MessageStatistics::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fCommon_2etxt();
  return *default_instance_;
}

GM_MessageStatistics* GM_MessageStatistics::default_instance_ = NULL;

GM_MessageStatistics* GM_MessageStatistics::New() const {
  return new GM_MessageStatistics;
}

void GM_MessageStatistics::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    count_ = 0;
  }
  datalist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_MessageStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 count = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_datalist;
        break;
      }

      // repeated .GM_MessageStatiData datalist = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_datalist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datalist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_datalist;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_MessageStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 count = 1;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // repeated .GM_MessageStatiData datalist = 2;
  for (int i = 0; i < this->datalist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->datalist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_MessageStatistics::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 count = 1;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // repeated .GM_MessageStatiData datalist = 2;
  for (int i = 0; i < this->datalist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->datalist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_MessageStatistics::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 count = 1;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  // repeated .GM_MessageStatiData datalist = 2;
  total_size += 1 * this->datalist_size();
  for (int i = 0; i < this->datalist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datalist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_MessageStatistics::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_MessageStatistics* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_MessageStatistics*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_MessageStatistics::MergeFrom(const GM_MessageStatistics& from) {
  GOOGLE_CHECK_NE(&from, this);
  datalist_.MergeFrom(from.datalist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_MessageStatistics::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_MessageStatistics::CopyFrom(const GM_MessageStatistics& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_MessageStatistics::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < datalist_size(); i++) {
    if (!this->datalist(i).IsInitialized()) return false;
  }
  return true;
}

void GM_MessageStatistics::Swap(GM_MessageStatistics* other) {
  if (other != this) {
    std::swap(count_, other->count_);
    datalist_.Swap(&other->datalist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_MessageStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_MessageStatistics_descriptor_;
  metadata.reflection = GM_MessageStatistics_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
