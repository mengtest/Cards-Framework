// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: systemset.txt

#ifndef PROTOBUF_systemset_2etxt__INCLUDED
#define PROTOBUF_systemset_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_systemset_2etxt();
void protobuf_AssignDesc_systemset_2etxt();
void protobuf_ShutdownFile_systemset_2etxt();

class GM_SystemSet_CDKey_Request;
class GM_SystemSet_subData;
class GM_SystemSet_Data_Return;

// ===================================================================

class GM_SystemSet_CDKey_Request : public ::google::protobuf::Message {
 public:
  GM_SystemSet_CDKey_Request();
  virtual ~GM_SystemSet_CDKey_Request();

  GM_SystemSet_CDKey_Request(const GM_SystemSet_CDKey_Request& from);

  inline GM_SystemSet_CDKey_Request& operator=(const GM_SystemSet_CDKey_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_SystemSet_CDKey_Request& default_instance();

  void Swap(GM_SystemSet_CDKey_Request* other);

  // implements Message ----------------------------------------------

  GM_SystemSet_CDKey_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_SystemSet_CDKey_Request& from);
  void MergeFrom(const GM_SystemSet_CDKey_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string m_cdkey = 1;
  inline bool has_m_cdkey() const;
  inline void clear_m_cdkey();
  static const int kMCdkeyFieldNumber = 1;
  inline const ::std::string& m_cdkey() const;
  inline void set_m_cdkey(const ::std::string& value);
  inline void set_m_cdkey(const char* value);
  inline void set_m_cdkey(const char* value, size_t size);
  inline ::std::string* mutable_m_cdkey();
  inline ::std::string* release_m_cdkey();
  inline void set_allocated_m_cdkey(::std::string* m_cdkey);

  // @@protoc_insertion_point(class_scope:GM_SystemSet_CDKey_Request)
 private:
  inline void set_has_m_cdkey();
  inline void clear_has_m_cdkey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_cdkey_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_systemset_2etxt();
  friend void protobuf_AssignDesc_systemset_2etxt();
  friend void protobuf_ShutdownFile_systemset_2etxt();

  void InitAsDefaultInstance();
  static GM_SystemSet_CDKey_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_SystemSet_subData : public ::google::protobuf::Message {
 public:
  GM_SystemSet_subData();
  virtual ~GM_SystemSet_subData();

  GM_SystemSet_subData(const GM_SystemSet_subData& from);

  inline GM_SystemSet_subData& operator=(const GM_SystemSet_subData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_SystemSet_subData& default_instance();

  void Swap(GM_SystemSet_subData* other);

  // implements Message ----------------------------------------------

  GM_SystemSet_subData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_SystemSet_subData& from);
  void MergeFrom(const GM_SystemSet_subData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_type = 1;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 1;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // required int32 m_value = 2;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 2;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_SystemSet_subData)
 private:
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_value();
  inline void clear_has_m_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_systemset_2etxt();
  friend void protobuf_AssignDesc_systemset_2etxt();
  friend void protobuf_ShutdownFile_systemset_2etxt();

  void InitAsDefaultInstance();
  static GM_SystemSet_subData* default_instance_;
};
// -------------------------------------------------------------------

class GM_SystemSet_Data_Return : public ::google::protobuf::Message {
 public:
  GM_SystemSet_Data_Return();
  virtual ~GM_SystemSet_Data_Return();

  GM_SystemSet_Data_Return(const GM_SystemSet_Data_Return& from);

  inline GM_SystemSet_Data_Return& operator=(const GM_SystemSet_Data_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_SystemSet_Data_Return& default_instance();

  void Swap(GM_SystemSet_Data_Return* other);

  // implements Message ----------------------------------------------

  GM_SystemSet_Data_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_SystemSet_Data_Return& from);
  void MergeFrom(const GM_SystemSet_Data_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_request = 1;
  inline bool has_m_request() const;
  inline void clear_m_request();
  static const int kMRequestFieldNumber = 1;
  inline ::google::protobuf::int32 m_request() const;
  inline void set_m_request(::google::protobuf::int32 value);

  // repeated .GM_SystemSet_subData m_subdata = 2;
  inline int m_subdata_size() const;
  inline void clear_m_subdata();
  static const int kMSubdataFieldNumber = 2;
  inline const ::GM_SystemSet_subData& m_subdata(int index) const;
  inline ::GM_SystemSet_subData* mutable_m_subdata(int index);
  inline ::GM_SystemSet_subData* add_m_subdata();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_SystemSet_subData >&
      m_subdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_SystemSet_subData >*
      mutable_m_subdata();

  // @@protoc_insertion_point(class_scope:GM_SystemSet_Data_Return)
 private:
  inline void set_has_m_request();
  inline void clear_has_m_request();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_SystemSet_subData > m_subdata_;
  ::google::protobuf::int32 m_request_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_systemset_2etxt();
  friend void protobuf_AssignDesc_systemset_2etxt();
  friend void protobuf_ShutdownFile_systemset_2etxt();

  void InitAsDefaultInstance();
  static GM_SystemSet_Data_Return* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_SystemSet_CDKey_Request

// required string m_cdkey = 1;
inline bool GM_SystemSet_CDKey_Request::has_m_cdkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_SystemSet_CDKey_Request::set_has_m_cdkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_SystemSet_CDKey_Request::clear_has_m_cdkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_SystemSet_CDKey_Request::clear_m_cdkey() {
  if (m_cdkey_ != &::google::protobuf::internal::kEmptyString) {
    m_cdkey_->clear();
  }
  clear_has_m_cdkey();
}
inline const ::std::string& GM_SystemSet_CDKey_Request::m_cdkey() const {
  return *m_cdkey_;
}
inline void GM_SystemSet_CDKey_Request::set_m_cdkey(const ::std::string& value) {
  set_has_m_cdkey();
  if (m_cdkey_ == &::google::protobuf::internal::kEmptyString) {
    m_cdkey_ = new ::std::string;
  }
  m_cdkey_->assign(value);
}
inline void GM_SystemSet_CDKey_Request::set_m_cdkey(const char* value) {
  set_has_m_cdkey();
  if (m_cdkey_ == &::google::protobuf::internal::kEmptyString) {
    m_cdkey_ = new ::std::string;
  }
  m_cdkey_->assign(value);
}
inline void GM_SystemSet_CDKey_Request::set_m_cdkey(const char* value, size_t size) {
  set_has_m_cdkey();
  if (m_cdkey_ == &::google::protobuf::internal::kEmptyString) {
    m_cdkey_ = new ::std::string;
  }
  m_cdkey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_SystemSet_CDKey_Request::mutable_m_cdkey() {
  set_has_m_cdkey();
  if (m_cdkey_ == &::google::protobuf::internal::kEmptyString) {
    m_cdkey_ = new ::std::string;
  }
  return m_cdkey_;
}
inline ::std::string* GM_SystemSet_CDKey_Request::release_m_cdkey() {
  clear_has_m_cdkey();
  if (m_cdkey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_cdkey_;
    m_cdkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_SystemSet_CDKey_Request::set_allocated_m_cdkey(::std::string* m_cdkey) {
  if (m_cdkey_ != &::google::protobuf::internal::kEmptyString) {
    delete m_cdkey_;
  }
  if (m_cdkey) {
    set_has_m_cdkey();
    m_cdkey_ = m_cdkey;
  } else {
    clear_has_m_cdkey();
    m_cdkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GM_SystemSet_subData

// required int32 m_type = 1;
inline bool GM_SystemSet_subData::has_m_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_SystemSet_subData::set_has_m_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_SystemSet_subData::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_SystemSet_subData::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 GM_SystemSet_subData::m_type() const {
  return m_type_;
}
inline void GM_SystemSet_subData::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// required int32 m_value = 2;
inline bool GM_SystemSet_subData::has_m_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_SystemSet_subData::set_has_m_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_SystemSet_subData::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_SystemSet_subData::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 GM_SystemSet_subData::m_value() const {
  return m_value_;
}
inline void GM_SystemSet_subData::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// -------------------------------------------------------------------

// GM_SystemSet_Data_Return

// required int32 m_request = 1;
inline bool GM_SystemSet_Data_Return::has_m_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_SystemSet_Data_Return::set_has_m_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_SystemSet_Data_Return::clear_has_m_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_SystemSet_Data_Return::clear_m_request() {
  m_request_ = 0;
  clear_has_m_request();
}
inline ::google::protobuf::int32 GM_SystemSet_Data_Return::m_request() const {
  return m_request_;
}
inline void GM_SystemSet_Data_Return::set_m_request(::google::protobuf::int32 value) {
  set_has_m_request();
  m_request_ = value;
}

// repeated .GM_SystemSet_subData m_subdata = 2;
inline int GM_SystemSet_Data_Return::m_subdata_size() const {
  return m_subdata_.size();
}
inline void GM_SystemSet_Data_Return::clear_m_subdata() {
  m_subdata_.Clear();
}
inline const ::GM_SystemSet_subData& GM_SystemSet_Data_Return::m_subdata(int index) const {
  return m_subdata_.Get(index);
}
inline ::GM_SystemSet_subData* GM_SystemSet_Data_Return::mutable_m_subdata(int index) {
  return m_subdata_.Mutable(index);
}
inline ::GM_SystemSet_subData* GM_SystemSet_Data_Return::add_m_subdata() {
  return m_subdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_SystemSet_subData >&
GM_SystemSet_Data_Return::m_subdata() const {
  return m_subdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_SystemSet_subData >*
GM_SystemSet_Data_Return::mutable_m_subdata() {
  return &m_subdata_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_systemset_2etxt__INCLUDED
