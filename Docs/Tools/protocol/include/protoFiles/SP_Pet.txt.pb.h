// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_Pet.txt

#ifndef PROTOBUF_SP_5fPet_2etxt__INCLUDED
#define PROTOBUF_SP_5fPet_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SP_5fPet_2etxt();
void protobuf_AssignDesc_SP_5fPet_2etxt();
void protobuf_ShutdownFile_SP_5fPet_2etxt();

class SM_Pet_Data_Request;
class SM_Pet_Data;
class SM_Pet_Info;
class SM_Pet_Fragment_Data;
class SM_Pet_Fragment_Info;
class SM_PetEquip_extend_Data;
class SM_PetEquip_extend_Info;
class SM_PetEquip_Info_Data;
class SM_PetEquip_Info;

// ===================================================================

class SM_Pet_Data_Request : public ::google::protobuf::Message {
 public:
  SM_Pet_Data_Request();
  virtual ~SM_Pet_Data_Request();

  SM_Pet_Data_Request(const SM_Pet_Data_Request& from);

  inline SM_Pet_Data_Request& operator=(const SM_Pet_Data_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Pet_Data_Request& default_instance();

  void Swap(SM_Pet_Data_Request* other);

  // implements Message ----------------------------------------------

  SM_Pet_Data_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Pet_Data_Request& from);
  void MergeFrom(const SM_Pet_Data_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_nRoleid = 1;
  inline bool has_m_nroleid() const;
  inline void clear_m_nroleid();
  static const int kMNRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_nroleid() const;
  inline void set_m_nroleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_Pet_Data_Request)
 private:
  inline void set_has_m_nroleid();
  inline void clear_has_m_nroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_nroleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fPet_2etxt();
  friend void protobuf_AssignDesc_SP_5fPet_2etxt();
  friend void protobuf_ShutdownFile_SP_5fPet_2etxt();

  void InitAsDefaultInstance();
  static SM_Pet_Data_Request* default_instance_;
};
// -------------------------------------------------------------------

class SM_Pet_Data : public ::google::protobuf::Message {
 public:
  SM_Pet_Data();
  virtual ~SM_Pet_Data();

  SM_Pet_Data(const SM_Pet_Data& from);

  inline SM_Pet_Data& operator=(const SM_Pet_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Pet_Data& default_instance();

  void Swap(SM_Pet_Data* other);

  // implements Message ----------------------------------------------

  SM_Pet_Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Pet_Data& from);
  void MergeFrom(const SM_Pet_Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_nCount = 1;
  inline bool has_m_ncount() const;
  inline void clear_m_ncount();
  static const int kMNCountFieldNumber = 1;
  inline ::google::protobuf::int32 m_ncount() const;
  inline void set_m_ncount(::google::protobuf::int32 value);

  // repeated .SM_Pet_Info m_vecData = 2;
  inline int m_vecdata_size() const;
  inline void clear_m_vecdata();
  static const int kMVecDataFieldNumber = 2;
  inline const ::SM_Pet_Info& m_vecdata(int index) const;
  inline ::SM_Pet_Info* mutable_m_vecdata(int index);
  inline ::SM_Pet_Info* add_m_vecdata();
  inline const ::google::protobuf::RepeatedPtrField< ::SM_Pet_Info >&
      m_vecdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::SM_Pet_Info >*
      mutable_m_vecdata();

  // @@protoc_insertion_point(class_scope:SM_Pet_Data)
 private:
  inline void set_has_m_ncount();
  inline void clear_has_m_ncount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SM_Pet_Info > m_vecdata_;
  ::google::protobuf::int32 m_ncount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fPet_2etxt();
  friend void protobuf_AssignDesc_SP_5fPet_2etxt();
  friend void protobuf_ShutdownFile_SP_5fPet_2etxt();

  void InitAsDefaultInstance();
  static SM_Pet_Data* default_instance_;
};
// -------------------------------------------------------------------

class SM_Pet_Info : public ::google::protobuf::Message {
 public:
  SM_Pet_Info();
  virtual ~SM_Pet_Info();

  SM_Pet_Info(const SM_Pet_Info& from);

  inline SM_Pet_Info& operator=(const SM_Pet_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Pet_Info& default_instance();

  void Swap(SM_Pet_Info* other);

  // implements Message ----------------------------------------------

  SM_Pet_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Pet_Info& from);
  void MergeFrom(const SM_Pet_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // optional int32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 petid = 3;
  inline bool has_petid() const;
  inline void clear_petid();
  static const int kPetidFieldNumber = 3;
  inline ::google::protobuf::int32 petid() const;
  inline void set_petid(::google::protobuf::int32 value);

  // optional int32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 evolveLvl = 7;
  inline bool has_evolvelvl() const;
  inline void clear_evolvelvl();
  static const int kEvolveLvlFieldNumber = 7;
  inline ::google::protobuf::int32 evolvelvl() const;
  inline void set_evolvelvl(::google::protobuf::int32 value);

  // optional int32 quality = 8;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 8;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 onbattle = 9;
  inline bool has_onbattle() const;
  inline void clear_onbattle();
  static const int kOnbattleFieldNumber = 9;
  inline ::google::protobuf::int32 onbattle() const;
  inline void set_onbattle(::google::protobuf::int32 value);

  // optional int32 packageunlock = 10;
  inline bool has_packageunlock() const;
  inline void clear_packageunlock();
  static const int kPackageunlockFieldNumber = 10;
  inline ::google::protobuf::int32 packageunlock() const;
  inline void set_packageunlock(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_Pet_Info)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_petid();
  inline void clear_has_petid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_evolvelvl();
  inline void clear_has_evolvelvl();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_onbattle();
  inline void clear_has_onbattle();
  inline void set_has_packageunlock();
  inline void clear_has_packageunlock();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 petid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 evolvelvl_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 onbattle_;
  ::google::protobuf::int32 packageunlock_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fPet_2etxt();
  friend void protobuf_AssignDesc_SP_5fPet_2etxt();
  friend void protobuf_ShutdownFile_SP_5fPet_2etxt();

  void InitAsDefaultInstance();
  static SM_Pet_Info* default_instance_;
};
// -------------------------------------------------------------------

class SM_Pet_Fragment_Data : public ::google::protobuf::Message {
 public:
  SM_Pet_Fragment_Data();
  virtual ~SM_Pet_Fragment_Data();

  SM_Pet_Fragment_Data(const SM_Pet_Fragment_Data& from);

  inline SM_Pet_Fragment_Data& operator=(const SM_Pet_Fragment_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Pet_Fragment_Data& default_instance();

  void Swap(SM_Pet_Fragment_Data* other);

  // implements Message ----------------------------------------------

  SM_Pet_Fragment_Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Pet_Fragment_Data& from);
  void MergeFrom(const SM_Pet_Fragment_Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_nCount = 1;
  inline bool has_m_ncount() const;
  inline void clear_m_ncount();
  static const int kMNCountFieldNumber = 1;
  inline ::google::protobuf::int32 m_ncount() const;
  inline void set_m_ncount(::google::protobuf::int32 value);

  // repeated .SM_Pet_Fragment_Info m_vecData = 2;
  inline int m_vecdata_size() const;
  inline void clear_m_vecdata();
  static const int kMVecDataFieldNumber = 2;
  inline const ::SM_Pet_Fragment_Info& m_vecdata(int index) const;
  inline ::SM_Pet_Fragment_Info* mutable_m_vecdata(int index);
  inline ::SM_Pet_Fragment_Info* add_m_vecdata();
  inline const ::google::protobuf::RepeatedPtrField< ::SM_Pet_Fragment_Info >&
      m_vecdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::SM_Pet_Fragment_Info >*
      mutable_m_vecdata();

  // @@protoc_insertion_point(class_scope:SM_Pet_Fragment_Data)
 private:
  inline void set_has_m_ncount();
  inline void clear_has_m_ncount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SM_Pet_Fragment_Info > m_vecdata_;
  ::google::protobuf::int32 m_ncount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fPet_2etxt();
  friend void protobuf_AssignDesc_SP_5fPet_2etxt();
  friend void protobuf_ShutdownFile_SP_5fPet_2etxt();

  void InitAsDefaultInstance();
  static SM_Pet_Fragment_Data* default_instance_;
};
// -------------------------------------------------------------------

class SM_Pet_Fragment_Info : public ::google::protobuf::Message {
 public:
  SM_Pet_Fragment_Info();
  virtual ~SM_Pet_Fragment_Info();

  SM_Pet_Fragment_Info(const SM_Pet_Fragment_Info& from);

  inline SM_Pet_Fragment_Info& operator=(const SM_Pet_Fragment_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Pet_Fragment_Info& default_instance();

  void Swap(SM_Pet_Fragment_Info* other);

  // implements Message ----------------------------------------------

  SM_Pet_Fragment_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Pet_Fragment_Info& from);
  void MergeFrom(const SM_Pet_Fragment_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // optional int32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 fragmentid = 3;
  inline bool has_fragmentid() const;
  inline void clear_fragmentid();
  static const int kFragmentidFieldNumber = 3;
  inline ::google::protobuf::int32 fragmentid() const;
  inline void set_fragmentid(::google::protobuf::int32 value);

  // optional int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 quality = 5;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 5;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_Pet_Fragment_Info)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_fragmentid();
  inline void clear_has_fragmentid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_quality();
  inline void clear_has_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 fragmentid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 quality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fPet_2etxt();
  friend void protobuf_AssignDesc_SP_5fPet_2etxt();
  friend void protobuf_ShutdownFile_SP_5fPet_2etxt();

  void InitAsDefaultInstance();
  static SM_Pet_Fragment_Info* default_instance_;
};
// -------------------------------------------------------------------

class SM_PetEquip_extend_Data : public ::google::protobuf::Message {
 public:
  SM_PetEquip_extend_Data();
  virtual ~SM_PetEquip_extend_Data();

  SM_PetEquip_extend_Data(const SM_PetEquip_extend_Data& from);

  inline SM_PetEquip_extend_Data& operator=(const SM_PetEquip_extend_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_PetEquip_extend_Data& default_instance();

  void Swap(SM_PetEquip_extend_Data* other);

  // implements Message ----------------------------------------------

  SM_PetEquip_extend_Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_PetEquip_extend_Data& from);
  void MergeFrom(const SM_PetEquip_extend_Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_nCount = 1;
  inline bool has_m_ncount() const;
  inline void clear_m_ncount();
  static const int kMNCountFieldNumber = 1;
  inline ::google::protobuf::int32 m_ncount() const;
  inline void set_m_ncount(::google::protobuf::int32 value);

  // repeated .SM_PetEquip_extend_Info m_vecData = 2;
  inline int m_vecdata_size() const;
  inline void clear_m_vecdata();
  static const int kMVecDataFieldNumber = 2;
  inline const ::SM_PetEquip_extend_Info& m_vecdata(int index) const;
  inline ::SM_PetEquip_extend_Info* mutable_m_vecdata(int index);
  inline ::SM_PetEquip_extend_Info* add_m_vecdata();
  inline const ::google::protobuf::RepeatedPtrField< ::SM_PetEquip_extend_Info >&
      m_vecdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::SM_PetEquip_extend_Info >*
      mutable_m_vecdata();

  // @@protoc_insertion_point(class_scope:SM_PetEquip_extend_Data)
 private:
  inline void set_has_m_ncount();
  inline void clear_has_m_ncount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SM_PetEquip_extend_Info > m_vecdata_;
  ::google::protobuf::int32 m_ncount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fPet_2etxt();
  friend void protobuf_AssignDesc_SP_5fPet_2etxt();
  friend void protobuf_ShutdownFile_SP_5fPet_2etxt();

  void InitAsDefaultInstance();
  static SM_PetEquip_extend_Data* default_instance_;
};
// -------------------------------------------------------------------

class SM_PetEquip_extend_Info : public ::google::protobuf::Message {
 public:
  SM_PetEquip_extend_Info();
  virtual ~SM_PetEquip_extend_Info();

  SM_PetEquip_extend_Info(const SM_PetEquip_extend_Info& from);

  inline SM_PetEquip_extend_Info& operator=(const SM_PetEquip_extend_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_PetEquip_extend_Info& default_instance();

  void Swap(SM_PetEquip_extend_Info* other);

  // implements Message ----------------------------------------------

  SM_PetEquip_extend_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_PetEquip_extend_Info& from);
  void MergeFrom(const SM_PetEquip_extend_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 experience = 3;
  inline bool has_experience() const;
  inline void clear_experience();
  static const int kExperienceFieldNumber = 3;
  inline ::google::protobuf::int32 experience() const;
  inline void set_experience(::google::protobuf::int32 value);

  // optional int32 count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_PetEquip_extend_Info)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_experience();
  inline void clear_has_experience();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 experience_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fPet_2etxt();
  friend void protobuf_AssignDesc_SP_5fPet_2etxt();
  friend void protobuf_ShutdownFile_SP_5fPet_2etxt();

  void InitAsDefaultInstance();
  static SM_PetEquip_extend_Info* default_instance_;
};
// -------------------------------------------------------------------

class SM_PetEquip_Info_Data : public ::google::protobuf::Message {
 public:
  SM_PetEquip_Info_Data();
  virtual ~SM_PetEquip_Info_Data();

  SM_PetEquip_Info_Data(const SM_PetEquip_Info_Data& from);

  inline SM_PetEquip_Info_Data& operator=(const SM_PetEquip_Info_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_PetEquip_Info_Data& default_instance();

  void Swap(SM_PetEquip_Info_Data* other);

  // implements Message ----------------------------------------------

  SM_PetEquip_Info_Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_PetEquip_Info_Data& from);
  void MergeFrom(const SM_PetEquip_Info_Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_nCount = 1;
  inline bool has_m_ncount() const;
  inline void clear_m_ncount();
  static const int kMNCountFieldNumber = 1;
  inline ::google::protobuf::int32 m_ncount() const;
  inline void set_m_ncount(::google::protobuf::int32 value);

  // repeated .SM_PetEquip_Info m_vecData = 2;
  inline int m_vecdata_size() const;
  inline void clear_m_vecdata();
  static const int kMVecDataFieldNumber = 2;
  inline const ::SM_PetEquip_Info& m_vecdata(int index) const;
  inline ::SM_PetEquip_Info* mutable_m_vecdata(int index);
  inline ::SM_PetEquip_Info* add_m_vecdata();
  inline const ::google::protobuf::RepeatedPtrField< ::SM_PetEquip_Info >&
      m_vecdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::SM_PetEquip_Info >*
      mutable_m_vecdata();

  // @@protoc_insertion_point(class_scope:SM_PetEquip_Info_Data)
 private:
  inline void set_has_m_ncount();
  inline void clear_has_m_ncount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SM_PetEquip_Info > m_vecdata_;
  ::google::protobuf::int32 m_ncount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fPet_2etxt();
  friend void protobuf_AssignDesc_SP_5fPet_2etxt();
  friend void protobuf_ShutdownFile_SP_5fPet_2etxt();

  void InitAsDefaultInstance();
  static SM_PetEquip_Info_Data* default_instance_;
};
// -------------------------------------------------------------------

class SM_PetEquip_Info : public ::google::protobuf::Message {
 public:
  SM_PetEquip_Info();
  virtual ~SM_PetEquip_Info();

  SM_PetEquip_Info(const SM_PetEquip_Info& from);

  inline SM_PetEquip_Info& operator=(const SM_PetEquip_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_PetEquip_Info& default_instance();

  void Swap(SM_PetEquip_Info* other);

  // implements Message ----------------------------------------------

  SM_PetEquip_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_PetEquip_Info& from);
  void MergeFrom(const SM_PetEquip_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // optional int32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 holenum = 3;
  inline bool has_holenum() const;
  inline void clear_holenum();
  static const int kHolenumFieldNumber = 3;
  inline ::google::protobuf::int32 holenum() const;
  inline void set_holenum(::google::protobuf::int32 value);

  // optional int32 propertyid = 5;
  inline bool has_propertyid() const;
  inline void clear_propertyid();
  static const int kPropertyidFieldNumber = 5;
  inline ::google::protobuf::int32 propertyid() const;
  inline void set_propertyid(::google::protobuf::int32 value);

  // optional int32 propertylvl = 6;
  inline bool has_propertylvl() const;
  inline void clear_propertylvl();
  static const int kPropertylvlFieldNumber = 6;
  inline ::google::protobuf::int32 propertylvl() const;
  inline void set_propertylvl(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_PetEquip_Info)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_holenum();
  inline void clear_has_holenum();
  inline void set_has_propertyid();
  inline void clear_has_propertyid();
  inline void set_has_propertylvl();
  inline void clear_has_propertylvl();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 holenum_;
  ::google::protobuf::int32 propertyid_;
  ::google::protobuf::int32 propertylvl_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fPet_2etxt();
  friend void protobuf_AssignDesc_SP_5fPet_2etxt();
  friend void protobuf_ShutdownFile_SP_5fPet_2etxt();

  void InitAsDefaultInstance();
  static SM_PetEquip_Info* default_instance_;
};
// ===================================================================


// ===================================================================

// SM_Pet_Data_Request

// required int32 m_nRoleid = 1;
inline bool SM_Pet_Data_Request::has_m_nroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Pet_Data_Request::set_has_m_nroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Pet_Data_Request::clear_has_m_nroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Pet_Data_Request::clear_m_nroleid() {
  m_nroleid_ = 0;
  clear_has_m_nroleid();
}
inline ::google::protobuf::int32 SM_Pet_Data_Request::m_nroleid() const {
  return m_nroleid_;
}
inline void SM_Pet_Data_Request::set_m_nroleid(::google::protobuf::int32 value) {
  set_has_m_nroleid();
  m_nroleid_ = value;
}

// -------------------------------------------------------------------

// SM_Pet_Data

// required int32 m_nCount = 1;
inline bool SM_Pet_Data::has_m_ncount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Pet_Data::set_has_m_ncount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Pet_Data::clear_has_m_ncount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Pet_Data::clear_m_ncount() {
  m_ncount_ = 0;
  clear_has_m_ncount();
}
inline ::google::protobuf::int32 SM_Pet_Data::m_ncount() const {
  return m_ncount_;
}
inline void SM_Pet_Data::set_m_ncount(::google::protobuf::int32 value) {
  set_has_m_ncount();
  m_ncount_ = value;
}

// repeated .SM_Pet_Info m_vecData = 2;
inline int SM_Pet_Data::m_vecdata_size() const {
  return m_vecdata_.size();
}
inline void SM_Pet_Data::clear_m_vecdata() {
  m_vecdata_.Clear();
}
inline const ::SM_Pet_Info& SM_Pet_Data::m_vecdata(int index) const {
  return m_vecdata_.Get(index);
}
inline ::SM_Pet_Info* SM_Pet_Data::mutable_m_vecdata(int index) {
  return m_vecdata_.Mutable(index);
}
inline ::SM_Pet_Info* SM_Pet_Data::add_m_vecdata() {
  return m_vecdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SM_Pet_Info >&
SM_Pet_Data::m_vecdata() const {
  return m_vecdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::SM_Pet_Info >*
SM_Pet_Data::mutable_m_vecdata() {
  return &m_vecdata_;
}

// -------------------------------------------------------------------

// SM_Pet_Info

// required int64 gmid = 1;
inline bool SM_Pet_Info::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Pet_Info::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Pet_Info::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Pet_Info::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 SM_Pet_Info::gmid() const {
  return gmid_;
}
inline void SM_Pet_Info::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// optional int32 roleid = 2;
inline bool SM_Pet_Info::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_Pet_Info::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_Pet_Info::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_Pet_Info::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SM_Pet_Info::roleid() const {
  return roleid_;
}
inline void SM_Pet_Info::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 petid = 3;
inline bool SM_Pet_Info::has_petid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_Pet_Info::set_has_petid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_Pet_Info::clear_has_petid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_Pet_Info::clear_petid() {
  petid_ = 0;
  clear_has_petid();
}
inline ::google::protobuf::int32 SM_Pet_Info::petid() const {
  return petid_;
}
inline void SM_Pet_Info::set_petid(::google::protobuf::int32 value) {
  set_has_petid();
  petid_ = value;
}

// optional int32 level = 6;
inline bool SM_Pet_Info::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SM_Pet_Info::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SM_Pet_Info::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SM_Pet_Info::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SM_Pet_Info::level() const {
  return level_;
}
inline void SM_Pet_Info::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 evolveLvl = 7;
inline bool SM_Pet_Info::has_evolvelvl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SM_Pet_Info::set_has_evolvelvl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SM_Pet_Info::clear_has_evolvelvl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SM_Pet_Info::clear_evolvelvl() {
  evolvelvl_ = 0;
  clear_has_evolvelvl();
}
inline ::google::protobuf::int32 SM_Pet_Info::evolvelvl() const {
  return evolvelvl_;
}
inline void SM_Pet_Info::set_evolvelvl(::google::protobuf::int32 value) {
  set_has_evolvelvl();
  evolvelvl_ = value;
}

// optional int32 quality = 8;
inline bool SM_Pet_Info::has_quality() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SM_Pet_Info::set_has_quality() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SM_Pet_Info::clear_has_quality() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SM_Pet_Info::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 SM_Pet_Info::quality() const {
  return quality_;
}
inline void SM_Pet_Info::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 onbattle = 9;
inline bool SM_Pet_Info::has_onbattle() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SM_Pet_Info::set_has_onbattle() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SM_Pet_Info::clear_has_onbattle() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SM_Pet_Info::clear_onbattle() {
  onbattle_ = 0;
  clear_has_onbattle();
}
inline ::google::protobuf::int32 SM_Pet_Info::onbattle() const {
  return onbattle_;
}
inline void SM_Pet_Info::set_onbattle(::google::protobuf::int32 value) {
  set_has_onbattle();
  onbattle_ = value;
}

// optional int32 packageunlock = 10;
inline bool SM_Pet_Info::has_packageunlock() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SM_Pet_Info::set_has_packageunlock() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SM_Pet_Info::clear_has_packageunlock() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SM_Pet_Info::clear_packageunlock() {
  packageunlock_ = 0;
  clear_has_packageunlock();
}
inline ::google::protobuf::int32 SM_Pet_Info::packageunlock() const {
  return packageunlock_;
}
inline void SM_Pet_Info::set_packageunlock(::google::protobuf::int32 value) {
  set_has_packageunlock();
  packageunlock_ = value;
}

// -------------------------------------------------------------------

// SM_Pet_Fragment_Data

// required int32 m_nCount = 1;
inline bool SM_Pet_Fragment_Data::has_m_ncount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Pet_Fragment_Data::set_has_m_ncount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Pet_Fragment_Data::clear_has_m_ncount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Pet_Fragment_Data::clear_m_ncount() {
  m_ncount_ = 0;
  clear_has_m_ncount();
}
inline ::google::protobuf::int32 SM_Pet_Fragment_Data::m_ncount() const {
  return m_ncount_;
}
inline void SM_Pet_Fragment_Data::set_m_ncount(::google::protobuf::int32 value) {
  set_has_m_ncount();
  m_ncount_ = value;
}

// repeated .SM_Pet_Fragment_Info m_vecData = 2;
inline int SM_Pet_Fragment_Data::m_vecdata_size() const {
  return m_vecdata_.size();
}
inline void SM_Pet_Fragment_Data::clear_m_vecdata() {
  m_vecdata_.Clear();
}
inline const ::SM_Pet_Fragment_Info& SM_Pet_Fragment_Data::m_vecdata(int index) const {
  return m_vecdata_.Get(index);
}
inline ::SM_Pet_Fragment_Info* SM_Pet_Fragment_Data::mutable_m_vecdata(int index) {
  return m_vecdata_.Mutable(index);
}
inline ::SM_Pet_Fragment_Info* SM_Pet_Fragment_Data::add_m_vecdata() {
  return m_vecdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SM_Pet_Fragment_Info >&
SM_Pet_Fragment_Data::m_vecdata() const {
  return m_vecdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::SM_Pet_Fragment_Info >*
SM_Pet_Fragment_Data::mutable_m_vecdata() {
  return &m_vecdata_;
}

// -------------------------------------------------------------------

// SM_Pet_Fragment_Info

// required int64 gmid = 1;
inline bool SM_Pet_Fragment_Info::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Pet_Fragment_Info::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Pet_Fragment_Info::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Pet_Fragment_Info::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 SM_Pet_Fragment_Info::gmid() const {
  return gmid_;
}
inline void SM_Pet_Fragment_Info::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// optional int32 roleid = 2;
inline bool SM_Pet_Fragment_Info::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_Pet_Fragment_Info::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_Pet_Fragment_Info::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_Pet_Fragment_Info::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SM_Pet_Fragment_Info::roleid() const {
  return roleid_;
}
inline void SM_Pet_Fragment_Info::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 fragmentid = 3;
inline bool SM_Pet_Fragment_Info::has_fragmentid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_Pet_Fragment_Info::set_has_fragmentid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_Pet_Fragment_Info::clear_has_fragmentid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_Pet_Fragment_Info::clear_fragmentid() {
  fragmentid_ = 0;
  clear_has_fragmentid();
}
inline ::google::protobuf::int32 SM_Pet_Fragment_Info::fragmentid() const {
  return fragmentid_;
}
inline void SM_Pet_Fragment_Info::set_fragmentid(::google::protobuf::int32 value) {
  set_has_fragmentid();
  fragmentid_ = value;
}

// optional int32 num = 4;
inline bool SM_Pet_Fragment_Info::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SM_Pet_Fragment_Info::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SM_Pet_Fragment_Info::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SM_Pet_Fragment_Info::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 SM_Pet_Fragment_Info::num() const {
  return num_;
}
inline void SM_Pet_Fragment_Info::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 quality = 5;
inline bool SM_Pet_Fragment_Info::has_quality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SM_Pet_Fragment_Info::set_has_quality() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SM_Pet_Fragment_Info::clear_has_quality() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SM_Pet_Fragment_Info::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 SM_Pet_Fragment_Info::quality() const {
  return quality_;
}
inline void SM_Pet_Fragment_Info::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// -------------------------------------------------------------------

// SM_PetEquip_extend_Data

// required int32 m_nCount = 1;
inline bool SM_PetEquip_extend_Data::has_m_ncount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_PetEquip_extend_Data::set_has_m_ncount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_PetEquip_extend_Data::clear_has_m_ncount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_PetEquip_extend_Data::clear_m_ncount() {
  m_ncount_ = 0;
  clear_has_m_ncount();
}
inline ::google::protobuf::int32 SM_PetEquip_extend_Data::m_ncount() const {
  return m_ncount_;
}
inline void SM_PetEquip_extend_Data::set_m_ncount(::google::protobuf::int32 value) {
  set_has_m_ncount();
  m_ncount_ = value;
}

// repeated .SM_PetEquip_extend_Info m_vecData = 2;
inline int SM_PetEquip_extend_Data::m_vecdata_size() const {
  return m_vecdata_.size();
}
inline void SM_PetEquip_extend_Data::clear_m_vecdata() {
  m_vecdata_.Clear();
}
inline const ::SM_PetEquip_extend_Info& SM_PetEquip_extend_Data::m_vecdata(int index) const {
  return m_vecdata_.Get(index);
}
inline ::SM_PetEquip_extend_Info* SM_PetEquip_extend_Data::mutable_m_vecdata(int index) {
  return m_vecdata_.Mutable(index);
}
inline ::SM_PetEquip_extend_Info* SM_PetEquip_extend_Data::add_m_vecdata() {
  return m_vecdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SM_PetEquip_extend_Info >&
SM_PetEquip_extend_Data::m_vecdata() const {
  return m_vecdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::SM_PetEquip_extend_Info >*
SM_PetEquip_extend_Data::mutable_m_vecdata() {
  return &m_vecdata_;
}

// -------------------------------------------------------------------

// SM_PetEquip_extend_Info

// required int32 roleid = 1;
inline bool SM_PetEquip_extend_Info::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_PetEquip_extend_Info::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_PetEquip_extend_Info::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_PetEquip_extend_Info::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SM_PetEquip_extend_Info::roleid() const {
  return roleid_;
}
inline void SM_PetEquip_extend_Info::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 experience = 3;
inline bool SM_PetEquip_extend_Info::has_experience() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_PetEquip_extend_Info::set_has_experience() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_PetEquip_extend_Info::clear_has_experience() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_PetEquip_extend_Info::clear_experience() {
  experience_ = 0;
  clear_has_experience();
}
inline ::google::protobuf::int32 SM_PetEquip_extend_Info::experience() const {
  return experience_;
}
inline void SM_PetEquip_extend_Info::set_experience(::google::protobuf::int32 value) {
  set_has_experience();
  experience_ = value;
}

// optional int32 count = 4;
inline bool SM_PetEquip_extend_Info::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_PetEquip_extend_Info::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_PetEquip_extend_Info::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_PetEquip_extend_Info::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 SM_PetEquip_extend_Info::count() const {
  return count_;
}
inline void SM_PetEquip_extend_Info::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// SM_PetEquip_Info_Data

// required int32 m_nCount = 1;
inline bool SM_PetEquip_Info_Data::has_m_ncount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_PetEquip_Info_Data::set_has_m_ncount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_PetEquip_Info_Data::clear_has_m_ncount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_PetEquip_Info_Data::clear_m_ncount() {
  m_ncount_ = 0;
  clear_has_m_ncount();
}
inline ::google::protobuf::int32 SM_PetEquip_Info_Data::m_ncount() const {
  return m_ncount_;
}
inline void SM_PetEquip_Info_Data::set_m_ncount(::google::protobuf::int32 value) {
  set_has_m_ncount();
  m_ncount_ = value;
}

// repeated .SM_PetEquip_Info m_vecData = 2;
inline int SM_PetEquip_Info_Data::m_vecdata_size() const {
  return m_vecdata_.size();
}
inline void SM_PetEquip_Info_Data::clear_m_vecdata() {
  m_vecdata_.Clear();
}
inline const ::SM_PetEquip_Info& SM_PetEquip_Info_Data::m_vecdata(int index) const {
  return m_vecdata_.Get(index);
}
inline ::SM_PetEquip_Info* SM_PetEquip_Info_Data::mutable_m_vecdata(int index) {
  return m_vecdata_.Mutable(index);
}
inline ::SM_PetEquip_Info* SM_PetEquip_Info_Data::add_m_vecdata() {
  return m_vecdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SM_PetEquip_Info >&
SM_PetEquip_Info_Data::m_vecdata() const {
  return m_vecdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::SM_PetEquip_Info >*
SM_PetEquip_Info_Data::mutable_m_vecdata() {
  return &m_vecdata_;
}

// -------------------------------------------------------------------

// SM_PetEquip_Info

// required int64 gmid = 1;
inline bool SM_PetEquip_Info::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_PetEquip_Info::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_PetEquip_Info::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_PetEquip_Info::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 SM_PetEquip_Info::gmid() const {
  return gmid_;
}
inline void SM_PetEquip_Info::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// optional int32 roleid = 2;
inline bool SM_PetEquip_Info::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_PetEquip_Info::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_PetEquip_Info::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_PetEquip_Info::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SM_PetEquip_Info::roleid() const {
  return roleid_;
}
inline void SM_PetEquip_Info::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 holenum = 3;
inline bool SM_PetEquip_Info::has_holenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_PetEquip_Info::set_has_holenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_PetEquip_Info::clear_has_holenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_PetEquip_Info::clear_holenum() {
  holenum_ = 0;
  clear_has_holenum();
}
inline ::google::protobuf::int32 SM_PetEquip_Info::holenum() const {
  return holenum_;
}
inline void SM_PetEquip_Info::set_holenum(::google::protobuf::int32 value) {
  set_has_holenum();
  holenum_ = value;
}

// optional int32 propertyid = 5;
inline bool SM_PetEquip_Info::has_propertyid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SM_PetEquip_Info::set_has_propertyid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SM_PetEquip_Info::clear_has_propertyid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SM_PetEquip_Info::clear_propertyid() {
  propertyid_ = 0;
  clear_has_propertyid();
}
inline ::google::protobuf::int32 SM_PetEquip_Info::propertyid() const {
  return propertyid_;
}
inline void SM_PetEquip_Info::set_propertyid(::google::protobuf::int32 value) {
  set_has_propertyid();
  propertyid_ = value;
}

// optional int32 propertylvl = 6;
inline bool SM_PetEquip_Info::has_propertylvl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SM_PetEquip_Info::set_has_propertylvl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SM_PetEquip_Info::clear_has_propertylvl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SM_PetEquip_Info::clear_propertylvl() {
  propertylvl_ = 0;
  clear_has_propertylvl();
}
inline ::google::protobuf::int32 SM_PetEquip_Info::propertylvl() const {
  return propertylvl_;
}
inline void SM_PetEquip_Info::set_propertylvl(::google::protobuf::int32 value) {
  set_has_propertylvl();
  propertylvl_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_SP_5fPet_2etxt__INCLUDED
