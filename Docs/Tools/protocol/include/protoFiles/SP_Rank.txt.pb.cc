// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_Rank.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SP_Rank.txt.pb.h"
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* SM_RankTime_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SM_RankTime_Return_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_SP_5fRank_2etxt() {
  protobuf_AddDesc_SP_5fRank_2etxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SP_Rank.txt");
  GOOGLE_CHECK(file != NULL);
  SM_RankTime_Return_descriptor_ = file->message_type(0);
  static const int SM_RankTime_Return_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_RankTime_Return, m_roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_RankTime_Return, m_goldtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_RankTime_Return, m_winnumtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_RankTime_Return, m_daygoldval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_RankTime_Return, m_daygoldtime_),
  };
  SM_RankTime_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SM_RankTime_Return_descriptor_,
      SM_RankTime_Return::default_instance_,
      SM_RankTime_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_RankTime_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_RankTime_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SM_RankTime_Return));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SP_5fRank_2etxt);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SM_RankTime_Return_descriptor_, &SM_RankTime_Return::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SP_5fRank_2etxt() {
  delete SM_RankTime_Return::default_instance_;
  delete SM_RankTime_Return_reflection_;
}

void protobuf_AddDesc_SP_5fRank_2etxt() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013SP_Rank.txt\"}\n\022SM_RankTime_Return\022\020\n\010m"
    "_roleid\030\001 \002(\005\022\022\n\nm_goldtime\030\002 \001(\005\022\024\n\014m_w"
    "innumtime\030\003 \001(\005\022\024\n\014m_daygoldval\030\004 \001(\005\022\025\n"
    "\rm_daygoldtime\030\005 \001(\005", 140);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SP_Rank.txt", &protobuf_RegisterTypes);
  SM_RankTime_Return::default_instance_ = new SM_RankTime_Return();
  SM_RankTime_Return::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SP_5fRank_2etxt);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SP_5fRank_2etxt {
  StaticDescriptorInitializer_SP_5fRank_2etxt() {
    protobuf_AddDesc_SP_5fRank_2etxt();
  }
} static_descriptor_initializer_SP_5fRank_2etxt_;

// ===================================================================

#ifndef _MSC_VER
const int SM_RankTime_Return::kMRoleidFieldNumber;
const int SM_RankTime_Return::kMGoldtimeFieldNumber;
const int SM_RankTime_Return::kMWinnumtimeFieldNumber;
const int SM_RankTime_Return::kMDaygoldvalFieldNumber;
const int SM_RankTime_Return::kMDaygoldtimeFieldNumber;
#endif  // !_MSC_VER

SM_RankTime_Return::SM_RankTime_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SM_RankTime_Return::InitAsDefaultInstance() {
}

SM_RankTime_Return::SM_RankTime_Return(const SM_RankTime_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SM_RankTime_Return::SharedCtor() {
  _cached_size_ = 0;
  m_roleid_ = 0;
  m_goldtime_ = 0;
  m_winnumtime_ = 0;
  m_daygoldval_ = 0;
  m_daygoldtime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SM_RankTime_Return::~SM_RankTime_Return() {
  SharedDtor();
}

void SM_RankTime_Return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SM_RankTime_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SM_RankTime_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SM_RankTime_Return_descriptor_;
}

const SM_RankTime_Return& SM_RankTime_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fRank_2etxt();
  return *default_instance_;
}

SM_RankTime_Return* SM_RankTime_Return::default_instance_ = NULL;

SM_RankTime_Return* SM_RankTime_Return::New() const {
  return new SM_RankTime_Return;
}

void SM_RankTime_Return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_roleid_ = 0;
    m_goldtime_ = 0;
    m_winnumtime_ = 0;
    m_daygoldval_ = 0;
    m_daygoldtime_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SM_RankTime_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid_)));
          set_has_m_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_goldtime;
        break;
      }

      // optional int32 m_goldtime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_goldtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_goldtime_)));
          set_has_m_goldtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_winnumtime;
        break;
      }

      // optional int32 m_winnumtime = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_winnumtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_winnumtime_)));
          set_has_m_winnumtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_daygoldval;
        break;
      }

      // optional int32 m_daygoldval = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_daygoldval:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_daygoldval_)));
          set_has_m_daygoldval();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_daygoldtime;
        break;
      }

      // optional int32 m_daygoldtime = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_daygoldtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_daygoldtime_)));
          set_has_m_daygoldtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SM_RankTime_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_roleid = 1;
  if (has_m_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_roleid(), output);
  }

  // optional int32 m_goldtime = 2;
  if (has_m_goldtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_goldtime(), output);
  }

  // optional int32 m_winnumtime = 3;
  if (has_m_winnumtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_winnumtime(), output);
  }

  // optional int32 m_daygoldval = 4;
  if (has_m_daygoldval()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_daygoldval(), output);
  }

  // optional int32 m_daygoldtime = 5;
  if (has_m_daygoldtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_daygoldtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SM_RankTime_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_roleid = 1;
  if (has_m_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_roleid(), target);
  }

  // optional int32 m_goldtime = 2;
  if (has_m_goldtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_goldtime(), target);
  }

  // optional int32 m_winnumtime = 3;
  if (has_m_winnumtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_winnumtime(), target);
  }

  // optional int32 m_daygoldval = 4;
  if (has_m_daygoldval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_daygoldval(), target);
  }

  // optional int32 m_daygoldtime = 5;
  if (has_m_daygoldtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_daygoldtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SM_RankTime_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_roleid = 1;
    if (has_m_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid());
    }

    // optional int32 m_goldtime = 2;
    if (has_m_goldtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_goldtime());
    }

    // optional int32 m_winnumtime = 3;
    if (has_m_winnumtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_winnumtime());
    }

    // optional int32 m_daygoldval = 4;
    if (has_m_daygoldval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_daygoldval());
    }

    // optional int32 m_daygoldtime = 5;
    if (has_m_daygoldtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_daygoldtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SM_RankTime_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SM_RankTime_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SM_RankTime_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SM_RankTime_Return::MergeFrom(const SM_RankTime_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_roleid()) {
      set_m_roleid(from.m_roleid());
    }
    if (from.has_m_goldtime()) {
      set_m_goldtime(from.m_goldtime());
    }
    if (from.has_m_winnumtime()) {
      set_m_winnumtime(from.m_winnumtime());
    }
    if (from.has_m_daygoldval()) {
      set_m_daygoldval(from.m_daygoldval());
    }
    if (from.has_m_daygoldtime()) {
      set_m_daygoldtime(from.m_daygoldtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SM_RankTime_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SM_RankTime_Return::CopyFrom(const SM_RankTime_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SM_RankTime_Return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SM_RankTime_Return::Swap(SM_RankTime_Return* other) {
  if (other != this) {
    std::swap(m_roleid_, other->m_roleid_);
    std::swap(m_goldtime_, other->m_goldtime_);
    std::swap(m_winnumtime_, other->m_winnumtime_);
    std::swap(m_daygoldval_, other->m_daygoldval_);
    std::swap(m_daygoldtime_, other->m_daygoldtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SM_RankTime_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SM_RankTime_Return_descriptor_;
  metadata.reflection = SM_RankTime_Return_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
