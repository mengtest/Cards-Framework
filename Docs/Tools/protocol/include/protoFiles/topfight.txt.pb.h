// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: topfight.txt

#ifndef PROTOBUF_topfight_2etxt__INCLUDED
#define PROTOBUF_topfight_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_topfight_2etxt();
void protobuf_AssignDesc_topfight_2etxt();
void protobuf_ShutdownFile_topfight_2etxt();

class GM_TopfightInfo;
class GM_TopfightReturn;
class GM_TopshopReturn;
class GM_ShopObject;

// ===================================================================

class GM_TopfightInfo : public ::google::protobuf::Message {
 public:
  GM_TopfightInfo();
  virtual ~GM_TopfightInfo();

  GM_TopfightInfo(const GM_TopfightInfo& from);

  inline GM_TopfightInfo& operator=(const GM_TopfightInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_TopfightInfo& default_instance();

  void Swap(GM_TopfightInfo* other);

  // implements Message ----------------------------------------------

  GM_TopfightInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_TopfightInfo& from);
  void MergeFrom(const GM_TopfightInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional string m_rolename = 2;
  inline bool has_m_rolename() const;
  inline void clear_m_rolename();
  static const int kMRolenameFieldNumber = 2;
  inline const ::std::string& m_rolename() const;
  inline void set_m_rolename(const ::std::string& value);
  inline void set_m_rolename(const char* value);
  inline void set_m_rolename(const char* value, size_t size);
  inline ::std::string* mutable_m_rolename();
  inline ::std::string* release_m_rolename();
  inline void set_allocated_m_rolename(::std::string* m_rolename);

  // optional int32 m_profession = 3;
  inline bool has_m_profession() const;
  inline void clear_m_profession();
  static const int kMProfessionFieldNumber = 3;
  inline ::google::protobuf::int32 m_profession() const;
  inline void set_m_profession(::google::protobuf::int32 value);

  // optional int32 m_toptime = 4;
  inline bool has_m_toptime() const;
  inline void clear_m_toptime();
  static const int kMToptimeFieldNumber = 4;
  inline ::google::protobuf::int32 m_toptime() const;
  inline void set_m_toptime(::google::protobuf::int32 value);

  // optional int32 m_score = 5;
  inline bool has_m_score() const;
  inline void clear_m_score();
  static const int kMScoreFieldNumber = 5;
  inline ::google::protobuf::int32 m_score() const;
  inline void set_m_score(::google::protobuf::int32 value);

  // optional int32 m_grade = 6;
  inline bool has_m_grade() const;
  inline void clear_m_grade();
  static const int kMGradeFieldNumber = 6;
  inline ::google::protobuf::int32 m_grade() const;
  inline void set_m_grade(::google::protobuf::int32 value);

  // optional int32 m_level = 7;
  inline bool has_m_level() const;
  inline void clear_m_level();
  static const int kMLevelFieldNumber = 7;
  inline ::google::protobuf::int32 m_level() const;
  inline void set_m_level(::google::protobuf::int32 value);

  // optional int32 m_reward = 8;
  inline bool has_m_reward() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 8;
  inline ::google::protobuf::int32 m_reward() const;
  inline void set_m_reward(::google::protobuf::int32 value);

  // optional int32 m_pagecnt = 9;
  inline bool has_m_pagecnt() const;
  inline void clear_m_pagecnt();
  static const int kMPagecntFieldNumber = 9;
  inline ::google::protobuf::int32 m_pagecnt() const;
  inline void set_m_pagecnt(::google::protobuf::int32 value);

  // optional int32 m_hadrank = 10;
  inline bool has_m_hadrank() const;
  inline void clear_m_hadrank();
  static const int kMHadrankFieldNumber = 10;
  inline ::google::protobuf::int32 m_hadrank() const;
  inline void set_m_hadrank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_TopfightInfo)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_rolename();
  inline void clear_has_m_rolename();
  inline void set_has_m_profession();
  inline void clear_has_m_profession();
  inline void set_has_m_toptime();
  inline void clear_has_m_toptime();
  inline void set_has_m_score();
  inline void clear_has_m_score();
  inline void set_has_m_grade();
  inline void clear_has_m_grade();
  inline void set_has_m_level();
  inline void clear_has_m_level();
  inline void set_has_m_reward();
  inline void clear_has_m_reward();
  inline void set_has_m_pagecnt();
  inline void clear_has_m_pagecnt();
  inline void set_has_m_hadrank();
  inline void clear_has_m_hadrank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_rolename_;
  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_profession_;
  ::google::protobuf::int32 m_toptime_;
  ::google::protobuf::int32 m_score_;
  ::google::protobuf::int32 m_grade_;
  ::google::protobuf::int32 m_level_;
  ::google::protobuf::int32 m_reward_;
  ::google::protobuf::int32 m_pagecnt_;
  ::google::protobuf::int32 m_hadrank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_topfight_2etxt();
  friend void protobuf_AssignDesc_topfight_2etxt();
  friend void protobuf_ShutdownFile_topfight_2etxt();

  void InitAsDefaultInstance();
  static GM_TopfightInfo* default_instance_;
};
// -------------------------------------------------------------------

class GM_TopfightReturn : public ::google::protobuf::Message {
 public:
  GM_TopfightReturn();
  virtual ~GM_TopfightReturn();

  GM_TopfightReturn(const GM_TopfightReturn& from);

  inline GM_TopfightReturn& operator=(const GM_TopfightReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_TopfightReturn& default_instance();

  void Swap(GM_TopfightReturn* other);

  // implements Message ----------------------------------------------

  GM_TopfightReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_TopfightReturn& from);
  void MergeFrom(const GM_TopfightReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_totalcount = 1;
  inline bool has_m_totalcount() const;
  inline void clear_m_totalcount();
  static const int kMTotalcountFieldNumber = 1;
  inline ::google::protobuf::int32 m_totalcount() const;
  inline void set_m_totalcount(::google::protobuf::int32 value);

  // repeated .GM_TopfightInfo m_curRank = 2;
  inline int m_currank_size() const;
  inline void clear_m_currank();
  static const int kMCurRankFieldNumber = 2;
  inline const ::GM_TopfightInfo& m_currank(int index) const;
  inline ::GM_TopfightInfo* mutable_m_currank(int index);
  inline ::GM_TopfightInfo* add_m_currank();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_TopfightInfo >&
      m_currank() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_TopfightInfo >*
      mutable_m_currank();

  // repeated .GM_TopfightInfo m_hisRank = 3;
  inline int m_hisrank_size() const;
  inline void clear_m_hisrank();
  static const int kMHisRankFieldNumber = 3;
  inline const ::GM_TopfightInfo& m_hisrank(int index) const;
  inline ::GM_TopfightInfo* mutable_m_hisrank(int index);
  inline ::GM_TopfightInfo* add_m_hisrank();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_TopfightInfo >&
      m_hisrank() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_TopfightInfo >*
      mutable_m_hisrank();

  // optional int32 m_matchtime = 4;
  inline bool has_m_matchtime() const;
  inline void clear_m_matchtime();
  static const int kMMatchtimeFieldNumber = 4;
  inline ::google::protobuf::int32 m_matchtime() const;
  inline void set_m_matchtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_TopfightReturn)
 private:
  inline void set_has_m_totalcount();
  inline void clear_has_m_totalcount();
  inline void set_has_m_matchtime();
  inline void clear_has_m_matchtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_TopfightInfo > m_currank_;
  ::google::protobuf::int32 m_totalcount_;
  ::google::protobuf::int32 m_matchtime_;
  ::google::protobuf::RepeatedPtrField< ::GM_TopfightInfo > m_hisrank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_topfight_2etxt();
  friend void protobuf_AssignDesc_topfight_2etxt();
  friend void protobuf_ShutdownFile_topfight_2etxt();

  void InitAsDefaultInstance();
  static GM_TopfightReturn* default_instance_;
};
// -------------------------------------------------------------------

class GM_TopshopReturn : public ::google::protobuf::Message {
 public:
  GM_TopshopReturn();
  virtual ~GM_TopshopReturn();

  GM_TopshopReturn(const GM_TopshopReturn& from);

  inline GM_TopshopReturn& operator=(const GM_TopshopReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_TopshopReturn& default_instance();

  void Swap(GM_TopshopReturn* other);

  // implements Message ----------------------------------------------

  GM_TopshopReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_TopshopReturn& from);
  void MergeFrom(const GM_TopshopReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_ownwand = 1;
  inline bool has_m_ownwand() const;
  inline void clear_m_ownwand();
  static const int kMOwnwandFieldNumber = 1;
  inline ::google::protobuf::int32 m_ownwand() const;
  inline void set_m_ownwand(::google::protobuf::int32 value);

  // optional int32 m_resetcost = 2;
  inline bool has_m_resetcost() const;
  inline void clear_m_resetcost();
  static const int kMResetcostFieldNumber = 2;
  inline ::google::protobuf::int32 m_resetcost() const;
  inline void set_m_resetcost(::google::protobuf::int32 value);

  // repeated .GM_ShopObject m_objs = 3;
  inline int m_objs_size() const;
  inline void clear_m_objs();
  static const int kMObjsFieldNumber = 3;
  inline const ::GM_ShopObject& m_objs(int index) const;
  inline ::GM_ShopObject* mutable_m_objs(int index);
  inline ::GM_ShopObject* add_m_objs();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_ShopObject >&
      m_objs() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_ShopObject >*
      mutable_m_objs();

  // @@protoc_insertion_point(class_scope:GM_TopshopReturn)
 private:
  inline void set_has_m_ownwand();
  inline void clear_has_m_ownwand();
  inline void set_has_m_resetcost();
  inline void clear_has_m_resetcost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_ownwand_;
  ::google::protobuf::int32 m_resetcost_;
  ::google::protobuf::RepeatedPtrField< ::GM_ShopObject > m_objs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_topfight_2etxt();
  friend void protobuf_AssignDesc_topfight_2etxt();
  friend void protobuf_ShutdownFile_topfight_2etxt();

  void InitAsDefaultInstance();
  static GM_TopshopReturn* default_instance_;
};
// -------------------------------------------------------------------

class GM_ShopObject : public ::google::protobuf::Message {
 public:
  GM_ShopObject();
  virtual ~GM_ShopObject();

  GM_ShopObject(const GM_ShopObject& from);

  inline GM_ShopObject& operator=(const GM_ShopObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ShopObject& default_instance();

  void Swap(GM_ShopObject* other);

  // implements Message ----------------------------------------------

  GM_ShopObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ShopObject& from);
  void MergeFrom(const GM_ShopObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_objectid = 1;
  inline bool has_m_objectid() const;
  inline void clear_m_objectid();
  static const int kMObjectidFieldNumber = 1;
  inline ::google::protobuf::int32 m_objectid() const;
  inline void set_m_objectid(::google::protobuf::int32 value);

  // optional int32 m_count = 2;
  inline bool has_m_count() const;
  inline void clear_m_count();
  static const int kMCountFieldNumber = 2;
  inline ::google::protobuf::int32 m_count() const;
  inline void set_m_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_ShopObject)
 private:
  inline void set_has_m_objectid();
  inline void clear_has_m_objectid();
  inline void set_has_m_count();
  inline void clear_has_m_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_objectid_;
  ::google::protobuf::int32 m_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_topfight_2etxt();
  friend void protobuf_AssignDesc_topfight_2etxt();
  friend void protobuf_ShutdownFile_topfight_2etxt();

  void InitAsDefaultInstance();
  static GM_ShopObject* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_TopfightInfo

// required int32 m_roleid = 1;
inline bool GM_TopfightInfo::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_TopfightInfo::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_TopfightInfo::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_TopfightInfo::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_TopfightInfo::m_roleid() const {
  return m_roleid_;
}
inline void GM_TopfightInfo::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional string m_rolename = 2;
inline bool GM_TopfightInfo::has_m_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_TopfightInfo::set_has_m_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_TopfightInfo::clear_has_m_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_TopfightInfo::clear_m_rolename() {
  if (m_rolename_ != &::google::protobuf::internal::kEmptyString) {
    m_rolename_->clear();
  }
  clear_has_m_rolename();
}
inline const ::std::string& GM_TopfightInfo::m_rolename() const {
  return *m_rolename_;
}
inline void GM_TopfightInfo::set_m_rolename(const ::std::string& value) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(value);
}
inline void GM_TopfightInfo::set_m_rolename(const char* value) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(value);
}
inline void GM_TopfightInfo::set_m_rolename(const char* value, size_t size) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_TopfightInfo::mutable_m_rolename() {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  return m_rolename_;
}
inline ::std::string* GM_TopfightInfo::release_m_rolename() {
  clear_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_rolename_;
    m_rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_TopfightInfo::set_allocated_m_rolename(::std::string* m_rolename) {
  if (m_rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete m_rolename_;
  }
  if (m_rolename) {
    set_has_m_rolename();
    m_rolename_ = m_rolename;
  } else {
    clear_has_m_rolename();
    m_rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_profession = 3;
inline bool GM_TopfightInfo::has_m_profession() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_TopfightInfo::set_has_m_profession() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_TopfightInfo::clear_has_m_profession() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_TopfightInfo::clear_m_profession() {
  m_profession_ = 0;
  clear_has_m_profession();
}
inline ::google::protobuf::int32 GM_TopfightInfo::m_profession() const {
  return m_profession_;
}
inline void GM_TopfightInfo::set_m_profession(::google::protobuf::int32 value) {
  set_has_m_profession();
  m_profession_ = value;
}

// optional int32 m_toptime = 4;
inline bool GM_TopfightInfo::has_m_toptime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_TopfightInfo::set_has_m_toptime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_TopfightInfo::clear_has_m_toptime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_TopfightInfo::clear_m_toptime() {
  m_toptime_ = 0;
  clear_has_m_toptime();
}
inline ::google::protobuf::int32 GM_TopfightInfo::m_toptime() const {
  return m_toptime_;
}
inline void GM_TopfightInfo::set_m_toptime(::google::protobuf::int32 value) {
  set_has_m_toptime();
  m_toptime_ = value;
}

// optional int32 m_score = 5;
inline bool GM_TopfightInfo::has_m_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_TopfightInfo::set_has_m_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_TopfightInfo::clear_has_m_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_TopfightInfo::clear_m_score() {
  m_score_ = 0;
  clear_has_m_score();
}
inline ::google::protobuf::int32 GM_TopfightInfo::m_score() const {
  return m_score_;
}
inline void GM_TopfightInfo::set_m_score(::google::protobuf::int32 value) {
  set_has_m_score();
  m_score_ = value;
}

// optional int32 m_grade = 6;
inline bool GM_TopfightInfo::has_m_grade() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_TopfightInfo::set_has_m_grade() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_TopfightInfo::clear_has_m_grade() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_TopfightInfo::clear_m_grade() {
  m_grade_ = 0;
  clear_has_m_grade();
}
inline ::google::protobuf::int32 GM_TopfightInfo::m_grade() const {
  return m_grade_;
}
inline void GM_TopfightInfo::set_m_grade(::google::protobuf::int32 value) {
  set_has_m_grade();
  m_grade_ = value;
}

// optional int32 m_level = 7;
inline bool GM_TopfightInfo::has_m_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_TopfightInfo::set_has_m_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_TopfightInfo::clear_has_m_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_TopfightInfo::clear_m_level() {
  m_level_ = 0;
  clear_has_m_level();
}
inline ::google::protobuf::int32 GM_TopfightInfo::m_level() const {
  return m_level_;
}
inline void GM_TopfightInfo::set_m_level(::google::protobuf::int32 value) {
  set_has_m_level();
  m_level_ = value;
}

// optional int32 m_reward = 8;
inline bool GM_TopfightInfo::has_m_reward() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_TopfightInfo::set_has_m_reward() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_TopfightInfo::clear_has_m_reward() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_TopfightInfo::clear_m_reward() {
  m_reward_ = 0;
  clear_has_m_reward();
}
inline ::google::protobuf::int32 GM_TopfightInfo::m_reward() const {
  return m_reward_;
}
inline void GM_TopfightInfo::set_m_reward(::google::protobuf::int32 value) {
  set_has_m_reward();
  m_reward_ = value;
}

// optional int32 m_pagecnt = 9;
inline bool GM_TopfightInfo::has_m_pagecnt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_TopfightInfo::set_has_m_pagecnt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_TopfightInfo::clear_has_m_pagecnt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_TopfightInfo::clear_m_pagecnt() {
  m_pagecnt_ = 0;
  clear_has_m_pagecnt();
}
inline ::google::protobuf::int32 GM_TopfightInfo::m_pagecnt() const {
  return m_pagecnt_;
}
inline void GM_TopfightInfo::set_m_pagecnt(::google::protobuf::int32 value) {
  set_has_m_pagecnt();
  m_pagecnt_ = value;
}

// optional int32 m_hadrank = 10;
inline bool GM_TopfightInfo::has_m_hadrank() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GM_TopfightInfo::set_has_m_hadrank() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GM_TopfightInfo::clear_has_m_hadrank() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GM_TopfightInfo::clear_m_hadrank() {
  m_hadrank_ = 0;
  clear_has_m_hadrank();
}
inline ::google::protobuf::int32 GM_TopfightInfo::m_hadrank() const {
  return m_hadrank_;
}
inline void GM_TopfightInfo::set_m_hadrank(::google::protobuf::int32 value) {
  set_has_m_hadrank();
  m_hadrank_ = value;
}

// -------------------------------------------------------------------

// GM_TopfightReturn

// required int32 m_totalcount = 1;
inline bool GM_TopfightReturn::has_m_totalcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_TopfightReturn::set_has_m_totalcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_TopfightReturn::clear_has_m_totalcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_TopfightReturn::clear_m_totalcount() {
  m_totalcount_ = 0;
  clear_has_m_totalcount();
}
inline ::google::protobuf::int32 GM_TopfightReturn::m_totalcount() const {
  return m_totalcount_;
}
inline void GM_TopfightReturn::set_m_totalcount(::google::protobuf::int32 value) {
  set_has_m_totalcount();
  m_totalcount_ = value;
}

// repeated .GM_TopfightInfo m_curRank = 2;
inline int GM_TopfightReturn::m_currank_size() const {
  return m_currank_.size();
}
inline void GM_TopfightReturn::clear_m_currank() {
  m_currank_.Clear();
}
inline const ::GM_TopfightInfo& GM_TopfightReturn::m_currank(int index) const {
  return m_currank_.Get(index);
}
inline ::GM_TopfightInfo* GM_TopfightReturn::mutable_m_currank(int index) {
  return m_currank_.Mutable(index);
}
inline ::GM_TopfightInfo* GM_TopfightReturn::add_m_currank() {
  return m_currank_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_TopfightInfo >&
GM_TopfightReturn::m_currank() const {
  return m_currank_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_TopfightInfo >*
GM_TopfightReturn::mutable_m_currank() {
  return &m_currank_;
}

// repeated .GM_TopfightInfo m_hisRank = 3;
inline int GM_TopfightReturn::m_hisrank_size() const {
  return m_hisrank_.size();
}
inline void GM_TopfightReturn::clear_m_hisrank() {
  m_hisrank_.Clear();
}
inline const ::GM_TopfightInfo& GM_TopfightReturn::m_hisrank(int index) const {
  return m_hisrank_.Get(index);
}
inline ::GM_TopfightInfo* GM_TopfightReturn::mutable_m_hisrank(int index) {
  return m_hisrank_.Mutable(index);
}
inline ::GM_TopfightInfo* GM_TopfightReturn::add_m_hisrank() {
  return m_hisrank_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_TopfightInfo >&
GM_TopfightReturn::m_hisrank() const {
  return m_hisrank_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_TopfightInfo >*
GM_TopfightReturn::mutable_m_hisrank() {
  return &m_hisrank_;
}

// optional int32 m_matchtime = 4;
inline bool GM_TopfightReturn::has_m_matchtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_TopfightReturn::set_has_m_matchtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_TopfightReturn::clear_has_m_matchtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_TopfightReturn::clear_m_matchtime() {
  m_matchtime_ = 0;
  clear_has_m_matchtime();
}
inline ::google::protobuf::int32 GM_TopfightReturn::m_matchtime() const {
  return m_matchtime_;
}
inline void GM_TopfightReturn::set_m_matchtime(::google::protobuf::int32 value) {
  set_has_m_matchtime();
  m_matchtime_ = value;
}

// -------------------------------------------------------------------

// GM_TopshopReturn

// required int32 m_ownwand = 1;
inline bool GM_TopshopReturn::has_m_ownwand() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_TopshopReturn::set_has_m_ownwand() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_TopshopReturn::clear_has_m_ownwand() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_TopshopReturn::clear_m_ownwand() {
  m_ownwand_ = 0;
  clear_has_m_ownwand();
}
inline ::google::protobuf::int32 GM_TopshopReturn::m_ownwand() const {
  return m_ownwand_;
}
inline void GM_TopshopReturn::set_m_ownwand(::google::protobuf::int32 value) {
  set_has_m_ownwand();
  m_ownwand_ = value;
}

// optional int32 m_resetcost = 2;
inline bool GM_TopshopReturn::has_m_resetcost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_TopshopReturn::set_has_m_resetcost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_TopshopReturn::clear_has_m_resetcost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_TopshopReturn::clear_m_resetcost() {
  m_resetcost_ = 0;
  clear_has_m_resetcost();
}
inline ::google::protobuf::int32 GM_TopshopReturn::m_resetcost() const {
  return m_resetcost_;
}
inline void GM_TopshopReturn::set_m_resetcost(::google::protobuf::int32 value) {
  set_has_m_resetcost();
  m_resetcost_ = value;
}

// repeated .GM_ShopObject m_objs = 3;
inline int GM_TopshopReturn::m_objs_size() const {
  return m_objs_.size();
}
inline void GM_TopshopReturn::clear_m_objs() {
  m_objs_.Clear();
}
inline const ::GM_ShopObject& GM_TopshopReturn::m_objs(int index) const {
  return m_objs_.Get(index);
}
inline ::GM_ShopObject* GM_TopshopReturn::mutable_m_objs(int index) {
  return m_objs_.Mutable(index);
}
inline ::GM_ShopObject* GM_TopshopReturn::add_m_objs() {
  return m_objs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_ShopObject >&
GM_TopshopReturn::m_objs() const {
  return m_objs_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_ShopObject >*
GM_TopshopReturn::mutable_m_objs() {
  return &m_objs_;
}

// -------------------------------------------------------------------

// GM_ShopObject

// required int32 m_objectid = 1;
inline bool GM_ShopObject::has_m_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ShopObject::set_has_m_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ShopObject::clear_has_m_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ShopObject::clear_m_objectid() {
  m_objectid_ = 0;
  clear_has_m_objectid();
}
inline ::google::protobuf::int32 GM_ShopObject::m_objectid() const {
  return m_objectid_;
}
inline void GM_ShopObject::set_m_objectid(::google::protobuf::int32 value) {
  set_has_m_objectid();
  m_objectid_ = value;
}

// optional int32 m_count = 2;
inline bool GM_ShopObject::has_m_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_ShopObject::set_has_m_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_ShopObject::clear_has_m_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_ShopObject::clear_m_count() {
  m_count_ = 0;
  clear_has_m_count();
}
inline ::google::protobuf::int32 GM_ShopObject::m_count() const {
  return m_count_;
}
inline void GM_ShopObject::set_m_count(::google::protobuf::int32 value) {
  set_has_m_count();
  m_count_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_topfight_2etxt__INCLUDED
