// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_payment.txt

#ifndef PROTOBUF_SP_5fpayment_2etxt__INCLUDED
#define PROTOBUF_SP_5fpayment_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SP_5fpayment_2etxt();
void protobuf_AssignDesc_SP_5fpayment_2etxt();
void protobuf_ShutdownFile_SP_5fpayment_2etxt();

class SM_AppStore_Verify_Order;
class SM_AppStore_Verify_Order_Return;
class SM_ChargeData;
class SM_ChargeDataList;
class GM_PayCallBack;
class GM_GetPayments;
class GM_PayCallBackRes;
class GM_PayFinish;
class SM_GooglePlay_Verify_Order;
class SM_GooglePlay_Verify_Order_Return;

// ===================================================================

class SM_AppStore_Verify_Order : public ::google::protobuf::Message {
 public:
  SM_AppStore_Verify_Order();
  virtual ~SM_AppStore_Verify_Order();

  SM_AppStore_Verify_Order(const SM_AppStore_Verify_Order& from);

  inline SM_AppStore_Verify_Order& operator=(const SM_AppStore_Verify_Order& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_AppStore_Verify_Order& default_instance();

  void Swap(SM_AppStore_Verify_Order* other);

  // implements Message ----------------------------------------------

  SM_AppStore_Verify_Order* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_AppStore_Verify_Order& from);
  void MergeFrom(const SM_AppStore_Verify_Order& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // required int32 getroleid = 2;
  inline bool has_getroleid() const;
  inline void clear_getroleid();
  static const int kGetroleidFieldNumber = 2;
  inline ::google::protobuf::int32 getroleid() const;
  inline void set_getroleid(::google::protobuf::int32 value);

  // required string jsonStr = 3;
  inline bool has_jsonstr() const;
  inline void clear_jsonstr();
  static const int kJsonStrFieldNumber = 3;
  inline const ::std::string& jsonstr() const;
  inline void set_jsonstr(const ::std::string& value);
  inline void set_jsonstr(const char* value);
  inline void set_jsonstr(const char* value, size_t size);
  inline ::std::string* mutable_jsonstr();
  inline ::std::string* release_jsonstr();
  inline void set_allocated_jsonstr(::std::string* jsonstr);

  // @@protoc_insertion_point(class_scope:SM_AppStore_Verify_Order)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();
  inline void set_has_getroleid();
  inline void clear_has_getroleid();
  inline void set_has_jsonstr();
  inline void clear_has_jsonstr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_result_;
  ::google::protobuf::int32 getroleid_;
  ::std::string* jsonstr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fpayment_2etxt();
  friend void protobuf_AssignDesc_SP_5fpayment_2etxt();
  friend void protobuf_ShutdownFile_SP_5fpayment_2etxt();

  void InitAsDefaultInstance();
  static SM_AppStore_Verify_Order* default_instance_;
};
// -------------------------------------------------------------------

class SM_AppStore_Verify_Order_Return : public ::google::protobuf::Message {
 public:
  SM_AppStore_Verify_Order_Return();
  virtual ~SM_AppStore_Verify_Order_Return();

  SM_AppStore_Verify_Order_Return(const SM_AppStore_Verify_Order_Return& from);

  inline SM_AppStore_Verify_Order_Return& operator=(const SM_AppStore_Verify_Order_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_AppStore_Verify_Order_Return& default_instance();

  void Swap(SM_AppStore_Verify_Order_Return* other);

  // implements Message ----------------------------------------------

  SM_AppStore_Verify_Order_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_AppStore_Verify_Order_Return& from);
  void MergeFrom(const SM_AppStore_Verify_Order_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // required int32 getroleid = 2;
  inline bool has_getroleid() const;
  inline void clear_getroleid();
  static const int kGetroleidFieldNumber = 2;
  inline ::google::protobuf::int32 getroleid() const;
  inline void set_getroleid(::google::protobuf::int32 value);

  // required string money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline const ::std::string& money() const;
  inline void set_money(const ::std::string& value);
  inline void set_money(const char* value);
  inline void set_money(const char* value, size_t size);
  inline ::std::string* mutable_money();
  inline ::std::string* release_money();
  inline void set_allocated_money(::std::string* money);

  // optional string transaction_id = 5;
  inline bool has_transaction_id() const;
  inline void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 5;
  inline const ::std::string& transaction_id() const;
  inline void set_transaction_id(const ::std::string& value);
  inline void set_transaction_id(const char* value);
  inline void set_transaction_id(const char* value, size_t size);
  inline ::std::string* mutable_transaction_id();
  inline ::std::string* release_transaction_id();
  inline void set_allocated_transaction_id(::std::string* transaction_id);

  // optional uint32 quantity = 4;
  inline bool has_quantity() const;
  inline void clear_quantity();
  static const int kQuantityFieldNumber = 4;
  inline ::google::protobuf::uint32 quantity() const;
  inline void set_quantity(::google::protobuf::uint32 value);

  // optional string purchase_date = 7;
  inline bool has_purchase_date() const;
  inline void clear_purchase_date();
  static const int kPurchaseDateFieldNumber = 7;
  inline const ::std::string& purchase_date() const;
  inline void set_purchase_date(const ::std::string& value);
  inline void set_purchase_date(const char* value);
  inline void set_purchase_date(const char* value, size_t size);
  inline ::std::string* mutable_purchase_date();
  inline ::std::string* release_purchase_date();
  inline void set_allocated_purchase_date(::std::string* purchase_date);

  // optional int32 productid = 6;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductidFieldNumber = 6;
  inline ::google::protobuf::int32 productid() const;
  inline void set_productid(::google::protobuf::int32 value);

  // optional string jsonStr = 8;
  inline bool has_jsonstr() const;
  inline void clear_jsonstr();
  static const int kJsonStrFieldNumber = 8;
  inline const ::std::string& jsonstr() const;
  inline void set_jsonstr(const ::std::string& value);
  inline void set_jsonstr(const char* value);
  inline void set_jsonstr(const char* value, size_t size);
  inline ::std::string* mutable_jsonstr();
  inline ::std::string* release_jsonstr();
  inline void set_allocated_jsonstr(::std::string* jsonstr);

  // optional int32 diamond = 9;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 9;
  inline ::google::protobuf::int32 diamond() const;
  inline void set_diamond(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_AppStore_Verify_Order_Return)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();
  inline void set_has_getroleid();
  inline void clear_has_getroleid();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_quantity();
  inline void clear_has_quantity();
  inline void set_has_purchase_date();
  inline void clear_has_purchase_date();
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_jsonstr();
  inline void clear_has_jsonstr();
  inline void set_has_diamond();
  inline void clear_has_diamond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_result_;
  ::google::protobuf::int32 getroleid_;
  ::std::string* money_;
  ::std::string* transaction_id_;
  ::std::string* purchase_date_;
  ::google::protobuf::uint32 quantity_;
  ::google::protobuf::int32 productid_;
  ::std::string* jsonstr_;
  ::google::protobuf::int32 diamond_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fpayment_2etxt();
  friend void protobuf_AssignDesc_SP_5fpayment_2etxt();
  friend void protobuf_ShutdownFile_SP_5fpayment_2etxt();

  void InitAsDefaultInstance();
  static SM_AppStore_Verify_Order_Return* default_instance_;
};
// -------------------------------------------------------------------

class SM_ChargeData : public ::google::protobuf::Message {
 public:
  SM_ChargeData();
  virtual ~SM_ChargeData();

  SM_ChargeData(const SM_ChargeData& from);

  inline SM_ChargeData& operator=(const SM_ChargeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_ChargeData& default_instance();

  void Swap(SM_ChargeData* other);

  // implements Message ----------------------------------------------

  SM_ChargeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_ChargeData& from);
  void MergeFrom(const SM_ChargeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required int32 product_id = 2;
  inline bool has_product_id() const;
  inline void clear_product_id();
  static const int kProductIdFieldNumber = 2;
  inline ::google::protobuf::int32 product_id() const;
  inline void set_product_id(::google::protobuf::int32 value);

  // required int32 times = 3;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 3;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // required string end_time = 4;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  inline ::std::string* release_end_time();
  inline void set_allocated_end_time(::std::string* end_time);

  // @@protoc_insertion_point(class_scope:SM_ChargeData)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_product_id();
  inline void clear_has_product_id();
  inline void set_has_times();
  inline void clear_has_times();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 product_id_;
  ::std::string* end_time_;
  ::google::protobuf::int32 times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fpayment_2etxt();
  friend void protobuf_AssignDesc_SP_5fpayment_2etxt();
  friend void protobuf_ShutdownFile_SP_5fpayment_2etxt();

  void InitAsDefaultInstance();
  static SM_ChargeData* default_instance_;
};
// -------------------------------------------------------------------

class SM_ChargeDataList : public ::google::protobuf::Message {
 public:
  SM_ChargeDataList();
  virtual ~SM_ChargeDataList();

  SM_ChargeDataList(const SM_ChargeDataList& from);

  inline SM_ChargeDataList& operator=(const SM_ChargeDataList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_ChargeDataList& default_instance();

  void Swap(SM_ChargeDataList* other);

  // implements Message ----------------------------------------------

  SM_ChargeDataList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_ChargeDataList& from);
  void MergeFrom(const SM_ChargeDataList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // repeated .SM_ChargeData list = 2;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 2;
  inline const ::SM_ChargeData& list(int index) const;
  inline ::SM_ChargeData* mutable_list(int index);
  inline ::SM_ChargeData* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::SM_ChargeData >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::SM_ChargeData >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:SM_ChargeDataList)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SM_ChargeData > list_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fpayment_2etxt();
  friend void protobuf_AssignDesc_SP_5fpayment_2etxt();
  friend void protobuf_ShutdownFile_SP_5fpayment_2etxt();

  void InitAsDefaultInstance();
  static SM_ChargeDataList* default_instance_;
};
// -------------------------------------------------------------------

class GM_PayCallBack : public ::google::protobuf::Message {
 public:
  GM_PayCallBack();
  virtual ~GM_PayCallBack();

  GM_PayCallBack(const GM_PayCallBack& from);

  inline GM_PayCallBack& operator=(const GM_PayCallBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_PayCallBack& default_instance();

  void Swap(GM_PayCallBack* other);

  // implements Message ----------------------------------------------

  GM_PayCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_PayCallBack& from);
  void MergeFrom(const GM_PayCallBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float money = 1;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 1;
  inline float money() const;
  inline void set_money(float value);

  // required string orderid = 3;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderidFieldNumber = 3;
  inline const ::std::string& orderid() const;
  inline void set_orderid(const ::std::string& value);
  inline void set_orderid(const char* value);
  inline void set_orderid(const char* value, size_t size);
  inline ::std::string* mutable_orderid();
  inline ::std::string* release_orderid();
  inline void set_allocated_orderid(::std::string* orderid);

  // required string channel = 4;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 4;
  inline const ::std::string& channel() const;
  inline void set_channel(const ::std::string& value);
  inline void set_channel(const char* value);
  inline void set_channel(const char* value, size_t size);
  inline ::std::string* mutable_channel();
  inline ::std::string* release_channel();
  inline void set_allocated_channel(::std::string* channel);

  // optional int32 platform = 5;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 5;
  inline ::google::protobuf::int32 platform() const;
  inline void set_platform(::google::protobuf::int32 value);

  // required int32 roleid = 7;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 7;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required string finish_time = 8;
  inline bool has_finish_time() const;
  inline void clear_finish_time();
  static const int kFinishTimeFieldNumber = 8;
  inline const ::std::string& finish_time() const;
  inline void set_finish_time(const ::std::string& value);
  inline void set_finish_time(const char* value);
  inline void set_finish_time(const char* value, size_t size);
  inline ::std::string* mutable_finish_time();
  inline ::std::string* release_finish_time();
  inline void set_allocated_finish_time(::std::string* finish_time);

  // optional int32 productID = 9;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductIDFieldNumber = 9;
  inline ::google::protobuf::int32 productid() const;
  inline void set_productid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_PayCallBack)
 private:
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_finish_time();
  inline void clear_has_finish_time();
  inline void set_has_productid();
  inline void clear_has_productid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* orderid_;
  float money_;
  ::google::protobuf::int32 platform_;
  ::std::string* channel_;
  ::std::string* finish_time_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 productid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fpayment_2etxt();
  friend void protobuf_AssignDesc_SP_5fpayment_2etxt();
  friend void protobuf_ShutdownFile_SP_5fpayment_2etxt();

  void InitAsDefaultInstance();
  static GM_PayCallBack* default_instance_;
};
// -------------------------------------------------------------------

class GM_GetPayments : public ::google::protobuf::Message {
 public:
  GM_GetPayments();
  virtual ~GM_GetPayments();

  GM_GetPayments(const GM_GetPayments& from);

  inline GM_GetPayments& operator=(const GM_GetPayments& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_GetPayments& default_instance();

  void Swap(GM_GetPayments* other);

  // implements Message ----------------------------------------------

  GM_GetPayments* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_GetPayments& from);
  void MergeFrom(const GM_GetPayments& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // required uint32 connect = 3;
  inline bool has_connect() const;
  inline void clear_connect();
  static const int kConnectFieldNumber = 3;
  inline ::google::protobuf::uint32 connect() const;
  inline void set_connect(::google::protobuf::uint32 value);

  // required bool ishttprequest = 4;
  inline bool has_ishttprequest() const;
  inline void clear_ishttprequest();
  static const int kIshttprequestFieldNumber = 4;
  inline bool ishttprequest() const;
  inline void set_ishttprequest(bool value);

  // repeated .GM_PayCallBack payments = 2;
  inline int payments_size() const;
  inline void clear_payments();
  static const int kPaymentsFieldNumber = 2;
  inline const ::GM_PayCallBack& payments(int index) const;
  inline ::GM_PayCallBack* mutable_payments(int index);
  inline ::GM_PayCallBack* add_payments();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_PayCallBack >&
      payments() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_PayCallBack >*
      mutable_payments();

  // @@protoc_insertion_point(class_scope:GM_GetPayments)
 private:
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_connect();
  inline void clear_has_connect();
  inline void set_has_ishttprequest();
  inline void clear_has_ishttprequest();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 count_;
  ::google::protobuf::uint32 connect_;
  ::google::protobuf::RepeatedPtrField< ::GM_PayCallBack > payments_;
  bool ishttprequest_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fpayment_2etxt();
  friend void protobuf_AssignDesc_SP_5fpayment_2etxt();
  friend void protobuf_ShutdownFile_SP_5fpayment_2etxt();

  void InitAsDefaultInstance();
  static GM_GetPayments* default_instance_;
};
// -------------------------------------------------------------------

class GM_PayCallBackRes : public ::google::protobuf::Message {
 public:
  GM_PayCallBackRes();
  virtual ~GM_PayCallBackRes();

  GM_PayCallBackRes(const GM_PayCallBackRes& from);

  inline GM_PayCallBackRes& operator=(const GM_PayCallBackRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_PayCallBackRes& default_instance();

  void Swap(GM_PayCallBackRes* other);

  // implements Message ----------------------------------------------

  GM_PayCallBackRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_PayCallBackRes& from);
  void MergeFrom(const GM_PayCallBackRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // required uint32 connect = 2;
  inline bool has_connect() const;
  inline void clear_connect();
  static const int kConnectFieldNumber = 2;
  inline ::google::protobuf::uint32 connect() const;
  inline void set_connect(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GM_PayCallBackRes)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();
  inline void set_has_connect();
  inline void clear_has_connect();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_result_;
  ::google::protobuf::uint32 connect_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fpayment_2etxt();
  friend void protobuf_AssignDesc_SP_5fpayment_2etxt();
  friend void protobuf_ShutdownFile_SP_5fpayment_2etxt();

  void InitAsDefaultInstance();
  static GM_PayCallBackRes* default_instance_;
};
// -------------------------------------------------------------------

class GM_PayFinish : public ::google::protobuf::Message {
 public:
  GM_PayFinish();
  virtual ~GM_PayFinish();

  GM_PayFinish(const GM_PayFinish& from);

  inline GM_PayFinish& operator=(const GM_PayFinish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_PayFinish& default_instance();

  void Swap(GM_PayFinish* other);

  // implements Message ----------------------------------------------

  GM_PayFinish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_PayFinish& from);
  void MergeFrom(const GM_PayFinish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string orderid = 1;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderidFieldNumber = 1;
  inline const ::std::string& orderid() const;
  inline void set_orderid(const ::std::string& value);
  inline void set_orderid(const char* value);
  inline void set_orderid(const char* value, size_t size);
  inline ::std::string* mutable_orderid();
  inline ::std::string* release_orderid();
  inline void set_allocated_orderid(::std::string* orderid);

  // optional int32 platform = 2;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 2;
  inline ::google::protobuf::int32 platform() const;
  inline void set_platform(::google::protobuf::int32 value);

  // optional string channel = 3;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 3;
  inline const ::std::string& channel() const;
  inline void set_channel(const ::std::string& value);
  inline void set_channel(const char* value);
  inline void set_channel(const char* value, size_t size);
  inline ::std::string* mutable_channel();
  inline ::std::string* release_channel();
  inline void set_allocated_channel(::std::string* channel);

  // optional string finish_time = 4;
  inline bool has_finish_time() const;
  inline void clear_finish_time();
  static const int kFinishTimeFieldNumber = 4;
  inline const ::std::string& finish_time() const;
  inline void set_finish_time(const ::std::string& value);
  inline void set_finish_time(const char* value);
  inline void set_finish_time(const char* value, size_t size);
  inline ::std::string* mutable_finish_time();
  inline ::std::string* release_finish_time();
  inline void set_allocated_finish_time(::std::string* finish_time);

  // @@protoc_insertion_point(class_scope:GM_PayFinish)
 private:
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_finish_time();
  inline void clear_has_finish_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* orderid_;
  ::std::string* channel_;
  ::std::string* finish_time_;
  ::google::protobuf::int32 platform_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fpayment_2etxt();
  friend void protobuf_AssignDesc_SP_5fpayment_2etxt();
  friend void protobuf_ShutdownFile_SP_5fpayment_2etxt();

  void InitAsDefaultInstance();
  static GM_PayFinish* default_instance_;
};
// -------------------------------------------------------------------

class SM_GooglePlay_Verify_Order : public ::google::protobuf::Message {
 public:
  SM_GooglePlay_Verify_Order();
  virtual ~SM_GooglePlay_Verify_Order();

  SM_GooglePlay_Verify_Order(const SM_GooglePlay_Verify_Order& from);

  inline SM_GooglePlay_Verify_Order& operator=(const SM_GooglePlay_Verify_Order& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_GooglePlay_Verify_Order& default_instance();

  void Swap(SM_GooglePlay_Verify_Order* other);

  // implements Message ----------------------------------------------

  SM_GooglePlay_Verify_Order* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_GooglePlay_Verify_Order& from);
  void MergeFrom(const SM_GooglePlay_Verify_Order& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // required int32 getroleid = 2;
  inline bool has_getroleid() const;
  inline void clear_getroleid();
  static const int kGetroleidFieldNumber = 2;
  inline ::google::protobuf::int32 getroleid() const;
  inline void set_getroleid(::google::protobuf::int32 value);

  // required string jsonStr = 3;
  inline bool has_jsonstr() const;
  inline void clear_jsonstr();
  static const int kJsonStrFieldNumber = 3;
  inline const ::std::string& jsonstr() const;
  inline void set_jsonstr(const ::std::string& value);
  inline void set_jsonstr(const char* value);
  inline void set_jsonstr(const char* value, size_t size);
  inline ::std::string* mutable_jsonstr();
  inline ::std::string* release_jsonstr();
  inline void set_allocated_jsonstr(::std::string* jsonstr);

  // @@protoc_insertion_point(class_scope:SM_GooglePlay_Verify_Order)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();
  inline void set_has_getroleid();
  inline void clear_has_getroleid();
  inline void set_has_jsonstr();
  inline void clear_has_jsonstr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_result_;
  ::google::protobuf::int32 getroleid_;
  ::std::string* jsonstr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fpayment_2etxt();
  friend void protobuf_AssignDesc_SP_5fpayment_2etxt();
  friend void protobuf_ShutdownFile_SP_5fpayment_2etxt();

  void InitAsDefaultInstance();
  static SM_GooglePlay_Verify_Order* default_instance_;
};
// -------------------------------------------------------------------

class SM_GooglePlay_Verify_Order_Return : public ::google::protobuf::Message {
 public:
  SM_GooglePlay_Verify_Order_Return();
  virtual ~SM_GooglePlay_Verify_Order_Return();

  SM_GooglePlay_Verify_Order_Return(const SM_GooglePlay_Verify_Order_Return& from);

  inline SM_GooglePlay_Verify_Order_Return& operator=(const SM_GooglePlay_Verify_Order_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_GooglePlay_Verify_Order_Return& default_instance();

  void Swap(SM_GooglePlay_Verify_Order_Return* other);

  // implements Message ----------------------------------------------

  SM_GooglePlay_Verify_Order_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_GooglePlay_Verify_Order_Return& from);
  void MergeFrom(const SM_GooglePlay_Verify_Order_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // required int32 getroleid = 2;
  inline bool has_getroleid() const;
  inline void clear_getroleid();
  static const int kGetroleidFieldNumber = 2;
  inline ::google::protobuf::int32 getroleid() const;
  inline void set_getroleid(::google::protobuf::int32 value);

  // required string money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline const ::std::string& money() const;
  inline void set_money(const ::std::string& value);
  inline void set_money(const char* value);
  inline void set_money(const char* value, size_t size);
  inline ::std::string* mutable_money();
  inline ::std::string* release_money();
  inline void set_allocated_money(::std::string* money);

  // optional string transaction_id = 5;
  inline bool has_transaction_id() const;
  inline void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 5;
  inline const ::std::string& transaction_id() const;
  inline void set_transaction_id(const ::std::string& value);
  inline void set_transaction_id(const char* value);
  inline void set_transaction_id(const char* value, size_t size);
  inline ::std::string* mutable_transaction_id();
  inline ::std::string* release_transaction_id();
  inline void set_allocated_transaction_id(::std::string* transaction_id);

  // optional uint32 quantity = 4;
  inline bool has_quantity() const;
  inline void clear_quantity();
  static const int kQuantityFieldNumber = 4;
  inline ::google::protobuf::uint32 quantity() const;
  inline void set_quantity(::google::protobuf::uint32 value);

  // optional string purchase_date = 7;
  inline bool has_purchase_date() const;
  inline void clear_purchase_date();
  static const int kPurchaseDateFieldNumber = 7;
  inline const ::std::string& purchase_date() const;
  inline void set_purchase_date(const ::std::string& value);
  inline void set_purchase_date(const char* value);
  inline void set_purchase_date(const char* value, size_t size);
  inline ::std::string* mutable_purchase_date();
  inline ::std::string* release_purchase_date();
  inline void set_allocated_purchase_date(::std::string* purchase_date);

  // optional int32 productid = 6;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductidFieldNumber = 6;
  inline ::google::protobuf::int32 productid() const;
  inline void set_productid(::google::protobuf::int32 value);

  // optional string jsonStr = 8;
  inline bool has_jsonstr() const;
  inline void clear_jsonstr();
  static const int kJsonStrFieldNumber = 8;
  inline const ::std::string& jsonstr() const;
  inline void set_jsonstr(const ::std::string& value);
  inline void set_jsonstr(const char* value);
  inline void set_jsonstr(const char* value, size_t size);
  inline ::std::string* mutable_jsonstr();
  inline ::std::string* release_jsonstr();
  inline void set_allocated_jsonstr(::std::string* jsonstr);

  // optional int32 diamond = 9;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 9;
  inline ::google::protobuf::int32 diamond() const;
  inline void set_diamond(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_GooglePlay_Verify_Order_Return)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();
  inline void set_has_getroleid();
  inline void clear_has_getroleid();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_quantity();
  inline void clear_has_quantity();
  inline void set_has_purchase_date();
  inline void clear_has_purchase_date();
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_jsonstr();
  inline void clear_has_jsonstr();
  inline void set_has_diamond();
  inline void clear_has_diamond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_result_;
  ::google::protobuf::int32 getroleid_;
  ::std::string* money_;
  ::std::string* transaction_id_;
  ::std::string* purchase_date_;
  ::google::protobuf::uint32 quantity_;
  ::google::protobuf::int32 productid_;
  ::std::string* jsonstr_;
  ::google::protobuf::int32 diamond_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fpayment_2etxt();
  friend void protobuf_AssignDesc_SP_5fpayment_2etxt();
  friend void protobuf_ShutdownFile_SP_5fpayment_2etxt();

  void InitAsDefaultInstance();
  static SM_GooglePlay_Verify_Order_Return* default_instance_;
};
// ===================================================================


// ===================================================================

// SM_AppStore_Verify_Order

// required int32 m_result = 1;
inline bool SM_AppStore_Verify_Order::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_AppStore_Verify_Order::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_AppStore_Verify_Order::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_AppStore_Verify_Order::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 SM_AppStore_Verify_Order::m_result() const {
  return m_result_;
}
inline void SM_AppStore_Verify_Order::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// required int32 getroleid = 2;
inline bool SM_AppStore_Verify_Order::has_getroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_AppStore_Verify_Order::set_has_getroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_AppStore_Verify_Order::clear_has_getroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_AppStore_Verify_Order::clear_getroleid() {
  getroleid_ = 0;
  clear_has_getroleid();
}
inline ::google::protobuf::int32 SM_AppStore_Verify_Order::getroleid() const {
  return getroleid_;
}
inline void SM_AppStore_Verify_Order::set_getroleid(::google::protobuf::int32 value) {
  set_has_getroleid();
  getroleid_ = value;
}

// required string jsonStr = 3;
inline bool SM_AppStore_Verify_Order::has_jsonstr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_AppStore_Verify_Order::set_has_jsonstr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_AppStore_Verify_Order::clear_has_jsonstr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_AppStore_Verify_Order::clear_jsonstr() {
  if (jsonstr_ != &::google::protobuf::internal::kEmptyString) {
    jsonstr_->clear();
  }
  clear_has_jsonstr();
}
inline const ::std::string& SM_AppStore_Verify_Order::jsonstr() const {
  return *jsonstr_;
}
inline void SM_AppStore_Verify_Order::set_jsonstr(const ::std::string& value) {
  set_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    jsonstr_ = new ::std::string;
  }
  jsonstr_->assign(value);
}
inline void SM_AppStore_Verify_Order::set_jsonstr(const char* value) {
  set_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    jsonstr_ = new ::std::string;
  }
  jsonstr_->assign(value);
}
inline void SM_AppStore_Verify_Order::set_jsonstr(const char* value, size_t size) {
  set_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    jsonstr_ = new ::std::string;
  }
  jsonstr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SM_AppStore_Verify_Order::mutable_jsonstr() {
  set_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    jsonstr_ = new ::std::string;
  }
  return jsonstr_;
}
inline ::std::string* SM_AppStore_Verify_Order::release_jsonstr() {
  clear_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = jsonstr_;
    jsonstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SM_AppStore_Verify_Order::set_allocated_jsonstr(::std::string* jsonstr) {
  if (jsonstr_ != &::google::protobuf::internal::kEmptyString) {
    delete jsonstr_;
  }
  if (jsonstr) {
    set_has_jsonstr();
    jsonstr_ = jsonstr;
  } else {
    clear_has_jsonstr();
    jsonstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SM_AppStore_Verify_Order_Return

// required int32 m_result = 1;
inline bool SM_AppStore_Verify_Order_Return::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_AppStore_Verify_Order_Return::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_AppStore_Verify_Order_Return::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_AppStore_Verify_Order_Return::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 SM_AppStore_Verify_Order_Return::m_result() const {
  return m_result_;
}
inline void SM_AppStore_Verify_Order_Return::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// required int32 getroleid = 2;
inline bool SM_AppStore_Verify_Order_Return::has_getroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_AppStore_Verify_Order_Return::set_has_getroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_AppStore_Verify_Order_Return::clear_has_getroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_AppStore_Verify_Order_Return::clear_getroleid() {
  getroleid_ = 0;
  clear_has_getroleid();
}
inline ::google::protobuf::int32 SM_AppStore_Verify_Order_Return::getroleid() const {
  return getroleid_;
}
inline void SM_AppStore_Verify_Order_Return::set_getroleid(::google::protobuf::int32 value) {
  set_has_getroleid();
  getroleid_ = value;
}

// required string money = 3;
inline bool SM_AppStore_Verify_Order_Return::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_AppStore_Verify_Order_Return::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_AppStore_Verify_Order_Return::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_AppStore_Verify_Order_Return::clear_money() {
  if (money_ != &::google::protobuf::internal::kEmptyString) {
    money_->clear();
  }
  clear_has_money();
}
inline const ::std::string& SM_AppStore_Verify_Order_Return::money() const {
  return *money_;
}
inline void SM_AppStore_Verify_Order_Return::set_money(const ::std::string& value) {
  set_has_money();
  if (money_ == &::google::protobuf::internal::kEmptyString) {
    money_ = new ::std::string;
  }
  money_->assign(value);
}
inline void SM_AppStore_Verify_Order_Return::set_money(const char* value) {
  set_has_money();
  if (money_ == &::google::protobuf::internal::kEmptyString) {
    money_ = new ::std::string;
  }
  money_->assign(value);
}
inline void SM_AppStore_Verify_Order_Return::set_money(const char* value, size_t size) {
  set_has_money();
  if (money_ == &::google::protobuf::internal::kEmptyString) {
    money_ = new ::std::string;
  }
  money_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SM_AppStore_Verify_Order_Return::mutable_money() {
  set_has_money();
  if (money_ == &::google::protobuf::internal::kEmptyString) {
    money_ = new ::std::string;
  }
  return money_;
}
inline ::std::string* SM_AppStore_Verify_Order_Return::release_money() {
  clear_has_money();
  if (money_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = money_;
    money_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SM_AppStore_Verify_Order_Return::set_allocated_money(::std::string* money) {
  if (money_ != &::google::protobuf::internal::kEmptyString) {
    delete money_;
  }
  if (money) {
    set_has_money();
    money_ = money;
  } else {
    clear_has_money();
    money_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string transaction_id = 5;
inline bool SM_AppStore_Verify_Order_Return::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SM_AppStore_Verify_Order_Return::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SM_AppStore_Verify_Order_Return::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SM_AppStore_Verify_Order_Return::clear_transaction_id() {
  if (transaction_id_ != &::google::protobuf::internal::kEmptyString) {
    transaction_id_->clear();
  }
  clear_has_transaction_id();
}
inline const ::std::string& SM_AppStore_Verify_Order_Return::transaction_id() const {
  return *transaction_id_;
}
inline void SM_AppStore_Verify_Order_Return::set_transaction_id(const ::std::string& value) {
  set_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::kEmptyString) {
    transaction_id_ = new ::std::string;
  }
  transaction_id_->assign(value);
}
inline void SM_AppStore_Verify_Order_Return::set_transaction_id(const char* value) {
  set_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::kEmptyString) {
    transaction_id_ = new ::std::string;
  }
  transaction_id_->assign(value);
}
inline void SM_AppStore_Verify_Order_Return::set_transaction_id(const char* value, size_t size) {
  set_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::kEmptyString) {
    transaction_id_ = new ::std::string;
  }
  transaction_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SM_AppStore_Verify_Order_Return::mutable_transaction_id() {
  set_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::kEmptyString) {
    transaction_id_ = new ::std::string;
  }
  return transaction_id_;
}
inline ::std::string* SM_AppStore_Verify_Order_Return::release_transaction_id() {
  clear_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = transaction_id_;
    transaction_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SM_AppStore_Verify_Order_Return::set_allocated_transaction_id(::std::string* transaction_id) {
  if (transaction_id_ != &::google::protobuf::internal::kEmptyString) {
    delete transaction_id_;
  }
  if (transaction_id) {
    set_has_transaction_id();
    transaction_id_ = transaction_id;
  } else {
    clear_has_transaction_id();
    transaction_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 quantity = 4;
inline bool SM_AppStore_Verify_Order_Return::has_quantity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SM_AppStore_Verify_Order_Return::set_has_quantity() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SM_AppStore_Verify_Order_Return::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SM_AppStore_Verify_Order_Return::clear_quantity() {
  quantity_ = 0u;
  clear_has_quantity();
}
inline ::google::protobuf::uint32 SM_AppStore_Verify_Order_Return::quantity() const {
  return quantity_;
}
inline void SM_AppStore_Verify_Order_Return::set_quantity(::google::protobuf::uint32 value) {
  set_has_quantity();
  quantity_ = value;
}

// optional string purchase_date = 7;
inline bool SM_AppStore_Verify_Order_Return::has_purchase_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SM_AppStore_Verify_Order_Return::set_has_purchase_date() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SM_AppStore_Verify_Order_Return::clear_has_purchase_date() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SM_AppStore_Verify_Order_Return::clear_purchase_date() {
  if (purchase_date_ != &::google::protobuf::internal::kEmptyString) {
    purchase_date_->clear();
  }
  clear_has_purchase_date();
}
inline const ::std::string& SM_AppStore_Verify_Order_Return::purchase_date() const {
  return *purchase_date_;
}
inline void SM_AppStore_Verify_Order_Return::set_purchase_date(const ::std::string& value) {
  set_has_purchase_date();
  if (purchase_date_ == &::google::protobuf::internal::kEmptyString) {
    purchase_date_ = new ::std::string;
  }
  purchase_date_->assign(value);
}
inline void SM_AppStore_Verify_Order_Return::set_purchase_date(const char* value) {
  set_has_purchase_date();
  if (purchase_date_ == &::google::protobuf::internal::kEmptyString) {
    purchase_date_ = new ::std::string;
  }
  purchase_date_->assign(value);
}
inline void SM_AppStore_Verify_Order_Return::set_purchase_date(const char* value, size_t size) {
  set_has_purchase_date();
  if (purchase_date_ == &::google::protobuf::internal::kEmptyString) {
    purchase_date_ = new ::std::string;
  }
  purchase_date_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SM_AppStore_Verify_Order_Return::mutable_purchase_date() {
  set_has_purchase_date();
  if (purchase_date_ == &::google::protobuf::internal::kEmptyString) {
    purchase_date_ = new ::std::string;
  }
  return purchase_date_;
}
inline ::std::string* SM_AppStore_Verify_Order_Return::release_purchase_date() {
  clear_has_purchase_date();
  if (purchase_date_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = purchase_date_;
    purchase_date_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SM_AppStore_Verify_Order_Return::set_allocated_purchase_date(::std::string* purchase_date) {
  if (purchase_date_ != &::google::protobuf::internal::kEmptyString) {
    delete purchase_date_;
  }
  if (purchase_date) {
    set_has_purchase_date();
    purchase_date_ = purchase_date;
  } else {
    clear_has_purchase_date();
    purchase_date_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 productid = 6;
inline bool SM_AppStore_Verify_Order_Return::has_productid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SM_AppStore_Verify_Order_Return::set_has_productid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SM_AppStore_Verify_Order_Return::clear_has_productid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SM_AppStore_Verify_Order_Return::clear_productid() {
  productid_ = 0;
  clear_has_productid();
}
inline ::google::protobuf::int32 SM_AppStore_Verify_Order_Return::productid() const {
  return productid_;
}
inline void SM_AppStore_Verify_Order_Return::set_productid(::google::protobuf::int32 value) {
  set_has_productid();
  productid_ = value;
}

// optional string jsonStr = 8;
inline bool SM_AppStore_Verify_Order_Return::has_jsonstr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SM_AppStore_Verify_Order_Return::set_has_jsonstr() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SM_AppStore_Verify_Order_Return::clear_has_jsonstr() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SM_AppStore_Verify_Order_Return::clear_jsonstr() {
  if (jsonstr_ != &::google::protobuf::internal::kEmptyString) {
    jsonstr_->clear();
  }
  clear_has_jsonstr();
}
inline const ::std::string& SM_AppStore_Verify_Order_Return::jsonstr() const {
  return *jsonstr_;
}
inline void SM_AppStore_Verify_Order_Return::set_jsonstr(const ::std::string& value) {
  set_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    jsonstr_ = new ::std::string;
  }
  jsonstr_->assign(value);
}
inline void SM_AppStore_Verify_Order_Return::set_jsonstr(const char* value) {
  set_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    jsonstr_ = new ::std::string;
  }
  jsonstr_->assign(value);
}
inline void SM_AppStore_Verify_Order_Return::set_jsonstr(const char* value, size_t size) {
  set_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    jsonstr_ = new ::std::string;
  }
  jsonstr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SM_AppStore_Verify_Order_Return::mutable_jsonstr() {
  set_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    jsonstr_ = new ::std::string;
  }
  return jsonstr_;
}
inline ::std::string* SM_AppStore_Verify_Order_Return::release_jsonstr() {
  clear_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = jsonstr_;
    jsonstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SM_AppStore_Verify_Order_Return::set_allocated_jsonstr(::std::string* jsonstr) {
  if (jsonstr_ != &::google::protobuf::internal::kEmptyString) {
    delete jsonstr_;
  }
  if (jsonstr) {
    set_has_jsonstr();
    jsonstr_ = jsonstr;
  } else {
    clear_has_jsonstr();
    jsonstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 diamond = 9;
inline bool SM_AppStore_Verify_Order_Return::has_diamond() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SM_AppStore_Verify_Order_Return::set_has_diamond() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SM_AppStore_Verify_Order_Return::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SM_AppStore_Verify_Order_Return::clear_diamond() {
  diamond_ = 0;
  clear_has_diamond();
}
inline ::google::protobuf::int32 SM_AppStore_Verify_Order_Return::diamond() const {
  return diamond_;
}
inline void SM_AppStore_Verify_Order_Return::set_diamond(::google::protobuf::int32 value) {
  set_has_diamond();
  diamond_ = value;
}

// -------------------------------------------------------------------

// SM_ChargeData

// required int32 roleid = 1;
inline bool SM_ChargeData::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_ChargeData::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_ChargeData::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_ChargeData::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SM_ChargeData::roleid() const {
  return roleid_;
}
inline void SM_ChargeData::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required int32 product_id = 2;
inline bool SM_ChargeData::has_product_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_ChargeData::set_has_product_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_ChargeData::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_ChargeData::clear_product_id() {
  product_id_ = 0;
  clear_has_product_id();
}
inline ::google::protobuf::int32 SM_ChargeData::product_id() const {
  return product_id_;
}
inline void SM_ChargeData::set_product_id(::google::protobuf::int32 value) {
  set_has_product_id();
  product_id_ = value;
}

// required int32 times = 3;
inline bool SM_ChargeData::has_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_ChargeData::set_has_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_ChargeData::clear_has_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_ChargeData::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 SM_ChargeData::times() const {
  return times_;
}
inline void SM_ChargeData::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}

// required string end_time = 4;
inline bool SM_ChargeData::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SM_ChargeData::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SM_ChargeData::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SM_ChargeData::clear_end_time() {
  if (end_time_ != &::google::protobuf::internal::kEmptyString) {
    end_time_->clear();
  }
  clear_has_end_time();
}
inline const ::std::string& SM_ChargeData::end_time() const {
  return *end_time_;
}
inline void SM_ChargeData::set_end_time(const ::std::string& value) {
  set_has_end_time();
  if (end_time_ == &::google::protobuf::internal::kEmptyString) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void SM_ChargeData::set_end_time(const char* value) {
  set_has_end_time();
  if (end_time_ == &::google::protobuf::internal::kEmptyString) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void SM_ChargeData::set_end_time(const char* value, size_t size) {
  set_has_end_time();
  if (end_time_ == &::google::protobuf::internal::kEmptyString) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SM_ChargeData::mutable_end_time() {
  set_has_end_time();
  if (end_time_ == &::google::protobuf::internal::kEmptyString) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}
inline ::std::string* SM_ChargeData::release_end_time() {
  clear_has_end_time();
  if (end_time_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = end_time_;
    end_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SM_ChargeData::set_allocated_end_time(::std::string* end_time) {
  if (end_time_ != &::google::protobuf::internal::kEmptyString) {
    delete end_time_;
  }
  if (end_time) {
    set_has_end_time();
    end_time_ = end_time;
  } else {
    clear_has_end_time();
    end_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SM_ChargeDataList

// required int32 count = 1;
inline bool SM_ChargeDataList::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_ChargeDataList::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_ChargeDataList::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_ChargeDataList::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 SM_ChargeDataList::count() const {
  return count_;
}
inline void SM_ChargeDataList::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// repeated .SM_ChargeData list = 2;
inline int SM_ChargeDataList::list_size() const {
  return list_.size();
}
inline void SM_ChargeDataList::clear_list() {
  list_.Clear();
}
inline const ::SM_ChargeData& SM_ChargeDataList::list(int index) const {
  return list_.Get(index);
}
inline ::SM_ChargeData* SM_ChargeDataList::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::SM_ChargeData* SM_ChargeDataList::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SM_ChargeData >&
SM_ChargeDataList::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::SM_ChargeData >*
SM_ChargeDataList::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// GM_PayCallBack

// required float money = 1;
inline bool GM_PayCallBack::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_PayCallBack::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_PayCallBack::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_PayCallBack::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline float GM_PayCallBack::money() const {
  return money_;
}
inline void GM_PayCallBack::set_money(float value) {
  set_has_money();
  money_ = value;
}

// required string orderid = 3;
inline bool GM_PayCallBack::has_orderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_PayCallBack::set_has_orderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_PayCallBack::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_PayCallBack::clear_orderid() {
  if (orderid_ != &::google::protobuf::internal::kEmptyString) {
    orderid_->clear();
  }
  clear_has_orderid();
}
inline const ::std::string& GM_PayCallBack::orderid() const {
  return *orderid_;
}
inline void GM_PayCallBack::set_orderid(const ::std::string& value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::kEmptyString) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
}
inline void GM_PayCallBack::set_orderid(const char* value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::kEmptyString) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
}
inline void GM_PayCallBack::set_orderid(const char* value, size_t size) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::kEmptyString) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_PayCallBack::mutable_orderid() {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::kEmptyString) {
    orderid_ = new ::std::string;
  }
  return orderid_;
}
inline ::std::string* GM_PayCallBack::release_orderid() {
  clear_has_orderid();
  if (orderid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = orderid_;
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_PayCallBack::set_allocated_orderid(::std::string* orderid) {
  if (orderid_ != &::google::protobuf::internal::kEmptyString) {
    delete orderid_;
  }
  if (orderid) {
    set_has_orderid();
    orderid_ = orderid;
  } else {
    clear_has_orderid();
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string channel = 4;
inline bool GM_PayCallBack::has_channel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_PayCallBack::set_has_channel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_PayCallBack::clear_has_channel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_PayCallBack::clear_channel() {
  if (channel_ != &::google::protobuf::internal::kEmptyString) {
    channel_->clear();
  }
  clear_has_channel();
}
inline const ::std::string& GM_PayCallBack::channel() const {
  return *channel_;
}
inline void GM_PayCallBack::set_channel(const ::std::string& value) {
  set_has_channel();
  if (channel_ == &::google::protobuf::internal::kEmptyString) {
    channel_ = new ::std::string;
  }
  channel_->assign(value);
}
inline void GM_PayCallBack::set_channel(const char* value) {
  set_has_channel();
  if (channel_ == &::google::protobuf::internal::kEmptyString) {
    channel_ = new ::std::string;
  }
  channel_->assign(value);
}
inline void GM_PayCallBack::set_channel(const char* value, size_t size) {
  set_has_channel();
  if (channel_ == &::google::protobuf::internal::kEmptyString) {
    channel_ = new ::std::string;
  }
  channel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_PayCallBack::mutable_channel() {
  set_has_channel();
  if (channel_ == &::google::protobuf::internal::kEmptyString) {
    channel_ = new ::std::string;
  }
  return channel_;
}
inline ::std::string* GM_PayCallBack::release_channel() {
  clear_has_channel();
  if (channel_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = channel_;
    channel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_PayCallBack::set_allocated_channel(::std::string* channel) {
  if (channel_ != &::google::protobuf::internal::kEmptyString) {
    delete channel_;
  }
  if (channel) {
    set_has_channel();
    channel_ = channel;
  } else {
    clear_has_channel();
    channel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 platform = 5;
inline bool GM_PayCallBack::has_platform() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_PayCallBack::set_has_platform() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_PayCallBack::clear_has_platform() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_PayCallBack::clear_platform() {
  platform_ = 0;
  clear_has_platform();
}
inline ::google::protobuf::int32 GM_PayCallBack::platform() const {
  return platform_;
}
inline void GM_PayCallBack::set_platform(::google::protobuf::int32 value) {
  set_has_platform();
  platform_ = value;
}

// required int32 roleid = 7;
inline bool GM_PayCallBack::has_roleid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_PayCallBack::set_has_roleid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_PayCallBack::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_PayCallBack::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_PayCallBack::roleid() const {
  return roleid_;
}
inline void GM_PayCallBack::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string finish_time = 8;
inline bool GM_PayCallBack::has_finish_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_PayCallBack::set_has_finish_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_PayCallBack::clear_has_finish_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_PayCallBack::clear_finish_time() {
  if (finish_time_ != &::google::protobuf::internal::kEmptyString) {
    finish_time_->clear();
  }
  clear_has_finish_time();
}
inline const ::std::string& GM_PayCallBack::finish_time() const {
  return *finish_time_;
}
inline void GM_PayCallBack::set_finish_time(const ::std::string& value) {
  set_has_finish_time();
  if (finish_time_ == &::google::protobuf::internal::kEmptyString) {
    finish_time_ = new ::std::string;
  }
  finish_time_->assign(value);
}
inline void GM_PayCallBack::set_finish_time(const char* value) {
  set_has_finish_time();
  if (finish_time_ == &::google::protobuf::internal::kEmptyString) {
    finish_time_ = new ::std::string;
  }
  finish_time_->assign(value);
}
inline void GM_PayCallBack::set_finish_time(const char* value, size_t size) {
  set_has_finish_time();
  if (finish_time_ == &::google::protobuf::internal::kEmptyString) {
    finish_time_ = new ::std::string;
  }
  finish_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_PayCallBack::mutable_finish_time() {
  set_has_finish_time();
  if (finish_time_ == &::google::protobuf::internal::kEmptyString) {
    finish_time_ = new ::std::string;
  }
  return finish_time_;
}
inline ::std::string* GM_PayCallBack::release_finish_time() {
  clear_has_finish_time();
  if (finish_time_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = finish_time_;
    finish_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_PayCallBack::set_allocated_finish_time(::std::string* finish_time) {
  if (finish_time_ != &::google::protobuf::internal::kEmptyString) {
    delete finish_time_;
  }
  if (finish_time) {
    set_has_finish_time();
    finish_time_ = finish_time;
  } else {
    clear_has_finish_time();
    finish_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 productID = 9;
inline bool GM_PayCallBack::has_productid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_PayCallBack::set_has_productid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_PayCallBack::clear_has_productid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_PayCallBack::clear_productid() {
  productid_ = 0;
  clear_has_productid();
}
inline ::google::protobuf::int32 GM_PayCallBack::productid() const {
  return productid_;
}
inline void GM_PayCallBack::set_productid(::google::protobuf::int32 value) {
  set_has_productid();
  productid_ = value;
}

// -------------------------------------------------------------------

// GM_GetPayments

// required int32 count = 1;
inline bool GM_GetPayments::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_GetPayments::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_GetPayments::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_GetPayments::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GM_GetPayments::count() const {
  return count_;
}
inline void GM_GetPayments::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// required uint32 connect = 3;
inline bool GM_GetPayments::has_connect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_GetPayments::set_has_connect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_GetPayments::clear_has_connect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_GetPayments::clear_connect() {
  connect_ = 0u;
  clear_has_connect();
}
inline ::google::protobuf::uint32 GM_GetPayments::connect() const {
  return connect_;
}
inline void GM_GetPayments::set_connect(::google::protobuf::uint32 value) {
  set_has_connect();
  connect_ = value;
}

// required bool ishttprequest = 4;
inline bool GM_GetPayments::has_ishttprequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_GetPayments::set_has_ishttprequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_GetPayments::clear_has_ishttprequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_GetPayments::clear_ishttprequest() {
  ishttprequest_ = false;
  clear_has_ishttprequest();
}
inline bool GM_GetPayments::ishttprequest() const {
  return ishttprequest_;
}
inline void GM_GetPayments::set_ishttprequest(bool value) {
  set_has_ishttprequest();
  ishttprequest_ = value;
}

// repeated .GM_PayCallBack payments = 2;
inline int GM_GetPayments::payments_size() const {
  return payments_.size();
}
inline void GM_GetPayments::clear_payments() {
  payments_.Clear();
}
inline const ::GM_PayCallBack& GM_GetPayments::payments(int index) const {
  return payments_.Get(index);
}
inline ::GM_PayCallBack* GM_GetPayments::mutable_payments(int index) {
  return payments_.Mutable(index);
}
inline ::GM_PayCallBack* GM_GetPayments::add_payments() {
  return payments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_PayCallBack >&
GM_GetPayments::payments() const {
  return payments_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_PayCallBack >*
GM_GetPayments::mutable_payments() {
  return &payments_;
}

// -------------------------------------------------------------------

// GM_PayCallBackRes

// required int32 m_result = 1;
inline bool GM_PayCallBackRes::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_PayCallBackRes::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_PayCallBackRes::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_PayCallBackRes::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GM_PayCallBackRes::m_result() const {
  return m_result_;
}
inline void GM_PayCallBackRes::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// required uint32 connect = 2;
inline bool GM_PayCallBackRes::has_connect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_PayCallBackRes::set_has_connect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_PayCallBackRes::clear_has_connect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_PayCallBackRes::clear_connect() {
  connect_ = 0u;
  clear_has_connect();
}
inline ::google::protobuf::uint32 GM_PayCallBackRes::connect() const {
  return connect_;
}
inline void GM_PayCallBackRes::set_connect(::google::protobuf::uint32 value) {
  set_has_connect();
  connect_ = value;
}

// -------------------------------------------------------------------

// GM_PayFinish

// required string orderid = 1;
inline bool GM_PayFinish::has_orderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_PayFinish::set_has_orderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_PayFinish::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_PayFinish::clear_orderid() {
  if (orderid_ != &::google::protobuf::internal::kEmptyString) {
    orderid_->clear();
  }
  clear_has_orderid();
}
inline const ::std::string& GM_PayFinish::orderid() const {
  return *orderid_;
}
inline void GM_PayFinish::set_orderid(const ::std::string& value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::kEmptyString) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
}
inline void GM_PayFinish::set_orderid(const char* value) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::kEmptyString) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(value);
}
inline void GM_PayFinish::set_orderid(const char* value, size_t size) {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::kEmptyString) {
    orderid_ = new ::std::string;
  }
  orderid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_PayFinish::mutable_orderid() {
  set_has_orderid();
  if (orderid_ == &::google::protobuf::internal::kEmptyString) {
    orderid_ = new ::std::string;
  }
  return orderid_;
}
inline ::std::string* GM_PayFinish::release_orderid() {
  clear_has_orderid();
  if (orderid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = orderid_;
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_PayFinish::set_allocated_orderid(::std::string* orderid) {
  if (orderid_ != &::google::protobuf::internal::kEmptyString) {
    delete orderid_;
  }
  if (orderid) {
    set_has_orderid();
    orderid_ = orderid;
  } else {
    clear_has_orderid();
    orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 platform = 2;
inline bool GM_PayFinish::has_platform() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_PayFinish::set_has_platform() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_PayFinish::clear_has_platform() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_PayFinish::clear_platform() {
  platform_ = 0;
  clear_has_platform();
}
inline ::google::protobuf::int32 GM_PayFinish::platform() const {
  return platform_;
}
inline void GM_PayFinish::set_platform(::google::protobuf::int32 value) {
  set_has_platform();
  platform_ = value;
}

// optional string channel = 3;
inline bool GM_PayFinish::has_channel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_PayFinish::set_has_channel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_PayFinish::clear_has_channel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_PayFinish::clear_channel() {
  if (channel_ != &::google::protobuf::internal::kEmptyString) {
    channel_->clear();
  }
  clear_has_channel();
}
inline const ::std::string& GM_PayFinish::channel() const {
  return *channel_;
}
inline void GM_PayFinish::set_channel(const ::std::string& value) {
  set_has_channel();
  if (channel_ == &::google::protobuf::internal::kEmptyString) {
    channel_ = new ::std::string;
  }
  channel_->assign(value);
}
inline void GM_PayFinish::set_channel(const char* value) {
  set_has_channel();
  if (channel_ == &::google::protobuf::internal::kEmptyString) {
    channel_ = new ::std::string;
  }
  channel_->assign(value);
}
inline void GM_PayFinish::set_channel(const char* value, size_t size) {
  set_has_channel();
  if (channel_ == &::google::protobuf::internal::kEmptyString) {
    channel_ = new ::std::string;
  }
  channel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_PayFinish::mutable_channel() {
  set_has_channel();
  if (channel_ == &::google::protobuf::internal::kEmptyString) {
    channel_ = new ::std::string;
  }
  return channel_;
}
inline ::std::string* GM_PayFinish::release_channel() {
  clear_has_channel();
  if (channel_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = channel_;
    channel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_PayFinish::set_allocated_channel(::std::string* channel) {
  if (channel_ != &::google::protobuf::internal::kEmptyString) {
    delete channel_;
  }
  if (channel) {
    set_has_channel();
    channel_ = channel;
  } else {
    clear_has_channel();
    channel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string finish_time = 4;
inline bool GM_PayFinish::has_finish_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_PayFinish::set_has_finish_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_PayFinish::clear_has_finish_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_PayFinish::clear_finish_time() {
  if (finish_time_ != &::google::protobuf::internal::kEmptyString) {
    finish_time_->clear();
  }
  clear_has_finish_time();
}
inline const ::std::string& GM_PayFinish::finish_time() const {
  return *finish_time_;
}
inline void GM_PayFinish::set_finish_time(const ::std::string& value) {
  set_has_finish_time();
  if (finish_time_ == &::google::protobuf::internal::kEmptyString) {
    finish_time_ = new ::std::string;
  }
  finish_time_->assign(value);
}
inline void GM_PayFinish::set_finish_time(const char* value) {
  set_has_finish_time();
  if (finish_time_ == &::google::protobuf::internal::kEmptyString) {
    finish_time_ = new ::std::string;
  }
  finish_time_->assign(value);
}
inline void GM_PayFinish::set_finish_time(const char* value, size_t size) {
  set_has_finish_time();
  if (finish_time_ == &::google::protobuf::internal::kEmptyString) {
    finish_time_ = new ::std::string;
  }
  finish_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_PayFinish::mutable_finish_time() {
  set_has_finish_time();
  if (finish_time_ == &::google::protobuf::internal::kEmptyString) {
    finish_time_ = new ::std::string;
  }
  return finish_time_;
}
inline ::std::string* GM_PayFinish::release_finish_time() {
  clear_has_finish_time();
  if (finish_time_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = finish_time_;
    finish_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_PayFinish::set_allocated_finish_time(::std::string* finish_time) {
  if (finish_time_ != &::google::protobuf::internal::kEmptyString) {
    delete finish_time_;
  }
  if (finish_time) {
    set_has_finish_time();
    finish_time_ = finish_time;
  } else {
    clear_has_finish_time();
    finish_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SM_GooglePlay_Verify_Order

// required int32 m_result = 1;
inline bool SM_GooglePlay_Verify_Order::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_GooglePlay_Verify_Order::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_GooglePlay_Verify_Order::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_GooglePlay_Verify_Order::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 SM_GooglePlay_Verify_Order::m_result() const {
  return m_result_;
}
inline void SM_GooglePlay_Verify_Order::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// required int32 getroleid = 2;
inline bool SM_GooglePlay_Verify_Order::has_getroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_GooglePlay_Verify_Order::set_has_getroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_GooglePlay_Verify_Order::clear_has_getroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_GooglePlay_Verify_Order::clear_getroleid() {
  getroleid_ = 0;
  clear_has_getroleid();
}
inline ::google::protobuf::int32 SM_GooglePlay_Verify_Order::getroleid() const {
  return getroleid_;
}
inline void SM_GooglePlay_Verify_Order::set_getroleid(::google::protobuf::int32 value) {
  set_has_getroleid();
  getroleid_ = value;
}

// required string jsonStr = 3;
inline bool SM_GooglePlay_Verify_Order::has_jsonstr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_GooglePlay_Verify_Order::set_has_jsonstr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_GooglePlay_Verify_Order::clear_has_jsonstr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_GooglePlay_Verify_Order::clear_jsonstr() {
  if (jsonstr_ != &::google::protobuf::internal::kEmptyString) {
    jsonstr_->clear();
  }
  clear_has_jsonstr();
}
inline const ::std::string& SM_GooglePlay_Verify_Order::jsonstr() const {
  return *jsonstr_;
}
inline void SM_GooglePlay_Verify_Order::set_jsonstr(const ::std::string& value) {
  set_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    jsonstr_ = new ::std::string;
  }
  jsonstr_->assign(value);
}
inline void SM_GooglePlay_Verify_Order::set_jsonstr(const char* value) {
  set_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    jsonstr_ = new ::std::string;
  }
  jsonstr_->assign(value);
}
inline void SM_GooglePlay_Verify_Order::set_jsonstr(const char* value, size_t size) {
  set_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    jsonstr_ = new ::std::string;
  }
  jsonstr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SM_GooglePlay_Verify_Order::mutable_jsonstr() {
  set_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    jsonstr_ = new ::std::string;
  }
  return jsonstr_;
}
inline ::std::string* SM_GooglePlay_Verify_Order::release_jsonstr() {
  clear_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = jsonstr_;
    jsonstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SM_GooglePlay_Verify_Order::set_allocated_jsonstr(::std::string* jsonstr) {
  if (jsonstr_ != &::google::protobuf::internal::kEmptyString) {
    delete jsonstr_;
  }
  if (jsonstr) {
    set_has_jsonstr();
    jsonstr_ = jsonstr;
  } else {
    clear_has_jsonstr();
    jsonstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SM_GooglePlay_Verify_Order_Return

// required int32 m_result = 1;
inline bool SM_GooglePlay_Verify_Order_Return::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_GooglePlay_Verify_Order_Return::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 SM_GooglePlay_Verify_Order_Return::m_result() const {
  return m_result_;
}
inline void SM_GooglePlay_Verify_Order_Return::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// required int32 getroleid = 2;
inline bool SM_GooglePlay_Verify_Order_Return::has_getroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_GooglePlay_Verify_Order_Return::set_has_getroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_has_getroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_getroleid() {
  getroleid_ = 0;
  clear_has_getroleid();
}
inline ::google::protobuf::int32 SM_GooglePlay_Verify_Order_Return::getroleid() const {
  return getroleid_;
}
inline void SM_GooglePlay_Verify_Order_Return::set_getroleid(::google::protobuf::int32 value) {
  set_has_getroleid();
  getroleid_ = value;
}

// required string money = 3;
inline bool SM_GooglePlay_Verify_Order_Return::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_GooglePlay_Verify_Order_Return::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_money() {
  if (money_ != &::google::protobuf::internal::kEmptyString) {
    money_->clear();
  }
  clear_has_money();
}
inline const ::std::string& SM_GooglePlay_Verify_Order_Return::money() const {
  return *money_;
}
inline void SM_GooglePlay_Verify_Order_Return::set_money(const ::std::string& value) {
  set_has_money();
  if (money_ == &::google::protobuf::internal::kEmptyString) {
    money_ = new ::std::string;
  }
  money_->assign(value);
}
inline void SM_GooglePlay_Verify_Order_Return::set_money(const char* value) {
  set_has_money();
  if (money_ == &::google::protobuf::internal::kEmptyString) {
    money_ = new ::std::string;
  }
  money_->assign(value);
}
inline void SM_GooglePlay_Verify_Order_Return::set_money(const char* value, size_t size) {
  set_has_money();
  if (money_ == &::google::protobuf::internal::kEmptyString) {
    money_ = new ::std::string;
  }
  money_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SM_GooglePlay_Verify_Order_Return::mutable_money() {
  set_has_money();
  if (money_ == &::google::protobuf::internal::kEmptyString) {
    money_ = new ::std::string;
  }
  return money_;
}
inline ::std::string* SM_GooglePlay_Verify_Order_Return::release_money() {
  clear_has_money();
  if (money_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = money_;
    money_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SM_GooglePlay_Verify_Order_Return::set_allocated_money(::std::string* money) {
  if (money_ != &::google::protobuf::internal::kEmptyString) {
    delete money_;
  }
  if (money) {
    set_has_money();
    money_ = money;
  } else {
    clear_has_money();
    money_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string transaction_id = 5;
inline bool SM_GooglePlay_Verify_Order_Return::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SM_GooglePlay_Verify_Order_Return::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_transaction_id() {
  if (transaction_id_ != &::google::protobuf::internal::kEmptyString) {
    transaction_id_->clear();
  }
  clear_has_transaction_id();
}
inline const ::std::string& SM_GooglePlay_Verify_Order_Return::transaction_id() const {
  return *transaction_id_;
}
inline void SM_GooglePlay_Verify_Order_Return::set_transaction_id(const ::std::string& value) {
  set_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::kEmptyString) {
    transaction_id_ = new ::std::string;
  }
  transaction_id_->assign(value);
}
inline void SM_GooglePlay_Verify_Order_Return::set_transaction_id(const char* value) {
  set_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::kEmptyString) {
    transaction_id_ = new ::std::string;
  }
  transaction_id_->assign(value);
}
inline void SM_GooglePlay_Verify_Order_Return::set_transaction_id(const char* value, size_t size) {
  set_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::kEmptyString) {
    transaction_id_ = new ::std::string;
  }
  transaction_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SM_GooglePlay_Verify_Order_Return::mutable_transaction_id() {
  set_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::kEmptyString) {
    transaction_id_ = new ::std::string;
  }
  return transaction_id_;
}
inline ::std::string* SM_GooglePlay_Verify_Order_Return::release_transaction_id() {
  clear_has_transaction_id();
  if (transaction_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = transaction_id_;
    transaction_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SM_GooglePlay_Verify_Order_Return::set_allocated_transaction_id(::std::string* transaction_id) {
  if (transaction_id_ != &::google::protobuf::internal::kEmptyString) {
    delete transaction_id_;
  }
  if (transaction_id) {
    set_has_transaction_id();
    transaction_id_ = transaction_id;
  } else {
    clear_has_transaction_id();
    transaction_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 quantity = 4;
inline bool SM_GooglePlay_Verify_Order_Return::has_quantity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SM_GooglePlay_Verify_Order_Return::set_has_quantity() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_quantity() {
  quantity_ = 0u;
  clear_has_quantity();
}
inline ::google::protobuf::uint32 SM_GooglePlay_Verify_Order_Return::quantity() const {
  return quantity_;
}
inline void SM_GooglePlay_Verify_Order_Return::set_quantity(::google::protobuf::uint32 value) {
  set_has_quantity();
  quantity_ = value;
}

// optional string purchase_date = 7;
inline bool SM_GooglePlay_Verify_Order_Return::has_purchase_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SM_GooglePlay_Verify_Order_Return::set_has_purchase_date() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_has_purchase_date() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_purchase_date() {
  if (purchase_date_ != &::google::protobuf::internal::kEmptyString) {
    purchase_date_->clear();
  }
  clear_has_purchase_date();
}
inline const ::std::string& SM_GooglePlay_Verify_Order_Return::purchase_date() const {
  return *purchase_date_;
}
inline void SM_GooglePlay_Verify_Order_Return::set_purchase_date(const ::std::string& value) {
  set_has_purchase_date();
  if (purchase_date_ == &::google::protobuf::internal::kEmptyString) {
    purchase_date_ = new ::std::string;
  }
  purchase_date_->assign(value);
}
inline void SM_GooglePlay_Verify_Order_Return::set_purchase_date(const char* value) {
  set_has_purchase_date();
  if (purchase_date_ == &::google::protobuf::internal::kEmptyString) {
    purchase_date_ = new ::std::string;
  }
  purchase_date_->assign(value);
}
inline void SM_GooglePlay_Verify_Order_Return::set_purchase_date(const char* value, size_t size) {
  set_has_purchase_date();
  if (purchase_date_ == &::google::protobuf::internal::kEmptyString) {
    purchase_date_ = new ::std::string;
  }
  purchase_date_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SM_GooglePlay_Verify_Order_Return::mutable_purchase_date() {
  set_has_purchase_date();
  if (purchase_date_ == &::google::protobuf::internal::kEmptyString) {
    purchase_date_ = new ::std::string;
  }
  return purchase_date_;
}
inline ::std::string* SM_GooglePlay_Verify_Order_Return::release_purchase_date() {
  clear_has_purchase_date();
  if (purchase_date_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = purchase_date_;
    purchase_date_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SM_GooglePlay_Verify_Order_Return::set_allocated_purchase_date(::std::string* purchase_date) {
  if (purchase_date_ != &::google::protobuf::internal::kEmptyString) {
    delete purchase_date_;
  }
  if (purchase_date) {
    set_has_purchase_date();
    purchase_date_ = purchase_date;
  } else {
    clear_has_purchase_date();
    purchase_date_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 productid = 6;
inline bool SM_GooglePlay_Verify_Order_Return::has_productid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SM_GooglePlay_Verify_Order_Return::set_has_productid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_has_productid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_productid() {
  productid_ = 0;
  clear_has_productid();
}
inline ::google::protobuf::int32 SM_GooglePlay_Verify_Order_Return::productid() const {
  return productid_;
}
inline void SM_GooglePlay_Verify_Order_Return::set_productid(::google::protobuf::int32 value) {
  set_has_productid();
  productid_ = value;
}

// optional string jsonStr = 8;
inline bool SM_GooglePlay_Verify_Order_Return::has_jsonstr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SM_GooglePlay_Verify_Order_Return::set_has_jsonstr() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_has_jsonstr() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_jsonstr() {
  if (jsonstr_ != &::google::protobuf::internal::kEmptyString) {
    jsonstr_->clear();
  }
  clear_has_jsonstr();
}
inline const ::std::string& SM_GooglePlay_Verify_Order_Return::jsonstr() const {
  return *jsonstr_;
}
inline void SM_GooglePlay_Verify_Order_Return::set_jsonstr(const ::std::string& value) {
  set_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    jsonstr_ = new ::std::string;
  }
  jsonstr_->assign(value);
}
inline void SM_GooglePlay_Verify_Order_Return::set_jsonstr(const char* value) {
  set_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    jsonstr_ = new ::std::string;
  }
  jsonstr_->assign(value);
}
inline void SM_GooglePlay_Verify_Order_Return::set_jsonstr(const char* value, size_t size) {
  set_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    jsonstr_ = new ::std::string;
  }
  jsonstr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SM_GooglePlay_Verify_Order_Return::mutable_jsonstr() {
  set_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    jsonstr_ = new ::std::string;
  }
  return jsonstr_;
}
inline ::std::string* SM_GooglePlay_Verify_Order_Return::release_jsonstr() {
  clear_has_jsonstr();
  if (jsonstr_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = jsonstr_;
    jsonstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SM_GooglePlay_Verify_Order_Return::set_allocated_jsonstr(::std::string* jsonstr) {
  if (jsonstr_ != &::google::protobuf::internal::kEmptyString) {
    delete jsonstr_;
  }
  if (jsonstr) {
    set_has_jsonstr();
    jsonstr_ = jsonstr;
  } else {
    clear_has_jsonstr();
    jsonstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 diamond = 9;
inline bool SM_GooglePlay_Verify_Order_Return::has_diamond() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SM_GooglePlay_Verify_Order_Return::set_has_diamond() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SM_GooglePlay_Verify_Order_Return::clear_diamond() {
  diamond_ = 0;
  clear_has_diamond();
}
inline ::google::protobuf::int32 SM_GooglePlay_Verify_Order_Return::diamond() const {
  return diamond_;
}
inline void SM_GooglePlay_Verify_Order_Return::set_diamond(::google::protobuf::int32 value) {
  set_has_diamond();
  diamond_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_SP_5fpayment_2etxt__INCLUDED
