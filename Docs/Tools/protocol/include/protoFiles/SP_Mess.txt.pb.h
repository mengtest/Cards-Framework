// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_Mess.txt

#ifndef PROTOBUF_SP_5fMess_2etxt__INCLUDED
#define PROTOBUF_SP_5fMess_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SP_5fMess_2etxt();
void protobuf_AssignDesc_SP_5fMess_2etxt();
void protobuf_ShutdownFile_SP_5fMess_2etxt();

class SM_Room_role;
class SM_Room_roleVec;
class SM_Room_db_request;
class SM_Room_common;
class SM_Room_commonVec;
class SM_Mj_protocol;
class SM_Mj_RoomCommon;

// ===================================================================

class SM_Room_role : public ::google::protobuf::Message {
 public:
  SM_Room_role();
  virtual ~SM_Room_role();

  SM_Room_role(const SM_Room_role& from);

  inline SM_Room_role& operator=(const SM_Room_role& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Room_role& default_instance();

  void Swap(SM_Room_role* other);

  // implements Message ----------------------------------------------

  SM_Room_role* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Room_role& from);
  void MergeFrom(const SM_Room_role& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 createtime = 2;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 2;
  inline ::google::protobuf::int32 createtime() const;
  inline void set_createtime(::google::protobuf::int32 value);

  // optional int64 increid = 3;
  inline bool has_increid() const;
  inline void clear_increid();
  static const int kIncreidFieldNumber = 3;
  inline ::google::protobuf::int64 increid() const;
  inline void set_increid(::google::protobuf::int64 value);

  // optional int32 score = 4;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 4;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_Room_role)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_increid();
  inline void clear_has_increid();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 createtime_;
  ::google::protobuf::int64 increid_;
  ::google::protobuf::int32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fMess_2etxt();
  friend void protobuf_AssignDesc_SP_5fMess_2etxt();
  friend void protobuf_ShutdownFile_SP_5fMess_2etxt();

  void InitAsDefaultInstance();
  static SM_Room_role* default_instance_;
};
// -------------------------------------------------------------------

class SM_Room_roleVec : public ::google::protobuf::Message {
 public:
  SM_Room_roleVec();
  virtual ~SM_Room_roleVec();

  SM_Room_roleVec(const SM_Room_roleVec& from);

  inline SM_Room_roleVec& operator=(const SM_Room_roleVec& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Room_roleVec& default_instance();

  void Swap(SM_Room_roleVec* other);

  // implements Message ----------------------------------------------

  SM_Room_roleVec* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Room_roleVec& from);
  void MergeFrom(const SM_Room_roleVec& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // repeated .SM_Room_role data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::SM_Room_role& data(int index) const;
  inline ::SM_Room_role* mutable_data(int index);
  inline ::SM_Room_role* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::SM_Room_role >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::SM_Room_role >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:SM_Room_roleVec)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SM_Room_role > data_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fMess_2etxt();
  friend void protobuf_AssignDesc_SP_5fMess_2etxt();
  friend void protobuf_ShutdownFile_SP_5fMess_2etxt();

  void InitAsDefaultInstance();
  static SM_Room_roleVec* default_instance_;
};
// -------------------------------------------------------------------

class SM_Room_db_request : public ::google::protobuf::Message {
 public:
  SM_Room_db_request();
  virtual ~SM_Room_db_request();

  SM_Room_db_request(const SM_Room_db_request& from);

  inline SM_Room_db_request& operator=(const SM_Room_db_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Room_db_request& default_instance();

  void Swap(SM_Room_db_request* other);

  // implements Message ----------------------------------------------

  SM_Room_db_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Room_db_request& from);
  void MergeFrom(const SM_Room_db_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_Room_db_request)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fMess_2etxt();
  friend void protobuf_AssignDesc_SP_5fMess_2etxt();
  friend void protobuf_ShutdownFile_SP_5fMess_2etxt();

  void InitAsDefaultInstance();
  static SM_Room_db_request* default_instance_;
};
// -------------------------------------------------------------------

class SM_Room_common : public ::google::protobuf::Message {
 public:
  SM_Room_common();
  virtual ~SM_Room_common();

  SM_Room_common(const SM_Room_common& from);

  inline SM_Room_common& operator=(const SM_Room_common& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Room_common& default_instance();

  void Swap(SM_Room_common* other);

  // implements Message ----------------------------------------------

  SM_Room_common* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Room_common& from);
  void MergeFrom(const SM_Room_common& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 increid = 1;
  inline bool has_increid() const;
  inline void clear_increid();
  static const int kIncreidFieldNumber = 1;
  inline ::google::protobuf::int64 increid() const;
  inline void set_increid(::google::protobuf::int64 value);

  // optional string roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline const ::std::string& roleid() const;
  inline void set_roleid(const ::std::string& value);
  inline void set_roleid(const char* value);
  inline void set_roleid(const char* value, size_t size);
  inline ::std::string* mutable_roleid();
  inline ::std::string* release_roleid();
  inline void set_allocated_roleid(::std::string* roleid);

  // optional int32 begintime = 3;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBegintimeFieldNumber = 3;
  inline ::google::protobuf::int32 begintime() const;
  inline void set_begintime(::google::protobuf::int32 value);

  // optional int32 endtime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 4;
  inline ::google::protobuf::int32 endtime() const;
  inline void set_endtime(::google::protobuf::int32 value);

  // optional int32 monsterid = 5;
  inline bool has_monsterid() const;
  inline void clear_monsterid();
  static const int kMonsteridFieldNumber = 5;
  inline ::google::protobuf::int32 monsterid() const;
  inline void set_monsterid(::google::protobuf::int32 value);

  // optional int32 rate = 6;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 6;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // optional int32 roomid = 7;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomidFieldNumber = 7;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_Room_common)
 private:
  inline void set_has_increid();
  inline void clear_has_increid();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_monsterid();
  inline void clear_has_monsterid();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 increid_;
  ::std::string* roleid_;
  ::google::protobuf::int32 begintime_;
  ::google::protobuf::int32 endtime_;
  ::google::protobuf::int32 monsterid_;
  ::google::protobuf::int32 rate_;
  ::google::protobuf::int32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fMess_2etxt();
  friend void protobuf_AssignDesc_SP_5fMess_2etxt();
  friend void protobuf_ShutdownFile_SP_5fMess_2etxt();

  void InitAsDefaultInstance();
  static SM_Room_common* default_instance_;
};
// -------------------------------------------------------------------

class SM_Room_commonVec : public ::google::protobuf::Message {
 public:
  SM_Room_commonVec();
  virtual ~SM_Room_commonVec();

  SM_Room_commonVec(const SM_Room_commonVec& from);

  inline SM_Room_commonVec& operator=(const SM_Room_commonVec& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Room_commonVec& default_instance();

  void Swap(SM_Room_commonVec* other);

  // implements Message ----------------------------------------------

  SM_Room_commonVec* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Room_commonVec& from);
  void MergeFrom(const SM_Room_commonVec& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // repeated .SM_Room_common data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::SM_Room_common& data(int index) const;
  inline ::SM_Room_common* mutable_data(int index);
  inline ::SM_Room_common* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::SM_Room_common >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::SM_Room_common >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:SM_Room_commonVec)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SM_Room_common > data_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fMess_2etxt();
  friend void protobuf_AssignDesc_SP_5fMess_2etxt();
  friend void protobuf_ShutdownFile_SP_5fMess_2etxt();

  void InitAsDefaultInstance();
  static SM_Room_commonVec* default_instance_;
};
// -------------------------------------------------------------------

class SM_Mj_protocol : public ::google::protobuf::Message {
 public:
  SM_Mj_protocol();
  virtual ~SM_Mj_protocol();

  SM_Mj_protocol(const SM_Mj_protocol& from);

  inline SM_Mj_protocol& operator=(const SM_Mj_protocol& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Mj_protocol& default_instance();

  void Swap(SM_Mj_protocol* other);

  // implements Message ----------------------------------------------

  SM_Mj_protocol* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Mj_protocol& from);
  void MergeFrom(const SM_Mj_protocol& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 avoid = 2;
  inline bool has_avoid() const;
  inline void clear_avoid();
  static const int kAvoidFieldNumber = 2;
  inline ::google::protobuf::int32 avoid() const;
  inline void set_avoid(::google::protobuf::int32 value);

  // optional int32 messageid = 3;
  inline bool has_messageid() const;
  inline void clear_messageid();
  static const int kMessageidFieldNumber = 3;
  inline ::google::protobuf::int32 messageid() const;
  inline void set_messageid(::google::protobuf::int32 value);

  // optional int32 nowtime = 4;
  inline bool has_nowtime() const;
  inline void clear_nowtime();
  static const int kNowtimeFieldNumber = 4;
  inline ::google::protobuf::int32 nowtime() const;
  inline void set_nowtime(::google::protobuf::int32 value);

  // optional bytes protocol = 5;
  inline bool has_protocol() const;
  inline void clear_protocol();
  static const int kProtocolFieldNumber = 5;
  inline const ::std::string& protocol() const;
  inline void set_protocol(const ::std::string& value);
  inline void set_protocol(const char* value);
  inline void set_protocol(const void* value, size_t size);
  inline ::std::string* mutable_protocol();
  inline ::std::string* release_protocol();
  inline void set_allocated_protocol(::std::string* protocol);

  // optional int32 increidproto = 6;
  inline bool has_increidproto() const;
  inline void clear_increidproto();
  static const int kIncreidprotoFieldNumber = 6;
  inline ::google::protobuf::int32 increidproto() const;
  inline void set_increidproto(::google::protobuf::int32 value);

  // optional int32 length = 7;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 7;
  inline ::google::protobuf::int32 length() const;
  inline void set_length(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_Mj_protocol)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_avoid();
  inline void clear_has_avoid();
  inline void set_has_messageid();
  inline void clear_has_messageid();
  inline void set_has_nowtime();
  inline void clear_has_nowtime();
  inline void set_has_protocol();
  inline void clear_has_protocol();
  inline void set_has_increidproto();
  inline void clear_has_increidproto();
  inline void set_has_length();
  inline void clear_has_length();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 avoid_;
  ::google::protobuf::int32 messageid_;
  ::google::protobuf::int32 nowtime_;
  ::std::string* protocol_;
  ::google::protobuf::int32 increidproto_;
  ::google::protobuf::int32 length_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fMess_2etxt();
  friend void protobuf_AssignDesc_SP_5fMess_2etxt();
  friend void protobuf_ShutdownFile_SP_5fMess_2etxt();

  void InitAsDefaultInstance();
  static SM_Mj_protocol* default_instance_;
};
// -------------------------------------------------------------------

class SM_Mj_RoomCommon : public ::google::protobuf::Message {
 public:
  SM_Mj_RoomCommon();
  virtual ~SM_Mj_RoomCommon();

  SM_Mj_RoomCommon(const SM_Mj_RoomCommon& from);

  inline SM_Mj_RoomCommon& operator=(const SM_Mj_RoomCommon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Mj_RoomCommon& default_instance();

  void Swap(SM_Mj_RoomCommon* other);

  // implements Message ----------------------------------------------

  SM_Mj_RoomCommon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Mj_RoomCommon& from);
  void MergeFrom(const SM_Mj_RoomCommon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 increid = 1;
  inline bool has_increid() const;
  inline void clear_increid();
  static const int kIncreidFieldNumber = 1;
  inline ::google::protobuf::int64 increid() const;
  inline void set_increid(::google::protobuf::int64 value);

  // optional int32 playercout = 2;
  inline bool has_playercout() const;
  inline void clear_playercout();
  static const int kPlayercoutFieldNumber = 2;
  inline ::google::protobuf::int32 playercout() const;
  inline void set_playercout(::google::protobuf::int32 value);

  // repeated int32 roleidvec = 3;
  inline int roleidvec_size() const;
  inline void clear_roleidvec();
  static const int kRoleidvecFieldNumber = 3;
  inline ::google::protobuf::int32 roleidvec(int index) const;
  inline void set_roleidvec(int index, ::google::protobuf::int32 value);
  inline void add_roleidvec(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roleidvec() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roleidvec();

  // repeated .SM_Mj_protocol proto = 4;
  inline int proto_size() const;
  inline void clear_proto();
  static const int kProtoFieldNumber = 4;
  inline const ::SM_Mj_protocol& proto(int index) const;
  inline ::SM_Mj_protocol* mutable_proto(int index);
  inline ::SM_Mj_protocol* add_proto();
  inline const ::google::protobuf::RepeatedPtrField< ::SM_Mj_protocol >&
      proto() const;
  inline ::google::protobuf::RepeatedPtrField< ::SM_Mj_protocol >*
      mutable_proto();

  // @@protoc_insertion_point(class_scope:SM_Mj_RoomCommon)
 private:
  inline void set_has_increid();
  inline void clear_has_increid();
  inline void set_has_playercout();
  inline void clear_has_playercout();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 increid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roleidvec_;
  ::google::protobuf::RepeatedPtrField< ::SM_Mj_protocol > proto_;
  ::google::protobuf::int32 playercout_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fMess_2etxt();
  friend void protobuf_AssignDesc_SP_5fMess_2etxt();
  friend void protobuf_ShutdownFile_SP_5fMess_2etxt();

  void InitAsDefaultInstance();
  static SM_Mj_RoomCommon* default_instance_;
};
// ===================================================================


// ===================================================================

// SM_Room_role

// required int32 roleid = 1;
inline bool SM_Room_role::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Room_role::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Room_role::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Room_role::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SM_Room_role::roleid() const {
  return roleid_;
}
inline void SM_Room_role::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 createtime = 2;
inline bool SM_Room_role::has_createtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_Room_role::set_has_createtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_Room_role::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_Room_role::clear_createtime() {
  createtime_ = 0;
  clear_has_createtime();
}
inline ::google::protobuf::int32 SM_Room_role::createtime() const {
  return createtime_;
}
inline void SM_Room_role::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional int64 increid = 3;
inline bool SM_Room_role::has_increid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_Room_role::set_has_increid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_Room_role::clear_has_increid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_Room_role::clear_increid() {
  increid_ = GOOGLE_LONGLONG(0);
  clear_has_increid();
}
inline ::google::protobuf::int64 SM_Room_role::increid() const {
  return increid_;
}
inline void SM_Room_role::set_increid(::google::protobuf::int64 value) {
  set_has_increid();
  increid_ = value;
}

// optional int32 score = 4;
inline bool SM_Room_role::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SM_Room_role::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SM_Room_role::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SM_Room_role::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 SM_Room_role::score() const {
  return score_;
}
inline void SM_Room_role::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// SM_Room_roleVec

// required int32 roleid = 1;
inline bool SM_Room_roleVec::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Room_roleVec::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Room_roleVec::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Room_roleVec::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SM_Room_roleVec::roleid() const {
  return roleid_;
}
inline void SM_Room_roleVec::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// repeated .SM_Room_role data = 2;
inline int SM_Room_roleVec::data_size() const {
  return data_.size();
}
inline void SM_Room_roleVec::clear_data() {
  data_.Clear();
}
inline const ::SM_Room_role& SM_Room_roleVec::data(int index) const {
  return data_.Get(index);
}
inline ::SM_Room_role* SM_Room_roleVec::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::SM_Room_role* SM_Room_roleVec::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SM_Room_role >&
SM_Room_roleVec::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::SM_Room_role >*
SM_Room_roleVec::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// SM_Room_db_request

// required int32 roleid = 1;
inline bool SM_Room_db_request::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Room_db_request::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Room_db_request::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Room_db_request::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SM_Room_db_request::roleid() const {
  return roleid_;
}
inline void SM_Room_db_request::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// SM_Room_common

// required int64 increid = 1;
inline bool SM_Room_common::has_increid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Room_common::set_has_increid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Room_common::clear_has_increid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Room_common::clear_increid() {
  increid_ = GOOGLE_LONGLONG(0);
  clear_has_increid();
}
inline ::google::protobuf::int64 SM_Room_common::increid() const {
  return increid_;
}
inline void SM_Room_common::set_increid(::google::protobuf::int64 value) {
  set_has_increid();
  increid_ = value;
}

// optional string roleid = 2;
inline bool SM_Room_common::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_Room_common::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_Room_common::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_Room_common::clear_roleid() {
  if (roleid_ != &::google::protobuf::internal::kEmptyString) {
    roleid_->clear();
  }
  clear_has_roleid();
}
inline const ::std::string& SM_Room_common::roleid() const {
  return *roleid_;
}
inline void SM_Room_common::set_roleid(const ::std::string& value) {
  set_has_roleid();
  if (roleid_ == &::google::protobuf::internal::kEmptyString) {
    roleid_ = new ::std::string;
  }
  roleid_->assign(value);
}
inline void SM_Room_common::set_roleid(const char* value) {
  set_has_roleid();
  if (roleid_ == &::google::protobuf::internal::kEmptyString) {
    roleid_ = new ::std::string;
  }
  roleid_->assign(value);
}
inline void SM_Room_common::set_roleid(const char* value, size_t size) {
  set_has_roleid();
  if (roleid_ == &::google::protobuf::internal::kEmptyString) {
    roleid_ = new ::std::string;
  }
  roleid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SM_Room_common::mutable_roleid() {
  set_has_roleid();
  if (roleid_ == &::google::protobuf::internal::kEmptyString) {
    roleid_ = new ::std::string;
  }
  return roleid_;
}
inline ::std::string* SM_Room_common::release_roleid() {
  clear_has_roleid();
  if (roleid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = roleid_;
    roleid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SM_Room_common::set_allocated_roleid(::std::string* roleid) {
  if (roleid_ != &::google::protobuf::internal::kEmptyString) {
    delete roleid_;
  }
  if (roleid) {
    set_has_roleid();
    roleid_ = roleid;
  } else {
    clear_has_roleid();
    roleid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 begintime = 3;
inline bool SM_Room_common::has_begintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_Room_common::set_has_begintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_Room_common::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_Room_common::clear_begintime() {
  begintime_ = 0;
  clear_has_begintime();
}
inline ::google::protobuf::int32 SM_Room_common::begintime() const {
  return begintime_;
}
inline void SM_Room_common::set_begintime(::google::protobuf::int32 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int32 endtime = 4;
inline bool SM_Room_common::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SM_Room_common::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SM_Room_common::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SM_Room_common::clear_endtime() {
  endtime_ = 0;
  clear_has_endtime();
}
inline ::google::protobuf::int32 SM_Room_common::endtime() const {
  return endtime_;
}
inline void SM_Room_common::set_endtime(::google::protobuf::int32 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional int32 monsterid = 5;
inline bool SM_Room_common::has_monsterid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SM_Room_common::set_has_monsterid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SM_Room_common::clear_has_monsterid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SM_Room_common::clear_monsterid() {
  monsterid_ = 0;
  clear_has_monsterid();
}
inline ::google::protobuf::int32 SM_Room_common::monsterid() const {
  return monsterid_;
}
inline void SM_Room_common::set_monsterid(::google::protobuf::int32 value) {
  set_has_monsterid();
  monsterid_ = value;
}

// optional int32 rate = 6;
inline bool SM_Room_common::has_rate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SM_Room_common::set_has_rate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SM_Room_common::clear_has_rate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SM_Room_common::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 SM_Room_common::rate() const {
  return rate_;
}
inline void SM_Room_common::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
}

// optional int32 roomid = 7;
inline bool SM_Room_common::has_roomid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SM_Room_common::set_has_roomid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SM_Room_common::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SM_Room_common::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 SM_Room_common::roomid() const {
  return roomid_;
}
inline void SM_Room_common::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// SM_Room_commonVec

// required int32 roleid = 1;
inline bool SM_Room_commonVec::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Room_commonVec::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Room_commonVec::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Room_commonVec::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SM_Room_commonVec::roleid() const {
  return roleid_;
}
inline void SM_Room_commonVec::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// repeated .SM_Room_common data = 2;
inline int SM_Room_commonVec::data_size() const {
  return data_.size();
}
inline void SM_Room_commonVec::clear_data() {
  data_.Clear();
}
inline const ::SM_Room_common& SM_Room_commonVec::data(int index) const {
  return data_.Get(index);
}
inline ::SM_Room_common* SM_Room_commonVec::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::SM_Room_common* SM_Room_commonVec::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SM_Room_common >&
SM_Room_commonVec::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::SM_Room_common >*
SM_Room_commonVec::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// SM_Mj_protocol

// required int32 roleid = 1;
inline bool SM_Mj_protocol::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Mj_protocol::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Mj_protocol::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Mj_protocol::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SM_Mj_protocol::roleid() const {
  return roleid_;
}
inline void SM_Mj_protocol::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 avoid = 2;
inline bool SM_Mj_protocol::has_avoid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_Mj_protocol::set_has_avoid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_Mj_protocol::clear_has_avoid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_Mj_protocol::clear_avoid() {
  avoid_ = 0;
  clear_has_avoid();
}
inline ::google::protobuf::int32 SM_Mj_protocol::avoid() const {
  return avoid_;
}
inline void SM_Mj_protocol::set_avoid(::google::protobuf::int32 value) {
  set_has_avoid();
  avoid_ = value;
}

// optional int32 messageid = 3;
inline bool SM_Mj_protocol::has_messageid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_Mj_protocol::set_has_messageid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_Mj_protocol::clear_has_messageid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_Mj_protocol::clear_messageid() {
  messageid_ = 0;
  clear_has_messageid();
}
inline ::google::protobuf::int32 SM_Mj_protocol::messageid() const {
  return messageid_;
}
inline void SM_Mj_protocol::set_messageid(::google::protobuf::int32 value) {
  set_has_messageid();
  messageid_ = value;
}

// optional int32 nowtime = 4;
inline bool SM_Mj_protocol::has_nowtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SM_Mj_protocol::set_has_nowtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SM_Mj_protocol::clear_has_nowtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SM_Mj_protocol::clear_nowtime() {
  nowtime_ = 0;
  clear_has_nowtime();
}
inline ::google::protobuf::int32 SM_Mj_protocol::nowtime() const {
  return nowtime_;
}
inline void SM_Mj_protocol::set_nowtime(::google::protobuf::int32 value) {
  set_has_nowtime();
  nowtime_ = value;
}

// optional bytes protocol = 5;
inline bool SM_Mj_protocol::has_protocol() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SM_Mj_protocol::set_has_protocol() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SM_Mj_protocol::clear_has_protocol() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SM_Mj_protocol::clear_protocol() {
  if (protocol_ != &::google::protobuf::internal::kEmptyString) {
    protocol_->clear();
  }
  clear_has_protocol();
}
inline const ::std::string& SM_Mj_protocol::protocol() const {
  return *protocol_;
}
inline void SM_Mj_protocol::set_protocol(const ::std::string& value) {
  set_has_protocol();
  if (protocol_ == &::google::protobuf::internal::kEmptyString) {
    protocol_ = new ::std::string;
  }
  protocol_->assign(value);
}
inline void SM_Mj_protocol::set_protocol(const char* value) {
  set_has_protocol();
  if (protocol_ == &::google::protobuf::internal::kEmptyString) {
    protocol_ = new ::std::string;
  }
  protocol_->assign(value);
}
inline void SM_Mj_protocol::set_protocol(const void* value, size_t size) {
  set_has_protocol();
  if (protocol_ == &::google::protobuf::internal::kEmptyString) {
    protocol_ = new ::std::string;
  }
  protocol_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SM_Mj_protocol::mutable_protocol() {
  set_has_protocol();
  if (protocol_ == &::google::protobuf::internal::kEmptyString) {
    protocol_ = new ::std::string;
  }
  return protocol_;
}
inline ::std::string* SM_Mj_protocol::release_protocol() {
  clear_has_protocol();
  if (protocol_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = protocol_;
    protocol_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SM_Mj_protocol::set_allocated_protocol(::std::string* protocol) {
  if (protocol_ != &::google::protobuf::internal::kEmptyString) {
    delete protocol_;
  }
  if (protocol) {
    set_has_protocol();
    protocol_ = protocol;
  } else {
    clear_has_protocol();
    protocol_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 increidproto = 6;
inline bool SM_Mj_protocol::has_increidproto() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SM_Mj_protocol::set_has_increidproto() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SM_Mj_protocol::clear_has_increidproto() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SM_Mj_protocol::clear_increidproto() {
  increidproto_ = 0;
  clear_has_increidproto();
}
inline ::google::protobuf::int32 SM_Mj_protocol::increidproto() const {
  return increidproto_;
}
inline void SM_Mj_protocol::set_increidproto(::google::protobuf::int32 value) {
  set_has_increidproto();
  increidproto_ = value;
}

// optional int32 length = 7;
inline bool SM_Mj_protocol::has_length() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SM_Mj_protocol::set_has_length() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SM_Mj_protocol::clear_has_length() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SM_Mj_protocol::clear_length() {
  length_ = 0;
  clear_has_length();
}
inline ::google::protobuf::int32 SM_Mj_protocol::length() const {
  return length_;
}
inline void SM_Mj_protocol::set_length(::google::protobuf::int32 value) {
  set_has_length();
  length_ = value;
}

// -------------------------------------------------------------------

// SM_Mj_RoomCommon

// required int64 increid = 1;
inline bool SM_Mj_RoomCommon::has_increid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Mj_RoomCommon::set_has_increid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Mj_RoomCommon::clear_has_increid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Mj_RoomCommon::clear_increid() {
  increid_ = GOOGLE_LONGLONG(0);
  clear_has_increid();
}
inline ::google::protobuf::int64 SM_Mj_RoomCommon::increid() const {
  return increid_;
}
inline void SM_Mj_RoomCommon::set_increid(::google::protobuf::int64 value) {
  set_has_increid();
  increid_ = value;
}

// optional int32 playercout = 2;
inline bool SM_Mj_RoomCommon::has_playercout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_Mj_RoomCommon::set_has_playercout() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_Mj_RoomCommon::clear_has_playercout() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_Mj_RoomCommon::clear_playercout() {
  playercout_ = 0;
  clear_has_playercout();
}
inline ::google::protobuf::int32 SM_Mj_RoomCommon::playercout() const {
  return playercout_;
}
inline void SM_Mj_RoomCommon::set_playercout(::google::protobuf::int32 value) {
  set_has_playercout();
  playercout_ = value;
}

// repeated int32 roleidvec = 3;
inline int SM_Mj_RoomCommon::roleidvec_size() const {
  return roleidvec_.size();
}
inline void SM_Mj_RoomCommon::clear_roleidvec() {
  roleidvec_.Clear();
}
inline ::google::protobuf::int32 SM_Mj_RoomCommon::roleidvec(int index) const {
  return roleidvec_.Get(index);
}
inline void SM_Mj_RoomCommon::set_roleidvec(int index, ::google::protobuf::int32 value) {
  roleidvec_.Set(index, value);
}
inline void SM_Mj_RoomCommon::add_roleidvec(::google::protobuf::int32 value) {
  roleidvec_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SM_Mj_RoomCommon::roleidvec() const {
  return roleidvec_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SM_Mj_RoomCommon::mutable_roleidvec() {
  return &roleidvec_;
}

// repeated .SM_Mj_protocol proto = 4;
inline int SM_Mj_RoomCommon::proto_size() const {
  return proto_.size();
}
inline void SM_Mj_RoomCommon::clear_proto() {
  proto_.Clear();
}
inline const ::SM_Mj_protocol& SM_Mj_RoomCommon::proto(int index) const {
  return proto_.Get(index);
}
inline ::SM_Mj_protocol* SM_Mj_RoomCommon::mutable_proto(int index) {
  return proto_.Mutable(index);
}
inline ::SM_Mj_protocol* SM_Mj_RoomCommon::add_proto() {
  return proto_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SM_Mj_protocol >&
SM_Mj_RoomCommon::proto() const {
  return proto_;
}
inline ::google::protobuf::RepeatedPtrField< ::SM_Mj_protocol >*
SM_Mj_RoomCommon::mutable_proto() {
  return &proto_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_SP_5fMess_2etxt__INCLUDED
