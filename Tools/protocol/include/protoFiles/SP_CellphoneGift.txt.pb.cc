// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_CellphoneGift.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SP_CellphoneGift.txt.pb.h"
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* SM_CellphoneGift_Record_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SM_CellphoneGift_Record_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_CellphoneGift_SendShortMessage_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_CellphoneGift_SendShortMessage_Request_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_SP_5fCellphoneGift_2etxt() {
  protobuf_AddDesc_SP_5fCellphoneGift_2etxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SP_CellphoneGift.txt");
  GOOGLE_CHECK(file != NULL);
  SM_CellphoneGift_Record_descriptor_ = file->message_type(0);
  static const int SM_CellphoneGift_Record_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_CellphoneGift_Record, phonenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_CellphoneGift_Record, isbind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_CellphoneGift_Record, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_CellphoneGift_Record, getcodetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_CellphoneGift_Record, isget_),
  };
  SM_CellphoneGift_Record_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SM_CellphoneGift_Record_descriptor_,
      SM_CellphoneGift_Record::default_instance_,
      SM_CellphoneGift_Record_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_CellphoneGift_Record, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_CellphoneGift_Record, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SM_CellphoneGift_Record));
  GM_CellphoneGift_SendShortMessage_Request_descriptor_ = file->message_type(1);
  static const int GM_CellphoneGift_SendShortMessage_Request_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_CellphoneGift_SendShortMessage_Request, phonenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_CellphoneGift_SendShortMessage_Request, verifcode_),
  };
  GM_CellphoneGift_SendShortMessage_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_CellphoneGift_SendShortMessage_Request_descriptor_,
      GM_CellphoneGift_SendShortMessage_Request::default_instance_,
      GM_CellphoneGift_SendShortMessage_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_CellphoneGift_SendShortMessage_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_CellphoneGift_SendShortMessage_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_CellphoneGift_SendShortMessage_Request));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SP_5fCellphoneGift_2etxt);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SM_CellphoneGift_Record_descriptor_, &SM_CellphoneGift_Record::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_CellphoneGift_SendShortMessage_Request_descriptor_, &GM_CellphoneGift_SendShortMessage_Request::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SP_5fCellphoneGift_2etxt() {
  delete SM_CellphoneGift_Record::default_instance_;
  delete SM_CellphoneGift_Record_reflection_;
  delete GM_CellphoneGift_SendShortMessage_Request::default_instance_;
  delete GM_CellphoneGift_SendShortMessage_Request_reflection_;
}

void protobuf_AddDesc_SP_5fCellphoneGift_2etxt() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024SP_CellphoneGift.txt\"m\n\027SM_CellphoneGi"
    "ft_Record\022\020\n\010phoneNum\030\001 \002(\003\022\016\n\006isBind\030\002 "
    "\002(\005\022\014\n\004code\030\003 \002(\005\022\023\n\013getCodeTime\030\004 \002(\005\022\r"
    "\n\005isGet\030\005 \002(\005\"P\n)GM_CellphoneGift_SendSh"
    "ortMessage_Request\022\020\n\010phoneNum\030\001 \002(\003\022\021\n\t"
    "verifCode\030\002 \002(\005", 215);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SP_CellphoneGift.txt", &protobuf_RegisterTypes);
  SM_CellphoneGift_Record::default_instance_ = new SM_CellphoneGift_Record();
  GM_CellphoneGift_SendShortMessage_Request::default_instance_ = new GM_CellphoneGift_SendShortMessage_Request();
  SM_CellphoneGift_Record::default_instance_->InitAsDefaultInstance();
  GM_CellphoneGift_SendShortMessage_Request::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SP_5fCellphoneGift_2etxt);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SP_5fCellphoneGift_2etxt {
  StaticDescriptorInitializer_SP_5fCellphoneGift_2etxt() {
    protobuf_AddDesc_SP_5fCellphoneGift_2etxt();
  }
} static_descriptor_initializer_SP_5fCellphoneGift_2etxt_;

// ===================================================================

#ifndef _MSC_VER
const int SM_CellphoneGift_Record::kPhoneNumFieldNumber;
const int SM_CellphoneGift_Record::kIsBindFieldNumber;
const int SM_CellphoneGift_Record::kCodeFieldNumber;
const int SM_CellphoneGift_Record::kGetCodeTimeFieldNumber;
const int SM_CellphoneGift_Record::kIsGetFieldNumber;
#endif  // !_MSC_VER

SM_CellphoneGift_Record::SM_CellphoneGift_Record()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SM_CellphoneGift_Record::InitAsDefaultInstance() {
}

SM_CellphoneGift_Record::SM_CellphoneGift_Record(const SM_CellphoneGift_Record& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SM_CellphoneGift_Record::SharedCtor() {
  _cached_size_ = 0;
  phonenum_ = GOOGLE_LONGLONG(0);
  isbind_ = 0;
  code_ = 0;
  getcodetime_ = 0;
  isget_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SM_CellphoneGift_Record::~SM_CellphoneGift_Record() {
  SharedDtor();
}

void SM_CellphoneGift_Record::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SM_CellphoneGift_Record::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SM_CellphoneGift_Record::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SM_CellphoneGift_Record_descriptor_;
}

const SM_CellphoneGift_Record& SM_CellphoneGift_Record::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fCellphoneGift_2etxt();
  return *default_instance_;
}

SM_CellphoneGift_Record* SM_CellphoneGift_Record::default_instance_ = NULL;

SM_CellphoneGift_Record* SM_CellphoneGift_Record::New() const {
  return new SM_CellphoneGift_Record;
}

void SM_CellphoneGift_Record::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    phonenum_ = GOOGLE_LONGLONG(0);
    isbind_ = 0;
    code_ = 0;
    getcodetime_ = 0;
    isget_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SM_CellphoneGift_Record::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 phoneNum = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &phonenum_)));
          set_has_phonenum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_isBind;
        break;
      }

      // required int32 isBind = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isBind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isbind_)));
          set_has_isbind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_code;
        break;
      }

      // required int32 code = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
          set_has_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_getCodeTime;
        break;
      }

      // required int32 getCodeTime = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_getCodeTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &getcodetime_)));
          set_has_getcodetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_isGet;
        break;
      }

      // required int32 isGet = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isGet:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isget_)));
          set_has_isget();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SM_CellphoneGift_Record::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 phoneNum = 1;
  if (has_phonenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->phonenum(), output);
  }

  // required int32 isBind = 2;
  if (has_isbind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->isbind(), output);
  }

  // required int32 code = 3;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->code(), output);
  }

  // required int32 getCodeTime = 4;
  if (has_getcodetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->getcodetime(), output);
  }

  // required int32 isGet = 5;
  if (has_isget()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->isget(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SM_CellphoneGift_Record::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 phoneNum = 1;
  if (has_phonenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->phonenum(), target);
  }

  // required int32 isBind = 2;
  if (has_isbind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->isbind(), target);
  }

  // required int32 code = 3;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->code(), target);
  }

  // required int32 getCodeTime = 4;
  if (has_getcodetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->getcodetime(), target);
  }

  // required int32 isGet = 5;
  if (has_isget()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->isget(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SM_CellphoneGift_Record::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 phoneNum = 1;
    if (has_phonenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->phonenum());
    }

    // required int32 isBind = 2;
    if (has_isbind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isbind());
    }

    // required int32 code = 3;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

    // required int32 getCodeTime = 4;
    if (has_getcodetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->getcodetime());
    }

    // required int32 isGet = 5;
    if (has_isget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isget());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SM_CellphoneGift_Record::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SM_CellphoneGift_Record* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SM_CellphoneGift_Record*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SM_CellphoneGift_Record::MergeFrom(const SM_CellphoneGift_Record& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_phonenum()) {
      set_phonenum(from.phonenum());
    }
    if (from.has_isbind()) {
      set_isbind(from.isbind());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_getcodetime()) {
      set_getcodetime(from.getcodetime());
    }
    if (from.has_isget()) {
      set_isget(from.isget());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SM_CellphoneGift_Record::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SM_CellphoneGift_Record::CopyFrom(const SM_CellphoneGift_Record& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SM_CellphoneGift_Record::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void SM_CellphoneGift_Record::Swap(SM_CellphoneGift_Record* other) {
  if (other != this) {
    std::swap(phonenum_, other->phonenum_);
    std::swap(isbind_, other->isbind_);
    std::swap(code_, other->code_);
    std::swap(getcodetime_, other->getcodetime_);
    std::swap(isget_, other->isget_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SM_CellphoneGift_Record::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SM_CellphoneGift_Record_descriptor_;
  metadata.reflection = SM_CellphoneGift_Record_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_CellphoneGift_SendShortMessage_Request::kPhoneNumFieldNumber;
const int GM_CellphoneGift_SendShortMessage_Request::kVerifCodeFieldNumber;
#endif  // !_MSC_VER

GM_CellphoneGift_SendShortMessage_Request::GM_CellphoneGift_SendShortMessage_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_CellphoneGift_SendShortMessage_Request::InitAsDefaultInstance() {
}

GM_CellphoneGift_SendShortMessage_Request::GM_CellphoneGift_SendShortMessage_Request(const GM_CellphoneGift_SendShortMessage_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_CellphoneGift_SendShortMessage_Request::SharedCtor() {
  _cached_size_ = 0;
  phonenum_ = GOOGLE_LONGLONG(0);
  verifcode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_CellphoneGift_SendShortMessage_Request::~GM_CellphoneGift_SendShortMessage_Request() {
  SharedDtor();
}

void GM_CellphoneGift_SendShortMessage_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_CellphoneGift_SendShortMessage_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_CellphoneGift_SendShortMessage_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_CellphoneGift_SendShortMessage_Request_descriptor_;
}

const GM_CellphoneGift_SendShortMessage_Request& GM_CellphoneGift_SendShortMessage_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fCellphoneGift_2etxt();
  return *default_instance_;
}

GM_CellphoneGift_SendShortMessage_Request* GM_CellphoneGift_SendShortMessage_Request::default_instance_ = NULL;

GM_CellphoneGift_SendShortMessage_Request* GM_CellphoneGift_SendShortMessage_Request::New() const {
  return new GM_CellphoneGift_SendShortMessage_Request;
}

void GM_CellphoneGift_SendShortMessage_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    phonenum_ = GOOGLE_LONGLONG(0);
    verifcode_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_CellphoneGift_SendShortMessage_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 phoneNum = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &phonenum_)));
          set_has_phonenum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_verifCode;
        break;
      }

      // required int32 verifCode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_verifCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &verifcode_)));
          set_has_verifcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_CellphoneGift_SendShortMessage_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 phoneNum = 1;
  if (has_phonenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->phonenum(), output);
  }

  // required int32 verifCode = 2;
  if (has_verifcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->verifcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_CellphoneGift_SendShortMessage_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 phoneNum = 1;
  if (has_phonenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->phonenum(), target);
  }

  // required int32 verifCode = 2;
  if (has_verifcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->verifcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_CellphoneGift_SendShortMessage_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 phoneNum = 1;
    if (has_phonenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->phonenum());
    }

    // required int32 verifCode = 2;
    if (has_verifcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->verifcode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_CellphoneGift_SendShortMessage_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_CellphoneGift_SendShortMessage_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_CellphoneGift_SendShortMessage_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_CellphoneGift_SendShortMessage_Request::MergeFrom(const GM_CellphoneGift_SendShortMessage_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_phonenum()) {
      set_phonenum(from.phonenum());
    }
    if (from.has_verifcode()) {
      set_verifcode(from.verifcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_CellphoneGift_SendShortMessage_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_CellphoneGift_SendShortMessage_Request::CopyFrom(const GM_CellphoneGift_SendShortMessage_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_CellphoneGift_SendShortMessage_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GM_CellphoneGift_SendShortMessage_Request::Swap(GM_CellphoneGift_SendShortMessage_Request* other) {
  if (other != this) {
    std::swap(phonenum_, other->phonenum_);
    std::swap(verifcode_, other->verifcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_CellphoneGift_SendShortMessage_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_CellphoneGift_SendShortMessage_Request_descriptor_;
  metadata.reflection = GM_CellphoneGift_SendShortMessage_Request_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
