// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: answer.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "answer.txt.pb.h"
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GM_AnswerOpenGateReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AnswerOpenGateReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_AnswerGiftRetuen_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AnswerGiftRetuen_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_AnswerGiftInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AnswerGiftInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_AnswerSingGift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AnswerSingGift_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_AnswerMatchReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AnswerMatchReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_AnswerQuestionAllReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AnswerQuestionAllReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_AnswerQuestionReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AnswerQuestionReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_AnswerQuestionInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AnswerQuestionInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_AnswerTimeReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AnswerTimeReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_AnswerAnswerReauest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AnswerAnswerReauest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_AnswerRankReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AnswerRankReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_AnswerRank_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AnswerRank_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_AnswerFaceRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AnswerFaceRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_AnswerFaceReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AnswerFaceReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_AnswerEndReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_AnswerEndReturn_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_answer_2etxt() {
  protobuf_AddDesc_answer_2etxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "answer.txt");
  GOOGLE_CHECK(file != NULL);
  GM_AnswerOpenGateReturn_descriptor_ = file->message_type(0);
  static const int GM_AnswerOpenGateReturn_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerOpenGateReturn, optentime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerOpenGateReturn, endtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerOpenGateReturn, lasttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerOpenGateReturn, iscanjoin_),
  };
  GM_AnswerOpenGateReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AnswerOpenGateReturn_descriptor_,
      GM_AnswerOpenGateReturn::default_instance_,
      GM_AnswerOpenGateReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerOpenGateReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerOpenGateReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AnswerOpenGateReturn));
  GM_AnswerGiftRetuen_descriptor_ = file->message_type(1);
  static const int GM_AnswerGiftRetuen_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerGiftRetuen, gift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerGiftRetuen, data_),
  };
  GM_AnswerGiftRetuen_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AnswerGiftRetuen_descriptor_,
      GM_AnswerGiftRetuen::default_instance_,
      GM_AnswerGiftRetuen_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerGiftRetuen, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerGiftRetuen, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AnswerGiftRetuen));
  GM_AnswerGiftInfo_descriptor_ = file->message_type(2);
  static const int GM_AnswerGiftInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerGiftInfo, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerGiftInfo, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerGiftInfo, num_),
  };
  GM_AnswerGiftInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AnswerGiftInfo_descriptor_,
      GM_AnswerGiftInfo::default_instance_,
      GM_AnswerGiftInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerGiftInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerGiftInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AnswerGiftInfo));
  GM_AnswerSingGift_descriptor_ = file->message_type(3);
  static const int GM_AnswerSingGift_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerSingGift, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerSingGift, num_),
  };
  GM_AnswerSingGift_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AnswerSingGift_descriptor_,
      GM_AnswerSingGift::default_instance_,
      GM_AnswerSingGift_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerSingGift, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerSingGift, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AnswerSingGift));
  GM_AnswerMatchReturn_descriptor_ = file->message_type(4);
  static const int GM_AnswerMatchReturn_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerMatchReturn, result_),
  };
  GM_AnswerMatchReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AnswerMatchReturn_descriptor_,
      GM_AnswerMatchReturn::default_instance_,
      GM_AnswerMatchReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerMatchReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerMatchReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AnswerMatchReturn));
  GM_AnswerQuestionAllReturn_descriptor_ = file->message_type(5);
  static const int GM_AnswerQuestionAllReturn_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerQuestionAllReturn, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerQuestionAllReturn, data_),
  };
  GM_AnswerQuestionAllReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AnswerQuestionAllReturn_descriptor_,
      GM_AnswerQuestionAllReturn::default_instance_,
      GM_AnswerQuestionAllReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerQuestionAllReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerQuestionAllReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AnswerQuestionAllReturn));
  GM_AnswerQuestionReturn_descriptor_ = file->message_type(6);
  static const int GM_AnswerQuestionReturn_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerQuestionReturn, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerQuestionReturn, nownumn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerQuestionReturn, successnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerQuestionReturn, answerdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerQuestionReturn, giftdata_),
  };
  GM_AnswerQuestionReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AnswerQuestionReturn_descriptor_,
      GM_AnswerQuestionReturn::default_instance_,
      GM_AnswerQuestionReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerQuestionReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerQuestionReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AnswerQuestionReturn));
  GM_AnswerQuestionInfo_descriptor_ = file->message_type(7);
  static const int GM_AnswerQuestionInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerQuestionInfo, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerQuestionInfo, otypeid_),
  };
  GM_AnswerQuestionInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AnswerQuestionInfo_descriptor_,
      GM_AnswerQuestionInfo::default_instance_,
      GM_AnswerQuestionInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerQuestionInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerQuestionInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AnswerQuestionInfo));
  GM_AnswerTimeReturn_descriptor_ = file->message_type(8);
  static const int GM_AnswerTimeReturn_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerTimeReturn, next_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerTimeReturn, begintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerTimeReturn, istruelast_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerTimeReturn, datagift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerTimeReturn, answer_),
  };
  GM_AnswerTimeReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AnswerTimeReturn_descriptor_,
      GM_AnswerTimeReturn::default_instance_,
      GM_AnswerTimeReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerTimeReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerTimeReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AnswerTimeReturn));
  GM_AnswerAnswerReauest_descriptor_ = file->message_type(9);
  static const int GM_AnswerAnswerReauest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerAnswerReauest, otypeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerAnswerReauest, answer_),
  };
  GM_AnswerAnswerReauest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AnswerAnswerReauest_descriptor_,
      GM_AnswerAnswerReauest::default_instance_,
      GM_AnswerAnswerReauest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerAnswerReauest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerAnswerReauest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AnswerAnswerReauest));
  GM_AnswerRankReturn_descriptor_ = file->message_type(10);
  static const int GM_AnswerRankReturn_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerRankReturn, last_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerRankReturn, data_),
  };
  GM_AnswerRankReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AnswerRankReturn_descriptor_,
      GM_AnswerRankReturn::default_instance_,
      GM_AnswerRankReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerRankReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerRankReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AnswerRankReturn));
  GM_AnswerRank_descriptor_ = file->message_type(11);
  static const int GM_AnswerRank_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerRank, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerRank, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerRank, num_),
  };
  GM_AnswerRank_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AnswerRank_descriptor_,
      GM_AnswerRank::default_instance_,
      GM_AnswerRank_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerRank, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerRank, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AnswerRank));
  GM_AnswerFaceRequest_descriptor_ = file->message_type(12);
  static const int GM_AnswerFaceRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerFaceRequest, faceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerFaceRequest, facename_),
  };
  GM_AnswerFaceRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AnswerFaceRequest_descriptor_,
      GM_AnswerFaceRequest::default_instance_,
      GM_AnswerFaceRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerFaceRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerFaceRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AnswerFaceRequest));
  GM_AnswerFaceReturn_descriptor_ = file->message_type(13);
  static const int GM_AnswerFaceReturn_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerFaceReturn, faceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerFaceReturn, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerFaceReturn, facename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerFaceReturn, receiveid_),
  };
  GM_AnswerFaceReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AnswerFaceReturn_descriptor_,
      GM_AnswerFaceReturn::default_instance_,
      GM_AnswerFaceReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerFaceReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerFaceReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AnswerFaceReturn));
  GM_AnswerEndReturn_descriptor_ = file->message_type(14);
  static const int GM_AnswerEndReturn_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerEndReturn, last_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerEndReturn, data_),
  };
  GM_AnswerEndReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_AnswerEndReturn_descriptor_,
      GM_AnswerEndReturn::default_instance_,
      GM_AnswerEndReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerEndReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_AnswerEndReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_AnswerEndReturn));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_answer_2etxt);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AnswerOpenGateReturn_descriptor_, &GM_AnswerOpenGateReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AnswerGiftRetuen_descriptor_, &GM_AnswerGiftRetuen::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AnswerGiftInfo_descriptor_, &GM_AnswerGiftInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AnswerSingGift_descriptor_, &GM_AnswerSingGift::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AnswerMatchReturn_descriptor_, &GM_AnswerMatchReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AnswerQuestionAllReturn_descriptor_, &GM_AnswerQuestionAllReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AnswerQuestionReturn_descriptor_, &GM_AnswerQuestionReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AnswerQuestionInfo_descriptor_, &GM_AnswerQuestionInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AnswerTimeReturn_descriptor_, &GM_AnswerTimeReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AnswerAnswerReauest_descriptor_, &GM_AnswerAnswerReauest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AnswerRankReturn_descriptor_, &GM_AnswerRankReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AnswerRank_descriptor_, &GM_AnswerRank::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AnswerFaceRequest_descriptor_, &GM_AnswerFaceRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AnswerFaceReturn_descriptor_, &GM_AnswerFaceReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_AnswerEndReturn_descriptor_, &GM_AnswerEndReturn::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_answer_2etxt() {
  delete GM_AnswerOpenGateReturn::default_instance_;
  delete GM_AnswerOpenGateReturn_reflection_;
  delete GM_AnswerGiftRetuen::default_instance_;
  delete GM_AnswerGiftRetuen_reflection_;
  delete GM_AnswerGiftInfo::default_instance_;
  delete GM_AnswerGiftInfo_reflection_;
  delete GM_AnswerSingGift::default_instance_;
  delete GM_AnswerSingGift_reflection_;
  delete GM_AnswerMatchReturn::default_instance_;
  delete GM_AnswerMatchReturn_reflection_;
  delete GM_AnswerQuestionAllReturn::default_instance_;
  delete GM_AnswerQuestionAllReturn_reflection_;
  delete GM_AnswerQuestionReturn::default_instance_;
  delete GM_AnswerQuestionReturn_reflection_;
  delete GM_AnswerQuestionInfo::default_instance_;
  delete GM_AnswerQuestionInfo_reflection_;
  delete GM_AnswerTimeReturn::default_instance_;
  delete GM_AnswerTimeReturn_reflection_;
  delete GM_AnswerAnswerReauest::default_instance_;
  delete GM_AnswerAnswerReauest_reflection_;
  delete GM_AnswerRankReturn::default_instance_;
  delete GM_AnswerRankReturn_reflection_;
  delete GM_AnswerRank::default_instance_;
  delete GM_AnswerRank_reflection_;
  delete GM_AnswerFaceRequest::default_instance_;
  delete GM_AnswerFaceRequest_reflection_;
  delete GM_AnswerFaceReturn::default_instance_;
  delete GM_AnswerFaceReturn_reflection_;
  delete GM_AnswerEndReturn::default_instance_;
  delete GM_AnswerEndReturn_reflection_;
}

void protobuf_AddDesc_answer_2etxt() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nanswer.txt\"b\n\027GM_AnswerOpenGateReturn\022"
    "\021\n\toptentime\030\001 \002(\005\022\017\n\007endtime\030\002 \001(\005\022\020\n\010l"
    "asttime\030\003 \001(\005\022\021\n\tiscanjoin\030\004 \001(\005\"E\n\023GM_A"
    "nswerGiftRetuen\022\014\n\004gift\030\001 \002(\005\022 \n\004data\030\002 "
    "\003(\0132\022.GM_AnswerGiftInfo\"A\n\021GM_AnswerGift"
    "Info\022\r\n\005index\030\001 \002(\005\022\020\n\010objectid\030\002 \001(\005\022\013\n"
    "\003num\030\003 \001(\005\"2\n\021GM_AnswerSingGift\022\020\n\010objec"
    "tid\030\001 \002(\005\022\013\n\003num\030\002 \001(\005\"&\n\024GM_AnswerMatch"
    "Return\022\016\n\006result\030\001 \002(\005\"O\n\032GM_AnswerQuest"
    "ionAllReturn\022\013\n\003num\030\001 \002(\005\022$\n\004data\030\002 \003(\0132"
    "\026.GM_AnswerQuestionInfo\"\235\001\n\027GM_AnswerQue"
    "stionReturn\022\013\n\003num\030\001 \002(\005\022\017\n\007nownumn\030\002 \001("
    "\005\022\022\n\nsuccessnum\030\003 \001(\005\022*\n\nanswerdata\030\004 \001("
    "\0132\026.GM_AnswerQuestionInfo\022$\n\010giftdata\030\005 "
    "\001(\0132\022.GM_AnswerSingGift\"7\n\025GM_AnswerQues"
    "tionInfo\022\r\n\005index\030\001 \002(\005\022\017\n\007otypeid\030\002 \001(\005"
    "\"\200\001\n\023GM_AnswerTimeReturn\022\014\n\004next\030\001 \002(\005\022\021"
    "\n\tbegintime\030\002 \001(\005\022\022\n\nistruelast\030\003 \001(\005\022$\n"
    "\010datagift\030\004 \003(\0132\022.GM_AnswerSingGift\022\016\n\006a"
    "nswer\030\005 \001(\005\"9\n\026GM_AnswerAnswerReauest\022\017\n"
    "\007otypeid\030\001 \002(\005\022\016\n\006answer\030\002 \001(\005\"A\n\023GM_Ans"
    "werRankReturn\022\014\n\004last\030\001 \002(\005\022\034\n\004data\030\002 \003("
    "\0132\016.GM_AnswerRank\"9\n\rGM_AnswerRank\022\r\n\005in"
    "dex\030\001 \002(\005\022\014\n\004name\030\002 \001(\t\022\013\n\003num\030\003 \001(\005\"8\n\024"
    "GM_AnswerFaceRequest\022\016\n\006faceid\030\001 \002(\005\022\020\n\010"
    "faceName\030\002 \001(\t\"Z\n\023GM_AnswerFaceReturn\022\016\n"
    "\006faceid\030\001 \002(\005\022\016\n\006roleid\030\002 \001(\005\022\020\n\010faceNam"
    "e\030\003 \001(\t\022\021\n\treceiveid\030\004 \001(\005\"D\n\022GM_AnswerE"
    "ndReturn\022\014\n\004last\030\001 \002(\005\022 \n\004data\030\002 \003(\0132\022.G"
    "M_AnswerSingGift", 1176);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "answer.txt", &protobuf_RegisterTypes);
  GM_AnswerOpenGateReturn::default_instance_ = new GM_AnswerOpenGateReturn();
  GM_AnswerGiftRetuen::default_instance_ = new GM_AnswerGiftRetuen();
  GM_AnswerGiftInfo::default_instance_ = new GM_AnswerGiftInfo();
  GM_AnswerSingGift::default_instance_ = new GM_AnswerSingGift();
  GM_AnswerMatchReturn::default_instance_ = new GM_AnswerMatchReturn();
  GM_AnswerQuestionAllReturn::default_instance_ = new GM_AnswerQuestionAllReturn();
  GM_AnswerQuestionReturn::default_instance_ = new GM_AnswerQuestionReturn();
  GM_AnswerQuestionInfo::default_instance_ = new GM_AnswerQuestionInfo();
  GM_AnswerTimeReturn::default_instance_ = new GM_AnswerTimeReturn();
  GM_AnswerAnswerReauest::default_instance_ = new GM_AnswerAnswerReauest();
  GM_AnswerRankReturn::default_instance_ = new GM_AnswerRankReturn();
  GM_AnswerRank::default_instance_ = new GM_AnswerRank();
  GM_AnswerFaceRequest::default_instance_ = new GM_AnswerFaceRequest();
  GM_AnswerFaceReturn::default_instance_ = new GM_AnswerFaceReturn();
  GM_AnswerEndReturn::default_instance_ = new GM_AnswerEndReturn();
  GM_AnswerOpenGateReturn::default_instance_->InitAsDefaultInstance();
  GM_AnswerGiftRetuen::default_instance_->InitAsDefaultInstance();
  GM_AnswerGiftInfo::default_instance_->InitAsDefaultInstance();
  GM_AnswerSingGift::default_instance_->InitAsDefaultInstance();
  GM_AnswerMatchReturn::default_instance_->InitAsDefaultInstance();
  GM_AnswerQuestionAllReturn::default_instance_->InitAsDefaultInstance();
  GM_AnswerQuestionReturn::default_instance_->InitAsDefaultInstance();
  GM_AnswerQuestionInfo::default_instance_->InitAsDefaultInstance();
  GM_AnswerTimeReturn::default_instance_->InitAsDefaultInstance();
  GM_AnswerAnswerReauest::default_instance_->InitAsDefaultInstance();
  GM_AnswerRankReturn::default_instance_->InitAsDefaultInstance();
  GM_AnswerRank::default_instance_->InitAsDefaultInstance();
  GM_AnswerFaceRequest::default_instance_->InitAsDefaultInstance();
  GM_AnswerFaceReturn::default_instance_->InitAsDefaultInstance();
  GM_AnswerEndReturn::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_answer_2etxt);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_answer_2etxt {
  StaticDescriptorInitializer_answer_2etxt() {
    protobuf_AddDesc_answer_2etxt();
  }
} static_descriptor_initializer_answer_2etxt_;

// ===================================================================

#ifndef _MSC_VER
const int GM_AnswerOpenGateReturn::kOptentimeFieldNumber;
const int GM_AnswerOpenGateReturn::kEndtimeFieldNumber;
const int GM_AnswerOpenGateReturn::kLasttimeFieldNumber;
const int GM_AnswerOpenGateReturn::kIscanjoinFieldNumber;
#endif  // !_MSC_VER

GM_AnswerOpenGateReturn::GM_AnswerOpenGateReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AnswerOpenGateReturn::InitAsDefaultInstance() {
}

GM_AnswerOpenGateReturn::GM_AnswerOpenGateReturn(const GM_AnswerOpenGateReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AnswerOpenGateReturn::SharedCtor() {
  _cached_size_ = 0;
  optentime_ = 0;
  endtime_ = 0;
  lasttime_ = 0;
  iscanjoin_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AnswerOpenGateReturn::~GM_AnswerOpenGateReturn() {
  SharedDtor();
}

void GM_AnswerOpenGateReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_AnswerOpenGateReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AnswerOpenGateReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AnswerOpenGateReturn_descriptor_;
}

const GM_AnswerOpenGateReturn& GM_AnswerOpenGateReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_answer_2etxt();
  return *default_instance_;
}

GM_AnswerOpenGateReturn* GM_AnswerOpenGateReturn::default_instance_ = NULL;

GM_AnswerOpenGateReturn* GM_AnswerOpenGateReturn::New() const {
  return new GM_AnswerOpenGateReturn;
}

void GM_AnswerOpenGateReturn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    optentime_ = 0;
    endtime_ = 0;
    lasttime_ = 0;
    iscanjoin_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AnswerOpenGateReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 optentime = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optentime_)));
          set_has_optentime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_endtime;
        break;
      }

      // optional int32 endtime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_endtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_lasttime;
        break;
      }

      // optional int32 lasttime = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lasttime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lasttime_)));
          set_has_lasttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_iscanjoin;
        break;
      }

      // optional int32 iscanjoin = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_iscanjoin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iscanjoin_)));
          set_has_iscanjoin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AnswerOpenGateReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 optentime = 1;
  if (has_optentime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->optentime(), output);
  }

  // optional int32 endtime = 2;
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->endtime(), output);
  }

  // optional int32 lasttime = 3;
  if (has_lasttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lasttime(), output);
  }

  // optional int32 iscanjoin = 4;
  if (has_iscanjoin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->iscanjoin(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AnswerOpenGateReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 optentime = 1;
  if (has_optentime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->optentime(), target);
  }

  // optional int32 endtime = 2;
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->endtime(), target);
  }

  // optional int32 lasttime = 3;
  if (has_lasttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lasttime(), target);
  }

  // optional int32 iscanjoin = 4;
  if (has_iscanjoin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->iscanjoin(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AnswerOpenGateReturn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 optentime = 1;
    if (has_optentime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->optentime());
    }

    // optional int32 endtime = 2;
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->endtime());
    }

    // optional int32 lasttime = 3;
    if (has_lasttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lasttime());
    }

    // optional int32 iscanjoin = 4;
    if (has_iscanjoin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iscanjoin());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AnswerOpenGateReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AnswerOpenGateReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AnswerOpenGateReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AnswerOpenGateReturn::MergeFrom(const GM_AnswerOpenGateReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_optentime()) {
      set_optentime(from.optentime());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
    if (from.has_lasttime()) {
      set_lasttime(from.lasttime());
    }
    if (from.has_iscanjoin()) {
      set_iscanjoin(from.iscanjoin());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AnswerOpenGateReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AnswerOpenGateReturn::CopyFrom(const GM_AnswerOpenGateReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AnswerOpenGateReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_AnswerOpenGateReturn::Swap(GM_AnswerOpenGateReturn* other) {
  if (other != this) {
    std::swap(optentime_, other->optentime_);
    std::swap(endtime_, other->endtime_);
    std::swap(lasttime_, other->lasttime_);
    std::swap(iscanjoin_, other->iscanjoin_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AnswerOpenGateReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AnswerOpenGateReturn_descriptor_;
  metadata.reflection = GM_AnswerOpenGateReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_AnswerGiftRetuen::kGiftFieldNumber;
const int GM_AnswerGiftRetuen::kDataFieldNumber;
#endif  // !_MSC_VER

GM_AnswerGiftRetuen::GM_AnswerGiftRetuen()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AnswerGiftRetuen::InitAsDefaultInstance() {
}

GM_AnswerGiftRetuen::GM_AnswerGiftRetuen(const GM_AnswerGiftRetuen& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AnswerGiftRetuen::SharedCtor() {
  _cached_size_ = 0;
  gift_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AnswerGiftRetuen::~GM_AnswerGiftRetuen() {
  SharedDtor();
}

void GM_AnswerGiftRetuen::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_AnswerGiftRetuen::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AnswerGiftRetuen::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AnswerGiftRetuen_descriptor_;
}

const GM_AnswerGiftRetuen& GM_AnswerGiftRetuen::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_answer_2etxt();
  return *default_instance_;
}

GM_AnswerGiftRetuen* GM_AnswerGiftRetuen::default_instance_ = NULL;

GM_AnswerGiftRetuen* GM_AnswerGiftRetuen::New() const {
  return new GM_AnswerGiftRetuen;
}

void GM_AnswerGiftRetuen::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gift_ = 0;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AnswerGiftRetuen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 gift = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gift_)));
          set_has_gift();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .GM_AnswerGiftInfo data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AnswerGiftRetuen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 gift = 1;
  if (has_gift()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gift(), output);
  }

  // repeated .GM_AnswerGiftInfo data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AnswerGiftRetuen::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 gift = 1;
  if (has_gift()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gift(), target);
  }

  // repeated .GM_AnswerGiftInfo data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AnswerGiftRetuen::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 gift = 1;
    if (has_gift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gift());
    }

  }
  // repeated .GM_AnswerGiftInfo data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AnswerGiftRetuen::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AnswerGiftRetuen* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AnswerGiftRetuen*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AnswerGiftRetuen::MergeFrom(const GM_AnswerGiftRetuen& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gift()) {
      set_gift(from.gift());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AnswerGiftRetuen::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AnswerGiftRetuen::CopyFrom(const GM_AnswerGiftRetuen& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AnswerGiftRetuen::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < data_size(); i++) {
    if (!this->data(i).IsInitialized()) return false;
  }
  return true;
}

void GM_AnswerGiftRetuen::Swap(GM_AnswerGiftRetuen* other) {
  if (other != this) {
    std::swap(gift_, other->gift_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AnswerGiftRetuen::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AnswerGiftRetuen_descriptor_;
  metadata.reflection = GM_AnswerGiftRetuen_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_AnswerGiftInfo::kIndexFieldNumber;
const int GM_AnswerGiftInfo::kObjectidFieldNumber;
const int GM_AnswerGiftInfo::kNumFieldNumber;
#endif  // !_MSC_VER

GM_AnswerGiftInfo::GM_AnswerGiftInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AnswerGiftInfo::InitAsDefaultInstance() {
}

GM_AnswerGiftInfo::GM_AnswerGiftInfo(const GM_AnswerGiftInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AnswerGiftInfo::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  objectid_ = 0;
  num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AnswerGiftInfo::~GM_AnswerGiftInfo() {
  SharedDtor();
}

void GM_AnswerGiftInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_AnswerGiftInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AnswerGiftInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AnswerGiftInfo_descriptor_;
}

const GM_AnswerGiftInfo& GM_AnswerGiftInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_answer_2etxt();
  return *default_instance_;
}

GM_AnswerGiftInfo* GM_AnswerGiftInfo::default_instance_ = NULL;

GM_AnswerGiftInfo* GM_AnswerGiftInfo::New() const {
  return new GM_AnswerGiftInfo;
}

void GM_AnswerGiftInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    objectid_ = 0;
    num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AnswerGiftInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_objectid;
        break;
      }

      // optional int32 objectid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_objectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_num;
        break;
      }

      // optional int32 num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AnswerGiftInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // optional int32 objectid = 2;
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objectid(), output);
  }

  // optional int32 num = 3;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AnswerGiftInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // optional int32 objectid = 2;
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objectid(), target);
  }

  // optional int32 num = 3;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AnswerGiftInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional int32 objectid = 2;
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objectid());
    }

    // optional int32 num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AnswerGiftInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AnswerGiftInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AnswerGiftInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AnswerGiftInfo::MergeFrom(const GM_AnswerGiftInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AnswerGiftInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AnswerGiftInfo::CopyFrom(const GM_AnswerGiftInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AnswerGiftInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_AnswerGiftInfo::Swap(GM_AnswerGiftInfo* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(objectid_, other->objectid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AnswerGiftInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AnswerGiftInfo_descriptor_;
  metadata.reflection = GM_AnswerGiftInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_AnswerSingGift::kObjectidFieldNumber;
const int GM_AnswerSingGift::kNumFieldNumber;
#endif  // !_MSC_VER

GM_AnswerSingGift::GM_AnswerSingGift()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AnswerSingGift::InitAsDefaultInstance() {
}

GM_AnswerSingGift::GM_AnswerSingGift(const GM_AnswerSingGift& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AnswerSingGift::SharedCtor() {
  _cached_size_ = 0;
  objectid_ = 0;
  num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AnswerSingGift::~GM_AnswerSingGift() {
  SharedDtor();
}

void GM_AnswerSingGift::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_AnswerSingGift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AnswerSingGift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AnswerSingGift_descriptor_;
}

const GM_AnswerSingGift& GM_AnswerSingGift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_answer_2etxt();
  return *default_instance_;
}

GM_AnswerSingGift* GM_AnswerSingGift::default_instance_ = NULL;

GM_AnswerSingGift* GM_AnswerSingGift::New() const {
  return new GM_AnswerSingGift;
}

void GM_AnswerSingGift::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    objectid_ = 0;
    num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AnswerSingGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 objectid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // optional int32 num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AnswerSingGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 objectid = 1;
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->objectid(), output);
  }

  // optional int32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AnswerSingGift::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 objectid = 1;
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->objectid(), target);
  }

  // optional int32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AnswerSingGift::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 objectid = 1;
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objectid());
    }

    // optional int32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AnswerSingGift::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AnswerSingGift* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AnswerSingGift*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AnswerSingGift::MergeFrom(const GM_AnswerSingGift& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AnswerSingGift::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AnswerSingGift::CopyFrom(const GM_AnswerSingGift& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AnswerSingGift::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_AnswerSingGift::Swap(GM_AnswerSingGift* other) {
  if (other != this) {
    std::swap(objectid_, other->objectid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AnswerSingGift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AnswerSingGift_descriptor_;
  metadata.reflection = GM_AnswerSingGift_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_AnswerMatchReturn::kResultFieldNumber;
#endif  // !_MSC_VER

GM_AnswerMatchReturn::GM_AnswerMatchReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AnswerMatchReturn::InitAsDefaultInstance() {
}

GM_AnswerMatchReturn::GM_AnswerMatchReturn(const GM_AnswerMatchReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AnswerMatchReturn::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AnswerMatchReturn::~GM_AnswerMatchReturn() {
  SharedDtor();
}

void GM_AnswerMatchReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_AnswerMatchReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AnswerMatchReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AnswerMatchReturn_descriptor_;
}

const GM_AnswerMatchReturn& GM_AnswerMatchReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_answer_2etxt();
  return *default_instance_;
}

GM_AnswerMatchReturn* GM_AnswerMatchReturn::default_instance_ = NULL;

GM_AnswerMatchReturn* GM_AnswerMatchReturn::New() const {
  return new GM_AnswerMatchReturn;
}

void GM_AnswerMatchReturn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AnswerMatchReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AnswerMatchReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AnswerMatchReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AnswerMatchReturn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AnswerMatchReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AnswerMatchReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AnswerMatchReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AnswerMatchReturn::MergeFrom(const GM_AnswerMatchReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AnswerMatchReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AnswerMatchReturn::CopyFrom(const GM_AnswerMatchReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AnswerMatchReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_AnswerMatchReturn::Swap(GM_AnswerMatchReturn* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AnswerMatchReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AnswerMatchReturn_descriptor_;
  metadata.reflection = GM_AnswerMatchReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_AnswerQuestionAllReturn::kNumFieldNumber;
const int GM_AnswerQuestionAllReturn::kDataFieldNumber;
#endif  // !_MSC_VER

GM_AnswerQuestionAllReturn::GM_AnswerQuestionAllReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AnswerQuestionAllReturn::InitAsDefaultInstance() {
}

GM_AnswerQuestionAllReturn::GM_AnswerQuestionAllReturn(const GM_AnswerQuestionAllReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AnswerQuestionAllReturn::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AnswerQuestionAllReturn::~GM_AnswerQuestionAllReturn() {
  SharedDtor();
}

void GM_AnswerQuestionAllReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_AnswerQuestionAllReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AnswerQuestionAllReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AnswerQuestionAllReturn_descriptor_;
}

const GM_AnswerQuestionAllReturn& GM_AnswerQuestionAllReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_answer_2etxt();
  return *default_instance_;
}

GM_AnswerQuestionAllReturn* GM_AnswerQuestionAllReturn::default_instance_ = NULL;

GM_AnswerQuestionAllReturn* GM_AnswerQuestionAllReturn::New() const {
  return new GM_AnswerQuestionAllReturn;
}

void GM_AnswerQuestionAllReturn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    num_ = 0;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AnswerQuestionAllReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .GM_AnswerQuestionInfo data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AnswerQuestionAllReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 num = 1;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num(), output);
  }

  // repeated .GM_AnswerQuestionInfo data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AnswerQuestionAllReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 num = 1;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num(), target);
  }

  // repeated .GM_AnswerQuestionInfo data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AnswerQuestionAllReturn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 num = 1;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

  }
  // repeated .GM_AnswerQuestionInfo data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AnswerQuestionAllReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AnswerQuestionAllReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AnswerQuestionAllReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AnswerQuestionAllReturn::MergeFrom(const GM_AnswerQuestionAllReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AnswerQuestionAllReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AnswerQuestionAllReturn::CopyFrom(const GM_AnswerQuestionAllReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AnswerQuestionAllReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < data_size(); i++) {
    if (!this->data(i).IsInitialized()) return false;
  }
  return true;
}

void GM_AnswerQuestionAllReturn::Swap(GM_AnswerQuestionAllReturn* other) {
  if (other != this) {
    std::swap(num_, other->num_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AnswerQuestionAllReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AnswerQuestionAllReturn_descriptor_;
  metadata.reflection = GM_AnswerQuestionAllReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_AnswerQuestionReturn::kNumFieldNumber;
const int GM_AnswerQuestionReturn::kNownumnFieldNumber;
const int GM_AnswerQuestionReturn::kSuccessnumFieldNumber;
const int GM_AnswerQuestionReturn::kAnswerdataFieldNumber;
const int GM_AnswerQuestionReturn::kGiftdataFieldNumber;
#endif  // !_MSC_VER

GM_AnswerQuestionReturn::GM_AnswerQuestionReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AnswerQuestionReturn::InitAsDefaultInstance() {
  answerdata_ = const_cast< ::GM_AnswerQuestionInfo*>(&::GM_AnswerQuestionInfo::default_instance());
  giftdata_ = const_cast< ::GM_AnswerSingGift*>(&::GM_AnswerSingGift::default_instance());
}

GM_AnswerQuestionReturn::GM_AnswerQuestionReturn(const GM_AnswerQuestionReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AnswerQuestionReturn::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0;
  nownumn_ = 0;
  successnum_ = 0;
  answerdata_ = NULL;
  giftdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AnswerQuestionReturn::~GM_AnswerQuestionReturn() {
  SharedDtor();
}

void GM_AnswerQuestionReturn::SharedDtor() {
  if (this != default_instance_) {
    delete answerdata_;
    delete giftdata_;
  }
}

void GM_AnswerQuestionReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AnswerQuestionReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AnswerQuestionReturn_descriptor_;
}

const GM_AnswerQuestionReturn& GM_AnswerQuestionReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_answer_2etxt();
  return *default_instance_;
}

GM_AnswerQuestionReturn* GM_AnswerQuestionReturn::default_instance_ = NULL;

GM_AnswerQuestionReturn* GM_AnswerQuestionReturn::New() const {
  return new GM_AnswerQuestionReturn;
}

void GM_AnswerQuestionReturn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    num_ = 0;
    nownumn_ = 0;
    successnum_ = 0;
    if (has_answerdata()) {
      if (answerdata_ != NULL) answerdata_->::GM_AnswerQuestionInfo::Clear();
    }
    if (has_giftdata()) {
      if (giftdata_ != NULL) giftdata_->::GM_AnswerSingGift::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AnswerQuestionReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nownumn;
        break;
      }

      // optional int32 nownumn = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nownumn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nownumn_)));
          set_has_nownumn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_successnum;
        break;
      }

      // optional int32 successnum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_successnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &successnum_)));
          set_has_successnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_answerdata;
        break;
      }

      // optional .GM_AnswerQuestionInfo answerdata = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_answerdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_answerdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_giftdata;
        break;
      }

      // optional .GM_AnswerSingGift giftdata = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_giftdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_giftdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AnswerQuestionReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 num = 1;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num(), output);
  }

  // optional int32 nownumn = 2;
  if (has_nownumn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nownumn(), output);
  }

  // optional int32 successnum = 3;
  if (has_successnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->successnum(), output);
  }

  // optional .GM_AnswerQuestionInfo answerdata = 4;
  if (has_answerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->answerdata(), output);
  }

  // optional .GM_AnswerSingGift giftdata = 5;
  if (has_giftdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->giftdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AnswerQuestionReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 num = 1;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num(), target);
  }

  // optional int32 nownumn = 2;
  if (has_nownumn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nownumn(), target);
  }

  // optional int32 successnum = 3;
  if (has_successnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->successnum(), target);
  }

  // optional .GM_AnswerQuestionInfo answerdata = 4;
  if (has_answerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->answerdata(), target);
  }

  // optional .GM_AnswerSingGift giftdata = 5;
  if (has_giftdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->giftdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AnswerQuestionReturn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 num = 1;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

    // optional int32 nownumn = 2;
    if (has_nownumn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nownumn());
    }

    // optional int32 successnum = 3;
    if (has_successnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->successnum());
    }

    // optional .GM_AnswerQuestionInfo answerdata = 4;
    if (has_answerdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->answerdata());
    }

    // optional .GM_AnswerSingGift giftdata = 5;
    if (has_giftdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->giftdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AnswerQuestionReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AnswerQuestionReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AnswerQuestionReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AnswerQuestionReturn::MergeFrom(const GM_AnswerQuestionReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_nownumn()) {
      set_nownumn(from.nownumn());
    }
    if (from.has_successnum()) {
      set_successnum(from.successnum());
    }
    if (from.has_answerdata()) {
      mutable_answerdata()->::GM_AnswerQuestionInfo::MergeFrom(from.answerdata());
    }
    if (from.has_giftdata()) {
      mutable_giftdata()->::GM_AnswerSingGift::MergeFrom(from.giftdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AnswerQuestionReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AnswerQuestionReturn::CopyFrom(const GM_AnswerQuestionReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AnswerQuestionReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_answerdata()) {
    if (!this->answerdata().IsInitialized()) return false;
  }
  if (has_giftdata()) {
    if (!this->giftdata().IsInitialized()) return false;
  }
  return true;
}

void GM_AnswerQuestionReturn::Swap(GM_AnswerQuestionReturn* other) {
  if (other != this) {
    std::swap(num_, other->num_);
    std::swap(nownumn_, other->nownumn_);
    std::swap(successnum_, other->successnum_);
    std::swap(answerdata_, other->answerdata_);
    std::swap(giftdata_, other->giftdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AnswerQuestionReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AnswerQuestionReturn_descriptor_;
  metadata.reflection = GM_AnswerQuestionReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_AnswerQuestionInfo::kIndexFieldNumber;
const int GM_AnswerQuestionInfo::kOtypeidFieldNumber;
#endif  // !_MSC_VER

GM_AnswerQuestionInfo::GM_AnswerQuestionInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AnswerQuestionInfo::InitAsDefaultInstance() {
}

GM_AnswerQuestionInfo::GM_AnswerQuestionInfo(const GM_AnswerQuestionInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AnswerQuestionInfo::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  otypeid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AnswerQuestionInfo::~GM_AnswerQuestionInfo() {
  SharedDtor();
}

void GM_AnswerQuestionInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_AnswerQuestionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AnswerQuestionInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AnswerQuestionInfo_descriptor_;
}

const GM_AnswerQuestionInfo& GM_AnswerQuestionInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_answer_2etxt();
  return *default_instance_;
}

GM_AnswerQuestionInfo* GM_AnswerQuestionInfo::default_instance_ = NULL;

GM_AnswerQuestionInfo* GM_AnswerQuestionInfo::New() const {
  return new GM_AnswerQuestionInfo;
}

void GM_AnswerQuestionInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    otypeid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AnswerQuestionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_otypeid;
        break;
      }

      // optional int32 otypeid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_otypeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &otypeid_)));
          set_has_otypeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AnswerQuestionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // optional int32 otypeid = 2;
  if (has_otypeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->otypeid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AnswerQuestionInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // optional int32 otypeid = 2;
  if (has_otypeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->otypeid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AnswerQuestionInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional int32 otypeid = 2;
    if (has_otypeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->otypeid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AnswerQuestionInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AnswerQuestionInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AnswerQuestionInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AnswerQuestionInfo::MergeFrom(const GM_AnswerQuestionInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_otypeid()) {
      set_otypeid(from.otypeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AnswerQuestionInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AnswerQuestionInfo::CopyFrom(const GM_AnswerQuestionInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AnswerQuestionInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_AnswerQuestionInfo::Swap(GM_AnswerQuestionInfo* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(otypeid_, other->otypeid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AnswerQuestionInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AnswerQuestionInfo_descriptor_;
  metadata.reflection = GM_AnswerQuestionInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_AnswerTimeReturn::kNextFieldNumber;
const int GM_AnswerTimeReturn::kBegintimeFieldNumber;
const int GM_AnswerTimeReturn::kIstruelastFieldNumber;
const int GM_AnswerTimeReturn::kDatagiftFieldNumber;
const int GM_AnswerTimeReturn::kAnswerFieldNumber;
#endif  // !_MSC_VER

GM_AnswerTimeReturn::GM_AnswerTimeReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AnswerTimeReturn::InitAsDefaultInstance() {
}

GM_AnswerTimeReturn::GM_AnswerTimeReturn(const GM_AnswerTimeReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AnswerTimeReturn::SharedCtor() {
  _cached_size_ = 0;
  next_ = 0;
  begintime_ = 0;
  istruelast_ = 0;
  answer_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AnswerTimeReturn::~GM_AnswerTimeReturn() {
  SharedDtor();
}

void GM_AnswerTimeReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_AnswerTimeReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AnswerTimeReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AnswerTimeReturn_descriptor_;
}

const GM_AnswerTimeReturn& GM_AnswerTimeReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_answer_2etxt();
  return *default_instance_;
}

GM_AnswerTimeReturn* GM_AnswerTimeReturn::default_instance_ = NULL;

GM_AnswerTimeReturn* GM_AnswerTimeReturn::New() const {
  return new GM_AnswerTimeReturn;
}

void GM_AnswerTimeReturn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    next_ = 0;
    begintime_ = 0;
    istruelast_ = 0;
    answer_ = 0;
  }
  datagift_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AnswerTimeReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 next = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &next_)));
          set_has_next();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_begintime;
        break;
      }

      // optional int32 begintime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_begintime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &begintime_)));
          set_has_begintime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_istruelast;
        break;
      }

      // optional int32 istruelast = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_istruelast:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &istruelast_)));
          set_has_istruelast();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_datagift;
        break;
      }

      // repeated .GM_AnswerSingGift datagift = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_datagift:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datagift()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_datagift;
        if (input->ExpectTag(40)) goto parse_answer;
        break;
      }

      // optional int32 answer = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_answer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &answer_)));
          set_has_answer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AnswerTimeReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 next = 1;
  if (has_next()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->next(), output);
  }

  // optional int32 begintime = 2;
  if (has_begintime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->begintime(), output);
  }

  // optional int32 istruelast = 3;
  if (has_istruelast()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->istruelast(), output);
  }

  // repeated .GM_AnswerSingGift datagift = 4;
  for (int i = 0; i < this->datagift_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->datagift(i), output);
  }

  // optional int32 answer = 5;
  if (has_answer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->answer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AnswerTimeReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 next = 1;
  if (has_next()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->next(), target);
  }

  // optional int32 begintime = 2;
  if (has_begintime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->begintime(), target);
  }

  // optional int32 istruelast = 3;
  if (has_istruelast()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->istruelast(), target);
  }

  // repeated .GM_AnswerSingGift datagift = 4;
  for (int i = 0; i < this->datagift_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->datagift(i), target);
  }

  // optional int32 answer = 5;
  if (has_answer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->answer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AnswerTimeReturn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 next = 1;
    if (has_next()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->next());
    }

    // optional int32 begintime = 2;
    if (has_begintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->begintime());
    }

    // optional int32 istruelast = 3;
    if (has_istruelast()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->istruelast());
    }

    // optional int32 answer = 5;
    if (has_answer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->answer());
    }

  }
  // repeated .GM_AnswerSingGift datagift = 4;
  total_size += 1 * this->datagift_size();
  for (int i = 0; i < this->datagift_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datagift(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AnswerTimeReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AnswerTimeReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AnswerTimeReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AnswerTimeReturn::MergeFrom(const GM_AnswerTimeReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  datagift_.MergeFrom(from.datagift_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_next()) {
      set_next(from.next());
    }
    if (from.has_begintime()) {
      set_begintime(from.begintime());
    }
    if (from.has_istruelast()) {
      set_istruelast(from.istruelast());
    }
    if (from.has_answer()) {
      set_answer(from.answer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AnswerTimeReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AnswerTimeReturn::CopyFrom(const GM_AnswerTimeReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AnswerTimeReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < datagift_size(); i++) {
    if (!this->datagift(i).IsInitialized()) return false;
  }
  return true;
}

void GM_AnswerTimeReturn::Swap(GM_AnswerTimeReturn* other) {
  if (other != this) {
    std::swap(next_, other->next_);
    std::swap(begintime_, other->begintime_);
    std::swap(istruelast_, other->istruelast_);
    datagift_.Swap(&other->datagift_);
    std::swap(answer_, other->answer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AnswerTimeReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AnswerTimeReturn_descriptor_;
  metadata.reflection = GM_AnswerTimeReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_AnswerAnswerReauest::kOtypeidFieldNumber;
const int GM_AnswerAnswerReauest::kAnswerFieldNumber;
#endif  // !_MSC_VER

GM_AnswerAnswerReauest::GM_AnswerAnswerReauest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AnswerAnswerReauest::InitAsDefaultInstance() {
}

GM_AnswerAnswerReauest::GM_AnswerAnswerReauest(const GM_AnswerAnswerReauest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AnswerAnswerReauest::SharedCtor() {
  _cached_size_ = 0;
  otypeid_ = 0;
  answer_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AnswerAnswerReauest::~GM_AnswerAnswerReauest() {
  SharedDtor();
}

void GM_AnswerAnswerReauest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_AnswerAnswerReauest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AnswerAnswerReauest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AnswerAnswerReauest_descriptor_;
}

const GM_AnswerAnswerReauest& GM_AnswerAnswerReauest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_answer_2etxt();
  return *default_instance_;
}

GM_AnswerAnswerReauest* GM_AnswerAnswerReauest::default_instance_ = NULL;

GM_AnswerAnswerReauest* GM_AnswerAnswerReauest::New() const {
  return new GM_AnswerAnswerReauest;
}

void GM_AnswerAnswerReauest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    otypeid_ = 0;
    answer_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AnswerAnswerReauest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 otypeid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &otypeid_)));
          set_has_otypeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_answer;
        break;
      }

      // optional int32 answer = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_answer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &answer_)));
          set_has_answer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AnswerAnswerReauest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 otypeid = 1;
  if (has_otypeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->otypeid(), output);
  }

  // optional int32 answer = 2;
  if (has_answer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->answer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AnswerAnswerReauest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 otypeid = 1;
  if (has_otypeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->otypeid(), target);
  }

  // optional int32 answer = 2;
  if (has_answer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->answer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AnswerAnswerReauest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 otypeid = 1;
    if (has_otypeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->otypeid());
    }

    // optional int32 answer = 2;
    if (has_answer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->answer());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AnswerAnswerReauest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AnswerAnswerReauest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AnswerAnswerReauest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AnswerAnswerReauest::MergeFrom(const GM_AnswerAnswerReauest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_otypeid()) {
      set_otypeid(from.otypeid());
    }
    if (from.has_answer()) {
      set_answer(from.answer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AnswerAnswerReauest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AnswerAnswerReauest::CopyFrom(const GM_AnswerAnswerReauest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AnswerAnswerReauest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_AnswerAnswerReauest::Swap(GM_AnswerAnswerReauest* other) {
  if (other != this) {
    std::swap(otypeid_, other->otypeid_);
    std::swap(answer_, other->answer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AnswerAnswerReauest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AnswerAnswerReauest_descriptor_;
  metadata.reflection = GM_AnswerAnswerReauest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_AnswerRankReturn::kLastFieldNumber;
const int GM_AnswerRankReturn::kDataFieldNumber;
#endif  // !_MSC_VER

GM_AnswerRankReturn::GM_AnswerRankReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AnswerRankReturn::InitAsDefaultInstance() {
}

GM_AnswerRankReturn::GM_AnswerRankReturn(const GM_AnswerRankReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AnswerRankReturn::SharedCtor() {
  _cached_size_ = 0;
  last_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AnswerRankReturn::~GM_AnswerRankReturn() {
  SharedDtor();
}

void GM_AnswerRankReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_AnswerRankReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AnswerRankReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AnswerRankReturn_descriptor_;
}

const GM_AnswerRankReturn& GM_AnswerRankReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_answer_2etxt();
  return *default_instance_;
}

GM_AnswerRankReturn* GM_AnswerRankReturn::default_instance_ = NULL;

GM_AnswerRankReturn* GM_AnswerRankReturn::New() const {
  return new GM_AnswerRankReturn;
}

void GM_AnswerRankReturn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    last_ = 0;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AnswerRankReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 last = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_)));
          set_has_last();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .GM_AnswerRank data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AnswerRankReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 last = 1;
  if (has_last()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->last(), output);
  }

  // repeated .GM_AnswerRank data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AnswerRankReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 last = 1;
  if (has_last()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->last(), target);
  }

  // repeated .GM_AnswerRank data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AnswerRankReturn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 last = 1;
    if (has_last()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last());
    }

  }
  // repeated .GM_AnswerRank data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AnswerRankReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AnswerRankReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AnswerRankReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AnswerRankReturn::MergeFrom(const GM_AnswerRankReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last()) {
      set_last(from.last());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AnswerRankReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AnswerRankReturn::CopyFrom(const GM_AnswerRankReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AnswerRankReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < data_size(); i++) {
    if (!this->data(i).IsInitialized()) return false;
  }
  return true;
}

void GM_AnswerRankReturn::Swap(GM_AnswerRankReturn* other) {
  if (other != this) {
    std::swap(last_, other->last_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AnswerRankReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AnswerRankReturn_descriptor_;
  metadata.reflection = GM_AnswerRankReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_AnswerRank::kIndexFieldNumber;
const int GM_AnswerRank::kNameFieldNumber;
const int GM_AnswerRank::kNumFieldNumber;
#endif  // !_MSC_VER

GM_AnswerRank::GM_AnswerRank()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AnswerRank::InitAsDefaultInstance() {
}

GM_AnswerRank::GM_AnswerRank(const GM_AnswerRank& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AnswerRank::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AnswerRank::~GM_AnswerRank() {
  SharedDtor();
}

void GM_AnswerRank::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void GM_AnswerRank::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AnswerRank::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AnswerRank_descriptor_;
}

const GM_AnswerRank& GM_AnswerRank::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_answer_2etxt();
  return *default_instance_;
}

GM_AnswerRank* GM_AnswerRank::default_instance_ = NULL;

GM_AnswerRank* GM_AnswerRank::New() const {
  return new GM_AnswerRank;
}

void GM_AnswerRank::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AnswerRank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_num;
        break;
      }

      // optional int32 num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AnswerRank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional int32 num = 3;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AnswerRank::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 num = 3;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AnswerRank::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AnswerRank::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AnswerRank* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AnswerRank*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AnswerRank::MergeFrom(const GM_AnswerRank& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AnswerRank::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AnswerRank::CopyFrom(const GM_AnswerRank& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AnswerRank::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_AnswerRank::Swap(GM_AnswerRank* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(name_, other->name_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AnswerRank::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AnswerRank_descriptor_;
  metadata.reflection = GM_AnswerRank_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_AnswerFaceRequest::kFaceidFieldNumber;
const int GM_AnswerFaceRequest::kFaceNameFieldNumber;
#endif  // !_MSC_VER

GM_AnswerFaceRequest::GM_AnswerFaceRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AnswerFaceRequest::InitAsDefaultInstance() {
}

GM_AnswerFaceRequest::GM_AnswerFaceRequest(const GM_AnswerFaceRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AnswerFaceRequest::SharedCtor() {
  _cached_size_ = 0;
  faceid_ = 0;
  facename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AnswerFaceRequest::~GM_AnswerFaceRequest() {
  SharedDtor();
}

void GM_AnswerFaceRequest::SharedDtor() {
  if (facename_ != &::google::protobuf::internal::kEmptyString) {
    delete facename_;
  }
  if (this != default_instance_) {
  }
}

void GM_AnswerFaceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AnswerFaceRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AnswerFaceRequest_descriptor_;
}

const GM_AnswerFaceRequest& GM_AnswerFaceRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_answer_2etxt();
  return *default_instance_;
}

GM_AnswerFaceRequest* GM_AnswerFaceRequest::default_instance_ = NULL;

GM_AnswerFaceRequest* GM_AnswerFaceRequest::New() const {
  return new GM_AnswerFaceRequest;
}

void GM_AnswerFaceRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    faceid_ = 0;
    if (has_facename()) {
      if (facename_ != &::google::protobuf::internal::kEmptyString) {
        facename_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AnswerFaceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 faceid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &faceid_)));
          set_has_faceid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_faceName;
        break;
      }

      // optional string faceName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_faceName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_facename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->facename().data(), this->facename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AnswerFaceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 faceid = 1;
  if (has_faceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->faceid(), output);
  }

  // optional string faceName = 2;
  if (has_facename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->facename().data(), this->facename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->facename(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AnswerFaceRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 faceid = 1;
  if (has_faceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->faceid(), target);
  }

  // optional string faceName = 2;
  if (has_facename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->facename().data(), this->facename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->facename(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AnswerFaceRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 faceid = 1;
    if (has_faceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->faceid());
    }

    // optional string faceName = 2;
    if (has_facename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->facename());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AnswerFaceRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AnswerFaceRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AnswerFaceRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AnswerFaceRequest::MergeFrom(const GM_AnswerFaceRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_faceid()) {
      set_faceid(from.faceid());
    }
    if (from.has_facename()) {
      set_facename(from.facename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AnswerFaceRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AnswerFaceRequest::CopyFrom(const GM_AnswerFaceRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AnswerFaceRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_AnswerFaceRequest::Swap(GM_AnswerFaceRequest* other) {
  if (other != this) {
    std::swap(faceid_, other->faceid_);
    std::swap(facename_, other->facename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AnswerFaceRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AnswerFaceRequest_descriptor_;
  metadata.reflection = GM_AnswerFaceRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_AnswerFaceReturn::kFaceidFieldNumber;
const int GM_AnswerFaceReturn::kRoleidFieldNumber;
const int GM_AnswerFaceReturn::kFaceNameFieldNumber;
const int GM_AnswerFaceReturn::kReceiveidFieldNumber;
#endif  // !_MSC_VER

GM_AnswerFaceReturn::GM_AnswerFaceReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AnswerFaceReturn::InitAsDefaultInstance() {
}

GM_AnswerFaceReturn::GM_AnswerFaceReturn(const GM_AnswerFaceReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AnswerFaceReturn::SharedCtor() {
  _cached_size_ = 0;
  faceid_ = 0;
  roleid_ = 0;
  facename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  receiveid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AnswerFaceReturn::~GM_AnswerFaceReturn() {
  SharedDtor();
}

void GM_AnswerFaceReturn::SharedDtor() {
  if (facename_ != &::google::protobuf::internal::kEmptyString) {
    delete facename_;
  }
  if (this != default_instance_) {
  }
}

void GM_AnswerFaceReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AnswerFaceReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AnswerFaceReturn_descriptor_;
}

const GM_AnswerFaceReturn& GM_AnswerFaceReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_answer_2etxt();
  return *default_instance_;
}

GM_AnswerFaceReturn* GM_AnswerFaceReturn::default_instance_ = NULL;

GM_AnswerFaceReturn* GM_AnswerFaceReturn::New() const {
  return new GM_AnswerFaceReturn;
}

void GM_AnswerFaceReturn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    faceid_ = 0;
    roleid_ = 0;
    if (has_facename()) {
      if (facename_ != &::google::protobuf::internal::kEmptyString) {
        facename_->clear();
      }
    }
    receiveid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AnswerFaceReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 faceid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &faceid_)));
          set_has_faceid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_roleid;
        break;
      }

      // optional int32 roleid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_faceName;
        break;
      }

      // optional string faceName = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_faceName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_facename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->facename().data(), this->facename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_receiveid;
        break;
      }

      // optional int32 receiveid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_receiveid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &receiveid_)));
          set_has_receiveid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AnswerFaceReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 faceid = 1;
  if (has_faceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->faceid(), output);
  }

  // optional int32 roleid = 2;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roleid(), output);
  }

  // optional string faceName = 3;
  if (has_facename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->facename().data(), this->facename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->facename(), output);
  }

  // optional int32 receiveid = 4;
  if (has_receiveid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->receiveid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AnswerFaceReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 faceid = 1;
  if (has_faceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->faceid(), target);
  }

  // optional int32 roleid = 2;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roleid(), target);
  }

  // optional string faceName = 3;
  if (has_facename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->facename().data(), this->facename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->facename(), target);
  }

  // optional int32 receiveid = 4;
  if (has_receiveid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->receiveid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AnswerFaceReturn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 faceid = 1;
    if (has_faceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->faceid());
    }

    // optional int32 roleid = 2;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleid());
    }

    // optional string faceName = 3;
    if (has_facename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->facename());
    }

    // optional int32 receiveid = 4;
    if (has_receiveid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->receiveid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AnswerFaceReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AnswerFaceReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AnswerFaceReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AnswerFaceReturn::MergeFrom(const GM_AnswerFaceReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_faceid()) {
      set_faceid(from.faceid());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_facename()) {
      set_facename(from.facename());
    }
    if (from.has_receiveid()) {
      set_receiveid(from.receiveid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AnswerFaceReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AnswerFaceReturn::CopyFrom(const GM_AnswerFaceReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AnswerFaceReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_AnswerFaceReturn::Swap(GM_AnswerFaceReturn* other) {
  if (other != this) {
    std::swap(faceid_, other->faceid_);
    std::swap(roleid_, other->roleid_);
    std::swap(facename_, other->facename_);
    std::swap(receiveid_, other->receiveid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AnswerFaceReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AnswerFaceReturn_descriptor_;
  metadata.reflection = GM_AnswerFaceReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_AnswerEndReturn::kLastFieldNumber;
const int GM_AnswerEndReturn::kDataFieldNumber;
#endif  // !_MSC_VER

GM_AnswerEndReturn::GM_AnswerEndReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_AnswerEndReturn::InitAsDefaultInstance() {
}

GM_AnswerEndReturn::GM_AnswerEndReturn(const GM_AnswerEndReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_AnswerEndReturn::SharedCtor() {
  _cached_size_ = 0;
  last_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_AnswerEndReturn::~GM_AnswerEndReturn() {
  SharedDtor();
}

void GM_AnswerEndReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_AnswerEndReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_AnswerEndReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_AnswerEndReturn_descriptor_;
}

const GM_AnswerEndReturn& GM_AnswerEndReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_answer_2etxt();
  return *default_instance_;
}

GM_AnswerEndReturn* GM_AnswerEndReturn::default_instance_ = NULL;

GM_AnswerEndReturn* GM_AnswerEndReturn::New() const {
  return new GM_AnswerEndReturn;
}

void GM_AnswerEndReturn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    last_ = 0;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_AnswerEndReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 last = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_)));
          set_has_last();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .GM_AnswerSingGift data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_AnswerEndReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 last = 1;
  if (has_last()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->last(), output);
  }

  // repeated .GM_AnswerSingGift data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_AnswerEndReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 last = 1;
  if (has_last()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->last(), target);
  }

  // repeated .GM_AnswerSingGift data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_AnswerEndReturn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 last = 1;
    if (has_last()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last());
    }

  }
  // repeated .GM_AnswerSingGift data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_AnswerEndReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_AnswerEndReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_AnswerEndReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_AnswerEndReturn::MergeFrom(const GM_AnswerEndReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last()) {
      set_last(from.last());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_AnswerEndReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_AnswerEndReturn::CopyFrom(const GM_AnswerEndReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_AnswerEndReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < data_size(); i++) {
    if (!this->data(i).IsInitialized()) return false;
  }
  return true;
}

void GM_AnswerEndReturn::Swap(GM_AnswerEndReturn* other) {
  if (other != this) {
    std::swap(last_, other->last_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_AnswerEndReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_AnswerEndReturn_descriptor_;
  metadata.reflection = GM_AnswerEndReturn_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
