// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_FBServerInfo.txt

#ifndef PROTOBUF_SP_5fFBServerInfo_2etxt__INCLUDED
#define PROTOBUF_SP_5fFBServerInfo_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SP_5fFBServerInfo_2etxt();
void protobuf_AssignDesc_SP_5fFBServerInfo_2etxt();
void protobuf_ShutdownFile_SP_5fFBServerInfo_2etxt();

class SM_FBServerLoadInfo;

// ===================================================================

class SM_FBServerLoadInfo : public ::google::protobuf::Message {
 public:
  SM_FBServerLoadInfo();
  virtual ~SM_FBServerLoadInfo();

  SM_FBServerLoadInfo(const SM_FBServerLoadInfo& from);

  inline SM_FBServerLoadInfo& operator=(const SM_FBServerLoadInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_FBServerLoadInfo& default_instance();

  void Swap(SM_FBServerLoadInfo* other);

  // implements Message ----------------------------------------------

  SM_FBServerLoadInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_FBServerLoadInfo& from);
  void MergeFrom(const SM_FBServerLoadInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_ServerID = 1;
  inline bool has_m_serverid() const;
  inline void clear_m_serverid();
  static const int kMServerIDFieldNumber = 1;
  inline ::google::protobuf::int32 m_serverid() const;
  inline void set_m_serverid(::google::protobuf::int32 value);

  // required int32 m_ActiveNum = 2;
  inline bool has_m_activenum() const;
  inline void clear_m_activenum();
  static const int kMActiveNumFieldNumber = 2;
  inline ::google::protobuf::int32 m_activenum() const;
  inline void set_m_activenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_FBServerLoadInfo)
 private:
  inline void set_has_m_serverid();
  inline void clear_has_m_serverid();
  inline void set_has_m_activenum();
  inline void clear_has_m_activenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_serverid_;
  ::google::protobuf::int32 m_activenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fFBServerInfo_2etxt();
  friend void protobuf_AssignDesc_SP_5fFBServerInfo_2etxt();
  friend void protobuf_ShutdownFile_SP_5fFBServerInfo_2etxt();

  void InitAsDefaultInstance();
  static SM_FBServerLoadInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// SM_FBServerLoadInfo

// required int32 m_ServerID = 1;
inline bool SM_FBServerLoadInfo::has_m_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_FBServerLoadInfo::set_has_m_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_FBServerLoadInfo::clear_has_m_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_FBServerLoadInfo::clear_m_serverid() {
  m_serverid_ = 0;
  clear_has_m_serverid();
}
inline ::google::protobuf::int32 SM_FBServerLoadInfo::m_serverid() const {
  return m_serverid_;
}
inline void SM_FBServerLoadInfo::set_m_serverid(::google::protobuf::int32 value) {
  set_has_m_serverid();
  m_serverid_ = value;
}

// required int32 m_ActiveNum = 2;
inline bool SM_FBServerLoadInfo::has_m_activenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_FBServerLoadInfo::set_has_m_activenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_FBServerLoadInfo::clear_has_m_activenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_FBServerLoadInfo::clear_m_activenum() {
  m_activenum_ = 0;
  clear_has_m_activenum();
}
inline ::google::protobuf::int32 SM_FBServerLoadInfo::m_activenum() const {
  return m_activenum_;
}
inline void SM_FBServerLoadInfo::set_m_activenum(::google::protobuf::int32 value) {
  set_has_m_activenum();
  m_activenum_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_SP_5fFBServerInfo_2etxt__INCLUDED
