// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gshj.txt

#ifndef PROTOBUF_gshj_2etxt__INCLUDED
#define PROTOBUF_gshj_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_gshj_2etxt();
void protobuf_AssignDesc_gshj_2etxt();
void protobuf_ShutdownFile_gshj_2etxt();

class GM_Gshj_OpenTime;
class GM_Gshj_BossInfo;
class GM_Gshj_BossInfo_Result;
class GM_Gshj_Join_Result;
class GM_Gshj_CoolDown_Result;
class GM_Gshj_Inspire_Result;
class GM_Gshj_RankItem;
class GM_Gshj_Rank_Result;

// ===================================================================

class GM_Gshj_OpenTime : public ::google::protobuf::Message {
 public:
  GM_Gshj_OpenTime();
  virtual ~GM_Gshj_OpenTime();

  GM_Gshj_OpenTime(const GM_Gshj_OpenTime& from);

  inline GM_Gshj_OpenTime& operator=(const GM_Gshj_OpenTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Gshj_OpenTime& default_instance();

  void Swap(GM_Gshj_OpenTime* other);

  // implements Message ----------------------------------------------

  GM_Gshj_OpenTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Gshj_OpenTime& from);
  void MergeFrom(const GM_Gshj_OpenTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 starttime = 1;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 1;
  inline ::google::protobuf::int32 starttime() const;
  inline void set_starttime(::google::protobuf::int32 value);

  // required int32 endtime = 2;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 2;
  inline ::google::protobuf::int32 endtime() const;
  inline void set_endtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Gshj_OpenTime)
 private:
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 starttime_;
  ::google::protobuf::int32 endtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gshj_2etxt();
  friend void protobuf_AssignDesc_gshj_2etxt();
  friend void protobuf_ShutdownFile_gshj_2etxt();

  void InitAsDefaultInstance();
  static GM_Gshj_OpenTime* default_instance_;
};
// -------------------------------------------------------------------

class GM_Gshj_BossInfo : public ::google::protobuf::Message {
 public:
  GM_Gshj_BossInfo();
  virtual ~GM_Gshj_BossInfo();

  GM_Gshj_BossInfo(const GM_Gshj_BossInfo& from);

  inline GM_Gshj_BossInfo& operator=(const GM_Gshj_BossInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Gshj_BossInfo& default_instance();

  void Swap(GM_Gshj_BossInfo* other);

  // implements Message ----------------------------------------------

  GM_Gshj_BossInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Gshj_BossInfo& from);
  void MergeFrom(const GM_Gshj_BossInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 bossid = 1;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossidFieldNumber = 1;
  inline ::google::protobuf::int32 bossid() const;
  inline void set_bossid(::google::protobuf::int32 value);

  // required int64 bosscurhp = 2;
  inline bool has_bosscurhp() const;
  inline void clear_bosscurhp();
  static const int kBosscurhpFieldNumber = 2;
  inline ::google::protobuf::int64 bosscurhp() const;
  inline void set_bosscurhp(::google::protobuf::int64 value);

  // required int64 bosstotalhp = 3;
  inline bool has_bosstotalhp() const;
  inline void clear_bosstotalhp();
  static const int kBosstotalhpFieldNumber = 3;
  inline ::google::protobuf::int64 bosstotalhp() const;
  inline void set_bosstotalhp(::google::protobuf::int64 value);

  // required int32 joined = 4;
  inline bool has_joined() const;
  inline void clear_joined();
  static const int kJoinedFieldNumber = 4;
  inline ::google::protobuf::int32 joined() const;
  inline void set_joined(::google::protobuf::int32 value);

  // required int32 cooltime = 5;
  inline bool has_cooltime() const;
  inline void clear_cooltime();
  static const int kCooltimeFieldNumber = 5;
  inline ::google::protobuf::int32 cooltime() const;
  inline void set_cooltime(::google::protobuf::int32 value);

  // required int32 moralelv = 6;
  inline bool has_moralelv() const;
  inline void clear_moralelv();
  static const int kMoralelvFieldNumber = 6;
  inline ::google::protobuf::int32 moralelv() const;
  inline void set_moralelv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Gshj_BossInfo)
 private:
  inline void set_has_bossid();
  inline void clear_has_bossid();
  inline void set_has_bosscurhp();
  inline void clear_has_bosscurhp();
  inline void set_has_bosstotalhp();
  inline void clear_has_bosstotalhp();
  inline void set_has_joined();
  inline void clear_has_joined();
  inline void set_has_cooltime();
  inline void clear_has_cooltime();
  inline void set_has_moralelv();
  inline void clear_has_moralelv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 bosscurhp_;
  ::google::protobuf::int32 bossid_;
  ::google::protobuf::int32 joined_;
  ::google::protobuf::int64 bosstotalhp_;
  ::google::protobuf::int32 cooltime_;
  ::google::protobuf::int32 moralelv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_gshj_2etxt();
  friend void protobuf_AssignDesc_gshj_2etxt();
  friend void protobuf_ShutdownFile_gshj_2etxt();

  void InitAsDefaultInstance();
  static GM_Gshj_BossInfo* default_instance_;
};
// -------------------------------------------------------------------

class GM_Gshj_BossInfo_Result : public ::google::protobuf::Message {
 public:
  GM_Gshj_BossInfo_Result();
  virtual ~GM_Gshj_BossInfo_Result();

  GM_Gshj_BossInfo_Result(const GM_Gshj_BossInfo_Result& from);

  inline GM_Gshj_BossInfo_Result& operator=(const GM_Gshj_BossInfo_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Gshj_BossInfo_Result& default_instance();

  void Swap(GM_Gshj_BossInfo_Result* other);

  // implements Message ----------------------------------------------

  GM_Gshj_BossInfo_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Gshj_BossInfo_Result& from);
  void MergeFrom(const GM_Gshj_BossInfo_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 times = 1;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 1;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // optional .GM_Gshj_BossInfo boss = 2;
  inline bool has_boss() const;
  inline void clear_boss();
  static const int kBossFieldNumber = 2;
  inline const ::GM_Gshj_BossInfo& boss() const;
  inline ::GM_Gshj_BossInfo* mutable_boss();
  inline ::GM_Gshj_BossInfo* release_boss();
  inline void set_allocated_boss(::GM_Gshj_BossInfo* boss);

  // optional .GM_Gshj_OpenTime time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline const ::GM_Gshj_OpenTime& time() const;
  inline ::GM_Gshj_OpenTime* mutable_time();
  inline ::GM_Gshj_OpenTime* release_time();
  inline void set_allocated_time(::GM_Gshj_OpenTime* time);

  // optional int32 openlefttime = 4;
  inline bool has_openlefttime() const;
  inline void clear_openlefttime();
  static const int kOpenlefttimeFieldNumber = 4;
  inline ::google::protobuf::int32 openlefttime() const;
  inline void set_openlefttime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Gshj_BossInfo_Result)
 private:
  inline void set_has_times();
  inline void clear_has_times();
  inline void set_has_boss();
  inline void clear_has_boss();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_openlefttime();
  inline void clear_has_openlefttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GM_Gshj_BossInfo* boss_;
  ::google::protobuf::int32 times_;
  ::google::protobuf::int32 openlefttime_;
  ::GM_Gshj_OpenTime* time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gshj_2etxt();
  friend void protobuf_AssignDesc_gshj_2etxt();
  friend void protobuf_ShutdownFile_gshj_2etxt();

  void InitAsDefaultInstance();
  static GM_Gshj_BossInfo_Result* default_instance_;
};
// -------------------------------------------------------------------

class GM_Gshj_Join_Result : public ::google::protobuf::Message {
 public:
  GM_Gshj_Join_Result();
  virtual ~GM_Gshj_Join_Result();

  GM_Gshj_Join_Result(const GM_Gshj_Join_Result& from);

  inline GM_Gshj_Join_Result& operator=(const GM_Gshj_Join_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Gshj_Join_Result& default_instance();

  void Swap(GM_Gshj_Join_Result* other);

  // implements Message ----------------------------------------------

  GM_Gshj_Join_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Gshj_Join_Result& from);
  void MergeFrom(const GM_Gshj_Join_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 teamid = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 2;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Gshj_Join_Result)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gshj_2etxt();
  friend void protobuf_AssignDesc_gshj_2etxt();
  friend void protobuf_ShutdownFile_gshj_2etxt();

  void InitAsDefaultInstance();
  static GM_Gshj_Join_Result* default_instance_;
};
// -------------------------------------------------------------------

class GM_Gshj_CoolDown_Result : public ::google::protobuf::Message {
 public:
  GM_Gshj_CoolDown_Result();
  virtual ~GM_Gshj_CoolDown_Result();

  GM_Gshj_CoolDown_Result(const GM_Gshj_CoolDown_Result& from);

  inline GM_Gshj_CoolDown_Result& operator=(const GM_Gshj_CoolDown_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Gshj_CoolDown_Result& default_instance();

  void Swap(GM_Gshj_CoolDown_Result* other);

  // implements Message ----------------------------------------------

  GM_Gshj_CoolDown_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Gshj_CoolDown_Result& from);
  void MergeFrom(const GM_Gshj_CoolDown_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 cooltime = 2;
  inline bool has_cooltime() const;
  inline void clear_cooltime();
  static const int kCooltimeFieldNumber = 2;
  inline ::google::protobuf::int32 cooltime() const;
  inline void set_cooltime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Gshj_CoolDown_Result)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_cooltime();
  inline void clear_has_cooltime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 cooltime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gshj_2etxt();
  friend void protobuf_AssignDesc_gshj_2etxt();
  friend void protobuf_ShutdownFile_gshj_2etxt();

  void InitAsDefaultInstance();
  static GM_Gshj_CoolDown_Result* default_instance_;
};
// -------------------------------------------------------------------

class GM_Gshj_Inspire_Result : public ::google::protobuf::Message {
 public:
  GM_Gshj_Inspire_Result();
  virtual ~GM_Gshj_Inspire_Result();

  GM_Gshj_Inspire_Result(const GM_Gshj_Inspire_Result& from);

  inline GM_Gshj_Inspire_Result& operator=(const GM_Gshj_Inspire_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Gshj_Inspire_Result& default_instance();

  void Swap(GM_Gshj_Inspire_Result* other);

  // implements Message ----------------------------------------------

  GM_Gshj_Inspire_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Gshj_Inspire_Result& from);
  void MergeFrom(const GM_Gshj_Inspire_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 moralelv = 2;
  inline bool has_moralelv() const;
  inline void clear_moralelv();
  static const int kMoralelvFieldNumber = 2;
  inline ::google::protobuf::int32 moralelv() const;
  inline void set_moralelv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Gshj_Inspire_Result)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_moralelv();
  inline void clear_has_moralelv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 moralelv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gshj_2etxt();
  friend void protobuf_AssignDesc_gshj_2etxt();
  friend void protobuf_ShutdownFile_gshj_2etxt();

  void InitAsDefaultInstance();
  static GM_Gshj_Inspire_Result* default_instance_;
};
// -------------------------------------------------------------------

class GM_Gshj_RankItem : public ::google::protobuf::Message {
 public:
  GM_Gshj_RankItem();
  virtual ~GM_Gshj_RankItem();

  GM_Gshj_RankItem(const GM_Gshj_RankItem& from);

  inline GM_Gshj_RankItem& operator=(const GM_Gshj_RankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Gshj_RankItem& default_instance();

  void Swap(GM_Gshj_RankItem* other);

  // implements Message ----------------------------------------------

  GM_Gshj_RankItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Gshj_RankItem& from);
  void MergeFrom(const GM_Gshj_RankItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required string rolename = 2;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 2;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // required int32 profession = 3;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 3;
  inline ::google::protobuf::int32 profession() const;
  inline void set_profession(::google::protobuf::int32 value);

  // required int32 rolelv = 4;
  inline bool has_rolelv() const;
  inline void clear_rolelv();
  static const int kRolelvFieldNumber = 4;
  inline ::google::protobuf::int32 rolelv() const;
  inline void set_rolelv(::google::protobuf::int32 value);

  // required int64 damage = 5;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 5;
  inline ::google::protobuf::int64 damage() const;
  inline void set_damage(::google::protobuf::int64 value);

  // required int32 position = 6;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 6;
  inline ::google::protobuf::int32 position() const;
  inline void set_position(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Gshj_RankItem)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_rolelv();
  inline void clear_has_rolelv();
  inline void set_has_damage();
  inline void clear_has_damage();
  inline void set_has_position();
  inline void clear_has_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rolename_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 profession_;
  ::google::protobuf::int64 damage_;
  ::google::protobuf::int32 rolelv_;
  ::google::protobuf::int32 position_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_gshj_2etxt();
  friend void protobuf_AssignDesc_gshj_2etxt();
  friend void protobuf_ShutdownFile_gshj_2etxt();

  void InitAsDefaultInstance();
  static GM_Gshj_RankItem* default_instance_;
};
// -------------------------------------------------------------------

class GM_Gshj_Rank_Result : public ::google::protobuf::Message {
 public:
  GM_Gshj_Rank_Result();
  virtual ~GM_Gshj_Rank_Result();

  GM_Gshj_Rank_Result(const GM_Gshj_Rank_Result& from);

  inline GM_Gshj_Rank_Result& operator=(const GM_Gshj_Rank_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Gshj_Rank_Result& default_instance();

  void Swap(GM_Gshj_Rank_Result* other);

  // implements Message ----------------------------------------------

  GM_Gshj_Rank_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Gshj_Rank_Result& from);
  void MergeFrom(const GM_Gshj_Rank_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GM_Gshj_RankItem myrank = 1;
  inline bool has_myrank() const;
  inline void clear_myrank();
  static const int kMyrankFieldNumber = 1;
  inline const ::GM_Gshj_RankItem& myrank() const;
  inline ::GM_Gshj_RankItem* mutable_myrank();
  inline ::GM_Gshj_RankItem* release_myrank();
  inline void set_allocated_myrank(::GM_Gshj_RankItem* myrank);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // repeated .GM_Gshj_RankItem item = 3;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline const ::GM_Gshj_RankItem& item(int index) const;
  inline ::GM_Gshj_RankItem* mutable_item(int index);
  inline ::GM_Gshj_RankItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Gshj_RankItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Gshj_RankItem >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:GM_Gshj_Rank_Result)
 private:
  inline void set_has_myrank();
  inline void clear_has_myrank();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GM_Gshj_RankItem* myrank_;
  ::google::protobuf::RepeatedPtrField< ::GM_Gshj_RankItem > item_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gshj_2etxt();
  friend void protobuf_AssignDesc_gshj_2etxt();
  friend void protobuf_ShutdownFile_gshj_2etxt();

  void InitAsDefaultInstance();
  static GM_Gshj_Rank_Result* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_Gshj_OpenTime

// required int32 starttime = 1;
inline bool GM_Gshj_OpenTime::has_starttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Gshj_OpenTime::set_has_starttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Gshj_OpenTime::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Gshj_OpenTime::clear_starttime() {
  starttime_ = 0;
  clear_has_starttime();
}
inline ::google::protobuf::int32 GM_Gshj_OpenTime::starttime() const {
  return starttime_;
}
inline void GM_Gshj_OpenTime::set_starttime(::google::protobuf::int32 value) {
  set_has_starttime();
  starttime_ = value;
}

// required int32 endtime = 2;
inline bool GM_Gshj_OpenTime::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Gshj_OpenTime::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Gshj_OpenTime::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Gshj_OpenTime::clear_endtime() {
  endtime_ = 0;
  clear_has_endtime();
}
inline ::google::protobuf::int32 GM_Gshj_OpenTime::endtime() const {
  return endtime_;
}
inline void GM_Gshj_OpenTime::set_endtime(::google::protobuf::int32 value) {
  set_has_endtime();
  endtime_ = value;
}

// -------------------------------------------------------------------

// GM_Gshj_BossInfo

// required int32 bossid = 1;
inline bool GM_Gshj_BossInfo::has_bossid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Gshj_BossInfo::set_has_bossid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Gshj_BossInfo::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Gshj_BossInfo::clear_bossid() {
  bossid_ = 0;
  clear_has_bossid();
}
inline ::google::protobuf::int32 GM_Gshj_BossInfo::bossid() const {
  return bossid_;
}
inline void GM_Gshj_BossInfo::set_bossid(::google::protobuf::int32 value) {
  set_has_bossid();
  bossid_ = value;
}

// required int64 bosscurhp = 2;
inline bool GM_Gshj_BossInfo::has_bosscurhp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Gshj_BossInfo::set_has_bosscurhp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Gshj_BossInfo::clear_has_bosscurhp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Gshj_BossInfo::clear_bosscurhp() {
  bosscurhp_ = GOOGLE_LONGLONG(0);
  clear_has_bosscurhp();
}
inline ::google::protobuf::int64 GM_Gshj_BossInfo::bosscurhp() const {
  return bosscurhp_;
}
inline void GM_Gshj_BossInfo::set_bosscurhp(::google::protobuf::int64 value) {
  set_has_bosscurhp();
  bosscurhp_ = value;
}

// required int64 bosstotalhp = 3;
inline bool GM_Gshj_BossInfo::has_bosstotalhp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Gshj_BossInfo::set_has_bosstotalhp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Gshj_BossInfo::clear_has_bosstotalhp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Gshj_BossInfo::clear_bosstotalhp() {
  bosstotalhp_ = GOOGLE_LONGLONG(0);
  clear_has_bosstotalhp();
}
inline ::google::protobuf::int64 GM_Gshj_BossInfo::bosstotalhp() const {
  return bosstotalhp_;
}
inline void GM_Gshj_BossInfo::set_bosstotalhp(::google::protobuf::int64 value) {
  set_has_bosstotalhp();
  bosstotalhp_ = value;
}

// required int32 joined = 4;
inline bool GM_Gshj_BossInfo::has_joined() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Gshj_BossInfo::set_has_joined() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Gshj_BossInfo::clear_has_joined() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Gshj_BossInfo::clear_joined() {
  joined_ = 0;
  clear_has_joined();
}
inline ::google::protobuf::int32 GM_Gshj_BossInfo::joined() const {
  return joined_;
}
inline void GM_Gshj_BossInfo::set_joined(::google::protobuf::int32 value) {
  set_has_joined();
  joined_ = value;
}

// required int32 cooltime = 5;
inline bool GM_Gshj_BossInfo::has_cooltime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Gshj_BossInfo::set_has_cooltime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Gshj_BossInfo::clear_has_cooltime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Gshj_BossInfo::clear_cooltime() {
  cooltime_ = 0;
  clear_has_cooltime();
}
inline ::google::protobuf::int32 GM_Gshj_BossInfo::cooltime() const {
  return cooltime_;
}
inline void GM_Gshj_BossInfo::set_cooltime(::google::protobuf::int32 value) {
  set_has_cooltime();
  cooltime_ = value;
}

// required int32 moralelv = 6;
inline bool GM_Gshj_BossInfo::has_moralelv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_Gshj_BossInfo::set_has_moralelv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_Gshj_BossInfo::clear_has_moralelv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_Gshj_BossInfo::clear_moralelv() {
  moralelv_ = 0;
  clear_has_moralelv();
}
inline ::google::protobuf::int32 GM_Gshj_BossInfo::moralelv() const {
  return moralelv_;
}
inline void GM_Gshj_BossInfo::set_moralelv(::google::protobuf::int32 value) {
  set_has_moralelv();
  moralelv_ = value;
}

// -------------------------------------------------------------------

// GM_Gshj_BossInfo_Result

// required int32 times = 1;
inline bool GM_Gshj_BossInfo_Result::has_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Gshj_BossInfo_Result::set_has_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Gshj_BossInfo_Result::clear_has_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Gshj_BossInfo_Result::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 GM_Gshj_BossInfo_Result::times() const {
  return times_;
}
inline void GM_Gshj_BossInfo_Result::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}

// optional .GM_Gshj_BossInfo boss = 2;
inline bool GM_Gshj_BossInfo_Result::has_boss() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Gshj_BossInfo_Result::set_has_boss() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Gshj_BossInfo_Result::clear_has_boss() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Gshj_BossInfo_Result::clear_boss() {
  if (boss_ != NULL) boss_->::GM_Gshj_BossInfo::Clear();
  clear_has_boss();
}
inline const ::GM_Gshj_BossInfo& GM_Gshj_BossInfo_Result::boss() const {
  return boss_ != NULL ? *boss_ : *default_instance_->boss_;
}
inline ::GM_Gshj_BossInfo* GM_Gshj_BossInfo_Result::mutable_boss() {
  set_has_boss();
  if (boss_ == NULL) boss_ = new ::GM_Gshj_BossInfo;
  return boss_;
}
inline ::GM_Gshj_BossInfo* GM_Gshj_BossInfo_Result::release_boss() {
  clear_has_boss();
  ::GM_Gshj_BossInfo* temp = boss_;
  boss_ = NULL;
  return temp;
}
inline void GM_Gshj_BossInfo_Result::set_allocated_boss(::GM_Gshj_BossInfo* boss) {
  delete boss_;
  boss_ = boss;
  if (boss) {
    set_has_boss();
  } else {
    clear_has_boss();
  }
}

// optional .GM_Gshj_OpenTime time = 3;
inline bool GM_Gshj_BossInfo_Result::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Gshj_BossInfo_Result::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Gshj_BossInfo_Result::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Gshj_BossInfo_Result::clear_time() {
  if (time_ != NULL) time_->::GM_Gshj_OpenTime::Clear();
  clear_has_time();
}
inline const ::GM_Gshj_OpenTime& GM_Gshj_BossInfo_Result::time() const {
  return time_ != NULL ? *time_ : *default_instance_->time_;
}
inline ::GM_Gshj_OpenTime* GM_Gshj_BossInfo_Result::mutable_time() {
  set_has_time();
  if (time_ == NULL) time_ = new ::GM_Gshj_OpenTime;
  return time_;
}
inline ::GM_Gshj_OpenTime* GM_Gshj_BossInfo_Result::release_time() {
  clear_has_time();
  ::GM_Gshj_OpenTime* temp = time_;
  time_ = NULL;
  return temp;
}
inline void GM_Gshj_BossInfo_Result::set_allocated_time(::GM_Gshj_OpenTime* time) {
  delete time_;
  time_ = time;
  if (time) {
    set_has_time();
  } else {
    clear_has_time();
  }
}

// optional int32 openlefttime = 4;
inline bool GM_Gshj_BossInfo_Result::has_openlefttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Gshj_BossInfo_Result::set_has_openlefttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Gshj_BossInfo_Result::clear_has_openlefttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Gshj_BossInfo_Result::clear_openlefttime() {
  openlefttime_ = 0;
  clear_has_openlefttime();
}
inline ::google::protobuf::int32 GM_Gshj_BossInfo_Result::openlefttime() const {
  return openlefttime_;
}
inline void GM_Gshj_BossInfo_Result::set_openlefttime(::google::protobuf::int32 value) {
  set_has_openlefttime();
  openlefttime_ = value;
}

// -------------------------------------------------------------------

// GM_Gshj_Join_Result

// required int32 result = 1;
inline bool GM_Gshj_Join_Result::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Gshj_Join_Result::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Gshj_Join_Result::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Gshj_Join_Result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_Gshj_Join_Result::result() const {
  return result_;
}
inline void GM_Gshj_Join_Result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 teamid = 2;
inline bool GM_Gshj_Join_Result::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Gshj_Join_Result::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Gshj_Join_Result::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Gshj_Join_Result::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 GM_Gshj_Join_Result::teamid() const {
  return teamid_;
}
inline void GM_Gshj_Join_Result::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// GM_Gshj_CoolDown_Result

// required int32 result = 1;
inline bool GM_Gshj_CoolDown_Result::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Gshj_CoolDown_Result::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Gshj_CoolDown_Result::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Gshj_CoolDown_Result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_Gshj_CoolDown_Result::result() const {
  return result_;
}
inline void GM_Gshj_CoolDown_Result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 cooltime = 2;
inline bool GM_Gshj_CoolDown_Result::has_cooltime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Gshj_CoolDown_Result::set_has_cooltime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Gshj_CoolDown_Result::clear_has_cooltime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Gshj_CoolDown_Result::clear_cooltime() {
  cooltime_ = 0;
  clear_has_cooltime();
}
inline ::google::protobuf::int32 GM_Gshj_CoolDown_Result::cooltime() const {
  return cooltime_;
}
inline void GM_Gshj_CoolDown_Result::set_cooltime(::google::protobuf::int32 value) {
  set_has_cooltime();
  cooltime_ = value;
}

// -------------------------------------------------------------------

// GM_Gshj_Inspire_Result

// required int32 result = 1;
inline bool GM_Gshj_Inspire_Result::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Gshj_Inspire_Result::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Gshj_Inspire_Result::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Gshj_Inspire_Result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_Gshj_Inspire_Result::result() const {
  return result_;
}
inline void GM_Gshj_Inspire_Result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 moralelv = 2;
inline bool GM_Gshj_Inspire_Result::has_moralelv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Gshj_Inspire_Result::set_has_moralelv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Gshj_Inspire_Result::clear_has_moralelv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Gshj_Inspire_Result::clear_moralelv() {
  moralelv_ = 0;
  clear_has_moralelv();
}
inline ::google::protobuf::int32 GM_Gshj_Inspire_Result::moralelv() const {
  return moralelv_;
}
inline void GM_Gshj_Inspire_Result::set_moralelv(::google::protobuf::int32 value) {
  set_has_moralelv();
  moralelv_ = value;
}

// -------------------------------------------------------------------

// GM_Gshj_RankItem

// required int32 roleid = 1;
inline bool GM_Gshj_RankItem::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Gshj_RankItem::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Gshj_RankItem::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Gshj_RankItem::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Gshj_RankItem::roleid() const {
  return roleid_;
}
inline void GM_Gshj_RankItem::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string rolename = 2;
inline bool GM_Gshj_RankItem::has_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Gshj_RankItem::set_has_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Gshj_RankItem::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Gshj_RankItem::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& GM_Gshj_RankItem::rolename() const {
  return *rolename_;
}
inline void GM_Gshj_RankItem::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void GM_Gshj_RankItem::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void GM_Gshj_RankItem::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Gshj_RankItem::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* GM_Gshj_RankItem::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Gshj_RankItem::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 profession = 3;
inline bool GM_Gshj_RankItem::has_profession() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Gshj_RankItem::set_has_profession() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Gshj_RankItem::clear_has_profession() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Gshj_RankItem::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::google::protobuf::int32 GM_Gshj_RankItem::profession() const {
  return profession_;
}
inline void GM_Gshj_RankItem::set_profession(::google::protobuf::int32 value) {
  set_has_profession();
  profession_ = value;
}

// required int32 rolelv = 4;
inline bool GM_Gshj_RankItem::has_rolelv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Gshj_RankItem::set_has_rolelv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Gshj_RankItem::clear_has_rolelv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Gshj_RankItem::clear_rolelv() {
  rolelv_ = 0;
  clear_has_rolelv();
}
inline ::google::protobuf::int32 GM_Gshj_RankItem::rolelv() const {
  return rolelv_;
}
inline void GM_Gshj_RankItem::set_rolelv(::google::protobuf::int32 value) {
  set_has_rolelv();
  rolelv_ = value;
}

// required int64 damage = 5;
inline bool GM_Gshj_RankItem::has_damage() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Gshj_RankItem::set_has_damage() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Gshj_RankItem::clear_has_damage() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Gshj_RankItem::clear_damage() {
  damage_ = GOOGLE_LONGLONG(0);
  clear_has_damage();
}
inline ::google::protobuf::int64 GM_Gshj_RankItem::damage() const {
  return damage_;
}
inline void GM_Gshj_RankItem::set_damage(::google::protobuf::int64 value) {
  set_has_damage();
  damage_ = value;
}

// required int32 position = 6;
inline bool GM_Gshj_RankItem::has_position() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_Gshj_RankItem::set_has_position() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_Gshj_RankItem::clear_has_position() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_Gshj_RankItem::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 GM_Gshj_RankItem::position() const {
  return position_;
}
inline void GM_Gshj_RankItem::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
}

// -------------------------------------------------------------------

// GM_Gshj_Rank_Result

// optional .GM_Gshj_RankItem myrank = 1;
inline bool GM_Gshj_Rank_Result::has_myrank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Gshj_Rank_Result::set_has_myrank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Gshj_Rank_Result::clear_has_myrank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Gshj_Rank_Result::clear_myrank() {
  if (myrank_ != NULL) myrank_->::GM_Gshj_RankItem::Clear();
  clear_has_myrank();
}
inline const ::GM_Gshj_RankItem& GM_Gshj_Rank_Result::myrank() const {
  return myrank_ != NULL ? *myrank_ : *default_instance_->myrank_;
}
inline ::GM_Gshj_RankItem* GM_Gshj_Rank_Result::mutable_myrank() {
  set_has_myrank();
  if (myrank_ == NULL) myrank_ = new ::GM_Gshj_RankItem;
  return myrank_;
}
inline ::GM_Gshj_RankItem* GM_Gshj_Rank_Result::release_myrank() {
  clear_has_myrank();
  ::GM_Gshj_RankItem* temp = myrank_;
  myrank_ = NULL;
  return temp;
}
inline void GM_Gshj_Rank_Result::set_allocated_myrank(::GM_Gshj_RankItem* myrank) {
  delete myrank_;
  myrank_ = myrank;
  if (myrank) {
    set_has_myrank();
  } else {
    clear_has_myrank();
  }
}

// required int32 count = 2;
inline bool GM_Gshj_Rank_Result::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Gshj_Rank_Result::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Gshj_Rank_Result::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Gshj_Rank_Result::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GM_Gshj_Rank_Result::count() const {
  return count_;
}
inline void GM_Gshj_Rank_Result::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// repeated .GM_Gshj_RankItem item = 3;
inline int GM_Gshj_Rank_Result::item_size() const {
  return item_.size();
}
inline void GM_Gshj_Rank_Result::clear_item() {
  item_.Clear();
}
inline const ::GM_Gshj_RankItem& GM_Gshj_Rank_Result::item(int index) const {
  return item_.Get(index);
}
inline ::GM_Gshj_RankItem* GM_Gshj_Rank_Result::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::GM_Gshj_RankItem* GM_Gshj_Rank_Result::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Gshj_RankItem >&
GM_Gshj_Rank_Result::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Gshj_RankItem >*
GM_Gshj_Rank_Result::mutable_item() {
  return &item_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_gshj_2etxt__INCLUDED
