// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: snatch.txt

#ifndef PROTOBUF_snatch_2etxt__INCLUDED
#define PROTOBUF_snatch_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_snatch_2etxt();
void protobuf_AssignDesc_snatch_2etxt();
void protobuf_ShutdownFile_snatch_2etxt();

class GM_Snatch_Item;
class GM_Snatch_BuyIfno;
class GM_Snatch_AllInfo;
class GM_Snatch_Look_Request;
class GM_Snatch_PlayerInfo;
class GM_Snatch_Look_Return;
class GM_Snatch_DoSnatch_Request;
class GM_Snatch_DoSnatch_Result;
class GM_Snatch_DoSnatch_Return;
class GM_Snatch_DoMulSnatch_Return;
class GM_Snatch_BuyPeace_Request;
class GM_Snatch_BuyPeace_Return;
class GM_Snatch_Compound_Request;
class GM_Snatch_Compound_Return;
class GM_CompoundObj;
class GM_Snatch_Item_Notify;
class GM_Snatch_SwitchCardItem;
class GM_Snatch_SwitchCard_Request;
class GM_Snatch_SwitchCard_Return;
class GM_Snatch_Reward_Return;
class GM_Snatch_PeaceTime_Return;

// ===================================================================

class GM_Snatch_Item : public ::google::protobuf::Message {
 public:
  GM_Snatch_Item();
  virtual ~GM_Snatch_Item();

  GM_Snatch_Item(const GM_Snatch_Item& from);

  inline GM_Snatch_Item& operator=(const GM_Snatch_Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_Item& default_instance();

  void Swap(GM_Snatch_Item* other);

  // implements Message ----------------------------------------------

  GM_Snatch_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_Item& from);
  void MergeFrom(const GM_Snatch_Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objectid = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Snatch_Item)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_Item* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_BuyIfno : public ::google::protobuf::Message {
 public:
  GM_Snatch_BuyIfno();
  virtual ~GM_Snatch_BuyIfno();

  GM_Snatch_BuyIfno(const GM_Snatch_BuyIfno& from);

  inline GM_Snatch_BuyIfno& operator=(const GM_Snatch_BuyIfno& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_BuyIfno& default_instance();

  void Swap(GM_Snatch_BuyIfno* other);

  // implements Message ----------------------------------------------

  GM_Snatch_BuyIfno* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_BuyIfno& from);
  void MergeFrom(const GM_Snatch_BuyIfno& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buytype = 1;
  inline bool has_buytype() const;
  inline void clear_buytype();
  static const int kBuytypeFieldNumber = 1;
  inline ::google::protobuf::int32 buytype() const;
  inline void set_buytype(::google::protobuf::int32 value);

  // required int32 needgold = 2;
  inline bool has_needgold() const;
  inline void clear_needgold();
  static const int kNeedgoldFieldNumber = 2;
  inline ::google::protobuf::int32 needgold() const;
  inline void set_needgold(::google::protobuf::int32 value);

  // required int32 peaceminute = 3;
  inline bool has_peaceminute() const;
  inline void clear_peaceminute();
  static const int kPeaceminuteFieldNumber = 3;
  inline ::google::protobuf::int32 peaceminute() const;
  inline void set_peaceminute(::google::protobuf::int32 value);

  // required int32 objectid = 4;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 4;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Snatch_BuyIfno)
 private:
  inline void set_has_buytype();
  inline void clear_has_buytype();
  inline void set_has_needgold();
  inline void clear_has_needgold();
  inline void set_has_peaceminute();
  inline void clear_has_peaceminute();
  inline void set_has_objectid();
  inline void clear_has_objectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buytype_;
  ::google::protobuf::int32 needgold_;
  ::google::protobuf::int32 peaceminute_;
  ::google::protobuf::int32 objectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_BuyIfno* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_AllInfo : public ::google::protobuf::Message {
 public:
  GM_Snatch_AllInfo();
  virtual ~GM_Snatch_AllInfo();

  GM_Snatch_AllInfo(const GM_Snatch_AllInfo& from);

  inline GM_Snatch_AllInfo& operator=(const GM_Snatch_AllInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_AllInfo& default_instance();

  void Swap(GM_Snatch_AllInfo* other);

  // implements Message ----------------------------------------------

  GM_Snatch_AllInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_AllInfo& from);
  void MergeFrom(const GM_Snatch_AllInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 peacetime = 1;
  inline bool has_peacetime() const;
  inline void clear_peacetime();
  static const int kPeacetimeFieldNumber = 1;
  inline ::google::protobuf::int32 peacetime() const;
  inline void set_peacetime(::google::protobuf::int32 value);

  // repeated .GM_Snatch_Item item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::GM_Snatch_Item& item(int index) const;
  inline ::GM_Snatch_Item* mutable_item(int index);
  inline ::GM_Snatch_Item* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Snatch_Item >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Snatch_Item >*
      mutable_item();

  // repeated .GM_Snatch_BuyIfno buyinfo = 3;
  inline int buyinfo_size() const;
  inline void clear_buyinfo();
  static const int kBuyinfoFieldNumber = 3;
  inline const ::GM_Snatch_BuyIfno& buyinfo(int index) const;
  inline ::GM_Snatch_BuyIfno* mutable_buyinfo(int index);
  inline ::GM_Snatch_BuyIfno* add_buyinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Snatch_BuyIfno >&
      buyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Snatch_BuyIfno >*
      mutable_buyinfo();

  // @@protoc_insertion_point(class_scope:GM_Snatch_AllInfo)
 private:
  inline void set_has_peacetime();
  inline void clear_has_peacetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_Snatch_Item > item_;
  ::google::protobuf::RepeatedPtrField< ::GM_Snatch_BuyIfno > buyinfo_;
  ::google::protobuf::int32 peacetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_AllInfo* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_Look_Request : public ::google::protobuf::Message {
 public:
  GM_Snatch_Look_Request();
  virtual ~GM_Snatch_Look_Request();

  GM_Snatch_Look_Request(const GM_Snatch_Look_Request& from);

  inline GM_Snatch_Look_Request& operator=(const GM_Snatch_Look_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_Look_Request& default_instance();

  void Swap(GM_Snatch_Look_Request* other);

  // implements Message ----------------------------------------------

  GM_Snatch_Look_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_Look_Request& from);
  void MergeFrom(const GM_Snatch_Look_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 pieceid = 1;
  inline bool has_pieceid() const;
  inline void clear_pieceid();
  static const int kPieceidFieldNumber = 1;
  inline ::google::protobuf::int32 pieceid() const;
  inline void set_pieceid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Snatch_Look_Request)
 private:
  inline void set_has_pieceid();
  inline void clear_has_pieceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 pieceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_Look_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_PlayerInfo : public ::google::protobuf::Message {
 public:
  GM_Snatch_PlayerInfo();
  virtual ~GM_Snatch_PlayerInfo();

  GM_Snatch_PlayerInfo(const GM_Snatch_PlayerInfo& from);

  inline GM_Snatch_PlayerInfo& operator=(const GM_Snatch_PlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_PlayerInfo& default_instance();

  void Swap(GM_Snatch_PlayerInfo* other);

  // implements Message ----------------------------------------------

  GM_Snatch_PlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_PlayerInfo& from);
  void MergeFrom(const GM_Snatch_PlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rolepos = 1;
  inline bool has_rolepos() const;
  inline void clear_rolepos();
  static const int kRoleposFieldNumber = 1;
  inline ::google::protobuf::int32 rolepos() const;
  inline void set_rolepos(::google::protobuf::int32 value);

  // required int32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required int32 rolepro = 3;
  inline bool has_rolepro() const;
  inline void clear_rolepro();
  static const int kRoleproFieldNumber = 3;
  inline ::google::protobuf::int32 rolepro() const;
  inline void set_rolepro(::google::protobuf::int32 value);

  // required int32 rolelv = 4;
  inline bool has_rolelv() const;
  inline void clear_rolelv();
  static const int kRolelvFieldNumber = 4;
  inline ::google::protobuf::int32 rolelv() const;
  inline void set_rolelv(::google::protobuf::int32 value);

  // required string roleName = 5;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 5;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // required int32 probability = 6;
  inline bool has_probability() const;
  inline void clear_probability();
  static const int kProbabilityFieldNumber = 6;
  inline ::google::protobuf::int32 probability() const;
  inline void set_probability(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Snatch_PlayerInfo)
 private:
  inline void set_has_rolepos();
  inline void clear_has_rolepos();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolepro();
  inline void clear_has_rolepro();
  inline void set_has_rolelv();
  inline void clear_has_rolelv();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_probability();
  inline void clear_has_probability();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 rolepos_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 rolepro_;
  ::google::protobuf::int32 rolelv_;
  ::std::string* rolename_;
  ::google::protobuf::int32 probability_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_PlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_Look_Return : public ::google::protobuf::Message {
 public:
  GM_Snatch_Look_Return();
  virtual ~GM_Snatch_Look_Return();

  GM_Snatch_Look_Return(const GM_Snatch_Look_Return& from);

  inline GM_Snatch_Look_Return& operator=(const GM_Snatch_Look_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_Look_Return& default_instance();

  void Swap(GM_Snatch_Look_Return* other);

  // implements Message ----------------------------------------------

  GM_Snatch_Look_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_Look_Return& from);
  void MergeFrom(const GM_Snatch_Look_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .GM_Snatch_PlayerInfo m_PlayerInfo = 2;
  inline int m_playerinfo_size() const;
  inline void clear_m_playerinfo();
  static const int kMPlayerInfoFieldNumber = 2;
  inline const ::GM_Snatch_PlayerInfo& m_playerinfo(int index) const;
  inline ::GM_Snatch_PlayerInfo* mutable_m_playerinfo(int index);
  inline ::GM_Snatch_PlayerInfo* add_m_playerinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Snatch_PlayerInfo >&
      m_playerinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Snatch_PlayerInfo >*
      mutable_m_playerinfo();

  // @@protoc_insertion_point(class_scope:GM_Snatch_Look_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_Snatch_PlayerInfo > m_playerinfo_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_Look_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_DoSnatch_Request : public ::google::protobuf::Message {
 public:
  GM_Snatch_DoSnatch_Request();
  virtual ~GM_Snatch_DoSnatch_Request();

  GM_Snatch_DoSnatch_Request(const GM_Snatch_DoSnatch_Request& from);

  inline GM_Snatch_DoSnatch_Request& operator=(const GM_Snatch_DoSnatch_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_DoSnatch_Request& default_instance();

  void Swap(GM_Snatch_DoSnatch_Request* other);

  // implements Message ----------------------------------------------

  GM_Snatch_DoSnatch_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_DoSnatch_Request& from);
  void MergeFrom(const GM_Snatch_DoSnatch_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 pieceid = 1;
  inline bool has_pieceid() const;
  inline void clear_pieceid();
  static const int kPieceidFieldNumber = 1;
  inline ::google::protobuf::int32 pieceid() const;
  inline void set_pieceid(::google::protobuf::int32 value);

  // required int32 rolepos = 2;
  inline bool has_rolepos() const;
  inline void clear_rolepos();
  static const int kRoleposFieldNumber = 2;
  inline ::google::protobuf::int32 rolepos() const;
  inline void set_rolepos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Snatch_DoSnatch_Request)
 private:
  inline void set_has_pieceid();
  inline void clear_has_pieceid();
  inline void set_has_rolepos();
  inline void clear_has_rolepos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 pieceid_;
  ::google::protobuf::int32 rolepos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_DoSnatch_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_DoSnatch_Result : public ::google::protobuf::Message {
 public:
  GM_Snatch_DoSnatch_Result();
  virtual ~GM_Snatch_DoSnatch_Result();

  GM_Snatch_DoSnatch_Result(const GM_Snatch_DoSnatch_Result& from);

  inline GM_Snatch_DoSnatch_Result& operator=(const GM_Snatch_DoSnatch_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_DoSnatch_Result& default_instance();

  void Swap(GM_Snatch_DoSnatch_Result* other);

  // implements Message ----------------------------------------------

  GM_Snatch_DoSnatch_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_DoSnatch_Result& from);
  void MergeFrom(const GM_Snatch_DoSnatch_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 pieceid = 1;
  inline bool has_pieceid() const;
  inline void clear_pieceid();
  static const int kPieceidFieldNumber = 1;
  inline ::google::protobuf::int32 pieceid() const;
  inline void set_pieceid(::google::protobuf::int32 value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // required int32 addexp = 3;
  inline bool has_addexp() const;
  inline void clear_addexp();
  static const int kAddexpFieldNumber = 3;
  inline ::google::protobuf::int32 addexp() const;
  inline void set_addexp(::google::protobuf::int32 value);

  // required int32 addgold = 4;
  inline bool has_addgold() const;
  inline void clear_addgold();
  static const int kAddgoldFieldNumber = 4;
  inline ::google::protobuf::int32 addgold() const;
  inline void set_addgold(::google::protobuf::int32 value);

  // required int32 costexpval = 5;
  inline bool has_costexpval() const;
  inline void clear_costexpval();
  static const int kCostexpvalFieldNumber = 5;
  inline ::google::protobuf::int32 costexpval() const;
  inline void set_costexpval(::google::protobuf::int32 value);

  // required int32 iswin = 6;
  inline bool has_iswin() const;
  inline void clear_iswin();
  static const int kIswinFieldNumber = 6;
  inline ::google::protobuf::int32 iswin() const;
  inline void set_iswin(::google::protobuf::int32 value);

  // required int32 isget = 7;
  inline bool has_isget() const;
  inline void clear_isget();
  static const int kIsgetFieldNumber = 7;
  inline ::google::protobuf::int32 isget() const;
  inline void set_isget(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Snatch_DoSnatch_Result)
 private:
  inline void set_has_pieceid();
  inline void clear_has_pieceid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_addexp();
  inline void clear_has_addexp();
  inline void set_has_addgold();
  inline void clear_has_addgold();
  inline void set_has_costexpval();
  inline void clear_has_costexpval();
  inline void set_has_iswin();
  inline void clear_has_iswin();
  inline void set_has_isget();
  inline void clear_has_isget();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 pieceid_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 addexp_;
  ::google::protobuf::int32 addgold_;
  ::google::protobuf::int32 costexpval_;
  ::google::protobuf::int32 iswin_;
  ::google::protobuf::int32 isget_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_DoSnatch_Result* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_DoSnatch_Return : public ::google::protobuf::Message {
 public:
  GM_Snatch_DoSnatch_Return();
  virtual ~GM_Snatch_DoSnatch_Return();

  GM_Snatch_DoSnatch_Return(const GM_Snatch_DoSnatch_Return& from);

  inline GM_Snatch_DoSnatch_Return& operator=(const GM_Snatch_DoSnatch_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_DoSnatch_Return& default_instance();

  void Swap(GM_Snatch_DoSnatch_Return* other);

  // implements Message ----------------------------------------------

  GM_Snatch_DoSnatch_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_DoSnatch_Return& from);
  void MergeFrom(const GM_Snatch_DoSnatch_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .GM_Snatch_DoSnatch_Result info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::GM_Snatch_DoSnatch_Result& info() const;
  inline ::GM_Snatch_DoSnatch_Result* mutable_info();
  inline ::GM_Snatch_DoSnatch_Result* release_info();
  inline void set_allocated_info(::GM_Snatch_DoSnatch_Result* info);

  // optional int32 peacetime = 3;
  inline bool has_peacetime() const;
  inline void clear_peacetime();
  static const int kPeacetimeFieldNumber = 3;
  inline ::google::protobuf::int32 peacetime() const;
  inline void set_peacetime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Snatch_DoSnatch_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_peacetime();
  inline void clear_has_peacetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GM_Snatch_DoSnatch_Result* info_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 peacetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_DoSnatch_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_DoMulSnatch_Return : public ::google::protobuf::Message {
 public:
  GM_Snatch_DoMulSnatch_Return();
  virtual ~GM_Snatch_DoMulSnatch_Return();

  GM_Snatch_DoMulSnatch_Return(const GM_Snatch_DoMulSnatch_Return& from);

  inline GM_Snatch_DoMulSnatch_Return& operator=(const GM_Snatch_DoMulSnatch_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_DoMulSnatch_Return& default_instance();

  void Swap(GM_Snatch_DoMulSnatch_Return* other);

  // implements Message ----------------------------------------------

  GM_Snatch_DoMulSnatch_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_DoMulSnatch_Return& from);
  void MergeFrom(const GM_Snatch_DoMulSnatch_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .GM_Snatch_DoSnatch_Result info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::GM_Snatch_DoSnatch_Result& info(int index) const;
  inline ::GM_Snatch_DoSnatch_Result* mutable_info(int index);
  inline ::GM_Snatch_DoSnatch_Result* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Snatch_DoSnatch_Result >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Snatch_DoSnatch_Result >*
      mutable_info();

  // optional int32 peacetime = 3;
  inline bool has_peacetime() const;
  inline void clear_peacetime();
  static const int kPeacetimeFieldNumber = 3;
  inline ::google::protobuf::int32 peacetime() const;
  inline void set_peacetime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Snatch_DoMulSnatch_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_peacetime();
  inline void clear_has_peacetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_Snatch_DoSnatch_Result > info_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 peacetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_DoMulSnatch_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_BuyPeace_Request : public ::google::protobuf::Message {
 public:
  GM_Snatch_BuyPeace_Request();
  virtual ~GM_Snatch_BuyPeace_Request();

  GM_Snatch_BuyPeace_Request(const GM_Snatch_BuyPeace_Request& from);

  inline GM_Snatch_BuyPeace_Request& operator=(const GM_Snatch_BuyPeace_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_BuyPeace_Request& default_instance();

  void Swap(GM_Snatch_BuyPeace_Request* other);

  // implements Message ----------------------------------------------

  GM_Snatch_BuyPeace_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_BuyPeace_Request& from);
  void MergeFrom(const GM_Snatch_BuyPeace_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buytype = 1;
  inline bool has_buytype() const;
  inline void clear_buytype();
  static const int kBuytypeFieldNumber = 1;
  inline ::google::protobuf::int32 buytype() const;
  inline void set_buytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Snatch_BuyPeace_Request)
 private:
  inline void set_has_buytype();
  inline void clear_has_buytype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buytype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_BuyPeace_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_BuyPeace_Return : public ::google::protobuf::Message {
 public:
  GM_Snatch_BuyPeace_Return();
  virtual ~GM_Snatch_BuyPeace_Return();

  GM_Snatch_BuyPeace_Return(const GM_Snatch_BuyPeace_Return& from);

  inline GM_Snatch_BuyPeace_Return& operator=(const GM_Snatch_BuyPeace_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_BuyPeace_Return& default_instance();

  void Swap(GM_Snatch_BuyPeace_Return* other);

  // implements Message ----------------------------------------------

  GM_Snatch_BuyPeace_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_BuyPeace_Return& from);
  void MergeFrom(const GM_Snatch_BuyPeace_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 peacetime = 2;
  inline bool has_peacetime() const;
  inline void clear_peacetime();
  static const int kPeacetimeFieldNumber = 2;
  inline ::google::protobuf::int32 peacetime() const;
  inline void set_peacetime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Snatch_BuyPeace_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_peacetime();
  inline void clear_has_peacetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 peacetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_BuyPeace_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_Compound_Request : public ::google::protobuf::Message {
 public:
  GM_Snatch_Compound_Request();
  virtual ~GM_Snatch_Compound_Request();

  GM_Snatch_Compound_Request(const GM_Snatch_Compound_Request& from);

  inline GM_Snatch_Compound_Request& operator=(const GM_Snatch_Compound_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_Compound_Request& default_instance();

  void Swap(GM_Snatch_Compound_Request* other);

  // implements Message ----------------------------------------------

  GM_Snatch_Compound_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_Compound_Request& from);
  void MergeFrom(const GM_Snatch_Compound_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objectid = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Snatch_Compound_Request)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_Compound_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_Compound_Return : public ::google::protobuf::Message {
 public:
  GM_Snatch_Compound_Return();
  virtual ~GM_Snatch_Compound_Return();

  GM_Snatch_Compound_Return(const GM_Snatch_Compound_Return& from);

  inline GM_Snatch_Compound_Return& operator=(const GM_Snatch_Compound_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_Compound_Return& default_instance();

  void Swap(GM_Snatch_Compound_Return* other);

  // implements Message ----------------------------------------------

  GM_Snatch_Compound_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_Compound_Return& from);
  void MergeFrom(const GM_Snatch_Compound_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .GM_CompoundObj obj = 2;
  inline int obj_size() const;
  inline void clear_obj();
  static const int kObjFieldNumber = 2;
  inline const ::GM_CompoundObj& obj(int index) const;
  inline ::GM_CompoundObj* mutable_obj(int index);
  inline ::GM_CompoundObj* add_obj();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_CompoundObj >&
      obj() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_CompoundObj >*
      mutable_obj();

  // @@protoc_insertion_point(class_scope:GM_Snatch_Compound_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_CompoundObj > obj_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_Compound_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_CompoundObj : public ::google::protobuf::Message {
 public:
  GM_CompoundObj();
  virtual ~GM_CompoundObj();

  GM_CompoundObj(const GM_CompoundObj& from);

  inline GM_CompoundObj& operator=(const GM_CompoundObj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_CompoundObj& default_instance();

  void Swap(GM_CompoundObj* other);

  // implements Message ----------------------------------------------

  GM_CompoundObj* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_CompoundObj& from);
  void MergeFrom(const GM_CompoundObj& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objectid = 2;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 2;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // optional int32 objectnum = 3;
  inline bool has_objectnum() const;
  inline void clear_objectnum();
  static const int kObjectnumFieldNumber = 3;
  inline ::google::protobuf::int32 objectnum() const;
  inline void set_objectnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_CompoundObj)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_objectnum();
  inline void clear_has_objectnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 objectnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_CompoundObj* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_Item_Notify : public ::google::protobuf::Message {
 public:
  GM_Snatch_Item_Notify();
  virtual ~GM_Snatch_Item_Notify();

  GM_Snatch_Item_Notify(const GM_Snatch_Item_Notify& from);

  inline GM_Snatch_Item_Notify& operator=(const GM_Snatch_Item_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_Item_Notify& default_instance();

  void Swap(GM_Snatch_Item_Notify* other);

  // implements Message ----------------------------------------------

  GM_Snatch_Item_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_Item_Notify& from);
  void MergeFrom(const GM_Snatch_Item_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GM_Snatch_Item item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::GM_Snatch_Item& item(int index) const;
  inline ::GM_Snatch_Item* mutable_item(int index);
  inline ::GM_Snatch_Item* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Snatch_Item >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Snatch_Item >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:GM_Snatch_Item_Notify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_Snatch_Item > item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_Item_Notify* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_SwitchCardItem : public ::google::protobuf::Message {
 public:
  GM_Snatch_SwitchCardItem();
  virtual ~GM_Snatch_SwitchCardItem();

  GM_Snatch_SwitchCardItem(const GM_Snatch_SwitchCardItem& from);

  inline GM_Snatch_SwitchCardItem& operator=(const GM_Snatch_SwitchCardItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_SwitchCardItem& default_instance();

  void Swap(GM_Snatch_SwitchCardItem* other);

  // implements Message ----------------------------------------------

  GM_Snatch_SwitchCardItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_SwitchCardItem& from);
  void MergeFrom(const GM_Snatch_SwitchCardItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // required int32 objectid = 2;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 2;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // required int32 objectnum = 3;
  inline bool has_objectnum() const;
  inline void clear_objectnum();
  static const int kObjectnumFieldNumber = 3;
  inline ::google::protobuf::int32 objectnum() const;
  inline void set_objectnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Snatch_SwitchCardItem)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_objectnum();
  inline void clear_has_objectnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 objectnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_SwitchCardItem* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_SwitchCard_Request : public ::google::protobuf::Message {
 public:
  GM_Snatch_SwitchCard_Request();
  virtual ~GM_Snatch_SwitchCard_Request();

  GM_Snatch_SwitchCard_Request(const GM_Snatch_SwitchCard_Request& from);

  inline GM_Snatch_SwitchCard_Request& operator=(const GM_Snatch_SwitchCard_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_SwitchCard_Request& default_instance();

  void Swap(GM_Snatch_SwitchCard_Request* other);

  // implements Message ----------------------------------------------

  GM_Snatch_SwitchCard_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_SwitchCard_Request& from);
  void MergeFrom(const GM_Snatch_SwitchCard_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Snatch_SwitchCard_Request)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_SwitchCard_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_SwitchCard_Return : public ::google::protobuf::Message {
 public:
  GM_Snatch_SwitchCard_Return();
  virtual ~GM_Snatch_SwitchCard_Return();

  GM_Snatch_SwitchCard_Return(const GM_Snatch_SwitchCard_Return& from);

  inline GM_Snatch_SwitchCard_Return& operator=(const GM_Snatch_SwitchCard_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_SwitchCard_Return& default_instance();

  void Swap(GM_Snatch_SwitchCard_Return* other);

  // implements Message ----------------------------------------------

  GM_Snatch_SwitchCard_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_SwitchCard_Return& from);
  void MergeFrom(const GM_Snatch_SwitchCard_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // repeated .GM_Snatch_SwitchCardItem item = 3;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline const ::GM_Snatch_SwitchCardItem& item(int index) const;
  inline ::GM_Snatch_SwitchCardItem* mutable_item(int index);
  inline ::GM_Snatch_SwitchCardItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Snatch_SwitchCardItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Snatch_SwitchCardItem >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:GM_Snatch_SwitchCard_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::RepeatedPtrField< ::GM_Snatch_SwitchCardItem > item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_SwitchCard_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_Reward_Return : public ::google::protobuf::Message {
 public:
  GM_Snatch_Reward_Return();
  virtual ~GM_Snatch_Reward_Return();

  GM_Snatch_Reward_Return(const GM_Snatch_Reward_Return& from);

  inline GM_Snatch_Reward_Return& operator=(const GM_Snatch_Reward_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_Reward_Return& default_instance();

  void Swap(GM_Snatch_Reward_Return* other);

  // implements Message ----------------------------------------------

  GM_Snatch_Reward_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_Reward_Return& from);
  void MergeFrom(const GM_Snatch_Reward_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .GM_Snatch_SwitchCardItem item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::GM_Snatch_SwitchCardItem& item(int index) const;
  inline ::GM_Snatch_SwitchCardItem* mutable_item(int index);
  inline ::GM_Snatch_SwitchCardItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Snatch_SwitchCardItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Snatch_SwitchCardItem >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:GM_Snatch_Reward_Return)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_Snatch_SwitchCardItem > item_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_Reward_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Snatch_PeaceTime_Return : public ::google::protobuf::Message {
 public:
  GM_Snatch_PeaceTime_Return();
  virtual ~GM_Snatch_PeaceTime_Return();

  GM_Snatch_PeaceTime_Return(const GM_Snatch_PeaceTime_Return& from);

  inline GM_Snatch_PeaceTime_Return& operator=(const GM_Snatch_PeaceTime_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Snatch_PeaceTime_Return& default_instance();

  void Swap(GM_Snatch_PeaceTime_Return* other);

  // implements Message ----------------------------------------------

  GM_Snatch_PeaceTime_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Snatch_PeaceTime_Return& from);
  void MergeFrom(const GM_Snatch_PeaceTime_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 peacetime = 1;
  inline bool has_peacetime() const;
  inline void clear_peacetime();
  static const int kPeacetimeFieldNumber = 1;
  inline ::google::protobuf::int32 peacetime() const;
  inline void set_peacetime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Snatch_PeaceTime_Return)
 private:
  inline void set_has_peacetime();
  inline void clear_has_peacetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 peacetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_snatch_2etxt();
  friend void protobuf_AssignDesc_snatch_2etxt();
  friend void protobuf_ShutdownFile_snatch_2etxt();

  void InitAsDefaultInstance();
  static GM_Snatch_PeaceTime_Return* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_Snatch_Item

// required int32 objectid = 1;
inline bool GM_Snatch_Item::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_Item::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_Item::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_Item::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_Snatch_Item::objectid() const {
  return objectid_;
}
inline void GM_Snatch_Item::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// required int32 count = 2;
inline bool GM_Snatch_Item::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Snatch_Item::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Snatch_Item::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Snatch_Item::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GM_Snatch_Item::count() const {
  return count_;
}
inline void GM_Snatch_Item::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// GM_Snatch_BuyIfno

// required int32 buytype = 1;
inline bool GM_Snatch_BuyIfno::has_buytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_BuyIfno::set_has_buytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_BuyIfno::clear_has_buytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_BuyIfno::clear_buytype() {
  buytype_ = 0;
  clear_has_buytype();
}
inline ::google::protobuf::int32 GM_Snatch_BuyIfno::buytype() const {
  return buytype_;
}
inline void GM_Snatch_BuyIfno::set_buytype(::google::protobuf::int32 value) {
  set_has_buytype();
  buytype_ = value;
}

// required int32 needgold = 2;
inline bool GM_Snatch_BuyIfno::has_needgold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Snatch_BuyIfno::set_has_needgold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Snatch_BuyIfno::clear_has_needgold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Snatch_BuyIfno::clear_needgold() {
  needgold_ = 0;
  clear_has_needgold();
}
inline ::google::protobuf::int32 GM_Snatch_BuyIfno::needgold() const {
  return needgold_;
}
inline void GM_Snatch_BuyIfno::set_needgold(::google::protobuf::int32 value) {
  set_has_needgold();
  needgold_ = value;
}

// required int32 peaceminute = 3;
inline bool GM_Snatch_BuyIfno::has_peaceminute() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Snatch_BuyIfno::set_has_peaceminute() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Snatch_BuyIfno::clear_has_peaceminute() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Snatch_BuyIfno::clear_peaceminute() {
  peaceminute_ = 0;
  clear_has_peaceminute();
}
inline ::google::protobuf::int32 GM_Snatch_BuyIfno::peaceminute() const {
  return peaceminute_;
}
inline void GM_Snatch_BuyIfno::set_peaceminute(::google::protobuf::int32 value) {
  set_has_peaceminute();
  peaceminute_ = value;
}

// required int32 objectid = 4;
inline bool GM_Snatch_BuyIfno::has_objectid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Snatch_BuyIfno::set_has_objectid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Snatch_BuyIfno::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Snatch_BuyIfno::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_Snatch_BuyIfno::objectid() const {
  return objectid_;
}
inline void GM_Snatch_BuyIfno::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// -------------------------------------------------------------------

// GM_Snatch_AllInfo

// required int32 peacetime = 1;
inline bool GM_Snatch_AllInfo::has_peacetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_AllInfo::set_has_peacetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_AllInfo::clear_has_peacetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_AllInfo::clear_peacetime() {
  peacetime_ = 0;
  clear_has_peacetime();
}
inline ::google::protobuf::int32 GM_Snatch_AllInfo::peacetime() const {
  return peacetime_;
}
inline void GM_Snatch_AllInfo::set_peacetime(::google::protobuf::int32 value) {
  set_has_peacetime();
  peacetime_ = value;
}

// repeated .GM_Snatch_Item item = 2;
inline int GM_Snatch_AllInfo::item_size() const {
  return item_.size();
}
inline void GM_Snatch_AllInfo::clear_item() {
  item_.Clear();
}
inline const ::GM_Snatch_Item& GM_Snatch_AllInfo::item(int index) const {
  return item_.Get(index);
}
inline ::GM_Snatch_Item* GM_Snatch_AllInfo::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::GM_Snatch_Item* GM_Snatch_AllInfo::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Snatch_Item >&
GM_Snatch_AllInfo::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Snatch_Item >*
GM_Snatch_AllInfo::mutable_item() {
  return &item_;
}

// repeated .GM_Snatch_BuyIfno buyinfo = 3;
inline int GM_Snatch_AllInfo::buyinfo_size() const {
  return buyinfo_.size();
}
inline void GM_Snatch_AllInfo::clear_buyinfo() {
  buyinfo_.Clear();
}
inline const ::GM_Snatch_BuyIfno& GM_Snatch_AllInfo::buyinfo(int index) const {
  return buyinfo_.Get(index);
}
inline ::GM_Snatch_BuyIfno* GM_Snatch_AllInfo::mutable_buyinfo(int index) {
  return buyinfo_.Mutable(index);
}
inline ::GM_Snatch_BuyIfno* GM_Snatch_AllInfo::add_buyinfo() {
  return buyinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Snatch_BuyIfno >&
GM_Snatch_AllInfo::buyinfo() const {
  return buyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Snatch_BuyIfno >*
GM_Snatch_AllInfo::mutable_buyinfo() {
  return &buyinfo_;
}

// -------------------------------------------------------------------

// GM_Snatch_Look_Request

// required int32 pieceid = 1;
inline bool GM_Snatch_Look_Request::has_pieceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_Look_Request::set_has_pieceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_Look_Request::clear_has_pieceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_Look_Request::clear_pieceid() {
  pieceid_ = 0;
  clear_has_pieceid();
}
inline ::google::protobuf::int32 GM_Snatch_Look_Request::pieceid() const {
  return pieceid_;
}
inline void GM_Snatch_Look_Request::set_pieceid(::google::protobuf::int32 value) {
  set_has_pieceid();
  pieceid_ = value;
}

// -------------------------------------------------------------------

// GM_Snatch_PlayerInfo

// required int32 rolepos = 1;
inline bool GM_Snatch_PlayerInfo::has_rolepos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_PlayerInfo::set_has_rolepos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_PlayerInfo::clear_has_rolepos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_PlayerInfo::clear_rolepos() {
  rolepos_ = 0;
  clear_has_rolepos();
}
inline ::google::protobuf::int32 GM_Snatch_PlayerInfo::rolepos() const {
  return rolepos_;
}
inline void GM_Snatch_PlayerInfo::set_rolepos(::google::protobuf::int32 value) {
  set_has_rolepos();
  rolepos_ = value;
}

// required int32 roleid = 2;
inline bool GM_Snatch_PlayerInfo::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Snatch_PlayerInfo::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Snatch_PlayerInfo::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Snatch_PlayerInfo::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Snatch_PlayerInfo::roleid() const {
  return roleid_;
}
inline void GM_Snatch_PlayerInfo::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required int32 rolepro = 3;
inline bool GM_Snatch_PlayerInfo::has_rolepro() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Snatch_PlayerInfo::set_has_rolepro() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Snatch_PlayerInfo::clear_has_rolepro() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Snatch_PlayerInfo::clear_rolepro() {
  rolepro_ = 0;
  clear_has_rolepro();
}
inline ::google::protobuf::int32 GM_Snatch_PlayerInfo::rolepro() const {
  return rolepro_;
}
inline void GM_Snatch_PlayerInfo::set_rolepro(::google::protobuf::int32 value) {
  set_has_rolepro();
  rolepro_ = value;
}

// required int32 rolelv = 4;
inline bool GM_Snatch_PlayerInfo::has_rolelv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Snatch_PlayerInfo::set_has_rolelv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Snatch_PlayerInfo::clear_has_rolelv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Snatch_PlayerInfo::clear_rolelv() {
  rolelv_ = 0;
  clear_has_rolelv();
}
inline ::google::protobuf::int32 GM_Snatch_PlayerInfo::rolelv() const {
  return rolelv_;
}
inline void GM_Snatch_PlayerInfo::set_rolelv(::google::protobuf::int32 value) {
  set_has_rolelv();
  rolelv_ = value;
}

// required string roleName = 5;
inline bool GM_Snatch_PlayerInfo::has_rolename() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Snatch_PlayerInfo::set_has_rolename() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Snatch_PlayerInfo::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Snatch_PlayerInfo::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& GM_Snatch_PlayerInfo::rolename() const {
  return *rolename_;
}
inline void GM_Snatch_PlayerInfo::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void GM_Snatch_PlayerInfo::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void GM_Snatch_PlayerInfo::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Snatch_PlayerInfo::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* GM_Snatch_PlayerInfo::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Snatch_PlayerInfo::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 probability = 6;
inline bool GM_Snatch_PlayerInfo::has_probability() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_Snatch_PlayerInfo::set_has_probability() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_Snatch_PlayerInfo::clear_has_probability() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_Snatch_PlayerInfo::clear_probability() {
  probability_ = 0;
  clear_has_probability();
}
inline ::google::protobuf::int32 GM_Snatch_PlayerInfo::probability() const {
  return probability_;
}
inline void GM_Snatch_PlayerInfo::set_probability(::google::protobuf::int32 value) {
  set_has_probability();
  probability_ = value;
}

// -------------------------------------------------------------------

// GM_Snatch_Look_Return

// required int32 result = 1;
inline bool GM_Snatch_Look_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_Look_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_Look_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_Look_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_Snatch_Look_Return::result() const {
  return result_;
}
inline void GM_Snatch_Look_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .GM_Snatch_PlayerInfo m_PlayerInfo = 2;
inline int GM_Snatch_Look_Return::m_playerinfo_size() const {
  return m_playerinfo_.size();
}
inline void GM_Snatch_Look_Return::clear_m_playerinfo() {
  m_playerinfo_.Clear();
}
inline const ::GM_Snatch_PlayerInfo& GM_Snatch_Look_Return::m_playerinfo(int index) const {
  return m_playerinfo_.Get(index);
}
inline ::GM_Snatch_PlayerInfo* GM_Snatch_Look_Return::mutable_m_playerinfo(int index) {
  return m_playerinfo_.Mutable(index);
}
inline ::GM_Snatch_PlayerInfo* GM_Snatch_Look_Return::add_m_playerinfo() {
  return m_playerinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Snatch_PlayerInfo >&
GM_Snatch_Look_Return::m_playerinfo() const {
  return m_playerinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Snatch_PlayerInfo >*
GM_Snatch_Look_Return::mutable_m_playerinfo() {
  return &m_playerinfo_;
}

// -------------------------------------------------------------------

// GM_Snatch_DoSnatch_Request

// required int32 pieceid = 1;
inline bool GM_Snatch_DoSnatch_Request::has_pieceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_DoSnatch_Request::set_has_pieceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_DoSnatch_Request::clear_has_pieceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_DoSnatch_Request::clear_pieceid() {
  pieceid_ = 0;
  clear_has_pieceid();
}
inline ::google::protobuf::int32 GM_Snatch_DoSnatch_Request::pieceid() const {
  return pieceid_;
}
inline void GM_Snatch_DoSnatch_Request::set_pieceid(::google::protobuf::int32 value) {
  set_has_pieceid();
  pieceid_ = value;
}

// required int32 rolepos = 2;
inline bool GM_Snatch_DoSnatch_Request::has_rolepos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Snatch_DoSnatch_Request::set_has_rolepos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Snatch_DoSnatch_Request::clear_has_rolepos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Snatch_DoSnatch_Request::clear_rolepos() {
  rolepos_ = 0;
  clear_has_rolepos();
}
inline ::google::protobuf::int32 GM_Snatch_DoSnatch_Request::rolepos() const {
  return rolepos_;
}
inline void GM_Snatch_DoSnatch_Request::set_rolepos(::google::protobuf::int32 value) {
  set_has_rolepos();
  rolepos_ = value;
}

// -------------------------------------------------------------------

// GM_Snatch_DoSnatch_Result

// required int32 pieceid = 1;
inline bool GM_Snatch_DoSnatch_Result::has_pieceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_DoSnatch_Result::set_has_pieceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_DoSnatch_Result::clear_has_pieceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_DoSnatch_Result::clear_pieceid() {
  pieceid_ = 0;
  clear_has_pieceid();
}
inline ::google::protobuf::int32 GM_Snatch_DoSnatch_Result::pieceid() const {
  return pieceid_;
}
inline void GM_Snatch_DoSnatch_Result::set_pieceid(::google::protobuf::int32 value) {
  set_has_pieceid();
  pieceid_ = value;
}

// required int32 count = 2;
inline bool GM_Snatch_DoSnatch_Result::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Snatch_DoSnatch_Result::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Snatch_DoSnatch_Result::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Snatch_DoSnatch_Result::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GM_Snatch_DoSnatch_Result::count() const {
  return count_;
}
inline void GM_Snatch_DoSnatch_Result::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// required int32 addexp = 3;
inline bool GM_Snatch_DoSnatch_Result::has_addexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Snatch_DoSnatch_Result::set_has_addexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Snatch_DoSnatch_Result::clear_has_addexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Snatch_DoSnatch_Result::clear_addexp() {
  addexp_ = 0;
  clear_has_addexp();
}
inline ::google::protobuf::int32 GM_Snatch_DoSnatch_Result::addexp() const {
  return addexp_;
}
inline void GM_Snatch_DoSnatch_Result::set_addexp(::google::protobuf::int32 value) {
  set_has_addexp();
  addexp_ = value;
}

// required int32 addgold = 4;
inline bool GM_Snatch_DoSnatch_Result::has_addgold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Snatch_DoSnatch_Result::set_has_addgold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Snatch_DoSnatch_Result::clear_has_addgold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Snatch_DoSnatch_Result::clear_addgold() {
  addgold_ = 0;
  clear_has_addgold();
}
inline ::google::protobuf::int32 GM_Snatch_DoSnatch_Result::addgold() const {
  return addgold_;
}
inline void GM_Snatch_DoSnatch_Result::set_addgold(::google::protobuf::int32 value) {
  set_has_addgold();
  addgold_ = value;
}

// required int32 costexpval = 5;
inline bool GM_Snatch_DoSnatch_Result::has_costexpval() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Snatch_DoSnatch_Result::set_has_costexpval() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Snatch_DoSnatch_Result::clear_has_costexpval() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Snatch_DoSnatch_Result::clear_costexpval() {
  costexpval_ = 0;
  clear_has_costexpval();
}
inline ::google::protobuf::int32 GM_Snatch_DoSnatch_Result::costexpval() const {
  return costexpval_;
}
inline void GM_Snatch_DoSnatch_Result::set_costexpval(::google::protobuf::int32 value) {
  set_has_costexpval();
  costexpval_ = value;
}

// required int32 iswin = 6;
inline bool GM_Snatch_DoSnatch_Result::has_iswin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_Snatch_DoSnatch_Result::set_has_iswin() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_Snatch_DoSnatch_Result::clear_has_iswin() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_Snatch_DoSnatch_Result::clear_iswin() {
  iswin_ = 0;
  clear_has_iswin();
}
inline ::google::protobuf::int32 GM_Snatch_DoSnatch_Result::iswin() const {
  return iswin_;
}
inline void GM_Snatch_DoSnatch_Result::set_iswin(::google::protobuf::int32 value) {
  set_has_iswin();
  iswin_ = value;
}

// required int32 isget = 7;
inline bool GM_Snatch_DoSnatch_Result::has_isget() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_Snatch_DoSnatch_Result::set_has_isget() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_Snatch_DoSnatch_Result::clear_has_isget() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_Snatch_DoSnatch_Result::clear_isget() {
  isget_ = 0;
  clear_has_isget();
}
inline ::google::protobuf::int32 GM_Snatch_DoSnatch_Result::isget() const {
  return isget_;
}
inline void GM_Snatch_DoSnatch_Result::set_isget(::google::protobuf::int32 value) {
  set_has_isget();
  isget_ = value;
}

// -------------------------------------------------------------------

// GM_Snatch_DoSnatch_Return

// required int32 result = 1;
inline bool GM_Snatch_DoSnatch_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_DoSnatch_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_DoSnatch_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_DoSnatch_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_Snatch_DoSnatch_Return::result() const {
  return result_;
}
inline void GM_Snatch_DoSnatch_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .GM_Snatch_DoSnatch_Result info = 2;
inline bool GM_Snatch_DoSnatch_Return::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Snatch_DoSnatch_Return::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Snatch_DoSnatch_Return::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Snatch_DoSnatch_Return::clear_info() {
  if (info_ != NULL) info_->::GM_Snatch_DoSnatch_Result::Clear();
  clear_has_info();
}
inline const ::GM_Snatch_DoSnatch_Result& GM_Snatch_DoSnatch_Return::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::GM_Snatch_DoSnatch_Result* GM_Snatch_DoSnatch_Return::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::GM_Snatch_DoSnatch_Result;
  return info_;
}
inline ::GM_Snatch_DoSnatch_Result* GM_Snatch_DoSnatch_Return::release_info() {
  clear_has_info();
  ::GM_Snatch_DoSnatch_Result* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GM_Snatch_DoSnatch_Return::set_allocated_info(::GM_Snatch_DoSnatch_Result* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// optional int32 peacetime = 3;
inline bool GM_Snatch_DoSnatch_Return::has_peacetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Snatch_DoSnatch_Return::set_has_peacetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Snatch_DoSnatch_Return::clear_has_peacetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Snatch_DoSnatch_Return::clear_peacetime() {
  peacetime_ = 0;
  clear_has_peacetime();
}
inline ::google::protobuf::int32 GM_Snatch_DoSnatch_Return::peacetime() const {
  return peacetime_;
}
inline void GM_Snatch_DoSnatch_Return::set_peacetime(::google::protobuf::int32 value) {
  set_has_peacetime();
  peacetime_ = value;
}

// -------------------------------------------------------------------

// GM_Snatch_DoMulSnatch_Return

// required int32 result = 1;
inline bool GM_Snatch_DoMulSnatch_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_DoMulSnatch_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_DoMulSnatch_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_DoMulSnatch_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_Snatch_DoMulSnatch_Return::result() const {
  return result_;
}
inline void GM_Snatch_DoMulSnatch_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .GM_Snatch_DoSnatch_Result info = 2;
inline int GM_Snatch_DoMulSnatch_Return::info_size() const {
  return info_.size();
}
inline void GM_Snatch_DoMulSnatch_Return::clear_info() {
  info_.Clear();
}
inline const ::GM_Snatch_DoSnatch_Result& GM_Snatch_DoMulSnatch_Return::info(int index) const {
  return info_.Get(index);
}
inline ::GM_Snatch_DoSnatch_Result* GM_Snatch_DoMulSnatch_Return::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::GM_Snatch_DoSnatch_Result* GM_Snatch_DoMulSnatch_Return::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Snatch_DoSnatch_Result >&
GM_Snatch_DoMulSnatch_Return::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Snatch_DoSnatch_Result >*
GM_Snatch_DoMulSnatch_Return::mutable_info() {
  return &info_;
}

// optional int32 peacetime = 3;
inline bool GM_Snatch_DoMulSnatch_Return::has_peacetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Snatch_DoMulSnatch_Return::set_has_peacetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Snatch_DoMulSnatch_Return::clear_has_peacetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Snatch_DoMulSnatch_Return::clear_peacetime() {
  peacetime_ = 0;
  clear_has_peacetime();
}
inline ::google::protobuf::int32 GM_Snatch_DoMulSnatch_Return::peacetime() const {
  return peacetime_;
}
inline void GM_Snatch_DoMulSnatch_Return::set_peacetime(::google::protobuf::int32 value) {
  set_has_peacetime();
  peacetime_ = value;
}

// -------------------------------------------------------------------

// GM_Snatch_BuyPeace_Request

// required int32 buytype = 1;
inline bool GM_Snatch_BuyPeace_Request::has_buytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_BuyPeace_Request::set_has_buytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_BuyPeace_Request::clear_has_buytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_BuyPeace_Request::clear_buytype() {
  buytype_ = 0;
  clear_has_buytype();
}
inline ::google::protobuf::int32 GM_Snatch_BuyPeace_Request::buytype() const {
  return buytype_;
}
inline void GM_Snatch_BuyPeace_Request::set_buytype(::google::protobuf::int32 value) {
  set_has_buytype();
  buytype_ = value;
}

// -------------------------------------------------------------------

// GM_Snatch_BuyPeace_Return

// required int32 result = 1;
inline bool GM_Snatch_BuyPeace_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_BuyPeace_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_BuyPeace_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_BuyPeace_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_Snatch_BuyPeace_Return::result() const {
  return result_;
}
inline void GM_Snatch_BuyPeace_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 peacetime = 2;
inline bool GM_Snatch_BuyPeace_Return::has_peacetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Snatch_BuyPeace_Return::set_has_peacetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Snatch_BuyPeace_Return::clear_has_peacetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Snatch_BuyPeace_Return::clear_peacetime() {
  peacetime_ = 0;
  clear_has_peacetime();
}
inline ::google::protobuf::int32 GM_Snatch_BuyPeace_Return::peacetime() const {
  return peacetime_;
}
inline void GM_Snatch_BuyPeace_Return::set_peacetime(::google::protobuf::int32 value) {
  set_has_peacetime();
  peacetime_ = value;
}

// -------------------------------------------------------------------

// GM_Snatch_Compound_Request

// required int32 objectid = 1;
inline bool GM_Snatch_Compound_Request::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_Compound_Request::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_Compound_Request::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_Compound_Request::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_Snatch_Compound_Request::objectid() const {
  return objectid_;
}
inline void GM_Snatch_Compound_Request::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// -------------------------------------------------------------------

// GM_Snatch_Compound_Return

// required int32 result = 1;
inline bool GM_Snatch_Compound_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_Compound_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_Compound_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_Compound_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_Snatch_Compound_Return::result() const {
  return result_;
}
inline void GM_Snatch_Compound_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .GM_CompoundObj obj = 2;
inline int GM_Snatch_Compound_Return::obj_size() const {
  return obj_.size();
}
inline void GM_Snatch_Compound_Return::clear_obj() {
  obj_.Clear();
}
inline const ::GM_CompoundObj& GM_Snatch_Compound_Return::obj(int index) const {
  return obj_.Get(index);
}
inline ::GM_CompoundObj* GM_Snatch_Compound_Return::mutable_obj(int index) {
  return obj_.Mutable(index);
}
inline ::GM_CompoundObj* GM_Snatch_Compound_Return::add_obj() {
  return obj_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_CompoundObj >&
GM_Snatch_Compound_Return::obj() const {
  return obj_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_CompoundObj >*
GM_Snatch_Compound_Return::mutable_obj() {
  return &obj_;
}

// -------------------------------------------------------------------

// GM_CompoundObj

// required int32 objectid = 2;
inline bool GM_CompoundObj::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_CompoundObj::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_CompoundObj::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_CompoundObj::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_CompoundObj::objectid() const {
  return objectid_;
}
inline void GM_CompoundObj::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// optional int32 objectnum = 3;
inline bool GM_CompoundObj::has_objectnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_CompoundObj::set_has_objectnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_CompoundObj::clear_has_objectnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_CompoundObj::clear_objectnum() {
  objectnum_ = 0;
  clear_has_objectnum();
}
inline ::google::protobuf::int32 GM_CompoundObj::objectnum() const {
  return objectnum_;
}
inline void GM_CompoundObj::set_objectnum(::google::protobuf::int32 value) {
  set_has_objectnum();
  objectnum_ = value;
}

// -------------------------------------------------------------------

// GM_Snatch_Item_Notify

// repeated .GM_Snatch_Item item = 1;
inline int GM_Snatch_Item_Notify::item_size() const {
  return item_.size();
}
inline void GM_Snatch_Item_Notify::clear_item() {
  item_.Clear();
}
inline const ::GM_Snatch_Item& GM_Snatch_Item_Notify::item(int index) const {
  return item_.Get(index);
}
inline ::GM_Snatch_Item* GM_Snatch_Item_Notify::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::GM_Snatch_Item* GM_Snatch_Item_Notify::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Snatch_Item >&
GM_Snatch_Item_Notify::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Snatch_Item >*
GM_Snatch_Item_Notify::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// GM_Snatch_SwitchCardItem

// required int32 pos = 1;
inline bool GM_Snatch_SwitchCardItem::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_SwitchCardItem::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_SwitchCardItem::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_SwitchCardItem::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 GM_Snatch_SwitchCardItem::pos() const {
  return pos_;
}
inline void GM_Snatch_SwitchCardItem::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// required int32 objectid = 2;
inline bool GM_Snatch_SwitchCardItem::has_objectid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Snatch_SwitchCardItem::set_has_objectid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Snatch_SwitchCardItem::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Snatch_SwitchCardItem::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_Snatch_SwitchCardItem::objectid() const {
  return objectid_;
}
inline void GM_Snatch_SwitchCardItem::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// required int32 objectnum = 3;
inline bool GM_Snatch_SwitchCardItem::has_objectnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Snatch_SwitchCardItem::set_has_objectnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Snatch_SwitchCardItem::clear_has_objectnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Snatch_SwitchCardItem::clear_objectnum() {
  objectnum_ = 0;
  clear_has_objectnum();
}
inline ::google::protobuf::int32 GM_Snatch_SwitchCardItem::objectnum() const {
  return objectnum_;
}
inline void GM_Snatch_SwitchCardItem::set_objectnum(::google::protobuf::int32 value) {
  set_has_objectnum();
  objectnum_ = value;
}

// -------------------------------------------------------------------

// GM_Snatch_SwitchCard_Request

// required int32 pos = 1;
inline bool GM_Snatch_SwitchCard_Request::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_SwitchCard_Request::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_SwitchCard_Request::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_SwitchCard_Request::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 GM_Snatch_SwitchCard_Request::pos() const {
  return pos_;
}
inline void GM_Snatch_SwitchCard_Request::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// GM_Snatch_SwitchCard_Return

// required int32 result = 1;
inline bool GM_Snatch_SwitchCard_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_SwitchCard_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_SwitchCard_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_SwitchCard_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_Snatch_SwitchCard_Return::result() const {
  return result_;
}
inline void GM_Snatch_SwitchCard_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 pos = 2;
inline bool GM_Snatch_SwitchCard_Return::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Snatch_SwitchCard_Return::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Snatch_SwitchCard_Return::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Snatch_SwitchCard_Return::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 GM_Snatch_SwitchCard_Return::pos() const {
  return pos_;
}
inline void GM_Snatch_SwitchCard_Return::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// repeated .GM_Snatch_SwitchCardItem item = 3;
inline int GM_Snatch_SwitchCard_Return::item_size() const {
  return item_.size();
}
inline void GM_Snatch_SwitchCard_Return::clear_item() {
  item_.Clear();
}
inline const ::GM_Snatch_SwitchCardItem& GM_Snatch_SwitchCard_Return::item(int index) const {
  return item_.Get(index);
}
inline ::GM_Snatch_SwitchCardItem* GM_Snatch_SwitchCard_Return::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::GM_Snatch_SwitchCardItem* GM_Snatch_SwitchCard_Return::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Snatch_SwitchCardItem >&
GM_Snatch_SwitchCard_Return::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Snatch_SwitchCardItem >*
GM_Snatch_SwitchCard_Return::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// GM_Snatch_Reward_Return

// required int32 result = 1;
inline bool GM_Snatch_Reward_Return::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_Reward_Return::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_Reward_Return::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_Reward_Return::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_Snatch_Reward_Return::result() const {
  return result_;
}
inline void GM_Snatch_Reward_Return::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .GM_Snatch_SwitchCardItem item = 2;
inline int GM_Snatch_Reward_Return::item_size() const {
  return item_.size();
}
inline void GM_Snatch_Reward_Return::clear_item() {
  item_.Clear();
}
inline const ::GM_Snatch_SwitchCardItem& GM_Snatch_Reward_Return::item(int index) const {
  return item_.Get(index);
}
inline ::GM_Snatch_SwitchCardItem* GM_Snatch_Reward_Return::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::GM_Snatch_SwitchCardItem* GM_Snatch_Reward_Return::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Snatch_SwitchCardItem >&
GM_Snatch_Reward_Return::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Snatch_SwitchCardItem >*
GM_Snatch_Reward_Return::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// GM_Snatch_PeaceTime_Return

// required int32 peacetime = 1;
inline bool GM_Snatch_PeaceTime_Return::has_peacetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Snatch_PeaceTime_Return::set_has_peacetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Snatch_PeaceTime_Return::clear_has_peacetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Snatch_PeaceTime_Return::clear_peacetime() {
  peacetime_ = 0;
  clear_has_peacetime();
}
inline ::google::protobuf::int32 GM_Snatch_PeaceTime_Return::peacetime() const {
  return peacetime_;
}
inline void GM_Snatch_PeaceTime_Return::set_peacetime(::google::protobuf::int32 value) {
  set_has_peacetime();
  peacetime_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_snatch_2etxt__INCLUDED
