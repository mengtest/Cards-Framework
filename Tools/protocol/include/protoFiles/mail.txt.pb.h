// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mail.txt

#ifndef PROTOBUF_mail_2etxt__INCLUDED
#define PROTOBUF_mail_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_mail_2etxt();
void protobuf_AssignDesc_mail_2etxt();
void protobuf_ShutdownFile_mail_2etxt();

class GM_PlayerMailPack;
class GM_Mail;
class GM_MailItem;
class GM_MailOperate;
class GM_SystemMail;

// ===================================================================

class GM_PlayerMailPack : public ::google::protobuf::Message {
 public:
  GM_PlayerMailPack();
  virtual ~GM_PlayerMailPack();

  GM_PlayerMailPack(const GM_PlayerMailPack& from);

  inline GM_PlayerMailPack& operator=(const GM_PlayerMailPack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_PlayerMailPack& default_instance();

  void Swap(GM_PlayerMailPack* other);

  // implements Message ----------------------------------------------

  GM_PlayerMailPack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_PlayerMailPack& from);
  void MergeFrom(const GM_PlayerMailPack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // repeated .GM_Mail mails = 2;
  inline int mails_size() const;
  inline void clear_mails();
  static const int kMailsFieldNumber = 2;
  inline const ::GM_Mail& mails(int index) const;
  inline ::GM_Mail* mutable_mails(int index);
  inline ::GM_Mail* add_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Mail >&
      mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Mail >*
      mutable_mails();

  // @@protoc_insertion_point(class_scope:GM_PlayerMailPack)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_Mail > mails_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2etxt();
  friend void protobuf_AssignDesc_mail_2etxt();
  friend void protobuf_ShutdownFile_mail_2etxt();

  void InitAsDefaultInstance();
  static GM_PlayerMailPack* default_instance_;
};
// -------------------------------------------------------------------

class GM_Mail : public ::google::protobuf::Message {
 public:
  GM_Mail();
  virtual ~GM_Mail();

  GM_Mail(const GM_Mail& from);

  inline GM_Mail& operator=(const GM_Mail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Mail& default_instance();

  void Swap(GM_Mail* other);

  // implements Message ----------------------------------------------

  GM_Mail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Mail& from);
  void MergeFrom(const GM_Mail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string subject = 3;
  inline bool has_subject() const;
  inline void clear_subject();
  static const int kSubjectFieldNumber = 3;
  inline const ::std::string& subject() const;
  inline void set_subject(const ::std::string& value);
  inline void set_subject(const char* value);
  inline void set_subject(const char* value, size_t size);
  inline ::std::string* mutable_subject();
  inline ::std::string* release_subject();
  inline void set_allocated_subject(::std::string* subject);

  // required string word = 4;
  inline bool has_word() const;
  inline void clear_word();
  static const int kWordFieldNumber = 4;
  inline const ::std::string& word() const;
  inline void set_word(const ::std::string& value);
  inline void set_word(const char* value);
  inline void set_word(const char* value, size_t size);
  inline ::std::string* mutable_word();
  inline ::std::string* release_word();
  inline void set_allocated_word(::std::string* word);

  // optional string time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline const ::std::string& time() const;
  inline void set_time(const ::std::string& value);
  inline void set_time(const char* value);
  inline void set_time(const char* value, size_t size);
  inline ::std::string* mutable_time();
  inline ::std::string* release_time();
  inline void set_allocated_time(::std::string* time);

  // optional uint32 state = 6;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 6;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // repeated .GM_MailItem items = 8;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 8;
  inline const ::GM_MailItem& items(int index) const;
  inline ::GM_MailItem* mutable_items(int index);
  inline ::GM_MailItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_MailItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_MailItem >*
      mutable_items();

  // optional uint64 gmid = 10;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 10;
  inline ::google::protobuf::uint64 gmid() const;
  inline void set_gmid(::google::protobuf::uint64 value);

  // optional int32 mailSource = 14;
  inline bool has_mailsource() const;
  inline void clear_mailsource();
  static const int kMailSourceFieldNumber = 14;
  inline ::google::protobuf::int32 mailsource() const;
  inline void set_mailsource(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Mail)
 private:
  inline void set_has_subject();
  inline void clear_has_subject();
  inline void set_has_word();
  inline void clear_has_word();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_mailsource();
  inline void clear_has_mailsource();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* subject_;
  ::std::string* word_;
  ::std::string* time_;
  ::google::protobuf::RepeatedPtrField< ::GM_MailItem > items_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::int32 mailsource_;
  ::google::protobuf::uint64 gmid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2etxt();
  friend void protobuf_AssignDesc_mail_2etxt();
  friend void protobuf_ShutdownFile_mail_2etxt();

  void InitAsDefaultInstance();
  static GM_Mail* default_instance_;
};
// -------------------------------------------------------------------

class GM_MailItem : public ::google::protobuf::Message {
 public:
  GM_MailItem();
  virtual ~GM_MailItem();

  GM_MailItem(const GM_MailItem& from);

  inline GM_MailItem& operator=(const GM_MailItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_MailItem& default_instance();

  void Swap(GM_MailItem* other);

  // implements Message ----------------------------------------------

  GM_MailItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_MailItem& from);
  void MergeFrom(const GM_MailItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 typeId = 3;
  inline bool has_typeid_() const;
  inline void clear_typeid_();
  static const int kTypeIdFieldNumber = 3;
  inline ::google::protobuf::int32 typeid_() const;
  inline void set_typeid_(::google::protobuf::int32 value);

  // required int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 equiplv = 7;
  inline bool has_equiplv() const;
  inline void clear_equiplv();
  static const int kEquiplvFieldNumber = 7;
  inline ::google::protobuf::int32 equiplv() const;
  inline void set_equiplv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_MailItem)
 private:
  inline void set_has_typeid_();
  inline void clear_has_typeid_();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_equiplv();
  inline void clear_has_equiplv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 typeid__;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 equiplv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2etxt();
  friend void protobuf_AssignDesc_mail_2etxt();
  friend void protobuf_ShutdownFile_mail_2etxt();

  void InitAsDefaultInstance();
  static GM_MailItem* default_instance_;
};
// -------------------------------------------------------------------

class GM_MailOperate : public ::google::protobuf::Message {
 public:
  GM_MailOperate();
  virtual ~GM_MailOperate();

  GM_MailOperate(const GM_MailOperate& from);

  inline GM_MailOperate& operator=(const GM_MailOperate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_MailOperate& default_instance();

  void Swap(GM_MailOperate* other);

  // implements Message ----------------------------------------------

  GM_MailOperate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_MailOperate& from);
  void MergeFrom(const GM_MailOperate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 gmid = 2;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 2;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_MailOperate)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2etxt();
  friend void protobuf_AssignDesc_mail_2etxt();
  friend void protobuf_ShutdownFile_mail_2etxt();

  void InitAsDefaultInstance();
  static GM_MailOperate* default_instance_;
};
// -------------------------------------------------------------------

class GM_SystemMail : public ::google::protobuf::Message {
 public:
  GM_SystemMail();
  virtual ~GM_SystemMail();

  GM_SystemMail(const GM_SystemMail& from);

  inline GM_SystemMail& operator=(const GM_SystemMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_SystemMail& default_instance();

  void Swap(GM_SystemMail* other);

  // implements Message ----------------------------------------------

  GM_SystemMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_SystemMail& from);
  void MergeFrom(const GM_SystemMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required string userData = 2;
  inline bool has_userdata() const;
  inline void clear_userdata();
  static const int kUserDataFieldNumber = 2;
  inline const ::std::string& userdata() const;
  inline void set_userdata(const ::std::string& value);
  inline void set_userdata(const char* value);
  inline void set_userdata(const char* value, size_t size);
  inline ::std::string* mutable_userdata();
  inline ::std::string* release_userdata();
  inline void set_allocated_userdata(::std::string* userdata);

  // required .GM_Mail data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::GM_Mail& data() const;
  inline ::GM_Mail* mutable_data();
  inline ::GM_Mail* release_data();
  inline void set_allocated_data(::GM_Mail* data);

  // repeated string rolenames = 4;
  inline int rolenames_size() const;
  inline void clear_rolenames();
  static const int kRolenamesFieldNumber = 4;
  inline const ::std::string& rolenames(int index) const;
  inline ::std::string* mutable_rolenames(int index);
  inline void set_rolenames(int index, const ::std::string& value);
  inline void set_rolenames(int index, const char* value);
  inline void set_rolenames(int index, const char* value, size_t size);
  inline ::std::string* add_rolenames();
  inline void add_rolenames(const ::std::string& value);
  inline void add_rolenames(const char* value);
  inline void add_rolenames(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& rolenames() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_rolenames();

  // @@protoc_insertion_point(class_scope:GM_SystemMail)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_userdata();
  inline void clear_has_userdata();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* userdata_;
  ::GM_Mail* data_;
  ::google::protobuf::RepeatedPtrField< ::std::string> rolenames_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2etxt();
  friend void protobuf_AssignDesc_mail_2etxt();
  friend void protobuf_ShutdownFile_mail_2etxt();

  void InitAsDefaultInstance();
  static GM_SystemMail* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_PlayerMailPack

// required int32 roleId = 1;
inline bool GM_PlayerMailPack::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_PlayerMailPack::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_PlayerMailPack::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_PlayerMailPack::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_PlayerMailPack::roleid() const {
  return roleid_;
}
inline void GM_PlayerMailPack::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// repeated .GM_Mail mails = 2;
inline int GM_PlayerMailPack::mails_size() const {
  return mails_.size();
}
inline void GM_PlayerMailPack::clear_mails() {
  mails_.Clear();
}
inline const ::GM_Mail& GM_PlayerMailPack::mails(int index) const {
  return mails_.Get(index);
}
inline ::GM_Mail* GM_PlayerMailPack::mutable_mails(int index) {
  return mails_.Mutable(index);
}
inline ::GM_Mail* GM_PlayerMailPack::add_mails() {
  return mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Mail >&
GM_PlayerMailPack::mails() const {
  return mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Mail >*
GM_PlayerMailPack::mutable_mails() {
  return &mails_;
}

// -------------------------------------------------------------------

// GM_Mail

// required string subject = 3;
inline bool GM_Mail::has_subject() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Mail::set_has_subject() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Mail::clear_has_subject() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Mail::clear_subject() {
  if (subject_ != &::google::protobuf::internal::kEmptyString) {
    subject_->clear();
  }
  clear_has_subject();
}
inline const ::std::string& GM_Mail::subject() const {
  return *subject_;
}
inline void GM_Mail::set_subject(const ::std::string& value) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::kEmptyString) {
    subject_ = new ::std::string;
  }
  subject_->assign(value);
}
inline void GM_Mail::set_subject(const char* value) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::kEmptyString) {
    subject_ = new ::std::string;
  }
  subject_->assign(value);
}
inline void GM_Mail::set_subject(const char* value, size_t size) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::kEmptyString) {
    subject_ = new ::std::string;
  }
  subject_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Mail::mutable_subject() {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::kEmptyString) {
    subject_ = new ::std::string;
  }
  return subject_;
}
inline ::std::string* GM_Mail::release_subject() {
  clear_has_subject();
  if (subject_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = subject_;
    subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Mail::set_allocated_subject(::std::string* subject) {
  if (subject_ != &::google::protobuf::internal::kEmptyString) {
    delete subject_;
  }
  if (subject) {
    set_has_subject();
    subject_ = subject;
  } else {
    clear_has_subject();
    subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string word = 4;
inline bool GM_Mail::has_word() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Mail::set_has_word() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Mail::clear_has_word() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Mail::clear_word() {
  if (word_ != &::google::protobuf::internal::kEmptyString) {
    word_->clear();
  }
  clear_has_word();
}
inline const ::std::string& GM_Mail::word() const {
  return *word_;
}
inline void GM_Mail::set_word(const ::std::string& value) {
  set_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    word_ = new ::std::string;
  }
  word_->assign(value);
}
inline void GM_Mail::set_word(const char* value) {
  set_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    word_ = new ::std::string;
  }
  word_->assign(value);
}
inline void GM_Mail::set_word(const char* value, size_t size) {
  set_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    word_ = new ::std::string;
  }
  word_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Mail::mutable_word() {
  set_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    word_ = new ::std::string;
  }
  return word_;
}
inline ::std::string* GM_Mail::release_word() {
  clear_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = word_;
    word_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Mail::set_allocated_word(::std::string* word) {
  if (word_ != &::google::protobuf::internal::kEmptyString) {
    delete word_;
  }
  if (word) {
    set_has_word();
    word_ = word;
  } else {
    clear_has_word();
    word_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string time = 5;
inline bool GM_Mail::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Mail::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Mail::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Mail::clear_time() {
  if (time_ != &::google::protobuf::internal::kEmptyString) {
    time_->clear();
  }
  clear_has_time();
}
inline const ::std::string& GM_Mail::time() const {
  return *time_;
}
inline void GM_Mail::set_time(const ::std::string& value) {
  set_has_time();
  if (time_ == &::google::protobuf::internal::kEmptyString) {
    time_ = new ::std::string;
  }
  time_->assign(value);
}
inline void GM_Mail::set_time(const char* value) {
  set_has_time();
  if (time_ == &::google::protobuf::internal::kEmptyString) {
    time_ = new ::std::string;
  }
  time_->assign(value);
}
inline void GM_Mail::set_time(const char* value, size_t size) {
  set_has_time();
  if (time_ == &::google::protobuf::internal::kEmptyString) {
    time_ = new ::std::string;
  }
  time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Mail::mutable_time() {
  set_has_time();
  if (time_ == &::google::protobuf::internal::kEmptyString) {
    time_ = new ::std::string;
  }
  return time_;
}
inline ::std::string* GM_Mail::release_time() {
  clear_has_time();
  if (time_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = time_;
    time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Mail::set_allocated_time(::std::string* time) {
  if (time_ != &::google::protobuf::internal::kEmptyString) {
    delete time_;
  }
  if (time) {
    set_has_time();
    time_ = time;
  } else {
    clear_has_time();
    time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 state = 6;
inline bool GM_Mail::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Mail::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Mail::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Mail::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 GM_Mail::state() const {
  return state_;
}
inline void GM_Mail::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// repeated .GM_MailItem items = 8;
inline int GM_Mail::items_size() const {
  return items_.size();
}
inline void GM_Mail::clear_items() {
  items_.Clear();
}
inline const ::GM_MailItem& GM_Mail::items(int index) const {
  return items_.Get(index);
}
inline ::GM_MailItem* GM_Mail::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::GM_MailItem* GM_Mail::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_MailItem >&
GM_Mail::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_MailItem >*
GM_Mail::mutable_items() {
  return &items_;
}

// optional uint64 gmid = 10;
inline bool GM_Mail::has_gmid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_Mail::set_has_gmid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_Mail::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_Mail::clear_gmid() {
  gmid_ = GOOGLE_ULONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::uint64 GM_Mail::gmid() const {
  return gmid_;
}
inline void GM_Mail::set_gmid(::google::protobuf::uint64 value) {
  set_has_gmid();
  gmid_ = value;
}

// optional int32 mailSource = 14;
inline bool GM_Mail::has_mailsource() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_Mail::set_has_mailsource() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_Mail::clear_has_mailsource() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_Mail::clear_mailsource() {
  mailsource_ = 0;
  clear_has_mailsource();
}
inline ::google::protobuf::int32 GM_Mail::mailsource() const {
  return mailsource_;
}
inline void GM_Mail::set_mailsource(::google::protobuf::int32 value) {
  set_has_mailsource();
  mailsource_ = value;
}

// -------------------------------------------------------------------

// GM_MailItem

// required int32 typeId = 3;
inline bool GM_MailItem::has_typeid_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_MailItem::set_has_typeid_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_MailItem::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_MailItem::clear_typeid_() {
  typeid__ = 0;
  clear_has_typeid_();
}
inline ::google::protobuf::int32 GM_MailItem::typeid_() const {
  return typeid__;
}
inline void GM_MailItem::set_typeid_(::google::protobuf::int32 value) {
  set_has_typeid_();
  typeid__ = value;
}

// required int32 num = 4;
inline bool GM_MailItem::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_MailItem::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_MailItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_MailItem::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 GM_MailItem::num() const {
  return num_;
}
inline void GM_MailItem::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 equiplv = 7;
inline bool GM_MailItem::has_equiplv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_MailItem::set_has_equiplv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_MailItem::clear_has_equiplv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_MailItem::clear_equiplv() {
  equiplv_ = 0;
  clear_has_equiplv();
}
inline ::google::protobuf::int32 GM_MailItem::equiplv() const {
  return equiplv_;
}
inline void GM_MailItem::set_equiplv(::google::protobuf::int32 value) {
  set_has_equiplv();
  equiplv_ = value;
}

// -------------------------------------------------------------------

// GM_MailOperate

// required int64 gmid = 2;
inline bool GM_MailOperate::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_MailOperate::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_MailOperate::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_MailOperate::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_MailOperate::gmid() const {
  return gmid_;
}
inline void GM_MailOperate::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// -------------------------------------------------------------------

// GM_SystemMail

// required int32 type = 1;
inline bool GM_SystemMail::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_SystemMail::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_SystemMail::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_SystemMail::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GM_SystemMail::type() const {
  return type_;
}
inline void GM_SystemMail::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required string userData = 2;
inline bool GM_SystemMail::has_userdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_SystemMail::set_has_userdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_SystemMail::clear_has_userdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_SystemMail::clear_userdata() {
  if (userdata_ != &::google::protobuf::internal::kEmptyString) {
    userdata_->clear();
  }
  clear_has_userdata();
}
inline const ::std::string& GM_SystemMail::userdata() const {
  return *userdata_;
}
inline void GM_SystemMail::set_userdata(const ::std::string& value) {
  set_has_userdata();
  if (userdata_ == &::google::protobuf::internal::kEmptyString) {
    userdata_ = new ::std::string;
  }
  userdata_->assign(value);
}
inline void GM_SystemMail::set_userdata(const char* value) {
  set_has_userdata();
  if (userdata_ == &::google::protobuf::internal::kEmptyString) {
    userdata_ = new ::std::string;
  }
  userdata_->assign(value);
}
inline void GM_SystemMail::set_userdata(const char* value, size_t size) {
  set_has_userdata();
  if (userdata_ == &::google::protobuf::internal::kEmptyString) {
    userdata_ = new ::std::string;
  }
  userdata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_SystemMail::mutable_userdata() {
  set_has_userdata();
  if (userdata_ == &::google::protobuf::internal::kEmptyString) {
    userdata_ = new ::std::string;
  }
  return userdata_;
}
inline ::std::string* GM_SystemMail::release_userdata() {
  clear_has_userdata();
  if (userdata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userdata_;
    userdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_SystemMail::set_allocated_userdata(::std::string* userdata) {
  if (userdata_ != &::google::protobuf::internal::kEmptyString) {
    delete userdata_;
  }
  if (userdata) {
    set_has_userdata();
    userdata_ = userdata;
  } else {
    clear_has_userdata();
    userdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .GM_Mail data = 3;
inline bool GM_SystemMail::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_SystemMail::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_SystemMail::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_SystemMail::clear_data() {
  if (data_ != NULL) data_->::GM_Mail::Clear();
  clear_has_data();
}
inline const ::GM_Mail& GM_SystemMail::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::GM_Mail* GM_SystemMail::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::GM_Mail;
  return data_;
}
inline ::GM_Mail* GM_SystemMail::release_data() {
  clear_has_data();
  ::GM_Mail* temp = data_;
  data_ = NULL;
  return temp;
}
inline void GM_SystemMail::set_allocated_data(::GM_Mail* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// repeated string rolenames = 4;
inline int GM_SystemMail::rolenames_size() const {
  return rolenames_.size();
}
inline void GM_SystemMail::clear_rolenames() {
  rolenames_.Clear();
}
inline const ::std::string& GM_SystemMail::rolenames(int index) const {
  return rolenames_.Get(index);
}
inline ::std::string* GM_SystemMail::mutable_rolenames(int index) {
  return rolenames_.Mutable(index);
}
inline void GM_SystemMail::set_rolenames(int index, const ::std::string& value) {
  rolenames_.Mutable(index)->assign(value);
}
inline void GM_SystemMail::set_rolenames(int index, const char* value) {
  rolenames_.Mutable(index)->assign(value);
}
inline void GM_SystemMail::set_rolenames(int index, const char* value, size_t size) {
  rolenames_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_SystemMail::add_rolenames() {
  return rolenames_.Add();
}
inline void GM_SystemMail::add_rolenames(const ::std::string& value) {
  rolenames_.Add()->assign(value);
}
inline void GM_SystemMail::add_rolenames(const char* value) {
  rolenames_.Add()->assign(value);
}
inline void GM_SystemMail::add_rolenames(const char* value, size_t size) {
  rolenames_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GM_SystemMail::rolenames() const {
  return rolenames_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GM_SystemMail::mutable_rolenames() {
  return &rolenames_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_mail_2etxt__INCLUDED
