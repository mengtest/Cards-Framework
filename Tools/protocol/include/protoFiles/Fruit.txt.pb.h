// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Fruit.txt

#ifndef PROTOBUF_Fruit_2etxt__INCLUDED
#define PROTOBUF_Fruit_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Fruit_2etxt();
void protobuf_AssignDesc_Fruit_2etxt();
void protobuf_ShutdownFile_Fruit_2etxt();

class GM_Fruit_Login_request;
class GM_Fruit_Login_return;
class SM_Fruit_Gamble;
class SM_Fruit_Gamble_Request;
class SM_Fruit_Gamble_return;
class SM_Fruit_Gamble_Go_Return;
class GM_Fruit_Pos;
class SM_Fruit_plus_request;
class SM_Fruit_plus_return;
class SM_Fruit_Figure_return;
class SM_Fruit_Money_return;
class GM_Fruit_Money_return;

// ===================================================================

class GM_Fruit_Login_request : public ::google::protobuf::Message {
 public:
  GM_Fruit_Login_request();
  virtual ~GM_Fruit_Login_request();

  GM_Fruit_Login_request(const GM_Fruit_Login_request& from);

  inline GM_Fruit_Login_request& operator=(const GM_Fruit_Login_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Fruit_Login_request& default_instance();

  void Swap(GM_Fruit_Login_request* other);

  // implements Message ----------------------------------------------

  GM_Fruit_Login_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Fruit_Login_request& from);
  void MergeFrom(const GM_Fruit_Login_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomtype = 1;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomtypeFieldNumber = 1;
  inline ::google::protobuf::int32 roomtype() const;
  inline void set_roomtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Fruit_Login_request)
 private:
  inline void set_has_roomtype();
  inline void clear_has_roomtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fruit_2etxt();
  friend void protobuf_AssignDesc_Fruit_2etxt();
  friend void protobuf_ShutdownFile_Fruit_2etxt();

  void InitAsDefaultInstance();
  static GM_Fruit_Login_request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Fruit_Login_return : public ::google::protobuf::Message {
 public:
  GM_Fruit_Login_return();
  virtual ~GM_Fruit_Login_return();

  GM_Fruit_Login_return(const GM_Fruit_Login_return& from);

  inline GM_Fruit_Login_return& operator=(const GM_Fruit_Login_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Fruit_Login_return& default_instance();

  void Swap(GM_Fruit_Login_return* other);

  // implements Message ----------------------------------------------

  GM_Fruit_Login_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Fruit_Login_return& from);
  void MergeFrom(const GM_Fruit_Login_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorid = 1;
  inline bool has_errorid() const;
  inline void clear_errorid();
  static const int kErroridFieldNumber = 1;
  inline ::google::protobuf::int32 errorid() const;
  inline void set_errorid(::google::protobuf::int32 value);

  // optional int32 rate = 2;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 2;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Fruit_Login_return)
 private:
  inline void set_has_errorid();
  inline void clear_has_errorid();
  inline void set_has_rate();
  inline void clear_has_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 errorid_;
  ::google::protobuf::int32 rate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fruit_2etxt();
  friend void protobuf_AssignDesc_Fruit_2etxt();
  friend void protobuf_ShutdownFile_Fruit_2etxt();

  void InitAsDefaultInstance();
  static GM_Fruit_Login_return* default_instance_;
};
// -------------------------------------------------------------------

class SM_Fruit_Gamble : public ::google::protobuf::Message {
 public:
  SM_Fruit_Gamble();
  virtual ~SM_Fruit_Gamble();

  SM_Fruit_Gamble(const SM_Fruit_Gamble& from);

  inline SM_Fruit_Gamble& operator=(const SM_Fruit_Gamble& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Fruit_Gamble& default_instance();

  void Swap(SM_Fruit_Gamble* other);

  // implements Message ----------------------------------------------

  SM_Fruit_Gamble* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Fruit_Gamble& from);
  void MergeFrom(const SM_Fruit_Gamble& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objecytype = 1;
  inline bool has_objecytype() const;
  inline void clear_objecytype();
  static const int kObjecytypeFieldNumber = 1;
  inline ::google::protobuf::int32 objecytype() const;
  inline void set_objecytype(::google::protobuf::int32 value);

  // optional int32 monrey = 2;
  inline bool has_monrey() const;
  inline void clear_monrey();
  static const int kMonreyFieldNumber = 2;
  inline ::google::protobuf::int32 monrey() const;
  inline void set_monrey(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_Fruit_Gamble)
 private:
  inline void set_has_objecytype();
  inline void clear_has_objecytype();
  inline void set_has_monrey();
  inline void clear_has_monrey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objecytype_;
  ::google::protobuf::int32 monrey_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fruit_2etxt();
  friend void protobuf_AssignDesc_Fruit_2etxt();
  friend void protobuf_ShutdownFile_Fruit_2etxt();

  void InitAsDefaultInstance();
  static SM_Fruit_Gamble* default_instance_;
};
// -------------------------------------------------------------------

class SM_Fruit_Gamble_Request : public ::google::protobuf::Message {
 public:
  SM_Fruit_Gamble_Request();
  virtual ~SM_Fruit_Gamble_Request();

  SM_Fruit_Gamble_Request(const SM_Fruit_Gamble_Request& from);

  inline SM_Fruit_Gamble_Request& operator=(const SM_Fruit_Gamble_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Fruit_Gamble_Request& default_instance();

  void Swap(SM_Fruit_Gamble_Request* other);

  // implements Message ----------------------------------------------

  SM_Fruit_Gamble_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Fruit_Gamble_Request& from);
  void MergeFrom(const SM_Fruit_Gamble_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated .SM_Fruit_Gamble data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::SM_Fruit_Gamble& data(int index) const;
  inline ::SM_Fruit_Gamble* mutable_data(int index);
  inline ::SM_Fruit_Gamble* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::SM_Fruit_Gamble >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::SM_Fruit_Gamble >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:SM_Fruit_Gamble_Request)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SM_Fruit_Gamble > data_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fruit_2etxt();
  friend void protobuf_AssignDesc_Fruit_2etxt();
  friend void protobuf_ShutdownFile_Fruit_2etxt();

  void InitAsDefaultInstance();
  static SM_Fruit_Gamble_Request* default_instance_;
};
// -------------------------------------------------------------------

class SM_Fruit_Gamble_return : public ::google::protobuf::Message {
 public:
  SM_Fruit_Gamble_return();
  virtual ~SM_Fruit_Gamble_return();

  SM_Fruit_Gamble_return(const SM_Fruit_Gamble_return& from);

  inline SM_Fruit_Gamble_return& operator=(const SM_Fruit_Gamble_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Fruit_Gamble_return& default_instance();

  void Swap(SM_Fruit_Gamble_return* other);

  // implements Message ----------------------------------------------

  SM_Fruit_Gamble_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Fruit_Gamble_return& from);
  void MergeFrom(const SM_Fruit_Gamble_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorid = 1;
  inline bool has_errorid() const;
  inline void clear_errorid();
  static const int kErroridFieldNumber = 1;
  inline ::google::protobuf::int32 errorid() const;
  inline void set_errorid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_Fruit_Gamble_return)
 private:
  inline void set_has_errorid();
  inline void clear_has_errorid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 errorid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fruit_2etxt();
  friend void protobuf_AssignDesc_Fruit_2etxt();
  friend void protobuf_ShutdownFile_Fruit_2etxt();

  void InitAsDefaultInstance();
  static SM_Fruit_Gamble_return* default_instance_;
};
// -------------------------------------------------------------------

class SM_Fruit_Gamble_Go_Return : public ::google::protobuf::Message {
 public:
  SM_Fruit_Gamble_Go_Return();
  virtual ~SM_Fruit_Gamble_Go_Return();

  SM_Fruit_Gamble_Go_Return(const SM_Fruit_Gamble_Go_Return& from);

  inline SM_Fruit_Gamble_Go_Return& operator=(const SM_Fruit_Gamble_Go_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Fruit_Gamble_Go_Return& default_instance();

  void Swap(SM_Fruit_Gamble_Go_Return* other);

  // implements Message ----------------------------------------------

  SM_Fruit_Gamble_Go_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Fruit_Gamble_Go_Return& from);
  void MergeFrom(const SM_Fruit_Gamble_Go_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 fortuntype = 1;
  inline bool has_fortuntype() const;
  inline void clear_fortuntype();
  static const int kFortuntypeFieldNumber = 1;
  inline ::google::protobuf::int32 fortuntype() const;
  inline void set_fortuntype(::google::protobuf::int32 value);

  // repeated .GM_Fruit_Pos pos = 2;
  inline int pos_size() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline const ::GM_Fruit_Pos& pos(int index) const;
  inline ::GM_Fruit_Pos* mutable_pos(int index);
  inline ::GM_Fruit_Pos* add_pos();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Fruit_Pos >&
      pos() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Fruit_Pos >*
      mutable_pos();

  // @@protoc_insertion_point(class_scope:SM_Fruit_Gamble_Go_Return)
 private:
  inline void set_has_fortuntype();
  inline void clear_has_fortuntype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_Fruit_Pos > pos_;
  ::google::protobuf::int32 fortuntype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fruit_2etxt();
  friend void protobuf_AssignDesc_Fruit_2etxt();
  friend void protobuf_ShutdownFile_Fruit_2etxt();

  void InitAsDefaultInstance();
  static SM_Fruit_Gamble_Go_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Fruit_Pos : public ::google::protobuf::Message {
 public:
  GM_Fruit_Pos();
  virtual ~GM_Fruit_Pos();

  GM_Fruit_Pos(const GM_Fruit_Pos& from);

  inline GM_Fruit_Pos& operator=(const GM_Fruit_Pos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Fruit_Pos& default_instance();

  void Swap(GM_Fruit_Pos* other);

  // implements Message ----------------------------------------------

  GM_Fruit_Pos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Fruit_Pos& from);
  void MergeFrom(const GM_Fruit_Pos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional int32 rate = 2;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 2;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // optional int32 get = 3;
  inline bool has_get() const;
  inline void clear_get();
  static const int kGetFieldNumber = 3;
  inline ::google::protobuf::int32 get() const;
  inline void set_get(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Fruit_Pos)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_get();
  inline void clear_has_get();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 rate_;
  ::google::protobuf::int32 get_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Fruit_2etxt();
  friend void protobuf_AssignDesc_Fruit_2etxt();
  friend void protobuf_ShutdownFile_Fruit_2etxt();

  void InitAsDefaultInstance();
  static GM_Fruit_Pos* default_instance_;
};
// -------------------------------------------------------------------

class SM_Fruit_plus_request : public ::google::protobuf::Message {
 public:
  SM_Fruit_plus_request();
  virtual ~SM_Fruit_plus_request();

  SM_Fruit_plus_request(const SM_Fruit_plus_request& from);

  inline SM_Fruit_plus_request& operator=(const SM_Fruit_plus_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Fruit_plus_request& default_instance();

  void Swap(SM_Fruit_plus_request* other);

  // implements Message ----------------------------------------------

  SM_Fruit_plus_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Fruit_plus_request& from);
  void MergeFrom(const SM_Fruit_plus_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 plusmin = 1;
  inline bool has_plusmin() const;
  inline void clear_plusmin();
  static const int kPlusminFieldNumber = 1;
  inline ::google::protobuf::int32 plusmin() const;
  inline void set_plusmin(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_Fruit_plus_request)
 private:
  inline void set_has_plusmin();
  inline void clear_has_plusmin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 plusmin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fruit_2etxt();
  friend void protobuf_AssignDesc_Fruit_2etxt();
  friend void protobuf_ShutdownFile_Fruit_2etxt();

  void InitAsDefaultInstance();
  static SM_Fruit_plus_request* default_instance_;
};
// -------------------------------------------------------------------

class SM_Fruit_plus_return : public ::google::protobuf::Message {
 public:
  SM_Fruit_plus_return();
  virtual ~SM_Fruit_plus_return();

  SM_Fruit_plus_return(const SM_Fruit_plus_return& from);

  inline SM_Fruit_plus_return& operator=(const SM_Fruit_plus_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Fruit_plus_return& default_instance();

  void Swap(SM_Fruit_plus_return* other);

  // implements Message ----------------------------------------------

  SM_Fruit_plus_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Fruit_plus_return& from);
  void MergeFrom(const SM_Fruit_plus_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorid = 1;
  inline bool has_errorid() const;
  inline void clear_errorid();
  static const int kErroridFieldNumber = 1;
  inline ::google::protobuf::int32 errorid() const;
  inline void set_errorid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_Fruit_plus_return)
 private:
  inline void set_has_errorid();
  inline void clear_has_errorid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 errorid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fruit_2etxt();
  friend void protobuf_AssignDesc_Fruit_2etxt();
  friend void protobuf_ShutdownFile_Fruit_2etxt();

  void InitAsDefaultInstance();
  static SM_Fruit_plus_return* default_instance_;
};
// -------------------------------------------------------------------

class SM_Fruit_Figure_return : public ::google::protobuf::Message {
 public:
  SM_Fruit_Figure_return();
  virtual ~SM_Fruit_Figure_return();

  SM_Fruit_Figure_return(const SM_Fruit_Figure_return& from);

  inline SM_Fruit_Figure_return& operator=(const SM_Fruit_Figure_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Fruit_Figure_return& default_instance();

  void Swap(SM_Fruit_Figure_return* other);

  // implements Message ----------------------------------------------

  SM_Fruit_Figure_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Fruit_Figure_return& from);
  void MergeFrom(const SM_Fruit_Figure_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline ::google::protobuf::int32 success() const;
  inline void set_success(::google::protobuf::int32 value);

  // optional int32 win = 2;
  inline bool has_win() const;
  inline void clear_win();
  static const int kWinFieldNumber = 2;
  inline ::google::protobuf::int32 win() const;
  inline void set_win(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_Fruit_Figure_return)
 private:
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_win();
  inline void clear_has_win();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 success_;
  ::google::protobuf::int32 win_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fruit_2etxt();
  friend void protobuf_AssignDesc_Fruit_2etxt();
  friend void protobuf_ShutdownFile_Fruit_2etxt();

  void InitAsDefaultInstance();
  static SM_Fruit_Figure_return* default_instance_;
};
// -------------------------------------------------------------------

class SM_Fruit_Money_return : public ::google::protobuf::Message {
 public:
  SM_Fruit_Money_return();
  virtual ~SM_Fruit_Money_return();

  SM_Fruit_Money_return(const SM_Fruit_Money_return& from);

  inline SM_Fruit_Money_return& operator=(const SM_Fruit_Money_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_Fruit_Money_return& default_instance();

  void Swap(SM_Fruit_Money_return* other);

  // implements Message ----------------------------------------------

  SM_Fruit_Money_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_Fruit_Money_return& from);
  void MergeFrom(const SM_Fruit_Money_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 money = 1;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 1;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_Fruit_Money_return)
 private:
  inline void set_has_money();
  inline void clear_has_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 money_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fruit_2etxt();
  friend void protobuf_AssignDesc_Fruit_2etxt();
  friend void protobuf_ShutdownFile_Fruit_2etxt();

  void InitAsDefaultInstance();
  static SM_Fruit_Money_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Fruit_Money_return : public ::google::protobuf::Message {
 public:
  GM_Fruit_Money_return();
  virtual ~GM_Fruit_Money_return();

  GM_Fruit_Money_return(const GM_Fruit_Money_return& from);

  inline GM_Fruit_Money_return& operator=(const GM_Fruit_Money_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Fruit_Money_return& default_instance();

  void Swap(GM_Fruit_Money_return* other);

  // implements Message ----------------------------------------------

  GM_Fruit_Money_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Fruit_Money_return& from);
  void MergeFrom(const GM_Fruit_Money_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 money = 1;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 1;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // optional int32 win = 2;
  inline bool has_win() const;
  inline void clear_win();
  static const int kWinFieldNumber = 2;
  inline ::google::protobuf::int32 win() const;
  inline void set_win(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Fruit_Money_return)
 private:
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_win();
  inline void clear_has_win();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 win_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fruit_2etxt();
  friend void protobuf_AssignDesc_Fruit_2etxt();
  friend void protobuf_ShutdownFile_Fruit_2etxt();

  void InitAsDefaultInstance();
  static GM_Fruit_Money_return* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_Fruit_Login_request

// required int32 roomtype = 1;
inline bool GM_Fruit_Login_request::has_roomtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Fruit_Login_request::set_has_roomtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Fruit_Login_request::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Fruit_Login_request::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::google::protobuf::int32 GM_Fruit_Login_request::roomtype() const {
  return roomtype_;
}
inline void GM_Fruit_Login_request::set_roomtype(::google::protobuf::int32 value) {
  set_has_roomtype();
  roomtype_ = value;
}

// -------------------------------------------------------------------

// GM_Fruit_Login_return

// required int32 errorid = 1;
inline bool GM_Fruit_Login_return::has_errorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Fruit_Login_return::set_has_errorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Fruit_Login_return::clear_has_errorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Fruit_Login_return::clear_errorid() {
  errorid_ = 0;
  clear_has_errorid();
}
inline ::google::protobuf::int32 GM_Fruit_Login_return::errorid() const {
  return errorid_;
}
inline void GM_Fruit_Login_return::set_errorid(::google::protobuf::int32 value) {
  set_has_errorid();
  errorid_ = value;
}

// optional int32 rate = 2;
inline bool GM_Fruit_Login_return::has_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Fruit_Login_return::set_has_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Fruit_Login_return::clear_has_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Fruit_Login_return::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 GM_Fruit_Login_return::rate() const {
  return rate_;
}
inline void GM_Fruit_Login_return::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
}

// -------------------------------------------------------------------

// SM_Fruit_Gamble

// required int32 objecytype = 1;
inline bool SM_Fruit_Gamble::has_objecytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Fruit_Gamble::set_has_objecytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Fruit_Gamble::clear_has_objecytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Fruit_Gamble::clear_objecytype() {
  objecytype_ = 0;
  clear_has_objecytype();
}
inline ::google::protobuf::int32 SM_Fruit_Gamble::objecytype() const {
  return objecytype_;
}
inline void SM_Fruit_Gamble::set_objecytype(::google::protobuf::int32 value) {
  set_has_objecytype();
  objecytype_ = value;
}

// optional int32 monrey = 2;
inline bool SM_Fruit_Gamble::has_monrey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_Fruit_Gamble::set_has_monrey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_Fruit_Gamble::clear_has_monrey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_Fruit_Gamble::clear_monrey() {
  monrey_ = 0;
  clear_has_monrey();
}
inline ::google::protobuf::int32 SM_Fruit_Gamble::monrey() const {
  return monrey_;
}
inline void SM_Fruit_Gamble::set_monrey(::google::protobuf::int32 value) {
  set_has_monrey();
  monrey_ = value;
}

// -------------------------------------------------------------------

// SM_Fruit_Gamble_Request

// required int32 id = 1;
inline bool SM_Fruit_Gamble_Request::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Fruit_Gamble_Request::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Fruit_Gamble_Request::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Fruit_Gamble_Request::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SM_Fruit_Gamble_Request::id() const {
  return id_;
}
inline void SM_Fruit_Gamble_Request::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated .SM_Fruit_Gamble data = 2;
inline int SM_Fruit_Gamble_Request::data_size() const {
  return data_.size();
}
inline void SM_Fruit_Gamble_Request::clear_data() {
  data_.Clear();
}
inline const ::SM_Fruit_Gamble& SM_Fruit_Gamble_Request::data(int index) const {
  return data_.Get(index);
}
inline ::SM_Fruit_Gamble* SM_Fruit_Gamble_Request::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::SM_Fruit_Gamble* SM_Fruit_Gamble_Request::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SM_Fruit_Gamble >&
SM_Fruit_Gamble_Request::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::SM_Fruit_Gamble >*
SM_Fruit_Gamble_Request::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// SM_Fruit_Gamble_return

// required int32 errorid = 1;
inline bool SM_Fruit_Gamble_return::has_errorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Fruit_Gamble_return::set_has_errorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Fruit_Gamble_return::clear_has_errorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Fruit_Gamble_return::clear_errorid() {
  errorid_ = 0;
  clear_has_errorid();
}
inline ::google::protobuf::int32 SM_Fruit_Gamble_return::errorid() const {
  return errorid_;
}
inline void SM_Fruit_Gamble_return::set_errorid(::google::protobuf::int32 value) {
  set_has_errorid();
  errorid_ = value;
}

// -------------------------------------------------------------------

// SM_Fruit_Gamble_Go_Return

// required int32 fortuntype = 1;
inline bool SM_Fruit_Gamble_Go_Return::has_fortuntype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Fruit_Gamble_Go_Return::set_has_fortuntype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Fruit_Gamble_Go_Return::clear_has_fortuntype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Fruit_Gamble_Go_Return::clear_fortuntype() {
  fortuntype_ = 0;
  clear_has_fortuntype();
}
inline ::google::protobuf::int32 SM_Fruit_Gamble_Go_Return::fortuntype() const {
  return fortuntype_;
}
inline void SM_Fruit_Gamble_Go_Return::set_fortuntype(::google::protobuf::int32 value) {
  set_has_fortuntype();
  fortuntype_ = value;
}

// repeated .GM_Fruit_Pos pos = 2;
inline int SM_Fruit_Gamble_Go_Return::pos_size() const {
  return pos_.size();
}
inline void SM_Fruit_Gamble_Go_Return::clear_pos() {
  pos_.Clear();
}
inline const ::GM_Fruit_Pos& SM_Fruit_Gamble_Go_Return::pos(int index) const {
  return pos_.Get(index);
}
inline ::GM_Fruit_Pos* SM_Fruit_Gamble_Go_Return::mutable_pos(int index) {
  return pos_.Mutable(index);
}
inline ::GM_Fruit_Pos* SM_Fruit_Gamble_Go_Return::add_pos() {
  return pos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Fruit_Pos >&
SM_Fruit_Gamble_Go_Return::pos() const {
  return pos_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Fruit_Pos >*
SM_Fruit_Gamble_Go_Return::mutable_pos() {
  return &pos_;
}

// -------------------------------------------------------------------

// GM_Fruit_Pos

// required int32 pos = 1;
inline bool GM_Fruit_Pos::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Fruit_Pos::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Fruit_Pos::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Fruit_Pos::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 GM_Fruit_Pos::pos() const {
  return pos_;
}
inline void GM_Fruit_Pos::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// optional int32 rate = 2;
inline bool GM_Fruit_Pos::has_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Fruit_Pos::set_has_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Fruit_Pos::clear_has_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Fruit_Pos::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 GM_Fruit_Pos::rate() const {
  return rate_;
}
inline void GM_Fruit_Pos::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
}

// optional int32 get = 3;
inline bool GM_Fruit_Pos::has_get() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Fruit_Pos::set_has_get() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Fruit_Pos::clear_has_get() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Fruit_Pos::clear_get() {
  get_ = 0;
  clear_has_get();
}
inline ::google::protobuf::int32 GM_Fruit_Pos::get() const {
  return get_;
}
inline void GM_Fruit_Pos::set_get(::google::protobuf::int32 value) {
  set_has_get();
  get_ = value;
}

// -------------------------------------------------------------------

// SM_Fruit_plus_request

// required int32 plusmin = 1;
inline bool SM_Fruit_plus_request::has_plusmin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Fruit_plus_request::set_has_plusmin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Fruit_plus_request::clear_has_plusmin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Fruit_plus_request::clear_plusmin() {
  plusmin_ = 0;
  clear_has_plusmin();
}
inline ::google::protobuf::int32 SM_Fruit_plus_request::plusmin() const {
  return plusmin_;
}
inline void SM_Fruit_plus_request::set_plusmin(::google::protobuf::int32 value) {
  set_has_plusmin();
  plusmin_ = value;
}

// -------------------------------------------------------------------

// SM_Fruit_plus_return

// required int32 errorid = 1;
inline bool SM_Fruit_plus_return::has_errorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Fruit_plus_return::set_has_errorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Fruit_plus_return::clear_has_errorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Fruit_plus_return::clear_errorid() {
  errorid_ = 0;
  clear_has_errorid();
}
inline ::google::protobuf::int32 SM_Fruit_plus_return::errorid() const {
  return errorid_;
}
inline void SM_Fruit_plus_return::set_errorid(::google::protobuf::int32 value) {
  set_has_errorid();
  errorid_ = value;
}

// -------------------------------------------------------------------

// SM_Fruit_Figure_return

// required int32 success = 1;
inline bool SM_Fruit_Figure_return::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Fruit_Figure_return::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Fruit_Figure_return::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Fruit_Figure_return::clear_success() {
  success_ = 0;
  clear_has_success();
}
inline ::google::protobuf::int32 SM_Fruit_Figure_return::success() const {
  return success_;
}
inline void SM_Fruit_Figure_return::set_success(::google::protobuf::int32 value) {
  set_has_success();
  success_ = value;
}

// optional int32 win = 2;
inline bool SM_Fruit_Figure_return::has_win() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_Fruit_Figure_return::set_has_win() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_Fruit_Figure_return::clear_has_win() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_Fruit_Figure_return::clear_win() {
  win_ = 0;
  clear_has_win();
}
inline ::google::protobuf::int32 SM_Fruit_Figure_return::win() const {
  return win_;
}
inline void SM_Fruit_Figure_return::set_win(::google::protobuf::int32 value) {
  set_has_win();
  win_ = value;
}

// -------------------------------------------------------------------

// SM_Fruit_Money_return

// required int32 money = 1;
inline bool SM_Fruit_Money_return::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_Fruit_Money_return::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_Fruit_Money_return::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_Fruit_Money_return::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 SM_Fruit_Money_return::money() const {
  return money_;
}
inline void SM_Fruit_Money_return::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
}

// -------------------------------------------------------------------

// GM_Fruit_Money_return

// required int32 money = 1;
inline bool GM_Fruit_Money_return::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Fruit_Money_return::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Fruit_Money_return::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Fruit_Money_return::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 GM_Fruit_Money_return::money() const {
  return money_;
}
inline void GM_Fruit_Money_return::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
}

// optional int32 win = 2;
inline bool GM_Fruit_Money_return::has_win() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Fruit_Money_return::set_has_win() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Fruit_Money_return::clear_has_win() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Fruit_Money_return::clear_win() {
  win_ = 0;
  clear_has_win();
}
inline ::google::protobuf::int32 GM_Fruit_Money_return::win() const {
  return win_;
}
inline void GM_Fruit_Money_return::set_win(::google::protobuf::int32 value) {
  set_has_win();
  win_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_Fruit_2etxt__INCLUDED
