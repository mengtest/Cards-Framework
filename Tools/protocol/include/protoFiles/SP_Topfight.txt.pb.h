// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_Topfight.txt

#ifndef PROTOBUF_SP_5fTopfight_2etxt__INCLUDED
#define PROTOBUF_SP_5fTopfight_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SP_5fTopfight_2etxt();
void protobuf_AssignDesc_SP_5fTopfight_2etxt();
void protobuf_ShutdownFile_SP_5fTopfight_2etxt();

class DB_TopfightRequest;
class DB_TopfightReturn;
class DB_TopfightData;
class DB_TopfightShopReturn;
class DB_TopfightShop;
class SM_CancleMatch;

// ===================================================================

class DB_TopfightRequest : public ::google::protobuf::Message {
 public:
  DB_TopfightRequest();
  virtual ~DB_TopfightRequest();

  DB_TopfightRequest(const DB_TopfightRequest& from);

  inline DB_TopfightRequest& operator=(const DB_TopfightRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_TopfightRequest& default_instance();

  void Swap(DB_TopfightRequest* other);

  // implements Message ----------------------------------------------

  DB_TopfightRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_TopfightRequest& from);
  void MergeFrom(const DB_TopfightRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DB_TopfightRequest)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fTopfight_2etxt();
  friend void protobuf_AssignDesc_SP_5fTopfight_2etxt();
  friend void protobuf_ShutdownFile_SP_5fTopfight_2etxt();

  void InitAsDefaultInstance();
  static DB_TopfightRequest* default_instance_;
};
// -------------------------------------------------------------------

class DB_TopfightReturn : public ::google::protobuf::Message {
 public:
  DB_TopfightReturn();
  virtual ~DB_TopfightReturn();

  DB_TopfightReturn(const DB_TopfightReturn& from);

  inline DB_TopfightReturn& operator=(const DB_TopfightReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_TopfightReturn& default_instance();

  void Swap(DB_TopfightReturn* other);

  // implements Message ----------------------------------------------

  DB_TopfightReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_TopfightReturn& from);
  void MergeFrom(const DB_TopfightReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_count = 1;
  inline bool has_m_count() const;
  inline void clear_m_count();
  static const int kMCountFieldNumber = 1;
  inline ::google::protobuf::int32 m_count() const;
  inline void set_m_count(::google::protobuf::int32 value);

  // repeated .DB_TopfightData m_topfightDatas = 2;
  inline int m_topfightdatas_size() const;
  inline void clear_m_topfightdatas();
  static const int kMTopfightDatasFieldNumber = 2;
  inline const ::DB_TopfightData& m_topfightdatas(int index) const;
  inline ::DB_TopfightData* mutable_m_topfightdatas(int index);
  inline ::DB_TopfightData* add_m_topfightdatas();
  inline const ::google::protobuf::RepeatedPtrField< ::DB_TopfightData >&
      m_topfightdatas() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_TopfightData >*
      mutable_m_topfightdatas();

  // @@protoc_insertion_point(class_scope:DB_TopfightReturn)
 private:
  inline void set_has_m_count();
  inline void clear_has_m_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DB_TopfightData > m_topfightdatas_;
  ::google::protobuf::int32 m_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fTopfight_2etxt();
  friend void protobuf_AssignDesc_SP_5fTopfight_2etxt();
  friend void protobuf_ShutdownFile_SP_5fTopfight_2etxt();

  void InitAsDefaultInstance();
  static DB_TopfightReturn* default_instance_;
};
// -------------------------------------------------------------------

class DB_TopfightData : public ::google::protobuf::Message {
 public:
  DB_TopfightData();
  virtual ~DB_TopfightData();

  DB_TopfightData(const DB_TopfightData& from);

  inline DB_TopfightData& operator=(const DB_TopfightData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_TopfightData& default_instance();

  void Swap(DB_TopfightData* other);

  // implements Message ----------------------------------------------

  DB_TopfightData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_TopfightData& from);
  void MergeFrom(const DB_TopfightData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional int32 m_toptime = 2;
  inline bool has_m_toptime() const;
  inline void clear_m_toptime();
  static const int kMToptimeFieldNumber = 2;
  inline ::google::protobuf::int32 m_toptime() const;
  inline void set_m_toptime(::google::protobuf::int32 value);

  // optional int32 m_rolelv = 3;
  inline bool has_m_rolelv() const;
  inline void clear_m_rolelv();
  static const int kMRolelvFieldNumber = 3;
  inline ::google::protobuf::int32 m_rolelv() const;
  inline void set_m_rolelv(::google::protobuf::int32 value);

  // optional int32 m_profession = 4;
  inline bool has_m_profession() const;
  inline void clear_m_profession();
  static const int kMProfessionFieldNumber = 4;
  inline ::google::protobuf::int32 m_profession() const;
  inline void set_m_profession(::google::protobuf::int32 value);

  // optional string m_rolename = 5;
  inline bool has_m_rolename() const;
  inline void clear_m_rolename();
  static const int kMRolenameFieldNumber = 5;
  inline const ::std::string& m_rolename() const;
  inline void set_m_rolename(const ::std::string& value);
  inline void set_m_rolename(const char* value);
  inline void set_m_rolename(const char* value, size_t size);
  inline ::std::string* mutable_m_rolename();
  inline ::std::string* release_m_rolename();
  inline void set_allocated_m_rolename(::std::string* m_rolename);

  // optional int32 m_socre = 6;
  inline bool has_m_socre() const;
  inline void clear_m_socre();
  static const int kMSocreFieldNumber = 6;
  inline ::google::protobuf::int32 m_socre() const;
  inline void set_m_socre(::google::protobuf::int32 value);

  // optional int32 m_gradelv = 7;
  inline bool has_m_gradelv() const;
  inline void clear_m_gradelv();
  static const int kMGradelvFieldNumber = 7;
  inline ::google::protobuf::int32 m_gradelv() const;
  inline void set_m_gradelv(::google::protobuf::int32 value);

  // optional int32 m_ischam = 8;
  inline bool has_m_ischam() const;
  inline void clear_m_ischam();
  static const int kMIschamFieldNumber = 8;
  inline ::google::protobuf::int32 m_ischam() const;
  inline void set_m_ischam(::google::protobuf::int32 value);

  // optional int32 m_isfirst = 9;
  inline bool has_m_isfirst() const;
  inline void clear_m_isfirst();
  static const int kMIsfirstFieldNumber = 9;
  inline ::google::protobuf::int32 m_isfirst() const;
  inline void set_m_isfirst(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DB_TopfightData)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_toptime();
  inline void clear_has_m_toptime();
  inline void set_has_m_rolelv();
  inline void clear_has_m_rolelv();
  inline void set_has_m_profession();
  inline void clear_has_m_profession();
  inline void set_has_m_rolename();
  inline void clear_has_m_rolename();
  inline void set_has_m_socre();
  inline void clear_has_m_socre();
  inline void set_has_m_gradelv();
  inline void clear_has_m_gradelv();
  inline void set_has_m_ischam();
  inline void clear_has_m_ischam();
  inline void set_has_m_isfirst();
  inline void clear_has_m_isfirst();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_toptime_;
  ::google::protobuf::int32 m_rolelv_;
  ::google::protobuf::int32 m_profession_;
  ::std::string* m_rolename_;
  ::google::protobuf::int32 m_socre_;
  ::google::protobuf::int32 m_gradelv_;
  ::google::protobuf::int32 m_ischam_;
  ::google::protobuf::int32 m_isfirst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fTopfight_2etxt();
  friend void protobuf_AssignDesc_SP_5fTopfight_2etxt();
  friend void protobuf_ShutdownFile_SP_5fTopfight_2etxt();

  void InitAsDefaultInstance();
  static DB_TopfightData* default_instance_;
};
// -------------------------------------------------------------------

class DB_TopfightShopReturn : public ::google::protobuf::Message {
 public:
  DB_TopfightShopReturn();
  virtual ~DB_TopfightShopReturn();

  DB_TopfightShopReturn(const DB_TopfightShopReturn& from);

  inline DB_TopfightShopReturn& operator=(const DB_TopfightShopReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_TopfightShopReturn& default_instance();

  void Swap(DB_TopfightShopReturn* other);

  // implements Message ----------------------------------------------

  DB_TopfightShopReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_TopfightShopReturn& from);
  void MergeFrom(const DB_TopfightShopReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // repeated .DB_TopfightShop m_topfightShops = 2;
  inline int m_topfightshops_size() const;
  inline void clear_m_topfightshops();
  static const int kMTopfightShopsFieldNumber = 2;
  inline const ::DB_TopfightShop& m_topfightshops(int index) const;
  inline ::DB_TopfightShop* mutable_m_topfightshops(int index);
  inline ::DB_TopfightShop* add_m_topfightshops();
  inline const ::google::protobuf::RepeatedPtrField< ::DB_TopfightShop >&
      m_topfightshops() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_TopfightShop >*
      mutable_m_topfightshops();

  // @@protoc_insertion_point(class_scope:DB_TopfightShopReturn)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DB_TopfightShop > m_topfightshops_;
  ::google::protobuf::int32 m_roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fTopfight_2etxt();
  friend void protobuf_AssignDesc_SP_5fTopfight_2etxt();
  friend void protobuf_ShutdownFile_SP_5fTopfight_2etxt();

  void InitAsDefaultInstance();
  static DB_TopfightShopReturn* default_instance_;
};
// -------------------------------------------------------------------

class DB_TopfightShop : public ::google::protobuf::Message {
 public:
  DB_TopfightShop();
  virtual ~DB_TopfightShop();

  DB_TopfightShop(const DB_TopfightShop& from);

  inline DB_TopfightShop& operator=(const DB_TopfightShop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_TopfightShop& default_instance();

  void Swap(DB_TopfightShop* other);

  // implements Message ----------------------------------------------

  DB_TopfightShop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_TopfightShop& from);
  void MergeFrom(const DB_TopfightShop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_objectid = 1;
  inline bool has_m_objectid() const;
  inline void clear_m_objectid();
  static const int kMObjectidFieldNumber = 1;
  inline ::google::protobuf::int32 m_objectid() const;
  inline void set_m_objectid(::google::protobuf::int32 value);

  // optional int32 m_buytype = 2;
  inline bool has_m_buytype() const;
  inline void clear_m_buytype();
  static const int kMBuytypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_buytype() const;
  inline void set_m_buytype(::google::protobuf::int32 value);

  // optional int32 m_buycount = 3;
  inline bool has_m_buycount() const;
  inline void clear_m_buycount();
  static const int kMBuycountFieldNumber = 3;
  inline ::google::protobuf::int32 m_buycount() const;
  inline void set_m_buycount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DB_TopfightShop)
 private:
  inline void set_has_m_objectid();
  inline void clear_has_m_objectid();
  inline void set_has_m_buytype();
  inline void clear_has_m_buytype();
  inline void set_has_m_buycount();
  inline void clear_has_m_buycount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_objectid_;
  ::google::protobuf::int32 m_buytype_;
  ::google::protobuf::int32 m_buycount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fTopfight_2etxt();
  friend void protobuf_AssignDesc_SP_5fTopfight_2etxt();
  friend void protobuf_ShutdownFile_SP_5fTopfight_2etxt();

  void InitAsDefaultInstance();
  static DB_TopfightShop* default_instance_;
};
// -------------------------------------------------------------------

class SM_CancleMatch : public ::google::protobuf::Message {
 public:
  SM_CancleMatch();
  virtual ~SM_CancleMatch();

  SM_CancleMatch(const SM_CancleMatch& from);

  inline SM_CancleMatch& operator=(const SM_CancleMatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_CancleMatch& default_instance();

  void Swap(SM_CancleMatch* other);

  // implements Message ----------------------------------------------

  SM_CancleMatch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_CancleMatch& from);
  void MergeFrom(const SM_CancleMatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional int32 m_gradeLv = 2;
  inline bool has_m_gradelv() const;
  inline void clear_m_gradelv();
  static const int kMGradeLvFieldNumber = 2;
  inline ::google::protobuf::int32 m_gradelv() const;
  inline void set_m_gradelv(::google::protobuf::int32 value);

  // optional int32 m_areaNum = 3;
  inline bool has_m_areanum() const;
  inline void clear_m_areanum();
  static const int kMAreaNumFieldNumber = 3;
  inline ::google::protobuf::int32 m_areanum() const;
  inline void set_m_areanum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_CancleMatch)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_gradelv();
  inline void clear_has_m_gradelv();
  inline void set_has_m_areanum();
  inline void clear_has_m_areanum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_gradelv_;
  ::google::protobuf::int32 m_areanum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fTopfight_2etxt();
  friend void protobuf_AssignDesc_SP_5fTopfight_2etxt();
  friend void protobuf_ShutdownFile_SP_5fTopfight_2etxt();

  void InitAsDefaultInstance();
  static SM_CancleMatch* default_instance_;
};
// ===================================================================


// ===================================================================

// DB_TopfightRequest

// required int32 m_roleid = 1;
inline bool DB_TopfightRequest::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB_TopfightRequest::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB_TopfightRequest::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB_TopfightRequest::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 DB_TopfightRequest::m_roleid() const {
  return m_roleid_;
}
inline void DB_TopfightRequest::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// -------------------------------------------------------------------

// DB_TopfightReturn

// required int32 m_count = 1;
inline bool DB_TopfightReturn::has_m_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB_TopfightReturn::set_has_m_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB_TopfightReturn::clear_has_m_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB_TopfightReturn::clear_m_count() {
  m_count_ = 0;
  clear_has_m_count();
}
inline ::google::protobuf::int32 DB_TopfightReturn::m_count() const {
  return m_count_;
}
inline void DB_TopfightReturn::set_m_count(::google::protobuf::int32 value) {
  set_has_m_count();
  m_count_ = value;
}

// repeated .DB_TopfightData m_topfightDatas = 2;
inline int DB_TopfightReturn::m_topfightdatas_size() const {
  return m_topfightdatas_.size();
}
inline void DB_TopfightReturn::clear_m_topfightdatas() {
  m_topfightdatas_.Clear();
}
inline const ::DB_TopfightData& DB_TopfightReturn::m_topfightdatas(int index) const {
  return m_topfightdatas_.Get(index);
}
inline ::DB_TopfightData* DB_TopfightReturn::mutable_m_topfightdatas(int index) {
  return m_topfightdatas_.Mutable(index);
}
inline ::DB_TopfightData* DB_TopfightReturn::add_m_topfightdatas() {
  return m_topfightdatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_TopfightData >&
DB_TopfightReturn::m_topfightdatas() const {
  return m_topfightdatas_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_TopfightData >*
DB_TopfightReturn::mutable_m_topfightdatas() {
  return &m_topfightdatas_;
}

// -------------------------------------------------------------------

// DB_TopfightData

// required int32 m_roleid = 1;
inline bool DB_TopfightData::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB_TopfightData::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB_TopfightData::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB_TopfightData::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 DB_TopfightData::m_roleid() const {
  return m_roleid_;
}
inline void DB_TopfightData::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional int32 m_toptime = 2;
inline bool DB_TopfightData::has_m_toptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB_TopfightData::set_has_m_toptime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB_TopfightData::clear_has_m_toptime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB_TopfightData::clear_m_toptime() {
  m_toptime_ = 0;
  clear_has_m_toptime();
}
inline ::google::protobuf::int32 DB_TopfightData::m_toptime() const {
  return m_toptime_;
}
inline void DB_TopfightData::set_m_toptime(::google::protobuf::int32 value) {
  set_has_m_toptime();
  m_toptime_ = value;
}

// optional int32 m_rolelv = 3;
inline bool DB_TopfightData::has_m_rolelv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB_TopfightData::set_has_m_rolelv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB_TopfightData::clear_has_m_rolelv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB_TopfightData::clear_m_rolelv() {
  m_rolelv_ = 0;
  clear_has_m_rolelv();
}
inline ::google::protobuf::int32 DB_TopfightData::m_rolelv() const {
  return m_rolelv_;
}
inline void DB_TopfightData::set_m_rolelv(::google::protobuf::int32 value) {
  set_has_m_rolelv();
  m_rolelv_ = value;
}

// optional int32 m_profession = 4;
inline bool DB_TopfightData::has_m_profession() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DB_TopfightData::set_has_m_profession() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DB_TopfightData::clear_has_m_profession() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DB_TopfightData::clear_m_profession() {
  m_profession_ = 0;
  clear_has_m_profession();
}
inline ::google::protobuf::int32 DB_TopfightData::m_profession() const {
  return m_profession_;
}
inline void DB_TopfightData::set_m_profession(::google::protobuf::int32 value) {
  set_has_m_profession();
  m_profession_ = value;
}

// optional string m_rolename = 5;
inline bool DB_TopfightData::has_m_rolename() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DB_TopfightData::set_has_m_rolename() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DB_TopfightData::clear_has_m_rolename() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DB_TopfightData::clear_m_rolename() {
  if (m_rolename_ != &::google::protobuf::internal::kEmptyString) {
    m_rolename_->clear();
  }
  clear_has_m_rolename();
}
inline const ::std::string& DB_TopfightData::m_rolename() const {
  return *m_rolename_;
}
inline void DB_TopfightData::set_m_rolename(const ::std::string& value) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(value);
}
inline void DB_TopfightData::set_m_rolename(const char* value) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(value);
}
inline void DB_TopfightData::set_m_rolename(const char* value, size_t size) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_TopfightData::mutable_m_rolename() {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  return m_rolename_;
}
inline ::std::string* DB_TopfightData::release_m_rolename() {
  clear_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_rolename_;
    m_rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DB_TopfightData::set_allocated_m_rolename(::std::string* m_rolename) {
  if (m_rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete m_rolename_;
  }
  if (m_rolename) {
    set_has_m_rolename();
    m_rolename_ = m_rolename;
  } else {
    clear_has_m_rolename();
    m_rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_socre = 6;
inline bool DB_TopfightData::has_m_socre() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DB_TopfightData::set_has_m_socre() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DB_TopfightData::clear_has_m_socre() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DB_TopfightData::clear_m_socre() {
  m_socre_ = 0;
  clear_has_m_socre();
}
inline ::google::protobuf::int32 DB_TopfightData::m_socre() const {
  return m_socre_;
}
inline void DB_TopfightData::set_m_socre(::google::protobuf::int32 value) {
  set_has_m_socre();
  m_socre_ = value;
}

// optional int32 m_gradelv = 7;
inline bool DB_TopfightData::has_m_gradelv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DB_TopfightData::set_has_m_gradelv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DB_TopfightData::clear_has_m_gradelv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DB_TopfightData::clear_m_gradelv() {
  m_gradelv_ = 0;
  clear_has_m_gradelv();
}
inline ::google::protobuf::int32 DB_TopfightData::m_gradelv() const {
  return m_gradelv_;
}
inline void DB_TopfightData::set_m_gradelv(::google::protobuf::int32 value) {
  set_has_m_gradelv();
  m_gradelv_ = value;
}

// optional int32 m_ischam = 8;
inline bool DB_TopfightData::has_m_ischam() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DB_TopfightData::set_has_m_ischam() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DB_TopfightData::clear_has_m_ischam() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DB_TopfightData::clear_m_ischam() {
  m_ischam_ = 0;
  clear_has_m_ischam();
}
inline ::google::protobuf::int32 DB_TopfightData::m_ischam() const {
  return m_ischam_;
}
inline void DB_TopfightData::set_m_ischam(::google::protobuf::int32 value) {
  set_has_m_ischam();
  m_ischam_ = value;
}

// optional int32 m_isfirst = 9;
inline bool DB_TopfightData::has_m_isfirst() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DB_TopfightData::set_has_m_isfirst() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DB_TopfightData::clear_has_m_isfirst() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DB_TopfightData::clear_m_isfirst() {
  m_isfirst_ = 0;
  clear_has_m_isfirst();
}
inline ::google::protobuf::int32 DB_TopfightData::m_isfirst() const {
  return m_isfirst_;
}
inline void DB_TopfightData::set_m_isfirst(::google::protobuf::int32 value) {
  set_has_m_isfirst();
  m_isfirst_ = value;
}

// -------------------------------------------------------------------

// DB_TopfightShopReturn

// required int32 m_roleid = 1;
inline bool DB_TopfightShopReturn::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB_TopfightShopReturn::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB_TopfightShopReturn::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB_TopfightShopReturn::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 DB_TopfightShopReturn::m_roleid() const {
  return m_roleid_;
}
inline void DB_TopfightShopReturn::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// repeated .DB_TopfightShop m_topfightShops = 2;
inline int DB_TopfightShopReturn::m_topfightshops_size() const {
  return m_topfightshops_.size();
}
inline void DB_TopfightShopReturn::clear_m_topfightshops() {
  m_topfightshops_.Clear();
}
inline const ::DB_TopfightShop& DB_TopfightShopReturn::m_topfightshops(int index) const {
  return m_topfightshops_.Get(index);
}
inline ::DB_TopfightShop* DB_TopfightShopReturn::mutable_m_topfightshops(int index) {
  return m_topfightshops_.Mutable(index);
}
inline ::DB_TopfightShop* DB_TopfightShopReturn::add_m_topfightshops() {
  return m_topfightshops_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_TopfightShop >&
DB_TopfightShopReturn::m_topfightshops() const {
  return m_topfightshops_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_TopfightShop >*
DB_TopfightShopReturn::mutable_m_topfightshops() {
  return &m_topfightshops_;
}

// -------------------------------------------------------------------

// DB_TopfightShop

// optional int32 m_objectid = 1;
inline bool DB_TopfightShop::has_m_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB_TopfightShop::set_has_m_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB_TopfightShop::clear_has_m_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB_TopfightShop::clear_m_objectid() {
  m_objectid_ = 0;
  clear_has_m_objectid();
}
inline ::google::protobuf::int32 DB_TopfightShop::m_objectid() const {
  return m_objectid_;
}
inline void DB_TopfightShop::set_m_objectid(::google::protobuf::int32 value) {
  set_has_m_objectid();
  m_objectid_ = value;
}

// optional int32 m_buytype = 2;
inline bool DB_TopfightShop::has_m_buytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB_TopfightShop::set_has_m_buytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB_TopfightShop::clear_has_m_buytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB_TopfightShop::clear_m_buytype() {
  m_buytype_ = 0;
  clear_has_m_buytype();
}
inline ::google::protobuf::int32 DB_TopfightShop::m_buytype() const {
  return m_buytype_;
}
inline void DB_TopfightShop::set_m_buytype(::google::protobuf::int32 value) {
  set_has_m_buytype();
  m_buytype_ = value;
}

// optional int32 m_buycount = 3;
inline bool DB_TopfightShop::has_m_buycount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB_TopfightShop::set_has_m_buycount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB_TopfightShop::clear_has_m_buycount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB_TopfightShop::clear_m_buycount() {
  m_buycount_ = 0;
  clear_has_m_buycount();
}
inline ::google::protobuf::int32 DB_TopfightShop::m_buycount() const {
  return m_buycount_;
}
inline void DB_TopfightShop::set_m_buycount(::google::protobuf::int32 value) {
  set_has_m_buycount();
  m_buycount_ = value;
}

// -------------------------------------------------------------------

// SM_CancleMatch

// required int32 m_roleid = 1;
inline bool SM_CancleMatch::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_CancleMatch::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_CancleMatch::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_CancleMatch::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 SM_CancleMatch::m_roleid() const {
  return m_roleid_;
}
inline void SM_CancleMatch::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional int32 m_gradeLv = 2;
inline bool SM_CancleMatch::has_m_gradelv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_CancleMatch::set_has_m_gradelv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_CancleMatch::clear_has_m_gradelv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_CancleMatch::clear_m_gradelv() {
  m_gradelv_ = 0;
  clear_has_m_gradelv();
}
inline ::google::protobuf::int32 SM_CancleMatch::m_gradelv() const {
  return m_gradelv_;
}
inline void SM_CancleMatch::set_m_gradelv(::google::protobuf::int32 value) {
  set_has_m_gradelv();
  m_gradelv_ = value;
}

// optional int32 m_areaNum = 3;
inline bool SM_CancleMatch::has_m_areanum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_CancleMatch::set_has_m_areanum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_CancleMatch::clear_has_m_areanum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_CancleMatch::clear_m_areanum() {
  m_areanum_ = 0;
  clear_has_m_areanum();
}
inline ::google::protobuf::int32 SM_CancleMatch::m_areanum() const {
  return m_areanum_;
}
inline void SM_CancleMatch::set_m_areanum(::google::protobuf::int32 value) {
  set_has_m_areanum();
  m_areanum_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_SP_5fTopfight_2etxt__INCLUDED
