// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exchange.txt

#ifndef PROTOBUF_exchange_2etxt__INCLUDED
#define PROTOBUF_exchange_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_exchange_2etxt();
void protobuf_AssignDesc_exchange_2etxt();
void protobuf_ShutdownFile_exchange_2etxt();

class GM_Exchange_object;
class GM_Exchange_object_reqruest;
class GM_Exchange_Exchange_request;
class GM_Exchange_Exchange_return;
class GM_Relief_login_return;
class GM_Relief_get_return;
class GM_ExchangeInfo;
class GM_Exchange_phone;
class GM_ExchangeInfo_return;
class GM_EXchangeInfo_exchange_return;
class GM_Exchange_self;
class GM_Exchange_self_return;
class GM_EXchange_info_begin_return;
class GM_Exchange_objectinfo;

// ===================================================================

class GM_Exchange_object : public ::google::protobuf::Message {
 public:
  GM_Exchange_object();
  virtual ~GM_Exchange_object();

  GM_Exchange_object(const GM_Exchange_object& from);

  inline GM_Exchange_object& operator=(const GM_Exchange_object& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Exchange_object& default_instance();

  void Swap(GM_Exchange_object* other);

  // implements Message ----------------------------------------------

  GM_Exchange_object* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Exchange_object& from);
  void MergeFrom(const GM_Exchange_object& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objectid = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 createtime = 3;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 3;
  inline ::google::protobuf::int32 createtime() const;
  inline void set_createtime(::google::protobuf::int32 value);

  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Exchange_object)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 createtime_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_2etxt();
  friend void protobuf_AssignDesc_exchange_2etxt();
  friend void protobuf_ShutdownFile_exchange_2etxt();

  void InitAsDefaultInstance();
  static GM_Exchange_object* default_instance_;
};
// -------------------------------------------------------------------

class GM_Exchange_object_reqruest : public ::google::protobuf::Message {
 public:
  GM_Exchange_object_reqruest();
  virtual ~GM_Exchange_object_reqruest();

  GM_Exchange_object_reqruest(const GM_Exchange_object_reqruest& from);

  inline GM_Exchange_object_reqruest& operator=(const GM_Exchange_object_reqruest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Exchange_object_reqruest& default_instance();

  void Swap(GM_Exchange_object_reqruest* other);

  // implements Message ----------------------------------------------

  GM_Exchange_object_reqruest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Exchange_object_reqruest& from);
  void MergeFrom(const GM_Exchange_object_reqruest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // repeated .GM_Exchange_object data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::GM_Exchange_object& data(int index) const;
  inline ::GM_Exchange_object* mutable_data(int index);
  inline ::GM_Exchange_object* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Exchange_object >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Exchange_object >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_Exchange_object_reqruest)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_Exchange_object > data_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_2etxt();
  friend void protobuf_AssignDesc_exchange_2etxt();
  friend void protobuf_ShutdownFile_exchange_2etxt();

  void InitAsDefaultInstance();
  static GM_Exchange_object_reqruest* default_instance_;
};
// -------------------------------------------------------------------

class GM_Exchange_Exchange_request : public ::google::protobuf::Message {
 public:
  GM_Exchange_Exchange_request();
  virtual ~GM_Exchange_Exchange_request();

  GM_Exchange_Exchange_request(const GM_Exchange_Exchange_request& from);

  inline GM_Exchange_Exchange_request& operator=(const GM_Exchange_Exchange_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Exchange_Exchange_request& default_instance();

  void Swap(GM_Exchange_Exchange_request* other);

  // implements Message ----------------------------------------------

  GM_Exchange_Exchange_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Exchange_Exchange_request& from);
  void MergeFrom(const GM_Exchange_Exchange_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 requerstid = 1;
  inline bool has_requerstid() const;
  inline void clear_requerstid();
  static const int kRequerstidFieldNumber = 1;
  inline ::google::protobuf::int32 requerstid() const;
  inline void set_requerstid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Exchange_Exchange_request)
 private:
  inline void set_has_requerstid();
  inline void clear_has_requerstid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 requerstid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_2etxt();
  friend void protobuf_AssignDesc_exchange_2etxt();
  friend void protobuf_ShutdownFile_exchange_2etxt();

  void InitAsDefaultInstance();
  static GM_Exchange_Exchange_request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Exchange_Exchange_return : public ::google::protobuf::Message {
 public:
  GM_Exchange_Exchange_return();
  virtual ~GM_Exchange_Exchange_return();

  GM_Exchange_Exchange_return(const GM_Exchange_Exchange_return& from);

  inline GM_Exchange_Exchange_return& operator=(const GM_Exchange_Exchange_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Exchange_Exchange_return& default_instance();

  void Swap(GM_Exchange_Exchange_return* other);

  // implements Message ----------------------------------------------

  GM_Exchange_Exchange_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Exchange_Exchange_return& from);
  void MergeFrom(const GM_Exchange_Exchange_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorid = 1;
  inline bool has_errorid() const;
  inline void clear_errorid();
  static const int kErroridFieldNumber = 1;
  inline ::google::protobuf::int32 errorid() const;
  inline void set_errorid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Exchange_Exchange_return)
 private:
  inline void set_has_errorid();
  inline void clear_has_errorid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 errorid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_2etxt();
  friend void protobuf_AssignDesc_exchange_2etxt();
  friend void protobuf_ShutdownFile_exchange_2etxt();

  void InitAsDefaultInstance();
  static GM_Exchange_Exchange_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Relief_login_return : public ::google::protobuf::Message {
 public:
  GM_Relief_login_return();
  virtual ~GM_Relief_login_return();

  GM_Relief_login_return(const GM_Relief_login_return& from);

  inline GM_Relief_login_return& operator=(const GM_Relief_login_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Relief_login_return& default_instance();

  void Swap(GM_Relief_login_return* other);

  // implements Message ----------------------------------------------

  GM_Relief_login_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Relief_login_return& from);
  void MergeFrom(const GM_Relief_login_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 times = 1;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 1;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // optional int32 all = 2;
  inline bool has_all() const;
  inline void clear_all();
  static const int kAllFieldNumber = 2;
  inline ::google::protobuf::int32 all() const;
  inline void set_all(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Relief_login_return)
 private:
  inline void set_has_times();
  inline void clear_has_times();
  inline void set_has_all();
  inline void clear_has_all();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 times_;
  ::google::protobuf::int32 all_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_2etxt();
  friend void protobuf_AssignDesc_exchange_2etxt();
  friend void protobuf_ShutdownFile_exchange_2etxt();

  void InitAsDefaultInstance();
  static GM_Relief_login_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Relief_get_return : public ::google::protobuf::Message {
 public:
  GM_Relief_get_return();
  virtual ~GM_Relief_get_return();

  GM_Relief_get_return(const GM_Relief_get_return& from);

  inline GM_Relief_get_return& operator=(const GM_Relief_get_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Relief_get_return& default_instance();

  void Swap(GM_Relief_get_return* other);

  // implements Message ----------------------------------------------

  GM_Relief_get_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Relief_get_return& from);
  void MergeFrom(const GM_Relief_get_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorid = 1;
  inline bool has_errorid() const;
  inline void clear_errorid();
  static const int kErroridFieldNumber = 1;
  inline ::google::protobuf::int32 errorid() const;
  inline void set_errorid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Relief_get_return)
 private:
  inline void set_has_errorid();
  inline void clear_has_errorid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 errorid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_2etxt();
  friend void protobuf_AssignDesc_exchange_2etxt();
  friend void protobuf_ShutdownFile_exchange_2etxt();

  void InitAsDefaultInstance();
  static GM_Relief_get_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_ExchangeInfo : public ::google::protobuf::Message {
 public:
  GM_ExchangeInfo();
  virtual ~GM_ExchangeInfo();

  GM_ExchangeInfo(const GM_ExchangeInfo& from);

  inline GM_ExchangeInfo& operator=(const GM_ExchangeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ExchangeInfo& default_instance();

  void Swap(GM_ExchangeInfo* other);

  // implements Message ----------------------------------------------

  GM_ExchangeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ExchangeInfo& from);
  void MergeFrom(const GM_ExchangeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string phone = 3;
  inline bool has_phone() const;
  inline void clear_phone();
  static const int kPhoneFieldNumber = 3;
  inline const ::std::string& phone() const;
  inline void set_phone(const ::std::string& value);
  inline void set_phone(const char* value);
  inline void set_phone(const char* value, size_t size);
  inline ::std::string* mutable_phone();
  inline ::std::string* release_phone();
  inline void set_allocated_phone(::std::string* phone);

  // optional int64 qq = 4;
  inline bool has_qq() const;
  inline void clear_qq();
  static const int kQqFieldNumber = 4;
  inline ::google::protobuf::int64 qq() const;
  inline void set_qq(::google::protobuf::int64 value);

  // optional string invite = 5;
  inline bool has_invite() const;
  inline void clear_invite();
  static const int kInviteFieldNumber = 5;
  inline const ::std::string& invite() const;
  inline void set_invite(const ::std::string& value);
  inline void set_invite(const char* value);
  inline void set_invite(const char* value, size_t size);
  inline ::std::string* mutable_invite();
  inline ::std::string* release_invite();
  inline void set_allocated_invite(::std::string* invite);

  // optional string address = 6;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 6;
  inline const ::std::string& address() const;
  inline void set_address(const ::std::string& value);
  inline void set_address(const char* value);
  inline void set_address(const char* value, size_t size);
  inline ::std::string* mutable_address();
  inline ::std::string* release_address();
  inline void set_allocated_address(::std::string* address);

  // optional int32 usetime = 7;
  inline bool has_usetime() const;
  inline void clear_usetime();
  static const int kUsetimeFieldNumber = 7;
  inline ::google::protobuf::int32 usetime() const;
  inline void set_usetime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_ExchangeInfo)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_phone();
  inline void clear_has_phone();
  inline void set_has_qq();
  inline void clear_has_qq();
  inline void set_has_invite();
  inline void clear_has_invite();
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_usetime();
  inline void clear_has_usetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::std::string* phone_;
  ::google::protobuf::int64 qq_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 usetime_;
  ::std::string* invite_;
  ::std::string* address_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_2etxt();
  friend void protobuf_AssignDesc_exchange_2etxt();
  friend void protobuf_ShutdownFile_exchange_2etxt();

  void InitAsDefaultInstance();
  static GM_ExchangeInfo* default_instance_;
};
// -------------------------------------------------------------------

class GM_Exchange_phone : public ::google::protobuf::Message {
 public:
  GM_Exchange_phone();
  virtual ~GM_Exchange_phone();

  GM_Exchange_phone(const GM_Exchange_phone& from);

  inline GM_Exchange_phone& operator=(const GM_Exchange_phone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Exchange_phone& default_instance();

  void Swap(GM_Exchange_phone* other);

  // implements Message ----------------------------------------------

  GM_Exchange_phone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Exchange_phone& from);
  void MergeFrom(const GM_Exchange_phone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string phone = 1;
  inline bool has_phone() const;
  inline void clear_phone();
  static const int kPhoneFieldNumber = 1;
  inline const ::std::string& phone() const;
  inline void set_phone(const ::std::string& value);
  inline void set_phone(const char* value);
  inline void set_phone(const char* value, size_t size);
  inline ::std::string* mutable_phone();
  inline ::std::string* release_phone();
  inline void set_allocated_phone(::std::string* phone);

  // optional int32 usetime = 2;
  inline bool has_usetime() const;
  inline void clear_usetime();
  static const int kUsetimeFieldNumber = 2;
  inline ::google::protobuf::int32 usetime() const;
  inline void set_usetime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Exchange_phone)
 private:
  inline void set_has_phone();
  inline void clear_has_phone();
  inline void set_has_usetime();
  inline void clear_has_usetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* phone_;
  ::google::protobuf::int32 usetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_2etxt();
  friend void protobuf_AssignDesc_exchange_2etxt();
  friend void protobuf_ShutdownFile_exchange_2etxt();

  void InitAsDefaultInstance();
  static GM_Exchange_phone* default_instance_;
};
// -------------------------------------------------------------------

class GM_ExchangeInfo_return : public ::google::protobuf::Message {
 public:
  GM_ExchangeInfo_return();
  virtual ~GM_ExchangeInfo_return();

  GM_ExchangeInfo_return(const GM_ExchangeInfo_return& from);

  inline GM_ExchangeInfo_return& operator=(const GM_ExchangeInfo_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ExchangeInfo_return& default_instance();

  void Swap(GM_ExchangeInfo_return* other);

  // implements Message ----------------------------------------------

  GM_ExchangeInfo_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ExchangeInfo_return& from);
  void MergeFrom(const GM_ExchangeInfo_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 isBind = 1;
  inline bool has_isbind() const;
  inline void clear_isbind();
  static const int kIsBindFieldNumber = 1;
  inline ::google::protobuf::int32 isbind() const;
  inline void set_isbind(::google::protobuf::int32 value);

  // repeated .GM_ExchangeInfo data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::GM_ExchangeInfo& data(int index) const;
  inline ::GM_ExchangeInfo* mutable_data(int index);
  inline ::GM_ExchangeInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_ExchangeInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_ExchangeInfo >*
      mutable_data();

  // repeated .GM_Exchange_phone dataPhone = 3;
  inline int dataphone_size() const;
  inline void clear_dataphone();
  static const int kDataPhoneFieldNumber = 3;
  inline const ::GM_Exchange_phone& dataphone(int index) const;
  inline ::GM_Exchange_phone* mutable_dataphone(int index);
  inline ::GM_Exchange_phone* add_dataphone();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Exchange_phone >&
      dataphone() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Exchange_phone >*
      mutable_dataphone();

  // @@protoc_insertion_point(class_scope:GM_ExchangeInfo_return)
 private:
  inline void set_has_isbind();
  inline void clear_has_isbind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_ExchangeInfo > data_;
  ::google::protobuf::RepeatedPtrField< ::GM_Exchange_phone > dataphone_;
  ::google::protobuf::int32 isbind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_2etxt();
  friend void protobuf_AssignDesc_exchange_2etxt();
  friend void protobuf_ShutdownFile_exchange_2etxt();

  void InitAsDefaultInstance();
  static GM_ExchangeInfo_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_EXchangeInfo_exchange_return : public ::google::protobuf::Message {
 public:
  GM_EXchangeInfo_exchange_return();
  virtual ~GM_EXchangeInfo_exchange_return();

  GM_EXchangeInfo_exchange_return(const GM_EXchangeInfo_exchange_return& from);

  inline GM_EXchangeInfo_exchange_return& operator=(const GM_EXchangeInfo_exchange_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EXchangeInfo_exchange_return& default_instance();

  void Swap(GM_EXchangeInfo_exchange_return* other);

  // implements Message ----------------------------------------------

  GM_EXchangeInfo_exchange_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EXchangeInfo_exchange_return& from);
  void MergeFrom(const GM_EXchangeInfo_exchange_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorid = 1;
  inline bool has_errorid() const;
  inline void clear_errorid();
  static const int kErroridFieldNumber = 1;
  inline ::google::protobuf::int32 errorid() const;
  inline void set_errorid(::google::protobuf::int32 value);

  // optional .GM_ExchangeInfo data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::GM_ExchangeInfo& data() const;
  inline ::GM_ExchangeInfo* mutable_data();
  inline ::GM_ExchangeInfo* release_data();
  inline void set_allocated_data(::GM_ExchangeInfo* data);

  // @@protoc_insertion_point(class_scope:GM_EXchangeInfo_exchange_return)
 private:
  inline void set_has_errorid();
  inline void clear_has_errorid();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GM_ExchangeInfo* data_;
  ::google::protobuf::int32 errorid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_2etxt();
  friend void protobuf_AssignDesc_exchange_2etxt();
  friend void protobuf_ShutdownFile_exchange_2etxt();

  void InitAsDefaultInstance();
  static GM_EXchangeInfo_exchange_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Exchange_self : public ::google::protobuf::Message {
 public:
  GM_Exchange_self();
  virtual ~GM_Exchange_self();

  GM_Exchange_self(const GM_Exchange_self& from);

  inline GM_Exchange_self& operator=(const GM_Exchange_self& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Exchange_self& default_instance();

  void Swap(GM_Exchange_self* other);

  // implements Message ----------------------------------------------

  GM_Exchange_self* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Exchange_self& from);
  void MergeFrom(const GM_Exchange_self& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 objectid = 3;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 3;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // optional int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 createtime = 5;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 5;
  inline ::google::protobuf::int32 createtime() const;
  inline void set_createtime(::google::protobuf::int32 value);

  // optional int32 tag = 6;
  inline bool has_tag() const;
  inline void clear_tag();
  static const int kTagFieldNumber = 6;
  inline ::google::protobuf::int32 tag() const;
  inline void set_tag(::google::protobuf::int32 value);

  // optional string name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string phone = 8;
  inline bool has_phone() const;
  inline void clear_phone();
  static const int kPhoneFieldNumber = 8;
  inline const ::std::string& phone() const;
  inline void set_phone(const ::std::string& value);
  inline void set_phone(const char* value);
  inline void set_phone(const char* value, size_t size);
  inline ::std::string* mutable_phone();
  inline ::std::string* release_phone();
  inline void set_allocated_phone(::std::string* phone);

  // optional string address = 9;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 9;
  inline const ::std::string& address() const;
  inline void set_address(const ::std::string& value);
  inline void set_address(const char* value);
  inline void set_address(const char* value, size_t size);
  inline ::std::string* mutable_address();
  inline ::std::string* release_address();
  inline void set_allocated_address(::std::string* address);

  // optional string phonecharge = 10;
  inline bool has_phonecharge() const;
  inline void clear_phonecharge();
  static const int kPhonechargeFieldNumber = 10;
  inline const ::std::string& phonecharge() const;
  inline void set_phonecharge(const ::std::string& value);
  inline void set_phonecharge(const char* value);
  inline void set_phonecharge(const char* value, size_t size);
  inline ::std::string* mutable_phonecharge();
  inline ::std::string* release_phonecharge();
  inline void set_allocated_phonecharge(::std::string* phonecharge);

  // optional int32 errorid = 11;
  inline bool has_errorid() const;
  inline void clear_errorid();
  static const int kErroridFieldNumber = 11;
  inline ::google::protobuf::int32 errorid() const;
  inline void set_errorid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Exchange_self)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_phone();
  inline void clear_has_phone();
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_phonecharge();
  inline void clear_has_phonecharge();
  inline void set_has_errorid();
  inline void clear_has_errorid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 createtime_;
  ::google::protobuf::int32 tag_;
  ::std::string* name_;
  ::std::string* phone_;
  ::std::string* address_;
  ::std::string* phonecharge_;
  ::google::protobuf::int32 errorid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_2etxt();
  friend void protobuf_AssignDesc_exchange_2etxt();
  friend void protobuf_ShutdownFile_exchange_2etxt();

  void InitAsDefaultInstance();
  static GM_Exchange_self* default_instance_;
};
// -------------------------------------------------------------------

class GM_Exchange_self_return : public ::google::protobuf::Message {
 public:
  GM_Exchange_self_return();
  virtual ~GM_Exchange_self_return();

  GM_Exchange_self_return(const GM_Exchange_self_return& from);

  inline GM_Exchange_self_return& operator=(const GM_Exchange_self_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Exchange_self_return& default_instance();

  void Swap(GM_Exchange_self_return* other);

  // implements Message ----------------------------------------------

  GM_Exchange_self_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Exchange_self_return& from);
  void MergeFrom(const GM_Exchange_self_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // repeated .GM_Exchange_self data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::GM_Exchange_self& data(int index) const;
  inline ::GM_Exchange_self* mutable_data(int index);
  inline ::GM_Exchange_self* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Exchange_self >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Exchange_self >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_Exchange_self_return)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_Exchange_self > data_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_2etxt();
  friend void protobuf_AssignDesc_exchange_2etxt();
  friend void protobuf_ShutdownFile_exchange_2etxt();

  void InitAsDefaultInstance();
  static GM_Exchange_self_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_EXchange_info_begin_return : public ::google::protobuf::Message {
 public:
  GM_EXchange_info_begin_return();
  virtual ~GM_EXchange_info_begin_return();

  GM_EXchange_info_begin_return(const GM_EXchange_info_begin_return& from);

  inline GM_EXchange_info_begin_return& operator=(const GM_EXchange_info_begin_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_EXchange_info_begin_return& default_instance();

  void Swap(GM_EXchange_info_begin_return* other);

  // implements Message ----------------------------------------------

  GM_EXchange_info_begin_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_EXchange_info_begin_return& from);
  void MergeFrom(const GM_EXchange_info_begin_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // repeated .GM_Exchange_objectinfo data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::GM_Exchange_objectinfo& data(int index) const;
  inline ::GM_Exchange_objectinfo* mutable_data(int index);
  inline ::GM_Exchange_objectinfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Exchange_objectinfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Exchange_objectinfo >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_EXchange_info_begin_return)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_Exchange_objectinfo > data_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_2etxt();
  friend void protobuf_AssignDesc_exchange_2etxt();
  friend void protobuf_ShutdownFile_exchange_2etxt();

  void InitAsDefaultInstance();
  static GM_EXchange_info_begin_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Exchange_objectinfo : public ::google::protobuf::Message {
 public:
  GM_Exchange_objectinfo();
  virtual ~GM_Exchange_objectinfo();

  GM_Exchange_objectinfo(const GM_Exchange_objectinfo& from);

  inline GM_Exchange_objectinfo& operator=(const GM_Exchange_objectinfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Exchange_objectinfo& default_instance();

  void Swap(GM_Exchange_objectinfo* other);

  // implements Message ----------------------------------------------

  GM_Exchange_objectinfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Exchange_objectinfo& from);
  void MergeFrom(const GM_Exchange_objectinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 tag = 1;
  inline bool has_tag() const;
  inline void clear_tag();
  static const int kTagFieldNumber = 1;
  inline ::google::protobuf::int32 tag() const;
  inline void set_tag(::google::protobuf::int32 value);

  // optional int32 objectid = 2;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 2;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 costobjectid = 4;
  inline bool has_costobjectid() const;
  inline void clear_costobjectid();
  static const int kCostobjectidFieldNumber = 4;
  inline ::google::protobuf::int32 costobjectid() const;
  inline void set_costobjectid(::google::protobuf::int32 value);

  // optional int32 costnum = 5;
  inline bool has_costnum() const;
  inline void clear_costnum();
  static const int kCostnumFieldNumber = 5;
  inline ::google::protobuf::int32 costnum() const;
  inline void set_costnum(::google::protobuf::int32 value);

  // optional int32 rank = 6;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 6;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // optional int32 id = 7;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 7;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string remark = 8;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 8;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // optional string www = 9;
  inline bool has_www() const;
  inline void clear_www();
  static const int kWwwFieldNumber = 9;
  inline const ::std::string& www() const;
  inline void set_www(const ::std::string& value);
  inline void set_www(const char* value);
  inline void set_www(const char* value, size_t size);
  inline ::std::string* mutable_www();
  inline ::std::string* release_www();
  inline void set_allocated_www(::std::string* www);

  // @@protoc_insertion_point(class_scope:GM_Exchange_objectinfo)
 private:
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_costobjectid();
  inline void clear_has_costobjectid();
  inline void set_has_costnum();
  inline void clear_has_costnum();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_remark();
  inline void clear_has_remark();
  inline void set_has_www();
  inline void clear_has_www();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 tag_;
  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 costobjectid_;
  ::google::protobuf::int32 costnum_;
  ::google::protobuf::int32 rank_;
  ::std::string* remark_;
  ::std::string* www_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_2etxt();
  friend void protobuf_AssignDesc_exchange_2etxt();
  friend void protobuf_ShutdownFile_exchange_2etxt();

  void InitAsDefaultInstance();
  static GM_Exchange_objectinfo* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_Exchange_object

// required int32 objectid = 1;
inline bool GM_Exchange_object::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Exchange_object::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Exchange_object::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Exchange_object::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_Exchange_object::objectid() const {
  return objectid_;
}
inline void GM_Exchange_object::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// optional int32 num = 2;
inline bool GM_Exchange_object::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Exchange_object::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Exchange_object::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Exchange_object::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 GM_Exchange_object::num() const {
  return num_;
}
inline void GM_Exchange_object::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 createtime = 3;
inline bool GM_Exchange_object::has_createtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Exchange_object::set_has_createtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Exchange_object::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Exchange_object::clear_createtime() {
  createtime_ = 0;
  clear_has_createtime();
}
inline ::google::protobuf::int32 GM_Exchange_object::createtime() const {
  return createtime_;
}
inline void GM_Exchange_object::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional int32 state = 4;
inline bool GM_Exchange_object::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Exchange_object::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Exchange_object::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Exchange_object::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GM_Exchange_object::state() const {
  return state_;
}
inline void GM_Exchange_object::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// GM_Exchange_object_reqruest

// required int32 roleid = 1;
inline bool GM_Exchange_object_reqruest::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Exchange_object_reqruest::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Exchange_object_reqruest::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Exchange_object_reqruest::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Exchange_object_reqruest::roleid() const {
  return roleid_;
}
inline void GM_Exchange_object_reqruest::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// repeated .GM_Exchange_object data = 2;
inline int GM_Exchange_object_reqruest::data_size() const {
  return data_.size();
}
inline void GM_Exchange_object_reqruest::clear_data() {
  data_.Clear();
}
inline const ::GM_Exchange_object& GM_Exchange_object_reqruest::data(int index) const {
  return data_.Get(index);
}
inline ::GM_Exchange_object* GM_Exchange_object_reqruest::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_Exchange_object* GM_Exchange_object_reqruest::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Exchange_object >&
GM_Exchange_object_reqruest::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Exchange_object >*
GM_Exchange_object_reqruest::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_Exchange_Exchange_request

// required int32 requerstid = 1;
inline bool GM_Exchange_Exchange_request::has_requerstid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Exchange_Exchange_request::set_has_requerstid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Exchange_Exchange_request::clear_has_requerstid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Exchange_Exchange_request::clear_requerstid() {
  requerstid_ = 0;
  clear_has_requerstid();
}
inline ::google::protobuf::int32 GM_Exchange_Exchange_request::requerstid() const {
  return requerstid_;
}
inline void GM_Exchange_Exchange_request::set_requerstid(::google::protobuf::int32 value) {
  set_has_requerstid();
  requerstid_ = value;
}

// -------------------------------------------------------------------

// GM_Exchange_Exchange_return

// required int32 errorid = 1;
inline bool GM_Exchange_Exchange_return::has_errorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Exchange_Exchange_return::set_has_errorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Exchange_Exchange_return::clear_has_errorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Exchange_Exchange_return::clear_errorid() {
  errorid_ = 0;
  clear_has_errorid();
}
inline ::google::protobuf::int32 GM_Exchange_Exchange_return::errorid() const {
  return errorid_;
}
inline void GM_Exchange_Exchange_return::set_errorid(::google::protobuf::int32 value) {
  set_has_errorid();
  errorid_ = value;
}

// -------------------------------------------------------------------

// GM_Relief_login_return

// required int32 times = 1;
inline bool GM_Relief_login_return::has_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Relief_login_return::set_has_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Relief_login_return::clear_has_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Relief_login_return::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 GM_Relief_login_return::times() const {
  return times_;
}
inline void GM_Relief_login_return::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}

// optional int32 all = 2;
inline bool GM_Relief_login_return::has_all() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Relief_login_return::set_has_all() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Relief_login_return::clear_has_all() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Relief_login_return::clear_all() {
  all_ = 0;
  clear_has_all();
}
inline ::google::protobuf::int32 GM_Relief_login_return::all() const {
  return all_;
}
inline void GM_Relief_login_return::set_all(::google::protobuf::int32 value) {
  set_has_all();
  all_ = value;
}

// -------------------------------------------------------------------

// GM_Relief_get_return

// required int32 errorid = 1;
inline bool GM_Relief_get_return::has_errorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Relief_get_return::set_has_errorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Relief_get_return::clear_has_errorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Relief_get_return::clear_errorid() {
  errorid_ = 0;
  clear_has_errorid();
}
inline ::google::protobuf::int32 GM_Relief_get_return::errorid() const {
  return errorid_;
}
inline void GM_Relief_get_return::set_errorid(::google::protobuf::int32 value) {
  set_has_errorid();
  errorid_ = value;
}

// -------------------------------------------------------------------

// GM_ExchangeInfo

// required int32 roleid = 1;
inline bool GM_ExchangeInfo::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ExchangeInfo::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ExchangeInfo::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ExchangeInfo::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_ExchangeInfo::roleid() const {
  return roleid_;
}
inline void GM_ExchangeInfo::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional string name = 2;
inline bool GM_ExchangeInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_ExchangeInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_ExchangeInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_ExchangeInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GM_ExchangeInfo::name() const {
  return *name_;
}
inline void GM_ExchangeInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GM_ExchangeInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GM_ExchangeInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_ExchangeInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GM_ExchangeInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_ExchangeInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string phone = 3;
inline bool GM_ExchangeInfo::has_phone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_ExchangeInfo::set_has_phone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_ExchangeInfo::clear_has_phone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_ExchangeInfo::clear_phone() {
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    phone_->clear();
  }
  clear_has_phone();
}
inline const ::std::string& GM_ExchangeInfo::phone() const {
  return *phone_;
}
inline void GM_ExchangeInfo::set_phone(const ::std::string& value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
}
inline void GM_ExchangeInfo::set_phone(const char* value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
}
inline void GM_ExchangeInfo::set_phone(const char* value, size_t size) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_ExchangeInfo::mutable_phone() {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  return phone_;
}
inline ::std::string* GM_ExchangeInfo::release_phone() {
  clear_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phone_;
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_ExchangeInfo::set_allocated_phone(::std::string* phone) {
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_;
  }
  if (phone) {
    set_has_phone();
    phone_ = phone;
  } else {
    clear_has_phone();
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 qq = 4;
inline bool GM_ExchangeInfo::has_qq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_ExchangeInfo::set_has_qq() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_ExchangeInfo::clear_has_qq() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_ExchangeInfo::clear_qq() {
  qq_ = GOOGLE_LONGLONG(0);
  clear_has_qq();
}
inline ::google::protobuf::int64 GM_ExchangeInfo::qq() const {
  return qq_;
}
inline void GM_ExchangeInfo::set_qq(::google::protobuf::int64 value) {
  set_has_qq();
  qq_ = value;
}

// optional string invite = 5;
inline bool GM_ExchangeInfo::has_invite() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_ExchangeInfo::set_has_invite() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_ExchangeInfo::clear_has_invite() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_ExchangeInfo::clear_invite() {
  if (invite_ != &::google::protobuf::internal::kEmptyString) {
    invite_->clear();
  }
  clear_has_invite();
}
inline const ::std::string& GM_ExchangeInfo::invite() const {
  return *invite_;
}
inline void GM_ExchangeInfo::set_invite(const ::std::string& value) {
  set_has_invite();
  if (invite_ == &::google::protobuf::internal::kEmptyString) {
    invite_ = new ::std::string;
  }
  invite_->assign(value);
}
inline void GM_ExchangeInfo::set_invite(const char* value) {
  set_has_invite();
  if (invite_ == &::google::protobuf::internal::kEmptyString) {
    invite_ = new ::std::string;
  }
  invite_->assign(value);
}
inline void GM_ExchangeInfo::set_invite(const char* value, size_t size) {
  set_has_invite();
  if (invite_ == &::google::protobuf::internal::kEmptyString) {
    invite_ = new ::std::string;
  }
  invite_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_ExchangeInfo::mutable_invite() {
  set_has_invite();
  if (invite_ == &::google::protobuf::internal::kEmptyString) {
    invite_ = new ::std::string;
  }
  return invite_;
}
inline ::std::string* GM_ExchangeInfo::release_invite() {
  clear_has_invite();
  if (invite_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = invite_;
    invite_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_ExchangeInfo::set_allocated_invite(::std::string* invite) {
  if (invite_ != &::google::protobuf::internal::kEmptyString) {
    delete invite_;
  }
  if (invite) {
    set_has_invite();
    invite_ = invite;
  } else {
    clear_has_invite();
    invite_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string address = 6;
inline bool GM_ExchangeInfo::has_address() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_ExchangeInfo::set_has_address() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_ExchangeInfo::clear_has_address() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_ExchangeInfo::clear_address() {
  if (address_ != &::google::protobuf::internal::kEmptyString) {
    address_->clear();
  }
  clear_has_address();
}
inline const ::std::string& GM_ExchangeInfo::address() const {
  return *address_;
}
inline void GM_ExchangeInfo::set_address(const ::std::string& value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void GM_ExchangeInfo::set_address(const char* value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void GM_ExchangeInfo::set_address(const char* value, size_t size) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    address_ = new ::std::string;
  }
  address_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_ExchangeInfo::mutable_address() {
  set_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    address_ = new ::std::string;
  }
  return address_;
}
inline ::std::string* GM_ExchangeInfo::release_address() {
  clear_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = address_;
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_ExchangeInfo::set_allocated_address(::std::string* address) {
  if (address_ != &::google::protobuf::internal::kEmptyString) {
    delete address_;
  }
  if (address) {
    set_has_address();
    address_ = address;
  } else {
    clear_has_address();
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 usetime = 7;
inline bool GM_ExchangeInfo::has_usetime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_ExchangeInfo::set_has_usetime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_ExchangeInfo::clear_has_usetime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_ExchangeInfo::clear_usetime() {
  usetime_ = 0;
  clear_has_usetime();
}
inline ::google::protobuf::int32 GM_ExchangeInfo::usetime() const {
  return usetime_;
}
inline void GM_ExchangeInfo::set_usetime(::google::protobuf::int32 value) {
  set_has_usetime();
  usetime_ = value;
}

// -------------------------------------------------------------------

// GM_Exchange_phone

// required string phone = 1;
inline bool GM_Exchange_phone::has_phone() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Exchange_phone::set_has_phone() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Exchange_phone::clear_has_phone() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Exchange_phone::clear_phone() {
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    phone_->clear();
  }
  clear_has_phone();
}
inline const ::std::string& GM_Exchange_phone::phone() const {
  return *phone_;
}
inline void GM_Exchange_phone::set_phone(const ::std::string& value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
}
inline void GM_Exchange_phone::set_phone(const char* value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
}
inline void GM_Exchange_phone::set_phone(const char* value, size_t size) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Exchange_phone::mutable_phone() {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  return phone_;
}
inline ::std::string* GM_Exchange_phone::release_phone() {
  clear_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phone_;
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Exchange_phone::set_allocated_phone(::std::string* phone) {
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_;
  }
  if (phone) {
    set_has_phone();
    phone_ = phone;
  } else {
    clear_has_phone();
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 usetime = 2;
inline bool GM_Exchange_phone::has_usetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Exchange_phone::set_has_usetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Exchange_phone::clear_has_usetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Exchange_phone::clear_usetime() {
  usetime_ = 0;
  clear_has_usetime();
}
inline ::google::protobuf::int32 GM_Exchange_phone::usetime() const {
  return usetime_;
}
inline void GM_Exchange_phone::set_usetime(::google::protobuf::int32 value) {
  set_has_usetime();
  usetime_ = value;
}

// -------------------------------------------------------------------

// GM_ExchangeInfo_return

// required int32 isBind = 1;
inline bool GM_ExchangeInfo_return::has_isbind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ExchangeInfo_return::set_has_isbind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ExchangeInfo_return::clear_has_isbind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ExchangeInfo_return::clear_isbind() {
  isbind_ = 0;
  clear_has_isbind();
}
inline ::google::protobuf::int32 GM_ExchangeInfo_return::isbind() const {
  return isbind_;
}
inline void GM_ExchangeInfo_return::set_isbind(::google::protobuf::int32 value) {
  set_has_isbind();
  isbind_ = value;
}

// repeated .GM_ExchangeInfo data = 2;
inline int GM_ExchangeInfo_return::data_size() const {
  return data_.size();
}
inline void GM_ExchangeInfo_return::clear_data() {
  data_.Clear();
}
inline const ::GM_ExchangeInfo& GM_ExchangeInfo_return::data(int index) const {
  return data_.Get(index);
}
inline ::GM_ExchangeInfo* GM_ExchangeInfo_return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_ExchangeInfo* GM_ExchangeInfo_return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_ExchangeInfo >&
GM_ExchangeInfo_return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_ExchangeInfo >*
GM_ExchangeInfo_return::mutable_data() {
  return &data_;
}

// repeated .GM_Exchange_phone dataPhone = 3;
inline int GM_ExchangeInfo_return::dataphone_size() const {
  return dataphone_.size();
}
inline void GM_ExchangeInfo_return::clear_dataphone() {
  dataphone_.Clear();
}
inline const ::GM_Exchange_phone& GM_ExchangeInfo_return::dataphone(int index) const {
  return dataphone_.Get(index);
}
inline ::GM_Exchange_phone* GM_ExchangeInfo_return::mutable_dataphone(int index) {
  return dataphone_.Mutable(index);
}
inline ::GM_Exchange_phone* GM_ExchangeInfo_return::add_dataphone() {
  return dataphone_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Exchange_phone >&
GM_ExchangeInfo_return::dataphone() const {
  return dataphone_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Exchange_phone >*
GM_ExchangeInfo_return::mutable_dataphone() {
  return &dataphone_;
}

// -------------------------------------------------------------------

// GM_EXchangeInfo_exchange_return

// required int32 errorid = 1;
inline bool GM_EXchangeInfo_exchange_return::has_errorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EXchangeInfo_exchange_return::set_has_errorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EXchangeInfo_exchange_return::clear_has_errorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EXchangeInfo_exchange_return::clear_errorid() {
  errorid_ = 0;
  clear_has_errorid();
}
inline ::google::protobuf::int32 GM_EXchangeInfo_exchange_return::errorid() const {
  return errorid_;
}
inline void GM_EXchangeInfo_exchange_return::set_errorid(::google::protobuf::int32 value) {
  set_has_errorid();
  errorid_ = value;
}

// optional .GM_ExchangeInfo data = 2;
inline bool GM_EXchangeInfo_exchange_return::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_EXchangeInfo_exchange_return::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_EXchangeInfo_exchange_return::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_EXchangeInfo_exchange_return::clear_data() {
  if (data_ != NULL) data_->::GM_ExchangeInfo::Clear();
  clear_has_data();
}
inline const ::GM_ExchangeInfo& GM_EXchangeInfo_exchange_return::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::GM_ExchangeInfo* GM_EXchangeInfo_exchange_return::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::GM_ExchangeInfo;
  return data_;
}
inline ::GM_ExchangeInfo* GM_EXchangeInfo_exchange_return::release_data() {
  clear_has_data();
  ::GM_ExchangeInfo* temp = data_;
  data_ = NULL;
  return temp;
}
inline void GM_EXchangeInfo_exchange_return::set_allocated_data(::GM_ExchangeInfo* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// GM_Exchange_self

// required int32 roleid = 1;
inline bool GM_Exchange_self::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Exchange_self::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Exchange_self::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Exchange_self::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Exchange_self::roleid() const {
  return roleid_;
}
inline void GM_Exchange_self::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 state = 2;
inline bool GM_Exchange_self::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Exchange_self::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Exchange_self::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Exchange_self::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GM_Exchange_self::state() const {
  return state_;
}
inline void GM_Exchange_self::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 objectid = 3;
inline bool GM_Exchange_self::has_objectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Exchange_self::set_has_objectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Exchange_self::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Exchange_self::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_Exchange_self::objectid() const {
  return objectid_;
}
inline void GM_Exchange_self::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// optional int32 num = 4;
inline bool GM_Exchange_self::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Exchange_self::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Exchange_self::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Exchange_self::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 GM_Exchange_self::num() const {
  return num_;
}
inline void GM_Exchange_self::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 createtime = 5;
inline bool GM_Exchange_self::has_createtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Exchange_self::set_has_createtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Exchange_self::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Exchange_self::clear_createtime() {
  createtime_ = 0;
  clear_has_createtime();
}
inline ::google::protobuf::int32 GM_Exchange_self::createtime() const {
  return createtime_;
}
inline void GM_Exchange_self::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional int32 tag = 6;
inline bool GM_Exchange_self::has_tag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_Exchange_self::set_has_tag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_Exchange_self::clear_has_tag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_Exchange_self::clear_tag() {
  tag_ = 0;
  clear_has_tag();
}
inline ::google::protobuf::int32 GM_Exchange_self::tag() const {
  return tag_;
}
inline void GM_Exchange_self::set_tag(::google::protobuf::int32 value) {
  set_has_tag();
  tag_ = value;
}

// optional string name = 7;
inline bool GM_Exchange_self::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_Exchange_self::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_Exchange_self::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_Exchange_self::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GM_Exchange_self::name() const {
  return *name_;
}
inline void GM_Exchange_self::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GM_Exchange_self::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GM_Exchange_self::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Exchange_self::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GM_Exchange_self::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Exchange_self::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string phone = 8;
inline bool GM_Exchange_self::has_phone() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_Exchange_self::set_has_phone() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_Exchange_self::clear_has_phone() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_Exchange_self::clear_phone() {
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    phone_->clear();
  }
  clear_has_phone();
}
inline const ::std::string& GM_Exchange_self::phone() const {
  return *phone_;
}
inline void GM_Exchange_self::set_phone(const ::std::string& value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
}
inline void GM_Exchange_self::set_phone(const char* value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
}
inline void GM_Exchange_self::set_phone(const char* value, size_t size) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Exchange_self::mutable_phone() {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  return phone_;
}
inline ::std::string* GM_Exchange_self::release_phone() {
  clear_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phone_;
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Exchange_self::set_allocated_phone(::std::string* phone) {
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_;
  }
  if (phone) {
    set_has_phone();
    phone_ = phone;
  } else {
    clear_has_phone();
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string address = 9;
inline bool GM_Exchange_self::has_address() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_Exchange_self::set_has_address() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_Exchange_self::clear_has_address() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_Exchange_self::clear_address() {
  if (address_ != &::google::protobuf::internal::kEmptyString) {
    address_->clear();
  }
  clear_has_address();
}
inline const ::std::string& GM_Exchange_self::address() const {
  return *address_;
}
inline void GM_Exchange_self::set_address(const ::std::string& value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void GM_Exchange_self::set_address(const char* value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void GM_Exchange_self::set_address(const char* value, size_t size) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    address_ = new ::std::string;
  }
  address_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Exchange_self::mutable_address() {
  set_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    address_ = new ::std::string;
  }
  return address_;
}
inline ::std::string* GM_Exchange_self::release_address() {
  clear_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = address_;
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Exchange_self::set_allocated_address(::std::string* address) {
  if (address_ != &::google::protobuf::internal::kEmptyString) {
    delete address_;
  }
  if (address) {
    set_has_address();
    address_ = address;
  } else {
    clear_has_address();
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string phonecharge = 10;
inline bool GM_Exchange_self::has_phonecharge() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GM_Exchange_self::set_has_phonecharge() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GM_Exchange_self::clear_has_phonecharge() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GM_Exchange_self::clear_phonecharge() {
  if (phonecharge_ != &::google::protobuf::internal::kEmptyString) {
    phonecharge_->clear();
  }
  clear_has_phonecharge();
}
inline const ::std::string& GM_Exchange_self::phonecharge() const {
  return *phonecharge_;
}
inline void GM_Exchange_self::set_phonecharge(const ::std::string& value) {
  set_has_phonecharge();
  if (phonecharge_ == &::google::protobuf::internal::kEmptyString) {
    phonecharge_ = new ::std::string;
  }
  phonecharge_->assign(value);
}
inline void GM_Exchange_self::set_phonecharge(const char* value) {
  set_has_phonecharge();
  if (phonecharge_ == &::google::protobuf::internal::kEmptyString) {
    phonecharge_ = new ::std::string;
  }
  phonecharge_->assign(value);
}
inline void GM_Exchange_self::set_phonecharge(const char* value, size_t size) {
  set_has_phonecharge();
  if (phonecharge_ == &::google::protobuf::internal::kEmptyString) {
    phonecharge_ = new ::std::string;
  }
  phonecharge_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Exchange_self::mutable_phonecharge() {
  set_has_phonecharge();
  if (phonecharge_ == &::google::protobuf::internal::kEmptyString) {
    phonecharge_ = new ::std::string;
  }
  return phonecharge_;
}
inline ::std::string* GM_Exchange_self::release_phonecharge() {
  clear_has_phonecharge();
  if (phonecharge_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phonecharge_;
    phonecharge_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Exchange_self::set_allocated_phonecharge(::std::string* phonecharge) {
  if (phonecharge_ != &::google::protobuf::internal::kEmptyString) {
    delete phonecharge_;
  }
  if (phonecharge) {
    set_has_phonecharge();
    phonecharge_ = phonecharge;
  } else {
    clear_has_phonecharge();
    phonecharge_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 errorid = 11;
inline bool GM_Exchange_self::has_errorid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GM_Exchange_self::set_has_errorid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GM_Exchange_self::clear_has_errorid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GM_Exchange_self::clear_errorid() {
  errorid_ = 0;
  clear_has_errorid();
}
inline ::google::protobuf::int32 GM_Exchange_self::errorid() const {
  return errorid_;
}
inline void GM_Exchange_self::set_errorid(::google::protobuf::int32 value) {
  set_has_errorid();
  errorid_ = value;
}

// -------------------------------------------------------------------

// GM_Exchange_self_return

// required int32 roleid = 1;
inline bool GM_Exchange_self_return::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Exchange_self_return::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Exchange_self_return::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Exchange_self_return::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Exchange_self_return::roleid() const {
  return roleid_;
}
inline void GM_Exchange_self_return::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// repeated .GM_Exchange_self data = 2;
inline int GM_Exchange_self_return::data_size() const {
  return data_.size();
}
inline void GM_Exchange_self_return::clear_data() {
  data_.Clear();
}
inline const ::GM_Exchange_self& GM_Exchange_self_return::data(int index) const {
  return data_.Get(index);
}
inline ::GM_Exchange_self* GM_Exchange_self_return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_Exchange_self* GM_Exchange_self_return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Exchange_self >&
GM_Exchange_self_return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Exchange_self >*
GM_Exchange_self_return::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_EXchange_info_begin_return

// required int32 roleid = 1;
inline bool GM_EXchange_info_begin_return::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_EXchange_info_begin_return::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_EXchange_info_begin_return::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_EXchange_info_begin_return::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_EXchange_info_begin_return::roleid() const {
  return roleid_;
}
inline void GM_EXchange_info_begin_return::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// repeated .GM_Exchange_objectinfo data = 2;
inline int GM_EXchange_info_begin_return::data_size() const {
  return data_.size();
}
inline void GM_EXchange_info_begin_return::clear_data() {
  data_.Clear();
}
inline const ::GM_Exchange_objectinfo& GM_EXchange_info_begin_return::data(int index) const {
  return data_.Get(index);
}
inline ::GM_Exchange_objectinfo* GM_EXchange_info_begin_return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_Exchange_objectinfo* GM_EXchange_info_begin_return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Exchange_objectinfo >&
GM_EXchange_info_begin_return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Exchange_objectinfo >*
GM_EXchange_info_begin_return::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_Exchange_objectinfo

// required int32 tag = 1;
inline bool GM_Exchange_objectinfo::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Exchange_objectinfo::set_has_tag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Exchange_objectinfo::clear_has_tag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Exchange_objectinfo::clear_tag() {
  tag_ = 0;
  clear_has_tag();
}
inline ::google::protobuf::int32 GM_Exchange_objectinfo::tag() const {
  return tag_;
}
inline void GM_Exchange_objectinfo::set_tag(::google::protobuf::int32 value) {
  set_has_tag();
  tag_ = value;
}

// optional int32 objectid = 2;
inline bool GM_Exchange_objectinfo::has_objectid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Exchange_objectinfo::set_has_objectid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Exchange_objectinfo::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Exchange_objectinfo::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_Exchange_objectinfo::objectid() const {
  return objectid_;
}
inline void GM_Exchange_objectinfo::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// optional int32 num = 3;
inline bool GM_Exchange_objectinfo::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Exchange_objectinfo::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Exchange_objectinfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Exchange_objectinfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 GM_Exchange_objectinfo::num() const {
  return num_;
}
inline void GM_Exchange_objectinfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 costobjectid = 4;
inline bool GM_Exchange_objectinfo::has_costobjectid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Exchange_objectinfo::set_has_costobjectid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Exchange_objectinfo::clear_has_costobjectid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Exchange_objectinfo::clear_costobjectid() {
  costobjectid_ = 0;
  clear_has_costobjectid();
}
inline ::google::protobuf::int32 GM_Exchange_objectinfo::costobjectid() const {
  return costobjectid_;
}
inline void GM_Exchange_objectinfo::set_costobjectid(::google::protobuf::int32 value) {
  set_has_costobjectid();
  costobjectid_ = value;
}

// optional int32 costnum = 5;
inline bool GM_Exchange_objectinfo::has_costnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Exchange_objectinfo::set_has_costnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Exchange_objectinfo::clear_has_costnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Exchange_objectinfo::clear_costnum() {
  costnum_ = 0;
  clear_has_costnum();
}
inline ::google::protobuf::int32 GM_Exchange_objectinfo::costnum() const {
  return costnum_;
}
inline void GM_Exchange_objectinfo::set_costnum(::google::protobuf::int32 value) {
  set_has_costnum();
  costnum_ = value;
}

// optional int32 rank = 6;
inline bool GM_Exchange_objectinfo::has_rank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_Exchange_objectinfo::set_has_rank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_Exchange_objectinfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_Exchange_objectinfo::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 GM_Exchange_objectinfo::rank() const {
  return rank_;
}
inline void GM_Exchange_objectinfo::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// optional int32 id = 7;
inline bool GM_Exchange_objectinfo::has_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_Exchange_objectinfo::set_has_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_Exchange_objectinfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_Exchange_objectinfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GM_Exchange_objectinfo::id() const {
  return id_;
}
inline void GM_Exchange_objectinfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string remark = 8;
inline bool GM_Exchange_objectinfo::has_remark() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_Exchange_objectinfo::set_has_remark() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_Exchange_objectinfo::clear_has_remark() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_Exchange_objectinfo::clear_remark() {
  if (remark_ != &::google::protobuf::internal::kEmptyString) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& GM_Exchange_objectinfo::remark() const {
  return *remark_;
}
inline void GM_Exchange_objectinfo::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::kEmptyString) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
}
inline void GM_Exchange_objectinfo::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::kEmptyString) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
}
inline void GM_Exchange_objectinfo::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::kEmptyString) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Exchange_objectinfo::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::kEmptyString) {
    remark_ = new ::std::string;
  }
  return remark_;
}
inline ::std::string* GM_Exchange_objectinfo::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Exchange_objectinfo::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::kEmptyString) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string www = 9;
inline bool GM_Exchange_objectinfo::has_www() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_Exchange_objectinfo::set_has_www() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_Exchange_objectinfo::clear_has_www() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_Exchange_objectinfo::clear_www() {
  if (www_ != &::google::protobuf::internal::kEmptyString) {
    www_->clear();
  }
  clear_has_www();
}
inline const ::std::string& GM_Exchange_objectinfo::www() const {
  return *www_;
}
inline void GM_Exchange_objectinfo::set_www(const ::std::string& value) {
  set_has_www();
  if (www_ == &::google::protobuf::internal::kEmptyString) {
    www_ = new ::std::string;
  }
  www_->assign(value);
}
inline void GM_Exchange_objectinfo::set_www(const char* value) {
  set_has_www();
  if (www_ == &::google::protobuf::internal::kEmptyString) {
    www_ = new ::std::string;
  }
  www_->assign(value);
}
inline void GM_Exchange_objectinfo::set_www(const char* value, size_t size) {
  set_has_www();
  if (www_ == &::google::protobuf::internal::kEmptyString) {
    www_ = new ::std::string;
  }
  www_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Exchange_objectinfo::mutable_www() {
  set_has_www();
  if (www_ == &::google::protobuf::internal::kEmptyString) {
    www_ = new ::std::string;
  }
  return www_;
}
inline ::std::string* GM_Exchange_objectinfo::release_www() {
  clear_has_www();
  if (www_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = www_;
    www_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Exchange_objectinfo::set_allocated_www(::std::string* www) {
  if (www_ != &::google::protobuf::internal::kEmptyString) {
    delete www_;
  }
  if (www) {
    set_has_www();
    www_ = www;
  } else {
    clear_has_www();
    www_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_exchange_2etxt__INCLUDED
