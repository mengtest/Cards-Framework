// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.txt

#ifndef PROTOBUF_common_2etxt__INCLUDED
#define PROTOBUF_common_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_common_2etxt();
void protobuf_AssignDesc_common_2etxt();
void protobuf_ShutdownFile_common_2etxt();

class GM_Result;
class GM_RoleIdRequest;
class GM_GmidRequest;
class GM_Request;
class GM_CheckTime;
class GM_BuyTiredResult;
class GM_StatisticsLog;
class GM_Get_object;
class GM_Get_Result;
class GM_Common_roleinfo_requrest;
class GM_Comon_role_info;

// ===================================================================

class GM_Result : public ::google::protobuf::Message {
 public:
  GM_Result();
  virtual ~GM_Result();

  GM_Result(const GM_Result& from);

  inline GM_Result& operator=(const GM_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Result& default_instance();

  void Swap(GM_Result* other);

  // implements Message ----------------------------------------------

  GM_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Result& from);
  void MergeFrom(const GM_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_Result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // optional string userData = 2;
  inline bool has_userdata() const;
  inline void clear_userdata();
  static const int kUserDataFieldNumber = 2;
  inline const ::std::string& userdata() const;
  inline void set_userdata(const ::std::string& value);
  inline void set_userdata(const char* value);
  inline void set_userdata(const char* value, size_t size);
  inline ::std::string* mutable_userdata();
  inline ::std::string* release_userdata();
  inline void set_allocated_userdata(::std::string* userdata);

  // optional int32 m_productid = 3;
  inline bool has_m_productid() const;
  inline void clear_m_productid();
  static const int kMProductidFieldNumber = 3;
  inline ::google::protobuf::int32 m_productid() const;
  inline void set_m_productid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Result)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();
  inline void set_has_userdata();
  inline void clear_has_userdata();
  inline void set_has_m_productid();
  inline void clear_has_m_productid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* userdata_;
  ::google::protobuf::int32 m_result_;
  ::google::protobuf::int32 m_productid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_2etxt();
  friend void protobuf_AssignDesc_common_2etxt();
  friend void protobuf_ShutdownFile_common_2etxt();

  void InitAsDefaultInstance();
  static GM_Result* default_instance_;
};
// -------------------------------------------------------------------

class GM_RoleIdRequest : public ::google::protobuf::Message {
 public:
  GM_RoleIdRequest();
  virtual ~GM_RoleIdRequest();

  GM_RoleIdRequest(const GM_RoleIdRequest& from);

  inline GM_RoleIdRequest& operator=(const GM_RoleIdRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RoleIdRequest& default_instance();

  void Swap(GM_RoleIdRequest* other);

  // implements Message ----------------------------------------------

  GM_RoleIdRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RoleIdRequest& from);
  void MergeFrom(const GM_RoleIdRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional string ip = 2;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 2;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional int32 userId = 3;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // optional int64 userGmid = 4;
  inline bool has_usergmid() const;
  inline void clear_usergmid();
  static const int kUserGmidFieldNumber = 4;
  inline ::google::protobuf::int64 usergmid() const;
  inline void set_usergmid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_RoleIdRequest)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_usergmid();
  inline void clear_has_usergmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ip_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int64 usergmid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_2etxt();
  friend void protobuf_AssignDesc_common_2etxt();
  friend void protobuf_ShutdownFile_common_2etxt();

  void InitAsDefaultInstance();
  static GM_RoleIdRequest* default_instance_;
};
// -------------------------------------------------------------------

class GM_GmidRequest : public ::google::protobuf::Message {
 public:
  GM_GmidRequest();
  virtual ~GM_GmidRequest();

  GM_GmidRequest(const GM_GmidRequest& from);

  inline GM_GmidRequest& operator=(const GM_GmidRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_GmidRequest& default_instance();

  void Swap(GM_GmidRequest* other);

  // implements Message ----------------------------------------------

  GM_GmidRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_GmidRequest& from);
  void MergeFrom(const GM_GmidRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::int64 gmid() const;
  inline void set_gmid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_GmidRequest)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gmid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2etxt();
  friend void protobuf_AssignDesc_common_2etxt();
  friend void protobuf_ShutdownFile_common_2etxt();

  void InitAsDefaultInstance();
  static GM_GmidRequest* default_instance_;
};
// -------------------------------------------------------------------

class GM_Request : public ::google::protobuf::Message {
 public:
  GM_Request();
  virtual ~GM_Request();

  GM_Request(const GM_Request& from);

  inline GM_Request& operator=(const GM_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Request& default_instance();

  void Swap(GM_Request* other);

  // implements Message ----------------------------------------------

  GM_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Request& from);
  void MergeFrom(const GM_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline ::google::protobuf::int32 request() const;
  inline void set_request(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Request)
 private:
  inline void set_has_request();
  inline void clear_has_request();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 request_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2etxt();
  friend void protobuf_AssignDesc_common_2etxt();
  friend void protobuf_ShutdownFile_common_2etxt();

  void InitAsDefaultInstance();
  static GM_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_CheckTime : public ::google::protobuf::Message {
 public:
  GM_CheckTime();
  virtual ~GM_CheckTime();

  GM_CheckTime(const GM_CheckTime& from);

  inline GM_CheckTime& operator=(const GM_CheckTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_CheckTime& default_instance();

  void Swap(GM_CheckTime* other);

  // implements Message ----------------------------------------------

  GM_CheckTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_CheckTime& from);
  void MergeFrom(const GM_CheckTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 timet = 1;
  inline bool has_timet() const;
  inline void clear_timet();
  static const int kTimetFieldNumber = 1;
  inline ::google::protobuf::int64 timet() const;
  inline void set_timet(::google::protobuf::int64 value);

  // required int64 nowtick = 2;
  inline bool has_nowtick() const;
  inline void clear_nowtick();
  static const int kNowtickFieldNumber = 2;
  inline ::google::protobuf::int64 nowtick() const;
  inline void set_nowtick(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_CheckTime)
 private:
  inline void set_has_timet();
  inline void clear_has_timet();
  inline void set_has_nowtick();
  inline void clear_has_nowtick();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 timet_;
  ::google::protobuf::int64 nowtick_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2etxt();
  friend void protobuf_AssignDesc_common_2etxt();
  friend void protobuf_ShutdownFile_common_2etxt();

  void InitAsDefaultInstance();
  static GM_CheckTime* default_instance_;
};
// -------------------------------------------------------------------

class GM_BuyTiredResult : public ::google::protobuf::Message {
 public:
  GM_BuyTiredResult();
  virtual ~GM_BuyTiredResult();

  GM_BuyTiredResult(const GM_BuyTiredResult& from);

  inline GM_BuyTiredResult& operator=(const GM_BuyTiredResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_BuyTiredResult& default_instance();

  void Swap(GM_BuyTiredResult* other);

  // implements Message ----------------------------------------------

  GM_BuyTiredResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_BuyTiredResult& from);
  void MergeFrom(const GM_BuyTiredResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // required int32 hasbuy_times = 2;
  inline bool has_hasbuy_times() const;
  inline void clear_hasbuy_times();
  static const int kHasbuyTimesFieldNumber = 2;
  inline ::google::protobuf::int32 hasbuy_times() const;
  inline void set_hasbuy_times(::google::protobuf::int32 value);

  // required int32 nextneedgold = 3;
  inline bool has_nextneedgold() const;
  inline void clear_nextneedgold();
  static const int kNextneedgoldFieldNumber = 3;
  inline ::google::protobuf::int32 nextneedgold() const;
  inline void set_nextneedgold(::google::protobuf::int32 value);

  // optional int32 tiredvalue = 4;
  inline bool has_tiredvalue() const;
  inline void clear_tiredvalue();
  static const int kTiredvalueFieldNumber = 4;
  inline ::google::protobuf::int32 tiredvalue() const;
  inline void set_tiredvalue(::google::protobuf::int32 value);

  // required int32 isdiscount = 5;
  inline bool has_isdiscount() const;
  inline void clear_isdiscount();
  static const int kIsdiscountFieldNumber = 5;
  inline ::google::protobuf::int32 isdiscount() const;
  inline void set_isdiscount(::google::protobuf::int32 value);

  // required int32 istiredvalueadd = 6;
  inline bool has_istiredvalueadd() const;
  inline void clear_istiredvalueadd();
  static const int kIstiredvalueaddFieldNumber = 6;
  inline ::google::protobuf::int32 istiredvalueadd() const;
  inline void set_istiredvalueadd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_BuyTiredResult)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();
  inline void set_has_hasbuy_times();
  inline void clear_has_hasbuy_times();
  inline void set_has_nextneedgold();
  inline void clear_has_nextneedgold();
  inline void set_has_tiredvalue();
  inline void clear_has_tiredvalue();
  inline void set_has_isdiscount();
  inline void clear_has_isdiscount();
  inline void set_has_istiredvalueadd();
  inline void clear_has_istiredvalueadd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_result_;
  ::google::protobuf::int32 hasbuy_times_;
  ::google::protobuf::int32 nextneedgold_;
  ::google::protobuf::int32 tiredvalue_;
  ::google::protobuf::int32 isdiscount_;
  ::google::protobuf::int32 istiredvalueadd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_common_2etxt();
  friend void protobuf_AssignDesc_common_2etxt();
  friend void protobuf_ShutdownFile_common_2etxt();

  void InitAsDefaultInstance();
  static GM_BuyTiredResult* default_instance_;
};
// -------------------------------------------------------------------

class GM_StatisticsLog : public ::google::protobuf::Message {
 public:
  GM_StatisticsLog();
  virtual ~GM_StatisticsLog();

  GM_StatisticsLog(const GM_StatisticsLog& from);

  inline GM_StatisticsLog& operator=(const GM_StatisticsLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_StatisticsLog& default_instance();

  void Swap(GM_StatisticsLog* other);

  // implements Message ----------------------------------------------

  GM_StatisticsLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_StatisticsLog& from);
  void MergeFrom(const GM_StatisticsLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional string rolelogin = 2;
  inline bool has_rolelogin() const;
  inline void clear_rolelogin();
  static const int kRoleloginFieldNumber = 2;
  inline const ::std::string& rolelogin() const;
  inline void set_rolelogin(const ::std::string& value);
  inline void set_rolelogin(const char* value);
  inline void set_rolelogin(const char* value, size_t size);
  inline ::std::string* mutable_rolelogin();
  inline ::std::string* release_rolelogin();
  inline void set_allocated_rolelogin(::std::string* rolelogin);

  // optional string recharge = 3;
  inline bool has_recharge() const;
  inline void clear_recharge();
  static const int kRechargeFieldNumber = 3;
  inline const ::std::string& recharge() const;
  inline void set_recharge(const ::std::string& value);
  inline void set_recharge(const char* value);
  inline void set_recharge(const char* value, size_t size);
  inline ::std::string* mutable_recharge();
  inline ::std::string* release_recharge();
  inline void set_allocated_recharge(::std::string* recharge);

  // @@protoc_insertion_point(class_scope:GM_StatisticsLog)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_rolelogin();
  inline void clear_has_rolelogin();
  inline void set_has_recharge();
  inline void clear_has_recharge();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rolelogin_;
  ::std::string* recharge_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_2etxt();
  friend void protobuf_AssignDesc_common_2etxt();
  friend void protobuf_ShutdownFile_common_2etxt();

  void InitAsDefaultInstance();
  static GM_StatisticsLog* default_instance_;
};
// -------------------------------------------------------------------

class GM_Get_object : public ::google::protobuf::Message {
 public:
  GM_Get_object();
  virtual ~GM_Get_object();

  GM_Get_object(const GM_Get_object& from);

  inline GM_Get_object& operator=(const GM_Get_object& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Get_object& default_instance();

  void Swap(GM_Get_object* other);

  // implements Message ----------------------------------------------

  GM_Get_object* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Get_object& from);
  void MergeFrom(const GM_Get_object& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objectid = 1;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Get_object)
 private:
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objectid_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2etxt();
  friend void protobuf_AssignDesc_common_2etxt();
  friend void protobuf_ShutdownFile_common_2etxt();

  void InitAsDefaultInstance();
  static GM_Get_object* default_instance_;
};
// -------------------------------------------------------------------

class GM_Get_Result : public ::google::protobuf::Message {
 public:
  GM_Get_Result();
  virtual ~GM_Get_Result();

  GM_Get_Result(const GM_Get_Result& from);

  inline GM_Get_Result& operator=(const GM_Get_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Get_Result& default_instance();

  void Swap(GM_Get_Result* other);

  // implements Message ----------------------------------------------

  GM_Get_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Get_Result& from);
  void MergeFrom(const GM_Get_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_Result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // repeated .GM_Get_object data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::GM_Get_object& data(int index) const;
  inline ::GM_Get_object* mutable_data(int index);
  inline ::GM_Get_object* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Get_object >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Get_object >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_Get_Result)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_Get_object > data_;
  ::google::protobuf::int32 m_result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2etxt();
  friend void protobuf_AssignDesc_common_2etxt();
  friend void protobuf_ShutdownFile_common_2etxt();

  void InitAsDefaultInstance();
  static GM_Get_Result* default_instance_;
};
// -------------------------------------------------------------------

class GM_Common_roleinfo_requrest : public ::google::protobuf::Message {
 public:
  GM_Common_roleinfo_requrest();
  virtual ~GM_Common_roleinfo_requrest();

  GM_Common_roleinfo_requrest(const GM_Common_roleinfo_requrest& from);

  inline GM_Common_roleinfo_requrest& operator=(const GM_Common_roleinfo_requrest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Common_roleinfo_requrest& default_instance();

  void Swap(GM_Common_roleinfo_requrest* other);

  // implements Message ----------------------------------------------

  GM_Common_roleinfo_requrest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Common_roleinfo_requrest& from);
  void MergeFrom(const GM_Common_roleinfo_requrest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 copyid = 2;
  inline bool has_copyid() const;
  inline void clear_copyid();
  static const int kCopyidFieldNumber = 2;
  inline ::google::protobuf::int32 copyid() const;
  inline void set_copyid(::google::protobuf::int32 value);

  // optional int32 roomid = 3;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomidFieldNumber = 3;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Common_roleinfo_requrest)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_copyid();
  inline void clear_has_copyid();
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 copyid_;
  ::google::protobuf::int32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_2etxt();
  friend void protobuf_AssignDesc_common_2etxt();
  friend void protobuf_ShutdownFile_common_2etxt();

  void InitAsDefaultInstance();
  static GM_Common_roleinfo_requrest* default_instance_;
};
// -------------------------------------------------------------------

class GM_Comon_role_info : public ::google::protobuf::Message {
 public:
  GM_Comon_role_info();
  virtual ~GM_Comon_role_info();

  GM_Comon_role_info(const GM_Comon_role_info& from);

  inline GM_Comon_role_info& operator=(const GM_Comon_role_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Comon_role_info& default_instance();

  void Swap(GM_Comon_role_info* other);

  // implements Message ----------------------------------------------

  GM_Comon_role_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Comon_role_info& from);
  void MergeFrom(const GM_Comon_role_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional string sign = 2;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 2;
  inline const ::std::string& sign() const;
  inline void set_sign(const ::std::string& value);
  inline void set_sign(const char* value);
  inline void set_sign(const char* value, size_t size);
  inline ::std::string* mutable_sign();
  inline ::std::string* release_sign();
  inline void set_allocated_sign(::std::string* sign);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 head = 4;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 4;
  inline ::google::protobuf::int32 head() const;
  inline void set_head(::google::protobuf::int32 value);

  // optional int32 frame = 5;
  inline bool has_frame() const;
  inline void clear_frame();
  static const int kFrameFieldNumber = 5;
  inline ::google::protobuf::int32 frame() const;
  inline void set_frame(::google::protobuf::int32 value);

  // optional int32 sex = 6;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 6;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);

  // optional int32 golde = 7;
  inline bool has_golde() const;
  inline void clear_golde();
  static const int kGoldeFieldNumber = 7;
  inline ::google::protobuf::int32 golde() const;
  inline void set_golde(::google::protobuf::int32 value);

  // optional int32 ticket = 8;
  inline bool has_ticket() const;
  inline void clear_ticket();
  static const int kTicketFieldNumber = 8;
  inline ::google::protobuf::int32 ticket() const;
  inline void set_ticket(::google::protobuf::int32 value);

  // optional int32 card = 9;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 9;
  inline ::google::protobuf::int32 card() const;
  inline void set_card(::google::protobuf::int32 value);

  // optional int32 majiang = 10;
  inline bool has_majiang() const;
  inline void clear_majiang();
  static const int kMajiangFieldNumber = 10;
  inline ::google::protobuf::int32 majiang() const;
  inline void set_majiang(::google::protobuf::int32 value);

  // optional int32 majiangwin = 11;
  inline bool has_majiangwin() const;
  inline void clear_majiangwin();
  static const int kMajiangwinFieldNumber = 11;
  inline ::google::protobuf::int32 majiangwin() const;
  inline void set_majiangwin(::google::protobuf::int32 value);

  // optional int32 jinhua = 12;
  inline bool has_jinhua() const;
  inline void clear_jinhua();
  static const int kJinhuaFieldNumber = 12;
  inline ::google::protobuf::int32 jinhua() const;
  inline void set_jinhua(::google::protobuf::int32 value);

  // optional int32 jinhuawin = 13;
  inline bool has_jinhuawin() const;
  inline void clear_jinhuawin();
  static const int kJinhuawinFieldNumber = 13;
  inline ::google::protobuf::int32 jinhuawin() const;
  inline void set_jinhuawin(::google::protobuf::int32 value);

  // optional int32 matchscore = 14;
  inline bool has_matchscore() const;
  inline void clear_matchscore();
  static const int kMatchscoreFieldNumber = 14;
  inline ::google::protobuf::int32 matchscore() const;
  inline void set_matchscore(::google::protobuf::int32 value);

  // optional int32 fruit = 15;
  inline bool has_fruit() const;
  inline void clear_fruit();
  static const int kFruitFieldNumber = 15;
  inline ::google::protobuf::int32 fruit() const;
  inline void set_fruit(::google::protobuf::int32 value);

  // optional int32 majiangbaojian = 16;
  inline bool has_majiangbaojian() const;
  inline void clear_majiangbaojian();
  static const int kMajiangbaojianFieldNumber = 16;
  inline ::google::protobuf::int32 majiangbaojian() const;
  inline void set_majiangbaojian(::google::protobuf::int32 value);

  // optional int32 jinhuabaojian = 17;
  inline bool has_jinhuabaojian() const;
  inline void clear_jinhuabaojian();
  static const int kJinhuabaojianFieldNumber = 17;
  inline ::google::protobuf::int32 jinhuabaojian() const;
  inline void set_jinhuabaojian(::google::protobuf::int32 value);

  // optional int32 vip = 18;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 18;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);

  // optional string nickname = 19;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 19;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional string qqhead = 20;
  inline bool has_qqhead() const;
  inline void clear_qqhead();
  static const int kQqheadFieldNumber = 20;
  inline const ::std::string& qqhead() const;
  inline void set_qqhead(const ::std::string& value);
  inline void set_qqhead(const char* value);
  inline void set_qqhead(const char* value, size_t size);
  inline ::std::string* mutable_qqhead();
  inline ::std::string* release_qqhead();
  inline void set_allocated_qqhead(::std::string* qqhead);

  // optional string ip = 21;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 21;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // @@protoc_insertion_point(class_scope:GM_Comon_role_info)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_sign();
  inline void clear_has_sign();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_frame();
  inline void clear_has_frame();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_golde();
  inline void clear_has_golde();
  inline void set_has_ticket();
  inline void clear_has_ticket();
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_majiang();
  inline void clear_has_majiang();
  inline void set_has_majiangwin();
  inline void clear_has_majiangwin();
  inline void set_has_jinhua();
  inline void clear_has_jinhua();
  inline void set_has_jinhuawin();
  inline void clear_has_jinhuawin();
  inline void set_has_matchscore();
  inline void clear_has_matchscore();
  inline void set_has_fruit();
  inline void clear_has_fruit();
  inline void set_has_majiangbaojian();
  inline void clear_has_majiangbaojian();
  inline void set_has_jinhuabaojian();
  inline void clear_has_jinhuabaojian();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_qqhead();
  inline void clear_has_qqhead();
  inline void set_has_ip();
  inline void clear_has_ip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* sign_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 head_;
  ::std::string* name_;
  ::google::protobuf::int32 frame_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 golde_;
  ::google::protobuf::int32 ticket_;
  ::google::protobuf::int32 card_;
  ::google::protobuf::int32 majiang_;
  ::google::protobuf::int32 majiangwin_;
  ::google::protobuf::int32 jinhua_;
  ::google::protobuf::int32 jinhuawin_;
  ::google::protobuf::int32 matchscore_;
  ::google::protobuf::int32 fruit_;
  ::google::protobuf::int32 majiangbaojian_;
  ::google::protobuf::int32 jinhuabaojian_;
  ::google::protobuf::int32 vip_;
  ::std::string* nickname_;
  ::std::string* qqhead_;
  ::std::string* ip_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(21 + 31) / 32];

  friend void  protobuf_AddDesc_common_2etxt();
  friend void protobuf_AssignDesc_common_2etxt();
  friend void protobuf_ShutdownFile_common_2etxt();

  void InitAsDefaultInstance();
  static GM_Comon_role_info* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_Result

// required int32 m_Result = 1;
inline bool GM_Result::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Result::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Result::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Result::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GM_Result::m_result() const {
  return m_result_;
}
inline void GM_Result::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// optional string userData = 2;
inline bool GM_Result::has_userdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Result::set_has_userdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Result::clear_has_userdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Result::clear_userdata() {
  if (userdata_ != &::google::protobuf::internal::kEmptyString) {
    userdata_->clear();
  }
  clear_has_userdata();
}
inline const ::std::string& GM_Result::userdata() const {
  return *userdata_;
}
inline void GM_Result::set_userdata(const ::std::string& value) {
  set_has_userdata();
  if (userdata_ == &::google::protobuf::internal::kEmptyString) {
    userdata_ = new ::std::string;
  }
  userdata_->assign(value);
}
inline void GM_Result::set_userdata(const char* value) {
  set_has_userdata();
  if (userdata_ == &::google::protobuf::internal::kEmptyString) {
    userdata_ = new ::std::string;
  }
  userdata_->assign(value);
}
inline void GM_Result::set_userdata(const char* value, size_t size) {
  set_has_userdata();
  if (userdata_ == &::google::protobuf::internal::kEmptyString) {
    userdata_ = new ::std::string;
  }
  userdata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Result::mutable_userdata() {
  set_has_userdata();
  if (userdata_ == &::google::protobuf::internal::kEmptyString) {
    userdata_ = new ::std::string;
  }
  return userdata_;
}
inline ::std::string* GM_Result::release_userdata() {
  clear_has_userdata();
  if (userdata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userdata_;
    userdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Result::set_allocated_userdata(::std::string* userdata) {
  if (userdata_ != &::google::protobuf::internal::kEmptyString) {
    delete userdata_;
  }
  if (userdata) {
    set_has_userdata();
    userdata_ = userdata;
  } else {
    clear_has_userdata();
    userdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_productid = 3;
inline bool GM_Result::has_m_productid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Result::set_has_m_productid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Result::clear_has_m_productid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Result::clear_m_productid() {
  m_productid_ = 0;
  clear_has_m_productid();
}
inline ::google::protobuf::int32 GM_Result::m_productid() const {
  return m_productid_;
}
inline void GM_Result::set_m_productid(::google::protobuf::int32 value) {
  set_has_m_productid();
  m_productid_ = value;
}

// -------------------------------------------------------------------

// GM_RoleIdRequest

// required int32 roleId = 1;
inline bool GM_RoleIdRequest::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RoleIdRequest::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RoleIdRequest::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RoleIdRequest::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_RoleIdRequest::roleid() const {
  return roleid_;
}
inline void GM_RoleIdRequest::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional string ip = 2;
inline bool GM_RoleIdRequest::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RoleIdRequest::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RoleIdRequest::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RoleIdRequest::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& GM_RoleIdRequest::ip() const {
  return *ip_;
}
inline void GM_RoleIdRequest::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void GM_RoleIdRequest::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void GM_RoleIdRequest::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_RoleIdRequest::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* GM_RoleIdRequest::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_RoleIdRequest::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 userId = 3;
inline bool GM_RoleIdRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_RoleIdRequest::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_RoleIdRequest::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_RoleIdRequest::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 GM_RoleIdRequest::userid() const {
  return userid_;
}
inline void GM_RoleIdRequest::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
}

// optional int64 userGmid = 4;
inline bool GM_RoleIdRequest::has_usergmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_RoleIdRequest::set_has_usergmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_RoleIdRequest::clear_has_usergmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_RoleIdRequest::clear_usergmid() {
  usergmid_ = GOOGLE_LONGLONG(0);
  clear_has_usergmid();
}
inline ::google::protobuf::int64 GM_RoleIdRequest::usergmid() const {
  return usergmid_;
}
inline void GM_RoleIdRequest::set_usergmid(::google::protobuf::int64 value) {
  set_has_usergmid();
  usergmid_ = value;
}

// -------------------------------------------------------------------

// GM_GmidRequest

// required int64 gmid = 1;
inline bool GM_GmidRequest::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_GmidRequest::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_GmidRequest::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_GmidRequest::clear_gmid() {
  gmid_ = GOOGLE_LONGLONG(0);
  clear_has_gmid();
}
inline ::google::protobuf::int64 GM_GmidRequest::gmid() const {
  return gmid_;
}
inline void GM_GmidRequest::set_gmid(::google::protobuf::int64 value) {
  set_has_gmid();
  gmid_ = value;
}

// -------------------------------------------------------------------

// GM_Request

// required int32 request = 1;
inline bool GM_Request::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Request::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Request::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Request::clear_request() {
  request_ = 0;
  clear_has_request();
}
inline ::google::protobuf::int32 GM_Request::request() const {
  return request_;
}
inline void GM_Request::set_request(::google::protobuf::int32 value) {
  set_has_request();
  request_ = value;
}

// -------------------------------------------------------------------

// GM_CheckTime

// required int64 timet = 1;
inline bool GM_CheckTime::has_timet() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_CheckTime::set_has_timet() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_CheckTime::clear_has_timet() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_CheckTime::clear_timet() {
  timet_ = GOOGLE_LONGLONG(0);
  clear_has_timet();
}
inline ::google::protobuf::int64 GM_CheckTime::timet() const {
  return timet_;
}
inline void GM_CheckTime::set_timet(::google::protobuf::int64 value) {
  set_has_timet();
  timet_ = value;
}

// required int64 nowtick = 2;
inline bool GM_CheckTime::has_nowtick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_CheckTime::set_has_nowtick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_CheckTime::clear_has_nowtick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_CheckTime::clear_nowtick() {
  nowtick_ = GOOGLE_LONGLONG(0);
  clear_has_nowtick();
}
inline ::google::protobuf::int64 GM_CheckTime::nowtick() const {
  return nowtick_;
}
inline void GM_CheckTime::set_nowtick(::google::protobuf::int64 value) {
  set_has_nowtick();
  nowtick_ = value;
}

// -------------------------------------------------------------------

// GM_BuyTiredResult

// required int32 m_result = 1;
inline bool GM_BuyTiredResult::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_BuyTiredResult::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_BuyTiredResult::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_BuyTiredResult::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GM_BuyTiredResult::m_result() const {
  return m_result_;
}
inline void GM_BuyTiredResult::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// required int32 hasbuy_times = 2;
inline bool GM_BuyTiredResult::has_hasbuy_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_BuyTiredResult::set_has_hasbuy_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_BuyTiredResult::clear_has_hasbuy_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_BuyTiredResult::clear_hasbuy_times() {
  hasbuy_times_ = 0;
  clear_has_hasbuy_times();
}
inline ::google::protobuf::int32 GM_BuyTiredResult::hasbuy_times() const {
  return hasbuy_times_;
}
inline void GM_BuyTiredResult::set_hasbuy_times(::google::protobuf::int32 value) {
  set_has_hasbuy_times();
  hasbuy_times_ = value;
}

// required int32 nextneedgold = 3;
inline bool GM_BuyTiredResult::has_nextneedgold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_BuyTiredResult::set_has_nextneedgold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_BuyTiredResult::clear_has_nextneedgold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_BuyTiredResult::clear_nextneedgold() {
  nextneedgold_ = 0;
  clear_has_nextneedgold();
}
inline ::google::protobuf::int32 GM_BuyTiredResult::nextneedgold() const {
  return nextneedgold_;
}
inline void GM_BuyTiredResult::set_nextneedgold(::google::protobuf::int32 value) {
  set_has_nextneedgold();
  nextneedgold_ = value;
}

// optional int32 tiredvalue = 4;
inline bool GM_BuyTiredResult::has_tiredvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_BuyTiredResult::set_has_tiredvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_BuyTiredResult::clear_has_tiredvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_BuyTiredResult::clear_tiredvalue() {
  tiredvalue_ = 0;
  clear_has_tiredvalue();
}
inline ::google::protobuf::int32 GM_BuyTiredResult::tiredvalue() const {
  return tiredvalue_;
}
inline void GM_BuyTiredResult::set_tiredvalue(::google::protobuf::int32 value) {
  set_has_tiredvalue();
  tiredvalue_ = value;
}

// required int32 isdiscount = 5;
inline bool GM_BuyTiredResult::has_isdiscount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_BuyTiredResult::set_has_isdiscount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_BuyTiredResult::clear_has_isdiscount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_BuyTiredResult::clear_isdiscount() {
  isdiscount_ = 0;
  clear_has_isdiscount();
}
inline ::google::protobuf::int32 GM_BuyTiredResult::isdiscount() const {
  return isdiscount_;
}
inline void GM_BuyTiredResult::set_isdiscount(::google::protobuf::int32 value) {
  set_has_isdiscount();
  isdiscount_ = value;
}

// required int32 istiredvalueadd = 6;
inline bool GM_BuyTiredResult::has_istiredvalueadd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_BuyTiredResult::set_has_istiredvalueadd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_BuyTiredResult::clear_has_istiredvalueadd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_BuyTiredResult::clear_istiredvalueadd() {
  istiredvalueadd_ = 0;
  clear_has_istiredvalueadd();
}
inline ::google::protobuf::int32 GM_BuyTiredResult::istiredvalueadd() const {
  return istiredvalueadd_;
}
inline void GM_BuyTiredResult::set_istiredvalueadd(::google::protobuf::int32 value) {
  set_has_istiredvalueadd();
  istiredvalueadd_ = value;
}

// -------------------------------------------------------------------

// GM_StatisticsLog

// required int32 result = 1;
inline bool GM_StatisticsLog::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_StatisticsLog::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_StatisticsLog::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_StatisticsLog::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_StatisticsLog::result() const {
  return result_;
}
inline void GM_StatisticsLog::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional string rolelogin = 2;
inline bool GM_StatisticsLog::has_rolelogin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_StatisticsLog::set_has_rolelogin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_StatisticsLog::clear_has_rolelogin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_StatisticsLog::clear_rolelogin() {
  if (rolelogin_ != &::google::protobuf::internal::kEmptyString) {
    rolelogin_->clear();
  }
  clear_has_rolelogin();
}
inline const ::std::string& GM_StatisticsLog::rolelogin() const {
  return *rolelogin_;
}
inline void GM_StatisticsLog::set_rolelogin(const ::std::string& value) {
  set_has_rolelogin();
  if (rolelogin_ == &::google::protobuf::internal::kEmptyString) {
    rolelogin_ = new ::std::string;
  }
  rolelogin_->assign(value);
}
inline void GM_StatisticsLog::set_rolelogin(const char* value) {
  set_has_rolelogin();
  if (rolelogin_ == &::google::protobuf::internal::kEmptyString) {
    rolelogin_ = new ::std::string;
  }
  rolelogin_->assign(value);
}
inline void GM_StatisticsLog::set_rolelogin(const char* value, size_t size) {
  set_has_rolelogin();
  if (rolelogin_ == &::google::protobuf::internal::kEmptyString) {
    rolelogin_ = new ::std::string;
  }
  rolelogin_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_StatisticsLog::mutable_rolelogin() {
  set_has_rolelogin();
  if (rolelogin_ == &::google::protobuf::internal::kEmptyString) {
    rolelogin_ = new ::std::string;
  }
  return rolelogin_;
}
inline ::std::string* GM_StatisticsLog::release_rolelogin() {
  clear_has_rolelogin();
  if (rolelogin_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolelogin_;
    rolelogin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_StatisticsLog::set_allocated_rolelogin(::std::string* rolelogin) {
  if (rolelogin_ != &::google::protobuf::internal::kEmptyString) {
    delete rolelogin_;
  }
  if (rolelogin) {
    set_has_rolelogin();
    rolelogin_ = rolelogin;
  } else {
    clear_has_rolelogin();
    rolelogin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string recharge = 3;
inline bool GM_StatisticsLog::has_recharge() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_StatisticsLog::set_has_recharge() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_StatisticsLog::clear_has_recharge() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_StatisticsLog::clear_recharge() {
  if (recharge_ != &::google::protobuf::internal::kEmptyString) {
    recharge_->clear();
  }
  clear_has_recharge();
}
inline const ::std::string& GM_StatisticsLog::recharge() const {
  return *recharge_;
}
inline void GM_StatisticsLog::set_recharge(const ::std::string& value) {
  set_has_recharge();
  if (recharge_ == &::google::protobuf::internal::kEmptyString) {
    recharge_ = new ::std::string;
  }
  recharge_->assign(value);
}
inline void GM_StatisticsLog::set_recharge(const char* value) {
  set_has_recharge();
  if (recharge_ == &::google::protobuf::internal::kEmptyString) {
    recharge_ = new ::std::string;
  }
  recharge_->assign(value);
}
inline void GM_StatisticsLog::set_recharge(const char* value, size_t size) {
  set_has_recharge();
  if (recharge_ == &::google::protobuf::internal::kEmptyString) {
    recharge_ = new ::std::string;
  }
  recharge_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_StatisticsLog::mutable_recharge() {
  set_has_recharge();
  if (recharge_ == &::google::protobuf::internal::kEmptyString) {
    recharge_ = new ::std::string;
  }
  return recharge_;
}
inline ::std::string* GM_StatisticsLog::release_recharge() {
  clear_has_recharge();
  if (recharge_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = recharge_;
    recharge_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_StatisticsLog::set_allocated_recharge(::std::string* recharge) {
  if (recharge_ != &::google::protobuf::internal::kEmptyString) {
    delete recharge_;
  }
  if (recharge) {
    set_has_recharge();
    recharge_ = recharge;
  } else {
    clear_has_recharge();
    recharge_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GM_Get_object

// required int32 objectid = 1;
inline bool GM_Get_object::has_objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Get_object::set_has_objectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Get_object::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Get_object::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_Get_object::objectid() const {
  return objectid_;
}
inline void GM_Get_object::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// optional int32 num = 2;
inline bool GM_Get_object::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Get_object::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Get_object::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Get_object::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 GM_Get_object::num() const {
  return num_;
}
inline void GM_Get_object::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// GM_Get_Result

// required int32 m_Result = 1;
inline bool GM_Get_Result::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Get_Result::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Get_Result::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Get_Result::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GM_Get_Result::m_result() const {
  return m_result_;
}
inline void GM_Get_Result::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// repeated .GM_Get_object data = 2;
inline int GM_Get_Result::data_size() const {
  return data_.size();
}
inline void GM_Get_Result::clear_data() {
  data_.Clear();
}
inline const ::GM_Get_object& GM_Get_Result::data(int index) const {
  return data_.Get(index);
}
inline ::GM_Get_object* GM_Get_Result::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_Get_object* GM_Get_Result::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Get_object >&
GM_Get_Result::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Get_object >*
GM_Get_Result::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_Common_roleinfo_requrest

// required int32 roleid = 1;
inline bool GM_Common_roleinfo_requrest::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Common_roleinfo_requrest::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Common_roleinfo_requrest::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Common_roleinfo_requrest::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Common_roleinfo_requrest::roleid() const {
  return roleid_;
}
inline void GM_Common_roleinfo_requrest::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 copyid = 2;
inline bool GM_Common_roleinfo_requrest::has_copyid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Common_roleinfo_requrest::set_has_copyid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Common_roleinfo_requrest::clear_has_copyid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Common_roleinfo_requrest::clear_copyid() {
  copyid_ = 0;
  clear_has_copyid();
}
inline ::google::protobuf::int32 GM_Common_roleinfo_requrest::copyid() const {
  return copyid_;
}
inline void GM_Common_roleinfo_requrest::set_copyid(::google::protobuf::int32 value) {
  set_has_copyid();
  copyid_ = value;
}

// optional int32 roomid = 3;
inline bool GM_Common_roleinfo_requrest::has_roomid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Common_roleinfo_requrest::set_has_roomid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Common_roleinfo_requrest::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Common_roleinfo_requrest::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 GM_Common_roleinfo_requrest::roomid() const {
  return roomid_;
}
inline void GM_Common_roleinfo_requrest::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// GM_Comon_role_info

// required int32 roleid = 1;
inline bool GM_Comon_role_info::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Comon_role_info::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Comon_role_info::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Comon_role_info::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Comon_role_info::roleid() const {
  return roleid_;
}
inline void GM_Comon_role_info::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional string sign = 2;
inline bool GM_Comon_role_info::has_sign() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Comon_role_info::set_has_sign() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Comon_role_info::clear_has_sign() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Comon_role_info::clear_sign() {
  if (sign_ != &::google::protobuf::internal::kEmptyString) {
    sign_->clear();
  }
  clear_has_sign();
}
inline const ::std::string& GM_Comon_role_info::sign() const {
  return *sign_;
}
inline void GM_Comon_role_info::set_sign(const ::std::string& value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::kEmptyString) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
}
inline void GM_Comon_role_info::set_sign(const char* value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::kEmptyString) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
}
inline void GM_Comon_role_info::set_sign(const char* value, size_t size) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::kEmptyString) {
    sign_ = new ::std::string;
  }
  sign_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Comon_role_info::mutable_sign() {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::kEmptyString) {
    sign_ = new ::std::string;
  }
  return sign_;
}
inline ::std::string* GM_Comon_role_info::release_sign() {
  clear_has_sign();
  if (sign_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_;
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Comon_role_info::set_allocated_sign(::std::string* sign) {
  if (sign_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_;
  }
  if (sign) {
    set_has_sign();
    sign_ = sign;
  } else {
    clear_has_sign();
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string name = 3;
inline bool GM_Comon_role_info::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Comon_role_info::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Comon_role_info::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Comon_role_info::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GM_Comon_role_info::name() const {
  return *name_;
}
inline void GM_Comon_role_info::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GM_Comon_role_info::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GM_Comon_role_info::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Comon_role_info::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GM_Comon_role_info::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Comon_role_info::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 head = 4;
inline bool GM_Comon_role_info::has_head() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Comon_role_info::set_has_head() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Comon_role_info::clear_has_head() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Comon_role_info::clear_head() {
  head_ = 0;
  clear_has_head();
}
inline ::google::protobuf::int32 GM_Comon_role_info::head() const {
  return head_;
}
inline void GM_Comon_role_info::set_head(::google::protobuf::int32 value) {
  set_has_head();
  head_ = value;
}

// optional int32 frame = 5;
inline bool GM_Comon_role_info::has_frame() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Comon_role_info::set_has_frame() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Comon_role_info::clear_has_frame() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Comon_role_info::clear_frame() {
  frame_ = 0;
  clear_has_frame();
}
inline ::google::protobuf::int32 GM_Comon_role_info::frame() const {
  return frame_;
}
inline void GM_Comon_role_info::set_frame(::google::protobuf::int32 value) {
  set_has_frame();
  frame_ = value;
}

// optional int32 sex = 6;
inline bool GM_Comon_role_info::has_sex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_Comon_role_info::set_has_sex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_Comon_role_info::clear_has_sex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_Comon_role_info::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 GM_Comon_role_info::sex() const {
  return sex_;
}
inline void GM_Comon_role_info::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
}

// optional int32 golde = 7;
inline bool GM_Comon_role_info::has_golde() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_Comon_role_info::set_has_golde() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_Comon_role_info::clear_has_golde() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_Comon_role_info::clear_golde() {
  golde_ = 0;
  clear_has_golde();
}
inline ::google::protobuf::int32 GM_Comon_role_info::golde() const {
  return golde_;
}
inline void GM_Comon_role_info::set_golde(::google::protobuf::int32 value) {
  set_has_golde();
  golde_ = value;
}

// optional int32 ticket = 8;
inline bool GM_Comon_role_info::has_ticket() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_Comon_role_info::set_has_ticket() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_Comon_role_info::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_Comon_role_info::clear_ticket() {
  ticket_ = 0;
  clear_has_ticket();
}
inline ::google::protobuf::int32 GM_Comon_role_info::ticket() const {
  return ticket_;
}
inline void GM_Comon_role_info::set_ticket(::google::protobuf::int32 value) {
  set_has_ticket();
  ticket_ = value;
}

// optional int32 card = 9;
inline bool GM_Comon_role_info::has_card() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_Comon_role_info::set_has_card() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_Comon_role_info::clear_has_card() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_Comon_role_info::clear_card() {
  card_ = 0;
  clear_has_card();
}
inline ::google::protobuf::int32 GM_Comon_role_info::card() const {
  return card_;
}
inline void GM_Comon_role_info::set_card(::google::protobuf::int32 value) {
  set_has_card();
  card_ = value;
}

// optional int32 majiang = 10;
inline bool GM_Comon_role_info::has_majiang() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GM_Comon_role_info::set_has_majiang() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GM_Comon_role_info::clear_has_majiang() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GM_Comon_role_info::clear_majiang() {
  majiang_ = 0;
  clear_has_majiang();
}
inline ::google::protobuf::int32 GM_Comon_role_info::majiang() const {
  return majiang_;
}
inline void GM_Comon_role_info::set_majiang(::google::protobuf::int32 value) {
  set_has_majiang();
  majiang_ = value;
}

// optional int32 majiangwin = 11;
inline bool GM_Comon_role_info::has_majiangwin() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GM_Comon_role_info::set_has_majiangwin() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GM_Comon_role_info::clear_has_majiangwin() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GM_Comon_role_info::clear_majiangwin() {
  majiangwin_ = 0;
  clear_has_majiangwin();
}
inline ::google::protobuf::int32 GM_Comon_role_info::majiangwin() const {
  return majiangwin_;
}
inline void GM_Comon_role_info::set_majiangwin(::google::protobuf::int32 value) {
  set_has_majiangwin();
  majiangwin_ = value;
}

// optional int32 jinhua = 12;
inline bool GM_Comon_role_info::has_jinhua() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GM_Comon_role_info::set_has_jinhua() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GM_Comon_role_info::clear_has_jinhua() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GM_Comon_role_info::clear_jinhua() {
  jinhua_ = 0;
  clear_has_jinhua();
}
inline ::google::protobuf::int32 GM_Comon_role_info::jinhua() const {
  return jinhua_;
}
inline void GM_Comon_role_info::set_jinhua(::google::protobuf::int32 value) {
  set_has_jinhua();
  jinhua_ = value;
}

// optional int32 jinhuawin = 13;
inline bool GM_Comon_role_info::has_jinhuawin() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GM_Comon_role_info::set_has_jinhuawin() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GM_Comon_role_info::clear_has_jinhuawin() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GM_Comon_role_info::clear_jinhuawin() {
  jinhuawin_ = 0;
  clear_has_jinhuawin();
}
inline ::google::protobuf::int32 GM_Comon_role_info::jinhuawin() const {
  return jinhuawin_;
}
inline void GM_Comon_role_info::set_jinhuawin(::google::protobuf::int32 value) {
  set_has_jinhuawin();
  jinhuawin_ = value;
}

// optional int32 matchscore = 14;
inline bool GM_Comon_role_info::has_matchscore() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GM_Comon_role_info::set_has_matchscore() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GM_Comon_role_info::clear_has_matchscore() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GM_Comon_role_info::clear_matchscore() {
  matchscore_ = 0;
  clear_has_matchscore();
}
inline ::google::protobuf::int32 GM_Comon_role_info::matchscore() const {
  return matchscore_;
}
inline void GM_Comon_role_info::set_matchscore(::google::protobuf::int32 value) {
  set_has_matchscore();
  matchscore_ = value;
}

// optional int32 fruit = 15;
inline bool GM_Comon_role_info::has_fruit() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GM_Comon_role_info::set_has_fruit() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GM_Comon_role_info::clear_has_fruit() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GM_Comon_role_info::clear_fruit() {
  fruit_ = 0;
  clear_has_fruit();
}
inline ::google::protobuf::int32 GM_Comon_role_info::fruit() const {
  return fruit_;
}
inline void GM_Comon_role_info::set_fruit(::google::protobuf::int32 value) {
  set_has_fruit();
  fruit_ = value;
}

// optional int32 majiangbaojian = 16;
inline bool GM_Comon_role_info::has_majiangbaojian() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GM_Comon_role_info::set_has_majiangbaojian() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GM_Comon_role_info::clear_has_majiangbaojian() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GM_Comon_role_info::clear_majiangbaojian() {
  majiangbaojian_ = 0;
  clear_has_majiangbaojian();
}
inline ::google::protobuf::int32 GM_Comon_role_info::majiangbaojian() const {
  return majiangbaojian_;
}
inline void GM_Comon_role_info::set_majiangbaojian(::google::protobuf::int32 value) {
  set_has_majiangbaojian();
  majiangbaojian_ = value;
}

// optional int32 jinhuabaojian = 17;
inline bool GM_Comon_role_info::has_jinhuabaojian() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GM_Comon_role_info::set_has_jinhuabaojian() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GM_Comon_role_info::clear_has_jinhuabaojian() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GM_Comon_role_info::clear_jinhuabaojian() {
  jinhuabaojian_ = 0;
  clear_has_jinhuabaojian();
}
inline ::google::protobuf::int32 GM_Comon_role_info::jinhuabaojian() const {
  return jinhuabaojian_;
}
inline void GM_Comon_role_info::set_jinhuabaojian(::google::protobuf::int32 value) {
  set_has_jinhuabaojian();
  jinhuabaojian_ = value;
}

// optional int32 vip = 18;
inline bool GM_Comon_role_info::has_vip() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GM_Comon_role_info::set_has_vip() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GM_Comon_role_info::clear_has_vip() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GM_Comon_role_info::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 GM_Comon_role_info::vip() const {
  return vip_;
}
inline void GM_Comon_role_info::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
}

// optional string nickname = 19;
inline bool GM_Comon_role_info::has_nickname() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void GM_Comon_role_info::set_has_nickname() {
  _has_bits_[0] |= 0x00040000u;
}
inline void GM_Comon_role_info::clear_has_nickname() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void GM_Comon_role_info::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& GM_Comon_role_info::nickname() const {
  return *nickname_;
}
inline void GM_Comon_role_info::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
}
inline void GM_Comon_role_info::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
}
inline void GM_Comon_role_info::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Comon_role_info::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  return nickname_;
}
inline ::std::string* GM_Comon_role_info::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Comon_role_info::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string qqhead = 20;
inline bool GM_Comon_role_info::has_qqhead() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void GM_Comon_role_info::set_has_qqhead() {
  _has_bits_[0] |= 0x00080000u;
}
inline void GM_Comon_role_info::clear_has_qqhead() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void GM_Comon_role_info::clear_qqhead() {
  if (qqhead_ != &::google::protobuf::internal::kEmptyString) {
    qqhead_->clear();
  }
  clear_has_qqhead();
}
inline const ::std::string& GM_Comon_role_info::qqhead() const {
  return *qqhead_;
}
inline void GM_Comon_role_info::set_qqhead(const ::std::string& value) {
  set_has_qqhead();
  if (qqhead_ == &::google::protobuf::internal::kEmptyString) {
    qqhead_ = new ::std::string;
  }
  qqhead_->assign(value);
}
inline void GM_Comon_role_info::set_qqhead(const char* value) {
  set_has_qqhead();
  if (qqhead_ == &::google::protobuf::internal::kEmptyString) {
    qqhead_ = new ::std::string;
  }
  qqhead_->assign(value);
}
inline void GM_Comon_role_info::set_qqhead(const char* value, size_t size) {
  set_has_qqhead();
  if (qqhead_ == &::google::protobuf::internal::kEmptyString) {
    qqhead_ = new ::std::string;
  }
  qqhead_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Comon_role_info::mutable_qqhead() {
  set_has_qqhead();
  if (qqhead_ == &::google::protobuf::internal::kEmptyString) {
    qqhead_ = new ::std::string;
  }
  return qqhead_;
}
inline ::std::string* GM_Comon_role_info::release_qqhead() {
  clear_has_qqhead();
  if (qqhead_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = qqhead_;
    qqhead_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Comon_role_info::set_allocated_qqhead(::std::string* qqhead) {
  if (qqhead_ != &::google::protobuf::internal::kEmptyString) {
    delete qqhead_;
  }
  if (qqhead) {
    set_has_qqhead();
    qqhead_ = qqhead;
  } else {
    clear_has_qqhead();
    qqhead_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string ip = 21;
inline bool GM_Comon_role_info::has_ip() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void GM_Comon_role_info::set_has_ip() {
  _has_bits_[0] |= 0x00100000u;
}
inline void GM_Comon_role_info::clear_has_ip() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void GM_Comon_role_info::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& GM_Comon_role_info::ip() const {
  return *ip_;
}
inline void GM_Comon_role_info::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void GM_Comon_role_info::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void GM_Comon_role_info::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Comon_role_info::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* GM_Comon_role_info::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Comon_role_info::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_common_2etxt__INCLUDED
