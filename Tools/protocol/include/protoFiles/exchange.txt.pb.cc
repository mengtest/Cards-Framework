// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exchange.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "exchange.txt.pb.h"
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GM_Exchange_object_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Exchange_object_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Exchange_object_reqruest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Exchange_object_reqruest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Exchange_Exchange_request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Exchange_Exchange_request_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Exchange_Exchange_return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Exchange_Exchange_return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Relief_login_return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Relief_login_return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Relief_get_return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Relief_get_return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_ExchangeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_ExchangeInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Exchange_phone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Exchange_phone_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_ExchangeInfo_return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_ExchangeInfo_return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_EXchangeInfo_exchange_return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_EXchangeInfo_exchange_return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Exchange_self_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Exchange_self_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Exchange_self_return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Exchange_self_return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_EXchange_info_begin_return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_EXchange_info_begin_return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Exchange_objectinfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Exchange_objectinfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_exchange_2etxt() {
  protobuf_AddDesc_exchange_2etxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "exchange.txt");
  GOOGLE_CHECK(file != NULL);
  GM_Exchange_object_descriptor_ = file->message_type(0);
  static const int GM_Exchange_object_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_object, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_object, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_object, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_object, state_),
  };
  GM_Exchange_object_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Exchange_object_descriptor_,
      GM_Exchange_object::default_instance_,
      GM_Exchange_object_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_object, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_object, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Exchange_object));
  GM_Exchange_object_reqruest_descriptor_ = file->message_type(1);
  static const int GM_Exchange_object_reqruest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_object_reqruest, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_object_reqruest, data_),
  };
  GM_Exchange_object_reqruest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Exchange_object_reqruest_descriptor_,
      GM_Exchange_object_reqruest::default_instance_,
      GM_Exchange_object_reqruest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_object_reqruest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_object_reqruest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Exchange_object_reqruest));
  GM_Exchange_Exchange_request_descriptor_ = file->message_type(2);
  static const int GM_Exchange_Exchange_request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_Exchange_request, requerstid_),
  };
  GM_Exchange_Exchange_request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Exchange_Exchange_request_descriptor_,
      GM_Exchange_Exchange_request::default_instance_,
      GM_Exchange_Exchange_request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_Exchange_request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_Exchange_request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Exchange_Exchange_request));
  GM_Exchange_Exchange_return_descriptor_ = file->message_type(3);
  static const int GM_Exchange_Exchange_return_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_Exchange_return, errorid_),
  };
  GM_Exchange_Exchange_return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Exchange_Exchange_return_descriptor_,
      GM_Exchange_Exchange_return::default_instance_,
      GM_Exchange_Exchange_return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_Exchange_return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_Exchange_return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Exchange_Exchange_return));
  GM_Relief_login_return_descriptor_ = file->message_type(4);
  static const int GM_Relief_login_return_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Relief_login_return, times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Relief_login_return, all_),
  };
  GM_Relief_login_return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Relief_login_return_descriptor_,
      GM_Relief_login_return::default_instance_,
      GM_Relief_login_return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Relief_login_return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Relief_login_return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Relief_login_return));
  GM_Relief_get_return_descriptor_ = file->message_type(5);
  static const int GM_Relief_get_return_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Relief_get_return, errorid_),
  };
  GM_Relief_get_return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Relief_get_return_descriptor_,
      GM_Relief_get_return::default_instance_,
      GM_Relief_get_return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Relief_get_return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Relief_get_return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Relief_get_return));
  GM_ExchangeInfo_descriptor_ = file->message_type(6);
  static const int GM_ExchangeInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ExchangeInfo, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ExchangeInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ExchangeInfo, phone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ExchangeInfo, qq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ExchangeInfo, invite_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ExchangeInfo, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ExchangeInfo, usetime_),
  };
  GM_ExchangeInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_ExchangeInfo_descriptor_,
      GM_ExchangeInfo::default_instance_,
      GM_ExchangeInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ExchangeInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ExchangeInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_ExchangeInfo));
  GM_Exchange_phone_descriptor_ = file->message_type(7);
  static const int GM_Exchange_phone_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_phone, phone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_phone, usetime_),
  };
  GM_Exchange_phone_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Exchange_phone_descriptor_,
      GM_Exchange_phone::default_instance_,
      GM_Exchange_phone_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_phone, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_phone, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Exchange_phone));
  GM_ExchangeInfo_return_descriptor_ = file->message_type(8);
  static const int GM_ExchangeInfo_return_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ExchangeInfo_return, isbind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ExchangeInfo_return, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ExchangeInfo_return, dataphone_),
  };
  GM_ExchangeInfo_return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_ExchangeInfo_return_descriptor_,
      GM_ExchangeInfo_return::default_instance_,
      GM_ExchangeInfo_return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ExchangeInfo_return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_ExchangeInfo_return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_ExchangeInfo_return));
  GM_EXchangeInfo_exchange_return_descriptor_ = file->message_type(9);
  static const int GM_EXchangeInfo_exchange_return_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_EXchangeInfo_exchange_return, errorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_EXchangeInfo_exchange_return, data_),
  };
  GM_EXchangeInfo_exchange_return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_EXchangeInfo_exchange_return_descriptor_,
      GM_EXchangeInfo_exchange_return::default_instance_,
      GM_EXchangeInfo_exchange_return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_EXchangeInfo_exchange_return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_EXchangeInfo_exchange_return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_EXchangeInfo_exchange_return));
  GM_Exchange_self_descriptor_ = file->message_type(10);
  static const int GM_Exchange_self_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self, tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self, phone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self, phonecharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self, errorid_),
  };
  GM_Exchange_self_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Exchange_self_descriptor_,
      GM_Exchange_self::default_instance_,
      GM_Exchange_self_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Exchange_self));
  GM_Exchange_self_return_descriptor_ = file->message_type(11);
  static const int GM_Exchange_self_return_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self_return, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self_return, data_),
  };
  GM_Exchange_self_return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Exchange_self_return_descriptor_,
      GM_Exchange_self_return::default_instance_,
      GM_Exchange_self_return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self_return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_self_return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Exchange_self_return));
  GM_EXchange_info_begin_return_descriptor_ = file->message_type(12);
  static const int GM_EXchange_info_begin_return_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_EXchange_info_begin_return, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_EXchange_info_begin_return, data_),
  };
  GM_EXchange_info_begin_return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_EXchange_info_begin_return_descriptor_,
      GM_EXchange_info_begin_return::default_instance_,
      GM_EXchange_info_begin_return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_EXchange_info_begin_return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_EXchange_info_begin_return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_EXchange_info_begin_return));
  GM_Exchange_objectinfo_descriptor_ = file->message_type(13);
  static const int GM_Exchange_objectinfo_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_objectinfo, tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_objectinfo, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_objectinfo, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_objectinfo, costobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_objectinfo, costnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_objectinfo, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_objectinfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_objectinfo, remark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_objectinfo, www_),
  };
  GM_Exchange_objectinfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Exchange_objectinfo_descriptor_,
      GM_Exchange_objectinfo::default_instance_,
      GM_Exchange_objectinfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_objectinfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Exchange_objectinfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Exchange_objectinfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_exchange_2etxt);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Exchange_object_descriptor_, &GM_Exchange_object::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Exchange_object_reqruest_descriptor_, &GM_Exchange_object_reqruest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Exchange_Exchange_request_descriptor_, &GM_Exchange_Exchange_request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Exchange_Exchange_return_descriptor_, &GM_Exchange_Exchange_return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Relief_login_return_descriptor_, &GM_Relief_login_return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Relief_get_return_descriptor_, &GM_Relief_get_return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_ExchangeInfo_descriptor_, &GM_ExchangeInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Exchange_phone_descriptor_, &GM_Exchange_phone::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_ExchangeInfo_return_descriptor_, &GM_ExchangeInfo_return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_EXchangeInfo_exchange_return_descriptor_, &GM_EXchangeInfo_exchange_return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Exchange_self_descriptor_, &GM_Exchange_self::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Exchange_self_return_descriptor_, &GM_Exchange_self_return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_EXchange_info_begin_return_descriptor_, &GM_EXchange_info_begin_return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Exchange_objectinfo_descriptor_, &GM_Exchange_objectinfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_exchange_2etxt() {
  delete GM_Exchange_object::default_instance_;
  delete GM_Exchange_object_reflection_;
  delete GM_Exchange_object_reqruest::default_instance_;
  delete GM_Exchange_object_reqruest_reflection_;
  delete GM_Exchange_Exchange_request::default_instance_;
  delete GM_Exchange_Exchange_request_reflection_;
  delete GM_Exchange_Exchange_return::default_instance_;
  delete GM_Exchange_Exchange_return_reflection_;
  delete GM_Relief_login_return::default_instance_;
  delete GM_Relief_login_return_reflection_;
  delete GM_Relief_get_return::default_instance_;
  delete GM_Relief_get_return_reflection_;
  delete GM_ExchangeInfo::default_instance_;
  delete GM_ExchangeInfo_reflection_;
  delete GM_Exchange_phone::default_instance_;
  delete GM_Exchange_phone_reflection_;
  delete GM_ExchangeInfo_return::default_instance_;
  delete GM_ExchangeInfo_return_reflection_;
  delete GM_EXchangeInfo_exchange_return::default_instance_;
  delete GM_EXchangeInfo_exchange_return_reflection_;
  delete GM_Exchange_self::default_instance_;
  delete GM_Exchange_self_reflection_;
  delete GM_Exchange_self_return::default_instance_;
  delete GM_Exchange_self_return_reflection_;
  delete GM_EXchange_info_begin_return::default_instance_;
  delete GM_EXchange_info_begin_return_reflection_;
  delete GM_Exchange_objectinfo::default_instance_;
  delete GM_Exchange_objectinfo_reflection_;
}

void protobuf_AddDesc_exchange_2etxt() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014exchange.txt\"V\n\022GM_Exchange_object\022\020\n\010"
    "objectid\030\001 \002(\005\022\013\n\003num\030\002 \001(\005\022\022\n\ncreatetim"
    "e\030\003 \001(\005\022\r\n\005state\030\004 \001(\005\"P\n\033GM_Exchange_ob"
    "ject_reqruest\022\016\n\006roleid\030\001 \002(\005\022!\n\004data\030\002 "
    "\003(\0132\023.GM_Exchange_object\"2\n\034GM_Exchange_"
    "Exchange_request\022\022\n\nrequerstid\030\001 \002(\005\".\n\033"
    "GM_Exchange_Exchange_return\022\017\n\007errorid\030\001"
    " \002(\005\"4\n\026GM_Relief_login_return\022\r\n\005times\030"
    "\001 \002(\005\022\013\n\003all\030\002 \001(\005\"\'\n\024GM_Relief_get_retu"
    "rn\022\017\n\007errorid\030\001 \002(\005\"|\n\017GM_ExchangeInfo\022\016"
    "\n\006roleid\030\001 \002(\005\022\014\n\004name\030\002 \001(\t\022\r\n\005phone\030\003 "
    "\001(\t\022\n\n\002qq\030\004 \001(\003\022\016\n\006invite\030\005 \001(\t\022\017\n\007addre"
    "ss\030\006 \001(\t\022\017\n\007usetime\030\007 \001(\005\"3\n\021GM_Exchange"
    "_phone\022\r\n\005phone\030\001 \002(\t\022\017\n\007usetime\030\002 \001(\005\"o"
    "\n\026GM_ExchangeInfo_return\022\016\n\006isBind\030\001 \002(\005"
    "\022\036\n\004data\030\002 \003(\0132\020.GM_ExchangeInfo\022%\n\tdata"
    "Phone\030\003 \003(\0132\022.GM_Exchange_phone\"R\n\037GM_EX"
    "changeInfo_exchange_return\022\017\n\007errorid\030\001 "
    "\002(\005\022\036\n\004data\030\002 \001(\0132\020.GM_ExchangeInfo\"\305\001\n\020"
    "GM_Exchange_self\022\016\n\006roleid\030\001 \002(\005\022\r\n\005stat"
    "e\030\002 \001(\005\022\020\n\010objectid\030\003 \001(\005\022\013\n\003num\030\004 \001(\005\022\022"
    "\n\ncreatetime\030\005 \001(\005\022\013\n\003tag\030\006 \001(\005\022\014\n\004name\030"
    "\007 \001(\t\022\r\n\005phone\030\010 \001(\t\022\017\n\007address\030\t \001(\t\022\023\n"
    "\013phonecharge\030\n \001(\t\022\017\n\007errorid\030\013 \001(\005\"J\n\027G"
    "M_Exchange_self_return\022\016\n\006roleid\030\001 \002(\005\022\037"
    "\n\004data\030\002 \003(\0132\021.GM_Exchange_self\"V\n\035GM_EX"
    "change_info_begin_return\022\016\n\006roleid\030\001 \002(\005"
    "\022%\n\004data\030\002 \003(\0132\027.GM_Exchange_objectinfo\""
    "\242\001\n\026GM_Exchange_objectinfo\022\013\n\003tag\030\001 \002(\005\022"
    "\020\n\010objectid\030\002 \001(\005\022\013\n\003num\030\003 \001(\005\022\024\n\014costob"
    "jectid\030\004 \001(\005\022\017\n\007costnum\030\005 \001(\005\022\014\n\004rank\030\006 "
    "\001(\005\022\n\n\002id\030\007 \001(\005\022\016\n\006remark\030\010 \001(\t\022\013\n\003www\030\t"
    " \001(\t", 1284);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "exchange.txt", &protobuf_RegisterTypes);
  GM_Exchange_object::default_instance_ = new GM_Exchange_object();
  GM_Exchange_object_reqruest::default_instance_ = new GM_Exchange_object_reqruest();
  GM_Exchange_Exchange_request::default_instance_ = new GM_Exchange_Exchange_request();
  GM_Exchange_Exchange_return::default_instance_ = new GM_Exchange_Exchange_return();
  GM_Relief_login_return::default_instance_ = new GM_Relief_login_return();
  GM_Relief_get_return::default_instance_ = new GM_Relief_get_return();
  GM_ExchangeInfo::default_instance_ = new GM_ExchangeInfo();
  GM_Exchange_phone::default_instance_ = new GM_Exchange_phone();
  GM_ExchangeInfo_return::default_instance_ = new GM_ExchangeInfo_return();
  GM_EXchangeInfo_exchange_return::default_instance_ = new GM_EXchangeInfo_exchange_return();
  GM_Exchange_self::default_instance_ = new GM_Exchange_self();
  GM_Exchange_self_return::default_instance_ = new GM_Exchange_self_return();
  GM_EXchange_info_begin_return::default_instance_ = new GM_EXchange_info_begin_return();
  GM_Exchange_objectinfo::default_instance_ = new GM_Exchange_objectinfo();
  GM_Exchange_object::default_instance_->InitAsDefaultInstance();
  GM_Exchange_object_reqruest::default_instance_->InitAsDefaultInstance();
  GM_Exchange_Exchange_request::default_instance_->InitAsDefaultInstance();
  GM_Exchange_Exchange_return::default_instance_->InitAsDefaultInstance();
  GM_Relief_login_return::default_instance_->InitAsDefaultInstance();
  GM_Relief_get_return::default_instance_->InitAsDefaultInstance();
  GM_ExchangeInfo::default_instance_->InitAsDefaultInstance();
  GM_Exchange_phone::default_instance_->InitAsDefaultInstance();
  GM_ExchangeInfo_return::default_instance_->InitAsDefaultInstance();
  GM_EXchangeInfo_exchange_return::default_instance_->InitAsDefaultInstance();
  GM_Exchange_self::default_instance_->InitAsDefaultInstance();
  GM_Exchange_self_return::default_instance_->InitAsDefaultInstance();
  GM_EXchange_info_begin_return::default_instance_->InitAsDefaultInstance();
  GM_Exchange_objectinfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_exchange_2etxt);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_exchange_2etxt {
  StaticDescriptorInitializer_exchange_2etxt() {
    protobuf_AddDesc_exchange_2etxt();
  }
} static_descriptor_initializer_exchange_2etxt_;

// ===================================================================

#ifndef _MSC_VER
const int GM_Exchange_object::kObjectidFieldNumber;
const int GM_Exchange_object::kNumFieldNumber;
const int GM_Exchange_object::kCreatetimeFieldNumber;
const int GM_Exchange_object::kStateFieldNumber;
#endif  // !_MSC_VER

GM_Exchange_object::GM_Exchange_object()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Exchange_object::InitAsDefaultInstance() {
}

GM_Exchange_object::GM_Exchange_object(const GM_Exchange_object& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Exchange_object::SharedCtor() {
  _cached_size_ = 0;
  objectid_ = 0;
  num_ = 0;
  createtime_ = 0;
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Exchange_object::~GM_Exchange_object() {
  SharedDtor();
}

void GM_Exchange_object::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Exchange_object::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Exchange_object::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Exchange_object_descriptor_;
}

const GM_Exchange_object& GM_Exchange_object::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exchange_2etxt();
  return *default_instance_;
}

GM_Exchange_object* GM_Exchange_object::default_instance_ = NULL;

GM_Exchange_object* GM_Exchange_object::New() const {
  return new GM_Exchange_object;
}

void GM_Exchange_object::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    objectid_ = 0;
    num_ = 0;
    createtime_ = 0;
    state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Exchange_object::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 objectid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // optional int32 num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_createtime;
        break;
      }

      // optional int32 createtime = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_createtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &createtime_)));
          set_has_createtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_state;
        break;
      }

      // optional int32 state = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Exchange_object::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 objectid = 1;
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->objectid(), output);
  }

  // optional int32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  // optional int32 createtime = 3;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->createtime(), output);
  }

  // optional int32 state = 4;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Exchange_object::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 objectid = 1;
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->objectid(), target);
  }

  // optional int32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  // optional int32 createtime = 3;
  if (has_createtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->createtime(), target);
  }

  // optional int32 state = 4;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Exchange_object::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 objectid = 1;
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objectid());
    }

    // optional int32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

    // optional int32 createtime = 3;
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->createtime());
    }

    // optional int32 state = 4;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Exchange_object::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Exchange_object* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Exchange_object*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Exchange_object::MergeFrom(const GM_Exchange_object& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_createtime()) {
      set_createtime(from.createtime());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Exchange_object::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Exchange_object::CopyFrom(const GM_Exchange_object& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Exchange_object::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_Exchange_object::Swap(GM_Exchange_object* other) {
  if (other != this) {
    std::swap(objectid_, other->objectid_);
    std::swap(num_, other->num_);
    std::swap(createtime_, other->createtime_);
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Exchange_object::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Exchange_object_descriptor_;
  metadata.reflection = GM_Exchange_object_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Exchange_object_reqruest::kRoleidFieldNumber;
const int GM_Exchange_object_reqruest::kDataFieldNumber;
#endif  // !_MSC_VER

GM_Exchange_object_reqruest::GM_Exchange_object_reqruest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Exchange_object_reqruest::InitAsDefaultInstance() {
}

GM_Exchange_object_reqruest::GM_Exchange_object_reqruest(const GM_Exchange_object_reqruest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Exchange_object_reqruest::SharedCtor() {
  _cached_size_ = 0;
  roleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Exchange_object_reqruest::~GM_Exchange_object_reqruest() {
  SharedDtor();
}

void GM_Exchange_object_reqruest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Exchange_object_reqruest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Exchange_object_reqruest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Exchange_object_reqruest_descriptor_;
}

const GM_Exchange_object_reqruest& GM_Exchange_object_reqruest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exchange_2etxt();
  return *default_instance_;
}

GM_Exchange_object_reqruest* GM_Exchange_object_reqruest::default_instance_ = NULL;

GM_Exchange_object_reqruest* GM_Exchange_object_reqruest::New() const {
  return new GM_Exchange_object_reqruest;
}

void GM_Exchange_object_reqruest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    roleid_ = 0;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Exchange_object_reqruest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .GM_Exchange_object data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Exchange_object_reqruest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 roleid = 1;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // repeated .GM_Exchange_object data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Exchange_object_reqruest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 roleid = 1;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // repeated .GM_Exchange_object data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Exchange_object_reqruest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 roleid = 1;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleid());
    }

  }
  // repeated .GM_Exchange_object data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Exchange_object_reqruest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Exchange_object_reqruest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Exchange_object_reqruest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Exchange_object_reqruest::MergeFrom(const GM_Exchange_object_reqruest& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Exchange_object_reqruest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Exchange_object_reqruest::CopyFrom(const GM_Exchange_object_reqruest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Exchange_object_reqruest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < data_size(); i++) {
    if (!this->data(i).IsInitialized()) return false;
  }
  return true;
}

void GM_Exchange_object_reqruest::Swap(GM_Exchange_object_reqruest* other) {
  if (other != this) {
    std::swap(roleid_, other->roleid_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Exchange_object_reqruest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Exchange_object_reqruest_descriptor_;
  metadata.reflection = GM_Exchange_object_reqruest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Exchange_Exchange_request::kRequerstidFieldNumber;
#endif  // !_MSC_VER

GM_Exchange_Exchange_request::GM_Exchange_Exchange_request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Exchange_Exchange_request::InitAsDefaultInstance() {
}

GM_Exchange_Exchange_request::GM_Exchange_Exchange_request(const GM_Exchange_Exchange_request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Exchange_Exchange_request::SharedCtor() {
  _cached_size_ = 0;
  requerstid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Exchange_Exchange_request::~GM_Exchange_Exchange_request() {
  SharedDtor();
}

void GM_Exchange_Exchange_request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Exchange_Exchange_request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Exchange_Exchange_request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Exchange_Exchange_request_descriptor_;
}

const GM_Exchange_Exchange_request& GM_Exchange_Exchange_request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exchange_2etxt();
  return *default_instance_;
}

GM_Exchange_Exchange_request* GM_Exchange_Exchange_request::default_instance_ = NULL;

GM_Exchange_Exchange_request* GM_Exchange_Exchange_request::New() const {
  return new GM_Exchange_Exchange_request;
}

void GM_Exchange_Exchange_request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    requerstid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Exchange_Exchange_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 requerstid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requerstid_)));
          set_has_requerstid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Exchange_Exchange_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 requerstid = 1;
  if (has_requerstid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requerstid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Exchange_Exchange_request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 requerstid = 1;
  if (has_requerstid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requerstid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Exchange_Exchange_request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 requerstid = 1;
    if (has_requerstid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->requerstid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Exchange_Exchange_request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Exchange_Exchange_request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Exchange_Exchange_request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Exchange_Exchange_request::MergeFrom(const GM_Exchange_Exchange_request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requerstid()) {
      set_requerstid(from.requerstid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Exchange_Exchange_request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Exchange_Exchange_request::CopyFrom(const GM_Exchange_Exchange_request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Exchange_Exchange_request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_Exchange_Exchange_request::Swap(GM_Exchange_Exchange_request* other) {
  if (other != this) {
    std::swap(requerstid_, other->requerstid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Exchange_Exchange_request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Exchange_Exchange_request_descriptor_;
  metadata.reflection = GM_Exchange_Exchange_request_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Exchange_Exchange_return::kErroridFieldNumber;
#endif  // !_MSC_VER

GM_Exchange_Exchange_return::GM_Exchange_Exchange_return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Exchange_Exchange_return::InitAsDefaultInstance() {
}

GM_Exchange_Exchange_return::GM_Exchange_Exchange_return(const GM_Exchange_Exchange_return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Exchange_Exchange_return::SharedCtor() {
  _cached_size_ = 0;
  errorid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Exchange_Exchange_return::~GM_Exchange_Exchange_return() {
  SharedDtor();
}

void GM_Exchange_Exchange_return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Exchange_Exchange_return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Exchange_Exchange_return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Exchange_Exchange_return_descriptor_;
}

const GM_Exchange_Exchange_return& GM_Exchange_Exchange_return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exchange_2etxt();
  return *default_instance_;
}

GM_Exchange_Exchange_return* GM_Exchange_Exchange_return::default_instance_ = NULL;

GM_Exchange_Exchange_return* GM_Exchange_Exchange_return::New() const {
  return new GM_Exchange_Exchange_return;
}

void GM_Exchange_Exchange_return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    errorid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Exchange_Exchange_return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errorid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorid_)));
          set_has_errorid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Exchange_Exchange_return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 errorid = 1;
  if (has_errorid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Exchange_Exchange_return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 errorid = 1;
  if (has_errorid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Exchange_Exchange_return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 errorid = 1;
    if (has_errorid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->errorid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Exchange_Exchange_return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Exchange_Exchange_return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Exchange_Exchange_return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Exchange_Exchange_return::MergeFrom(const GM_Exchange_Exchange_return& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorid()) {
      set_errorid(from.errorid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Exchange_Exchange_return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Exchange_Exchange_return::CopyFrom(const GM_Exchange_Exchange_return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Exchange_Exchange_return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_Exchange_Exchange_return::Swap(GM_Exchange_Exchange_return* other) {
  if (other != this) {
    std::swap(errorid_, other->errorid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Exchange_Exchange_return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Exchange_Exchange_return_descriptor_;
  metadata.reflection = GM_Exchange_Exchange_return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Relief_login_return::kTimesFieldNumber;
const int GM_Relief_login_return::kAllFieldNumber;
#endif  // !_MSC_VER

GM_Relief_login_return::GM_Relief_login_return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Relief_login_return::InitAsDefaultInstance() {
}

GM_Relief_login_return::GM_Relief_login_return(const GM_Relief_login_return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Relief_login_return::SharedCtor() {
  _cached_size_ = 0;
  times_ = 0;
  all_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Relief_login_return::~GM_Relief_login_return() {
  SharedDtor();
}

void GM_Relief_login_return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Relief_login_return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Relief_login_return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Relief_login_return_descriptor_;
}

const GM_Relief_login_return& GM_Relief_login_return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exchange_2etxt();
  return *default_instance_;
}

GM_Relief_login_return* GM_Relief_login_return::default_instance_ = NULL;

GM_Relief_login_return* GM_Relief_login_return::New() const {
  return new GM_Relief_login_return;
}

void GM_Relief_login_return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    times_ = 0;
    all_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Relief_login_return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &times_)));
          set_has_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_all;
        break;
      }

      // optional int32 all = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_all:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &all_)));
          set_has_all();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Relief_login_return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 times = 1;
  if (has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->times(), output);
  }

  // optional int32 all = 2;
  if (has_all()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->all(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Relief_login_return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 times = 1;
  if (has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->times(), target);
  }

  // optional int32 all = 2;
  if (has_all()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->all(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Relief_login_return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 times = 1;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->times());
    }

    // optional int32 all = 2;
    if (has_all()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->all());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Relief_login_return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Relief_login_return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Relief_login_return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Relief_login_return::MergeFrom(const GM_Relief_login_return& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_times()) {
      set_times(from.times());
    }
    if (from.has_all()) {
      set_all(from.all());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Relief_login_return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Relief_login_return::CopyFrom(const GM_Relief_login_return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Relief_login_return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_Relief_login_return::Swap(GM_Relief_login_return* other) {
  if (other != this) {
    std::swap(times_, other->times_);
    std::swap(all_, other->all_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Relief_login_return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Relief_login_return_descriptor_;
  metadata.reflection = GM_Relief_login_return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Relief_get_return::kErroridFieldNumber;
#endif  // !_MSC_VER

GM_Relief_get_return::GM_Relief_get_return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Relief_get_return::InitAsDefaultInstance() {
}

GM_Relief_get_return::GM_Relief_get_return(const GM_Relief_get_return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Relief_get_return::SharedCtor() {
  _cached_size_ = 0;
  errorid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Relief_get_return::~GM_Relief_get_return() {
  SharedDtor();
}

void GM_Relief_get_return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Relief_get_return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Relief_get_return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Relief_get_return_descriptor_;
}

const GM_Relief_get_return& GM_Relief_get_return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exchange_2etxt();
  return *default_instance_;
}

GM_Relief_get_return* GM_Relief_get_return::default_instance_ = NULL;

GM_Relief_get_return* GM_Relief_get_return::New() const {
  return new GM_Relief_get_return;
}

void GM_Relief_get_return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    errorid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Relief_get_return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errorid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorid_)));
          set_has_errorid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Relief_get_return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 errorid = 1;
  if (has_errorid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Relief_get_return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 errorid = 1;
  if (has_errorid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Relief_get_return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 errorid = 1;
    if (has_errorid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->errorid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Relief_get_return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Relief_get_return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Relief_get_return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Relief_get_return::MergeFrom(const GM_Relief_get_return& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorid()) {
      set_errorid(from.errorid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Relief_get_return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Relief_get_return::CopyFrom(const GM_Relief_get_return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Relief_get_return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_Relief_get_return::Swap(GM_Relief_get_return* other) {
  if (other != this) {
    std::swap(errorid_, other->errorid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Relief_get_return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Relief_get_return_descriptor_;
  metadata.reflection = GM_Relief_get_return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_ExchangeInfo::kRoleidFieldNumber;
const int GM_ExchangeInfo::kNameFieldNumber;
const int GM_ExchangeInfo::kPhoneFieldNumber;
const int GM_ExchangeInfo::kQqFieldNumber;
const int GM_ExchangeInfo::kInviteFieldNumber;
const int GM_ExchangeInfo::kAddressFieldNumber;
const int GM_ExchangeInfo::kUsetimeFieldNumber;
#endif  // !_MSC_VER

GM_ExchangeInfo::GM_ExchangeInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_ExchangeInfo::InitAsDefaultInstance() {
}

GM_ExchangeInfo::GM_ExchangeInfo(const GM_ExchangeInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_ExchangeInfo::SharedCtor() {
  _cached_size_ = 0;
  roleid_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  qq_ = GOOGLE_LONGLONG(0);
  invite_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  usetime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_ExchangeInfo::~GM_ExchangeInfo() {
  SharedDtor();
}

void GM_ExchangeInfo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_;
  }
  if (invite_ != &::google::protobuf::internal::kEmptyString) {
    delete invite_;
  }
  if (address_ != &::google::protobuf::internal::kEmptyString) {
    delete address_;
  }
  if (this != default_instance_) {
  }
}

void GM_ExchangeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_ExchangeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_ExchangeInfo_descriptor_;
}

const GM_ExchangeInfo& GM_ExchangeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exchange_2etxt();
  return *default_instance_;
}

GM_ExchangeInfo* GM_ExchangeInfo::default_instance_ = NULL;

GM_ExchangeInfo* GM_ExchangeInfo::New() const {
  return new GM_ExchangeInfo;
}

void GM_ExchangeInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    roleid_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_phone()) {
      if (phone_ != &::google::protobuf::internal::kEmptyString) {
        phone_->clear();
      }
    }
    qq_ = GOOGLE_LONGLONG(0);
    if (has_invite()) {
      if (invite_ != &::google::protobuf::internal::kEmptyString) {
        invite_->clear();
      }
    }
    if (has_address()) {
      if (address_ != &::google::protobuf::internal::kEmptyString) {
        address_->clear();
      }
    }
    usetime_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_ExchangeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_phone;
        break;
      }

      // optional string phone = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_phone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_qq;
        break;
      }

      // optional int64 qq = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &qq_)));
          set_has_qq();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_invite;
        break;
      }

      // optional string invite = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_invite:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invite()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->invite().data(), this->invite().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_address;
        break;
      }

      // optional string address = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_usetime;
        break;
      }

      // optional int32 usetime = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_usetime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usetime_)));
          set_has_usetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_ExchangeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 roleid = 1;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional string phone = 3;
  if (has_phone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->phone(), output);
  }

  // optional int64 qq = 4;
  if (has_qq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->qq(), output);
  }

  // optional string invite = 5;
  if (has_invite()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->invite().data(), this->invite().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->invite(), output);
  }

  // optional string address = 6;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->address(), output);
  }

  // optional int32 usetime = 7;
  if (has_usetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->usetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_ExchangeInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 roleid = 1;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string phone = 3;
  if (has_phone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phone(), target);
  }

  // optional int64 qq = 4;
  if (has_qq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->qq(), target);
  }

  // optional string invite = 5;
  if (has_invite()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->invite().data(), this->invite().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->invite(), target);
  }

  // optional string address = 6;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->address(), target);
  }

  // optional int32 usetime = 7;
  if (has_usetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->usetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_ExchangeInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 roleid = 1;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleid());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string phone = 3;
    if (has_phone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone());
    }

    // optional int64 qq = 4;
    if (has_qq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->qq());
    }

    // optional string invite = 5;
    if (has_invite()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invite());
    }

    // optional string address = 6;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address());
    }

    // optional int32 usetime = 7;
    if (has_usetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->usetime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_ExchangeInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_ExchangeInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_ExchangeInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_ExchangeInfo::MergeFrom(const GM_ExchangeInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_phone()) {
      set_phone(from.phone());
    }
    if (from.has_qq()) {
      set_qq(from.qq());
    }
    if (from.has_invite()) {
      set_invite(from.invite());
    }
    if (from.has_address()) {
      set_address(from.address());
    }
    if (from.has_usetime()) {
      set_usetime(from.usetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_ExchangeInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_ExchangeInfo::CopyFrom(const GM_ExchangeInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_ExchangeInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_ExchangeInfo::Swap(GM_ExchangeInfo* other) {
  if (other != this) {
    std::swap(roleid_, other->roleid_);
    std::swap(name_, other->name_);
    std::swap(phone_, other->phone_);
    std::swap(qq_, other->qq_);
    std::swap(invite_, other->invite_);
    std::swap(address_, other->address_);
    std::swap(usetime_, other->usetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_ExchangeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_ExchangeInfo_descriptor_;
  metadata.reflection = GM_ExchangeInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Exchange_phone::kPhoneFieldNumber;
const int GM_Exchange_phone::kUsetimeFieldNumber;
#endif  // !_MSC_VER

GM_Exchange_phone::GM_Exchange_phone()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Exchange_phone::InitAsDefaultInstance() {
}

GM_Exchange_phone::GM_Exchange_phone(const GM_Exchange_phone& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Exchange_phone::SharedCtor() {
  _cached_size_ = 0;
  phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  usetime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Exchange_phone::~GM_Exchange_phone() {
  SharedDtor();
}

void GM_Exchange_phone::SharedDtor() {
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_;
  }
  if (this != default_instance_) {
  }
}

void GM_Exchange_phone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Exchange_phone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Exchange_phone_descriptor_;
}

const GM_Exchange_phone& GM_Exchange_phone::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exchange_2etxt();
  return *default_instance_;
}

GM_Exchange_phone* GM_Exchange_phone::default_instance_ = NULL;

GM_Exchange_phone* GM_Exchange_phone::New() const {
  return new GM_Exchange_phone;
}

void GM_Exchange_phone::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_phone()) {
      if (phone_ != &::google::protobuf::internal::kEmptyString) {
        phone_->clear();
      }
    }
    usetime_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Exchange_phone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string phone = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_usetime;
        break;
      }

      // optional int32 usetime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_usetime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usetime_)));
          set_has_usetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Exchange_phone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string phone = 1;
  if (has_phone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->phone(), output);
  }

  // optional int32 usetime = 2;
  if (has_usetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->usetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Exchange_phone::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string phone = 1;
  if (has_phone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->phone(), target);
  }

  // optional int32 usetime = 2;
  if (has_usetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->usetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Exchange_phone::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string phone = 1;
    if (has_phone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone());
    }

    // optional int32 usetime = 2;
    if (has_usetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->usetime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Exchange_phone::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Exchange_phone* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Exchange_phone*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Exchange_phone::MergeFrom(const GM_Exchange_phone& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_phone()) {
      set_phone(from.phone());
    }
    if (from.has_usetime()) {
      set_usetime(from.usetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Exchange_phone::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Exchange_phone::CopyFrom(const GM_Exchange_phone& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Exchange_phone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_Exchange_phone::Swap(GM_Exchange_phone* other) {
  if (other != this) {
    std::swap(phone_, other->phone_);
    std::swap(usetime_, other->usetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Exchange_phone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Exchange_phone_descriptor_;
  metadata.reflection = GM_Exchange_phone_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_ExchangeInfo_return::kIsBindFieldNumber;
const int GM_ExchangeInfo_return::kDataFieldNumber;
const int GM_ExchangeInfo_return::kDataPhoneFieldNumber;
#endif  // !_MSC_VER

GM_ExchangeInfo_return::GM_ExchangeInfo_return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_ExchangeInfo_return::InitAsDefaultInstance() {
}

GM_ExchangeInfo_return::GM_ExchangeInfo_return(const GM_ExchangeInfo_return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_ExchangeInfo_return::SharedCtor() {
  _cached_size_ = 0;
  isbind_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_ExchangeInfo_return::~GM_ExchangeInfo_return() {
  SharedDtor();
}

void GM_ExchangeInfo_return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_ExchangeInfo_return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_ExchangeInfo_return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_ExchangeInfo_return_descriptor_;
}

const GM_ExchangeInfo_return& GM_ExchangeInfo_return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exchange_2etxt();
  return *default_instance_;
}

GM_ExchangeInfo_return* GM_ExchangeInfo_return::default_instance_ = NULL;

GM_ExchangeInfo_return* GM_ExchangeInfo_return::New() const {
  return new GM_ExchangeInfo_return;
}

void GM_ExchangeInfo_return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    isbind_ = 0;
  }
  data_.Clear();
  dataphone_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_ExchangeInfo_return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 isBind = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isbind_)));
          set_has_isbind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .GM_ExchangeInfo data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectTag(26)) goto parse_dataPhone;
        break;
      }

      // repeated .GM_Exchange_phone dataPhone = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dataPhone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dataphone()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_dataPhone;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_ExchangeInfo_return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 isBind = 1;
  if (has_isbind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->isbind(), output);
  }

  // repeated .GM_ExchangeInfo data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // repeated .GM_Exchange_phone dataPhone = 3;
  for (int i = 0; i < this->dataphone_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dataphone(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_ExchangeInfo_return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 isBind = 1;
  if (has_isbind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->isbind(), target);
  }

  // repeated .GM_ExchangeInfo data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  // repeated .GM_Exchange_phone dataPhone = 3;
  for (int i = 0; i < this->dataphone_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->dataphone(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_ExchangeInfo_return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 isBind = 1;
    if (has_isbind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isbind());
    }

  }
  // repeated .GM_ExchangeInfo data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  // repeated .GM_Exchange_phone dataPhone = 3;
  total_size += 1 * this->dataphone_size();
  for (int i = 0; i < this->dataphone_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dataphone(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_ExchangeInfo_return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_ExchangeInfo_return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_ExchangeInfo_return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_ExchangeInfo_return::MergeFrom(const GM_ExchangeInfo_return& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  dataphone_.MergeFrom(from.dataphone_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_isbind()) {
      set_isbind(from.isbind());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_ExchangeInfo_return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_ExchangeInfo_return::CopyFrom(const GM_ExchangeInfo_return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_ExchangeInfo_return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < data_size(); i++) {
    if (!this->data(i).IsInitialized()) return false;
  }
  for (int i = 0; i < dataphone_size(); i++) {
    if (!this->dataphone(i).IsInitialized()) return false;
  }
  return true;
}

void GM_ExchangeInfo_return::Swap(GM_ExchangeInfo_return* other) {
  if (other != this) {
    std::swap(isbind_, other->isbind_);
    data_.Swap(&other->data_);
    dataphone_.Swap(&other->dataphone_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_ExchangeInfo_return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_ExchangeInfo_return_descriptor_;
  metadata.reflection = GM_ExchangeInfo_return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_EXchangeInfo_exchange_return::kErroridFieldNumber;
const int GM_EXchangeInfo_exchange_return::kDataFieldNumber;
#endif  // !_MSC_VER

GM_EXchangeInfo_exchange_return::GM_EXchangeInfo_exchange_return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_EXchangeInfo_exchange_return::InitAsDefaultInstance() {
  data_ = const_cast< ::GM_ExchangeInfo*>(&::GM_ExchangeInfo::default_instance());
}

GM_EXchangeInfo_exchange_return::GM_EXchangeInfo_exchange_return(const GM_EXchangeInfo_exchange_return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_EXchangeInfo_exchange_return::SharedCtor() {
  _cached_size_ = 0;
  errorid_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_EXchangeInfo_exchange_return::~GM_EXchangeInfo_exchange_return() {
  SharedDtor();
}

void GM_EXchangeInfo_exchange_return::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void GM_EXchangeInfo_exchange_return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_EXchangeInfo_exchange_return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_EXchangeInfo_exchange_return_descriptor_;
}

const GM_EXchangeInfo_exchange_return& GM_EXchangeInfo_exchange_return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exchange_2etxt();
  return *default_instance_;
}

GM_EXchangeInfo_exchange_return* GM_EXchangeInfo_exchange_return::default_instance_ = NULL;

GM_EXchangeInfo_exchange_return* GM_EXchangeInfo_exchange_return::New() const {
  return new GM_EXchangeInfo_exchange_return;
}

void GM_EXchangeInfo_exchange_return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    errorid_ = 0;
    if (has_data()) {
      if (data_ != NULL) data_->::GM_ExchangeInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_EXchangeInfo_exchange_return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errorid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorid_)));
          set_has_errorid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .GM_ExchangeInfo data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_EXchangeInfo_exchange_return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 errorid = 1;
  if (has_errorid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorid(), output);
  }

  // optional .GM_ExchangeInfo data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_EXchangeInfo_exchange_return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 errorid = 1;
  if (has_errorid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorid(), target);
  }

  // optional .GM_ExchangeInfo data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_EXchangeInfo_exchange_return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 errorid = 1;
    if (has_errorid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->errorid());
    }

    // optional .GM_ExchangeInfo data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_EXchangeInfo_exchange_return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_EXchangeInfo_exchange_return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_EXchangeInfo_exchange_return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_EXchangeInfo_exchange_return::MergeFrom(const GM_EXchangeInfo_exchange_return& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorid()) {
      set_errorid(from.errorid());
    }
    if (from.has_data()) {
      mutable_data()->::GM_ExchangeInfo::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_EXchangeInfo_exchange_return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_EXchangeInfo_exchange_return::CopyFrom(const GM_EXchangeInfo_exchange_return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_EXchangeInfo_exchange_return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void GM_EXchangeInfo_exchange_return::Swap(GM_EXchangeInfo_exchange_return* other) {
  if (other != this) {
    std::swap(errorid_, other->errorid_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_EXchangeInfo_exchange_return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_EXchangeInfo_exchange_return_descriptor_;
  metadata.reflection = GM_EXchangeInfo_exchange_return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Exchange_self::kRoleidFieldNumber;
const int GM_Exchange_self::kStateFieldNumber;
const int GM_Exchange_self::kObjectidFieldNumber;
const int GM_Exchange_self::kNumFieldNumber;
const int GM_Exchange_self::kCreatetimeFieldNumber;
const int GM_Exchange_self::kTagFieldNumber;
const int GM_Exchange_self::kNameFieldNumber;
const int GM_Exchange_self::kPhoneFieldNumber;
const int GM_Exchange_self::kAddressFieldNumber;
const int GM_Exchange_self::kPhonechargeFieldNumber;
const int GM_Exchange_self::kErroridFieldNumber;
#endif  // !_MSC_VER

GM_Exchange_self::GM_Exchange_self()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Exchange_self::InitAsDefaultInstance() {
}

GM_Exchange_self::GM_Exchange_self(const GM_Exchange_self& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Exchange_self::SharedCtor() {
  _cached_size_ = 0;
  roleid_ = 0;
  state_ = 0;
  objectid_ = 0;
  num_ = 0;
  createtime_ = 0;
  tag_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  phonecharge_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  errorid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Exchange_self::~GM_Exchange_self() {
  SharedDtor();
}

void GM_Exchange_self::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_;
  }
  if (address_ != &::google::protobuf::internal::kEmptyString) {
    delete address_;
  }
  if (phonecharge_ != &::google::protobuf::internal::kEmptyString) {
    delete phonecharge_;
  }
  if (this != default_instance_) {
  }
}

void GM_Exchange_self::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Exchange_self::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Exchange_self_descriptor_;
}

const GM_Exchange_self& GM_Exchange_self::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exchange_2etxt();
  return *default_instance_;
}

GM_Exchange_self* GM_Exchange_self::default_instance_ = NULL;

GM_Exchange_self* GM_Exchange_self::New() const {
  return new GM_Exchange_self;
}

void GM_Exchange_self::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    roleid_ = 0;
    state_ = 0;
    objectid_ = 0;
    num_ = 0;
    createtime_ = 0;
    tag_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_phone()) {
      if (phone_ != &::google::protobuf::internal::kEmptyString) {
        phone_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_address()) {
      if (address_ != &::google::protobuf::internal::kEmptyString) {
        address_->clear();
      }
    }
    if (has_phonecharge()) {
      if (phonecharge_ != &::google::protobuf::internal::kEmptyString) {
        phonecharge_->clear();
      }
    }
    errorid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Exchange_self::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // optional int32 state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_objectid;
        break;
      }

      // optional int32 objectid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_objectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_num;
        break;
      }

      // optional int32 num = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_createtime;
        break;
      }

      // optional int32 createtime = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_createtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &createtime_)));
          set_has_createtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_tag;
        break;
      }

      // optional int32 tag = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag_)));
          set_has_tag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_name;
        break;
      }

      // optional string name = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_phone;
        break;
      }

      // optional string phone = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_phone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_address;
        break;
      }

      // optional string address = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_phonecharge;
        break;
      }

      // optional string phonecharge = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_phonecharge:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonecharge()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->phonecharge().data(), this->phonecharge().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_errorid;
        break;
      }

      // optional int32 errorid = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_errorid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorid_)));
          set_has_errorid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Exchange_self::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 roleid = 1;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // optional int32 state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->state(), output);
  }

  // optional int32 objectid = 3;
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->objectid(), output);
  }

  // optional int32 num = 4;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->num(), output);
  }

  // optional int32 createtime = 5;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->createtime(), output);
  }

  // optional int32 tag = 6;
  if (has_tag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->tag(), output);
  }

  // optional string name = 7;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->name(), output);
  }

  // optional string phone = 8;
  if (has_phone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->phone(), output);
  }

  // optional string address = 9;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->address(), output);
  }

  // optional string phonecharge = 10;
  if (has_phonecharge()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phonecharge().data(), this->phonecharge().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->phonecharge(), output);
  }

  // optional int32 errorid = 11;
  if (has_errorid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->errorid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Exchange_self::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 roleid = 1;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // optional int32 state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->state(), target);
  }

  // optional int32 objectid = 3;
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->objectid(), target);
  }

  // optional int32 num = 4;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->num(), target);
  }

  // optional int32 createtime = 5;
  if (has_createtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->createtime(), target);
  }

  // optional int32 tag = 6;
  if (has_tag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->tag(), target);
  }

  // optional string name = 7;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  // optional string phone = 8;
  if (has_phone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->phone(), target);
  }

  // optional string address = 9;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->address(), target);
  }

  // optional string phonecharge = 10;
  if (has_phonecharge()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phonecharge().data(), this->phonecharge().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->phonecharge(), target);
  }

  // optional int32 errorid = 11;
  if (has_errorid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->errorid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Exchange_self::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 roleid = 1;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleid());
    }

    // optional int32 state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

    // optional int32 objectid = 3;
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objectid());
    }

    // optional int32 num = 4;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

    // optional int32 createtime = 5;
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->createtime());
    }

    // optional int32 tag = 6;
    if (has_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tag());
    }

    // optional string name = 7;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string phone = 8;
    if (has_phone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string address = 9;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address());
    }

    // optional string phonecharge = 10;
    if (has_phonecharge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonecharge());
    }

    // optional int32 errorid = 11;
    if (has_errorid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->errorid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Exchange_self::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Exchange_self* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Exchange_self*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Exchange_self::MergeFrom(const GM_Exchange_self& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_createtime()) {
      set_createtime(from.createtime());
    }
    if (from.has_tag()) {
      set_tag(from.tag());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_phone()) {
      set_phone(from.phone());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_address()) {
      set_address(from.address());
    }
    if (from.has_phonecharge()) {
      set_phonecharge(from.phonecharge());
    }
    if (from.has_errorid()) {
      set_errorid(from.errorid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Exchange_self::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Exchange_self::CopyFrom(const GM_Exchange_self& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Exchange_self::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_Exchange_self::Swap(GM_Exchange_self* other) {
  if (other != this) {
    std::swap(roleid_, other->roleid_);
    std::swap(state_, other->state_);
    std::swap(objectid_, other->objectid_);
    std::swap(num_, other->num_);
    std::swap(createtime_, other->createtime_);
    std::swap(tag_, other->tag_);
    std::swap(name_, other->name_);
    std::swap(phone_, other->phone_);
    std::swap(address_, other->address_);
    std::swap(phonecharge_, other->phonecharge_);
    std::swap(errorid_, other->errorid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Exchange_self::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Exchange_self_descriptor_;
  metadata.reflection = GM_Exchange_self_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Exchange_self_return::kRoleidFieldNumber;
const int GM_Exchange_self_return::kDataFieldNumber;
#endif  // !_MSC_VER

GM_Exchange_self_return::GM_Exchange_self_return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Exchange_self_return::InitAsDefaultInstance() {
}

GM_Exchange_self_return::GM_Exchange_self_return(const GM_Exchange_self_return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Exchange_self_return::SharedCtor() {
  _cached_size_ = 0;
  roleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Exchange_self_return::~GM_Exchange_self_return() {
  SharedDtor();
}

void GM_Exchange_self_return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Exchange_self_return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Exchange_self_return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Exchange_self_return_descriptor_;
}

const GM_Exchange_self_return& GM_Exchange_self_return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exchange_2etxt();
  return *default_instance_;
}

GM_Exchange_self_return* GM_Exchange_self_return::default_instance_ = NULL;

GM_Exchange_self_return* GM_Exchange_self_return::New() const {
  return new GM_Exchange_self_return;
}

void GM_Exchange_self_return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    roleid_ = 0;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Exchange_self_return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .GM_Exchange_self data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Exchange_self_return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 roleid = 1;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // repeated .GM_Exchange_self data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Exchange_self_return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 roleid = 1;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // repeated .GM_Exchange_self data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Exchange_self_return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 roleid = 1;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleid());
    }

  }
  // repeated .GM_Exchange_self data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Exchange_self_return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Exchange_self_return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Exchange_self_return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Exchange_self_return::MergeFrom(const GM_Exchange_self_return& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Exchange_self_return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Exchange_self_return::CopyFrom(const GM_Exchange_self_return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Exchange_self_return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < data_size(); i++) {
    if (!this->data(i).IsInitialized()) return false;
  }
  return true;
}

void GM_Exchange_self_return::Swap(GM_Exchange_self_return* other) {
  if (other != this) {
    std::swap(roleid_, other->roleid_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Exchange_self_return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Exchange_self_return_descriptor_;
  metadata.reflection = GM_Exchange_self_return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_EXchange_info_begin_return::kRoleidFieldNumber;
const int GM_EXchange_info_begin_return::kDataFieldNumber;
#endif  // !_MSC_VER

GM_EXchange_info_begin_return::GM_EXchange_info_begin_return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_EXchange_info_begin_return::InitAsDefaultInstance() {
}

GM_EXchange_info_begin_return::GM_EXchange_info_begin_return(const GM_EXchange_info_begin_return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_EXchange_info_begin_return::SharedCtor() {
  _cached_size_ = 0;
  roleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_EXchange_info_begin_return::~GM_EXchange_info_begin_return() {
  SharedDtor();
}

void GM_EXchange_info_begin_return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_EXchange_info_begin_return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_EXchange_info_begin_return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_EXchange_info_begin_return_descriptor_;
}

const GM_EXchange_info_begin_return& GM_EXchange_info_begin_return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exchange_2etxt();
  return *default_instance_;
}

GM_EXchange_info_begin_return* GM_EXchange_info_begin_return::default_instance_ = NULL;

GM_EXchange_info_begin_return* GM_EXchange_info_begin_return::New() const {
  return new GM_EXchange_info_begin_return;
}

void GM_EXchange_info_begin_return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    roleid_ = 0;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_EXchange_info_begin_return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .GM_Exchange_objectinfo data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_EXchange_info_begin_return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 roleid = 1;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // repeated .GM_Exchange_objectinfo data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_EXchange_info_begin_return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 roleid = 1;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // repeated .GM_Exchange_objectinfo data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_EXchange_info_begin_return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 roleid = 1;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleid());
    }

  }
  // repeated .GM_Exchange_objectinfo data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_EXchange_info_begin_return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_EXchange_info_begin_return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_EXchange_info_begin_return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_EXchange_info_begin_return::MergeFrom(const GM_EXchange_info_begin_return& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_EXchange_info_begin_return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_EXchange_info_begin_return::CopyFrom(const GM_EXchange_info_begin_return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_EXchange_info_begin_return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < data_size(); i++) {
    if (!this->data(i).IsInitialized()) return false;
  }
  return true;
}

void GM_EXchange_info_begin_return::Swap(GM_EXchange_info_begin_return* other) {
  if (other != this) {
    std::swap(roleid_, other->roleid_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_EXchange_info_begin_return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_EXchange_info_begin_return_descriptor_;
  metadata.reflection = GM_EXchange_info_begin_return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Exchange_objectinfo::kTagFieldNumber;
const int GM_Exchange_objectinfo::kObjectidFieldNumber;
const int GM_Exchange_objectinfo::kNumFieldNumber;
const int GM_Exchange_objectinfo::kCostobjectidFieldNumber;
const int GM_Exchange_objectinfo::kCostnumFieldNumber;
const int GM_Exchange_objectinfo::kRankFieldNumber;
const int GM_Exchange_objectinfo::kIdFieldNumber;
const int GM_Exchange_objectinfo::kRemarkFieldNumber;
const int GM_Exchange_objectinfo::kWwwFieldNumber;
#endif  // !_MSC_VER

GM_Exchange_objectinfo::GM_Exchange_objectinfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Exchange_objectinfo::InitAsDefaultInstance() {
}

GM_Exchange_objectinfo::GM_Exchange_objectinfo(const GM_Exchange_objectinfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Exchange_objectinfo::SharedCtor() {
  _cached_size_ = 0;
  tag_ = 0;
  objectid_ = 0;
  num_ = 0;
  costobjectid_ = 0;
  costnum_ = 0;
  rank_ = 0;
  id_ = 0;
  remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  www_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Exchange_objectinfo::~GM_Exchange_objectinfo() {
  SharedDtor();
}

void GM_Exchange_objectinfo::SharedDtor() {
  if (remark_ != &::google::protobuf::internal::kEmptyString) {
    delete remark_;
  }
  if (www_ != &::google::protobuf::internal::kEmptyString) {
    delete www_;
  }
  if (this != default_instance_) {
  }
}

void GM_Exchange_objectinfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Exchange_objectinfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Exchange_objectinfo_descriptor_;
}

const GM_Exchange_objectinfo& GM_Exchange_objectinfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exchange_2etxt();
  return *default_instance_;
}

GM_Exchange_objectinfo* GM_Exchange_objectinfo::default_instance_ = NULL;

GM_Exchange_objectinfo* GM_Exchange_objectinfo::New() const {
  return new GM_Exchange_objectinfo;
}

void GM_Exchange_objectinfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tag_ = 0;
    objectid_ = 0;
    num_ = 0;
    costobjectid_ = 0;
    costnum_ = 0;
    rank_ = 0;
    id_ = 0;
    if (has_remark()) {
      if (remark_ != &::google::protobuf::internal::kEmptyString) {
        remark_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_www()) {
      if (www_ != &::google::protobuf::internal::kEmptyString) {
        www_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Exchange_objectinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 tag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag_)));
          set_has_tag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_objectid;
        break;
      }

      // optional int32 objectid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_objectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectid_)));
          set_has_objectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_num;
        break;
      }

      // optional int32 num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_costobjectid;
        break;
      }

      // optional int32 costobjectid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_costobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &costobjectid_)));
          set_has_costobjectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_costnum;
        break;
      }

      // optional int32 costnum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_costnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &costnum_)));
          set_has_costnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_rank;
        break;
      }

      // optional int32 rank = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_id;
        break;
      }

      // optional int32 id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_remark;
        break;
      }

      // optional string remark = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_remark:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->remark().data(), this->remark().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_www;
        break;
      }

      // optional string www = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_www:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_www()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->www().data(), this->www().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Exchange_objectinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 tag = 1;
  if (has_tag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tag(), output);
  }

  // optional int32 objectid = 2;
  if (has_objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objectid(), output);
  }

  // optional int32 num = 3;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num(), output);
  }

  // optional int32 costobjectid = 4;
  if (has_costobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->costobjectid(), output);
  }

  // optional int32 costnum = 5;
  if (has_costnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->costnum(), output);
  }

  // optional int32 rank = 6;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->rank(), output);
  }

  // optional int32 id = 7;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->id(), output);
  }

  // optional string remark = 8;
  if (has_remark()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->remark().data(), this->remark().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->remark(), output);
  }

  // optional string www = 9;
  if (has_www()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->www().data(), this->www().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->www(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Exchange_objectinfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 tag = 1;
  if (has_tag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tag(), target);
  }

  // optional int32 objectid = 2;
  if (has_objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objectid(), target);
  }

  // optional int32 num = 3;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num(), target);
  }

  // optional int32 costobjectid = 4;
  if (has_costobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->costobjectid(), target);
  }

  // optional int32 costnum = 5;
  if (has_costnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->costnum(), target);
  }

  // optional int32 rank = 6;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->rank(), target);
  }

  // optional int32 id = 7;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->id(), target);
  }

  // optional string remark = 8;
  if (has_remark()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->remark().data(), this->remark().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->remark(), target);
  }

  // optional string www = 9;
  if (has_www()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->www().data(), this->www().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->www(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Exchange_objectinfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 tag = 1;
    if (has_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tag());
    }

    // optional int32 objectid = 2;
    if (has_objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objectid());
    }

    // optional int32 num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

    // optional int32 costobjectid = 4;
    if (has_costobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->costobjectid());
    }

    // optional int32 costnum = 5;
    if (has_costnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->costnum());
    }

    // optional int32 rank = 6;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank());
    }

    // optional int32 id = 7;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string remark = 8;
    if (has_remark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->remark());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string www = 9;
    if (has_www()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->www());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Exchange_objectinfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Exchange_objectinfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Exchange_objectinfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Exchange_objectinfo::MergeFrom(const GM_Exchange_objectinfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tag()) {
      set_tag(from.tag());
    }
    if (from.has_objectid()) {
      set_objectid(from.objectid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_costobjectid()) {
      set_costobjectid(from.costobjectid());
    }
    if (from.has_costnum()) {
      set_costnum(from.costnum());
    }
    if (from.has_rank()) {
      set_rank(from.rank());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_remark()) {
      set_remark(from.remark());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_www()) {
      set_www(from.www());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Exchange_objectinfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Exchange_objectinfo::CopyFrom(const GM_Exchange_objectinfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Exchange_objectinfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_Exchange_objectinfo::Swap(GM_Exchange_objectinfo* other) {
  if (other != this) {
    std::swap(tag_, other->tag_);
    std::swap(objectid_, other->objectid_);
    std::swap(num_, other->num_);
    std::swap(costobjectid_, other->costobjectid_);
    std::swap(costnum_, other->costnum_);
    std::swap(rank_, other->rank_);
    std::swap(id_, other->id_);
    std::swap(remark_, other->remark_);
    std::swap(www_, other->www_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Exchange_objectinfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Exchange_objectinfo_descriptor_;
  metadata.reflection = GM_Exchange_objectinfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
