// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: generalize.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "generalize.txt.pb.h"
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GM_Generalize_Code_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Generalize_Code_Return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Generalize_Code_Data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Generalize_Code_Data_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Generalize_Feedback_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Generalize_Feedback_Return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Feedback_One_Data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Feedback_One_Data_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Feedback_Two_Data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Feedback_Two_Data_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Generalize_GetReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Generalize_GetReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Generalize_GetReward_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Generalize_GetReward_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Generalize_Bind_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Generalize_Bind_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Generalize_Bind_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Generalize_Bind_Return_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Generalize_Center_Data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Generalize_Center_Data_reflection_ = NULL;
const ::google::protobuf::Descriptor* GM_Generalize_Center_One_Data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GM_Generalize_Center_One_Data_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_generalize_2etxt() {
  protobuf_AddDesc_generalize_2etxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "generalize.txt");
  GOOGLE_CHECK(file != NULL);
  GM_Generalize_Code_Return_descriptor_ = file->message_type(0);
  static const int GM_Generalize_Code_Return_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Code_Return, m_getgold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Code_Return, m_totalgold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Code_Return, m_codedata_),
  };
  GM_Generalize_Code_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Generalize_Code_Return_descriptor_,
      GM_Generalize_Code_Return::default_instance_,
      GM_Generalize_Code_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Code_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Code_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Generalize_Code_Return));
  GM_Generalize_Code_Data_descriptor_ = file->message_type(1);
  static const int GM_Generalize_Code_Data_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Code_Data, m_roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Code_Data, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Code_Data, m_headid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Code_Data, m_time_),
  };
  GM_Generalize_Code_Data_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Generalize_Code_Data_descriptor_,
      GM_Generalize_Code_Data::default_instance_,
      GM_Generalize_Code_Data_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Code_Data, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Code_Data, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Generalize_Code_Data));
  GM_Generalize_Feedback_Return_descriptor_ = file->message_type(2);
  static const int GM_Generalize_Feedback_Return_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Feedback_Return, m_hasgetone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Feedback_Return, m_cangetone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Feedback_Return, m_hasgettwo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Feedback_Return, m_cangettwo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Feedback_Return, m_viplevelone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Feedback_Return, m_vipleveltwo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Feedback_Return, m_feedbackone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Feedback_Return, m_feedbacktwo_),
  };
  GM_Generalize_Feedback_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Generalize_Feedback_Return_descriptor_,
      GM_Generalize_Feedback_Return::default_instance_,
      GM_Generalize_Feedback_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Feedback_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Feedback_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Generalize_Feedback_Return));
  GM_Feedback_One_Data_descriptor_ = file->message_type(3);
  static const int GM_Feedback_One_Data_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Feedback_One_Data, m_roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Feedback_One_Data, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Feedback_One_Data, m_headid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Feedback_One_Data, m_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Feedback_One_Data, m_viplevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Feedback_One_Data, m_canget_),
  };
  GM_Feedback_One_Data_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Feedback_One_Data_descriptor_,
      GM_Feedback_One_Data::default_instance_,
      GM_Feedback_One_Data_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Feedback_One_Data, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Feedback_One_Data, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Feedback_One_Data));
  GM_Feedback_Two_Data_descriptor_ = file->message_type(4);
  static const int GM_Feedback_Two_Data_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Feedback_Two_Data, m_roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Feedback_Two_Data, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Feedback_Two_Data, m_headid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Feedback_Two_Data, m_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Feedback_Two_Data, m_viplevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Feedback_Two_Data, m_canget_),
  };
  GM_Feedback_Two_Data_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Feedback_Two_Data_descriptor_,
      GM_Feedback_Two_Data::default_instance_,
      GM_Feedback_Two_Data_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Feedback_Two_Data, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Feedback_Two_Data, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Feedback_Two_Data));
  GM_Generalize_GetReward_descriptor_ = file->message_type(5);
  static const int GM_Generalize_GetReward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_GetReward, m_tag_),
  };
  GM_Generalize_GetReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Generalize_GetReward_descriptor_,
      GM_Generalize_GetReward::default_instance_,
      GM_Generalize_GetReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_GetReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_GetReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Generalize_GetReward));
  GM_Generalize_GetReward_Result_descriptor_ = file->message_type(6);
  static const int GM_Generalize_GetReward_Result_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_GetReward_Result, m_tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_GetReward_Result, m_result_),
  };
  GM_Generalize_GetReward_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Generalize_GetReward_Result_descriptor_,
      GM_Generalize_GetReward_Result::default_instance_,
      GM_Generalize_GetReward_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_GetReward_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_GetReward_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Generalize_GetReward_Result));
  GM_Generalize_Bind_descriptor_ = file->message_type(7);
  static const int GM_Generalize_Bind_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Bind, m_bindid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Bind, m_roleid_),
  };
  GM_Generalize_Bind_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Generalize_Bind_descriptor_,
      GM_Generalize_Bind::default_instance_,
      GM_Generalize_Bind_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Bind, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Bind, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Generalize_Bind));
  GM_Generalize_Bind_Return_descriptor_ = file->message_type(8);
  static const int GM_Generalize_Bind_Return_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Bind_Return, m_result_),
  };
  GM_Generalize_Bind_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Generalize_Bind_Return_descriptor_,
      GM_Generalize_Bind_Return::default_instance_,
      GM_Generalize_Bind_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Bind_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Bind_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Generalize_Bind_Return));
  GM_Generalize_Center_Data_descriptor_ = file->message_type(9);
  static const int GM_Generalize_Center_Data_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Center_Data, m_roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Center_Data, m_onedata_),
  };
  GM_Generalize_Center_Data_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Generalize_Center_Data_descriptor_,
      GM_Generalize_Center_Data::default_instance_,
      GM_Generalize_Center_Data_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Center_Data, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Center_Data, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Generalize_Center_Data));
  GM_Generalize_Center_One_Data_descriptor_ = file->message_type(10);
  static const int GM_Generalize_Center_One_Data_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Center_One_Data, m_roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Center_One_Data, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Center_One_Data, m_headid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Center_One_Data, m_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Center_One_Data, m_viplevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Center_One_Data, m_timenow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Center_One_Data, m_canget_),
  };
  GM_Generalize_Center_One_Data_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GM_Generalize_Center_One_Data_descriptor_,
      GM_Generalize_Center_One_Data::default_instance_,
      GM_Generalize_Center_One_Data_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Center_One_Data, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GM_Generalize_Center_One_Data, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GM_Generalize_Center_One_Data));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_generalize_2etxt);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Generalize_Code_Return_descriptor_, &GM_Generalize_Code_Return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Generalize_Code_Data_descriptor_, &GM_Generalize_Code_Data::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Generalize_Feedback_Return_descriptor_, &GM_Generalize_Feedback_Return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Feedback_One_Data_descriptor_, &GM_Feedback_One_Data::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Feedback_Two_Data_descriptor_, &GM_Feedback_Two_Data::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Generalize_GetReward_descriptor_, &GM_Generalize_GetReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Generalize_GetReward_Result_descriptor_, &GM_Generalize_GetReward_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Generalize_Bind_descriptor_, &GM_Generalize_Bind::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Generalize_Bind_Return_descriptor_, &GM_Generalize_Bind_Return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Generalize_Center_Data_descriptor_, &GM_Generalize_Center_Data::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GM_Generalize_Center_One_Data_descriptor_, &GM_Generalize_Center_One_Data::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_generalize_2etxt() {
  delete GM_Generalize_Code_Return::default_instance_;
  delete GM_Generalize_Code_Return_reflection_;
  delete GM_Generalize_Code_Data::default_instance_;
  delete GM_Generalize_Code_Data_reflection_;
  delete GM_Generalize_Feedback_Return::default_instance_;
  delete GM_Generalize_Feedback_Return_reflection_;
  delete GM_Feedback_One_Data::default_instance_;
  delete GM_Feedback_One_Data_reflection_;
  delete GM_Feedback_Two_Data::default_instance_;
  delete GM_Feedback_Two_Data_reflection_;
  delete GM_Generalize_GetReward::default_instance_;
  delete GM_Generalize_GetReward_reflection_;
  delete GM_Generalize_GetReward_Result::default_instance_;
  delete GM_Generalize_GetReward_Result_reflection_;
  delete GM_Generalize_Bind::default_instance_;
  delete GM_Generalize_Bind_reflection_;
  delete GM_Generalize_Bind_Return::default_instance_;
  delete GM_Generalize_Bind_Return_reflection_;
  delete GM_Generalize_Center_Data::default_instance_;
  delete GM_Generalize_Center_Data_reflection_;
  delete GM_Generalize_Center_One_Data::default_instance_;
  delete GM_Generalize_Center_One_Data_reflection_;
}

void protobuf_AddDesc_generalize_2etxt() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016generalize.txt\"q\n\031GM_Generalize_Code_R"
    "eturn\022\021\n\tm_getgold\030\001 \002(\005\022\023\n\013m_totalgold\030"
    "\002 \002(\005\022,\n\nm_codedata\030\003 \003(\0132\030.GM_Generaliz"
    "e_Code_Data\"]\n\027GM_Generalize_Code_Data\022\020"
    "\n\010m_roleid\030\001 \001(\005\022\016\n\006m_name\030\002 \001(\t\022\020\n\010m_he"
    "adid\030\003 \001(\005\022\016\n\006m_time\030\004 \001(\005\"\375\001\n\035GM_Genera"
    "lize_Feedback_Return\022\023\n\013m_hasgetone\030\001 \002("
    "\005\022\023\n\013m_cangetone\030\002 \002(\005\022\023\n\013m_hasgettwo\030\003 "
    "\002(\005\022\023\n\013m_cangettwo\030\004 \002(\005\022\025\n\rm_viplevelon"
    "e\030\005 \002(\005\022\025\n\rm_vipleveltwo\030\006 \002(\005\022,\n\rm_feed"
    "backone\030\007 \003(\0132\025.GM_Feedback_One_Data\022,\n\r"
    "m_feedbacktwo\030\010 \003(\0132\025.GM_Feedback_Two_Da"
    "ta\"\201\001\n\024GM_Feedback_One_Data\022\020\n\010m_roleid\030"
    "\001 \001(\005\022\016\n\006m_name\030\002 \001(\t\022\020\n\010m_headid\030\003 \001(\005\022"
    "\017\n\007m_level\030\004 \001(\005\022\022\n\nm_viplevel\030\005 \001(\005\022\020\n\010"
    "m_canget\030\006 \001(\002\"\201\001\n\024GM_Feedback_Two_Data\022"
    "\020\n\010m_roleid\030\001 \001(\005\022\016\n\006m_name\030\002 \001(\t\022\020\n\010m_h"
    "eadid\030\003 \001(\005\022\017\n\007m_level\030\004 \001(\005\022\022\n\nm_viplev"
    "el\030\005 \001(\005\022\020\n\010m_canget\030\006 \001(\002\"(\n\027GM_General"
    "ize_GetReward\022\r\n\005m_tag\030\001 \002(\005\"A\n\036GM_Gener"
    "alize_GetReward_Result\022\r\n\005m_tag\030\001 \002(\005\022\020\n"
    "\010m_result\030\002 \002(\005\"8\n\022GM_Generalize_Bind\022\020\n"
    "\010m_bindid\030\001 \002(\005\022\020\n\010m_roleid\030\002 \002(\005\"-\n\031GM_"
    "Generalize_Bind_Return\022\020\n\010m_result\030\001 \002(\005"
    "\"`\n\031GM_Generalize_Center_Data\022\020\n\010m_rolei"
    "d\030\001 \002(\005\0221\n\tm_OneData\030\002 \003(\0132\036.GM_Generali"
    "ze_Center_One_Data\"\235\001\n\035GM_Generalize_Cen"
    "ter_One_Data\022\020\n\010m_roleid\030\001 \001(\005\022\016\n\006m_name"
    "\030\002 \001(\t\022\020\n\010m_headid\030\003 \001(\005\022\017\n\007m_level\030\004 \001("
    "\005\022\022\n\nm_viplevel\030\005 \001(\005\022\021\n\tm_timenow\030\006 \001(\005"
    "\022\020\n\010m_canget\030\007 \001(\002", 1218);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "generalize.txt", &protobuf_RegisterTypes);
  GM_Generalize_Code_Return::default_instance_ = new GM_Generalize_Code_Return();
  GM_Generalize_Code_Data::default_instance_ = new GM_Generalize_Code_Data();
  GM_Generalize_Feedback_Return::default_instance_ = new GM_Generalize_Feedback_Return();
  GM_Feedback_One_Data::default_instance_ = new GM_Feedback_One_Data();
  GM_Feedback_Two_Data::default_instance_ = new GM_Feedback_Two_Data();
  GM_Generalize_GetReward::default_instance_ = new GM_Generalize_GetReward();
  GM_Generalize_GetReward_Result::default_instance_ = new GM_Generalize_GetReward_Result();
  GM_Generalize_Bind::default_instance_ = new GM_Generalize_Bind();
  GM_Generalize_Bind_Return::default_instance_ = new GM_Generalize_Bind_Return();
  GM_Generalize_Center_Data::default_instance_ = new GM_Generalize_Center_Data();
  GM_Generalize_Center_One_Data::default_instance_ = new GM_Generalize_Center_One_Data();
  GM_Generalize_Code_Return::default_instance_->InitAsDefaultInstance();
  GM_Generalize_Code_Data::default_instance_->InitAsDefaultInstance();
  GM_Generalize_Feedback_Return::default_instance_->InitAsDefaultInstance();
  GM_Feedback_One_Data::default_instance_->InitAsDefaultInstance();
  GM_Feedback_Two_Data::default_instance_->InitAsDefaultInstance();
  GM_Generalize_GetReward::default_instance_->InitAsDefaultInstance();
  GM_Generalize_GetReward_Result::default_instance_->InitAsDefaultInstance();
  GM_Generalize_Bind::default_instance_->InitAsDefaultInstance();
  GM_Generalize_Bind_Return::default_instance_->InitAsDefaultInstance();
  GM_Generalize_Center_Data::default_instance_->InitAsDefaultInstance();
  GM_Generalize_Center_One_Data::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_generalize_2etxt);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_generalize_2etxt {
  StaticDescriptorInitializer_generalize_2etxt() {
    protobuf_AddDesc_generalize_2etxt();
  }
} static_descriptor_initializer_generalize_2etxt_;

// ===================================================================

#ifndef _MSC_VER
const int GM_Generalize_Code_Return::kMGetgoldFieldNumber;
const int GM_Generalize_Code_Return::kMTotalgoldFieldNumber;
const int GM_Generalize_Code_Return::kMCodedataFieldNumber;
#endif  // !_MSC_VER

GM_Generalize_Code_Return::GM_Generalize_Code_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Generalize_Code_Return::InitAsDefaultInstance() {
}

GM_Generalize_Code_Return::GM_Generalize_Code_Return(const GM_Generalize_Code_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Generalize_Code_Return::SharedCtor() {
  _cached_size_ = 0;
  m_getgold_ = 0;
  m_totalgold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Generalize_Code_Return::~GM_Generalize_Code_Return() {
  SharedDtor();
}

void GM_Generalize_Code_Return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Generalize_Code_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Generalize_Code_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Generalize_Code_Return_descriptor_;
}

const GM_Generalize_Code_Return& GM_Generalize_Code_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_generalize_2etxt();
  return *default_instance_;
}

GM_Generalize_Code_Return* GM_Generalize_Code_Return::default_instance_ = NULL;

GM_Generalize_Code_Return* GM_Generalize_Code_Return::New() const {
  return new GM_Generalize_Code_Return;
}

void GM_Generalize_Code_Return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_getgold_ = 0;
    m_totalgold_ = 0;
  }
  m_codedata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Generalize_Code_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_getgold = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_getgold_)));
          set_has_m_getgold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_totalgold;
        break;
      }

      // required int32 m_totalgold = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_totalgold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_totalgold_)));
          set_has_m_totalgold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_codedata;
        break;
      }

      // repeated .GM_Generalize_Code_Data m_codedata = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_codedata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_codedata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_codedata;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Generalize_Code_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_getgold = 1;
  if (has_m_getgold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_getgold(), output);
  }

  // required int32 m_totalgold = 2;
  if (has_m_totalgold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_totalgold(), output);
  }

  // repeated .GM_Generalize_Code_Data m_codedata = 3;
  for (int i = 0; i < this->m_codedata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_codedata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Generalize_Code_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_getgold = 1;
  if (has_m_getgold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_getgold(), target);
  }

  // required int32 m_totalgold = 2;
  if (has_m_totalgold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_totalgold(), target);
  }

  // repeated .GM_Generalize_Code_Data m_codedata = 3;
  for (int i = 0; i < this->m_codedata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_codedata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Generalize_Code_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_getgold = 1;
    if (has_m_getgold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_getgold());
    }

    // required int32 m_totalgold = 2;
    if (has_m_totalgold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_totalgold());
    }

  }
  // repeated .GM_Generalize_Code_Data m_codedata = 3;
  total_size += 1 * this->m_codedata_size();
  for (int i = 0; i < this->m_codedata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_codedata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Generalize_Code_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Generalize_Code_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Generalize_Code_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Generalize_Code_Return::MergeFrom(const GM_Generalize_Code_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_codedata_.MergeFrom(from.m_codedata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_getgold()) {
      set_m_getgold(from.m_getgold());
    }
    if (from.has_m_totalgold()) {
      set_m_totalgold(from.m_totalgold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Generalize_Code_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Generalize_Code_Return::CopyFrom(const GM_Generalize_Code_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Generalize_Code_Return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GM_Generalize_Code_Return::Swap(GM_Generalize_Code_Return* other) {
  if (other != this) {
    std::swap(m_getgold_, other->m_getgold_);
    std::swap(m_totalgold_, other->m_totalgold_);
    m_codedata_.Swap(&other->m_codedata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Generalize_Code_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Generalize_Code_Return_descriptor_;
  metadata.reflection = GM_Generalize_Code_Return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Generalize_Code_Data::kMRoleidFieldNumber;
const int GM_Generalize_Code_Data::kMNameFieldNumber;
const int GM_Generalize_Code_Data::kMHeadidFieldNumber;
const int GM_Generalize_Code_Data::kMTimeFieldNumber;
#endif  // !_MSC_VER

GM_Generalize_Code_Data::GM_Generalize_Code_Data()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Generalize_Code_Data::InitAsDefaultInstance() {
}

GM_Generalize_Code_Data::GM_Generalize_Code_Data(const GM_Generalize_Code_Data& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Generalize_Code_Data::SharedCtor() {
  _cached_size_ = 0;
  m_roleid_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_headid_ = 0;
  m_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Generalize_Code_Data::~GM_Generalize_Code_Data() {
  SharedDtor();
}

void GM_Generalize_Code_Data::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (this != default_instance_) {
  }
}

void GM_Generalize_Code_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Generalize_Code_Data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Generalize_Code_Data_descriptor_;
}

const GM_Generalize_Code_Data& GM_Generalize_Code_Data::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_generalize_2etxt();
  return *default_instance_;
}

GM_Generalize_Code_Data* GM_Generalize_Code_Data::default_instance_ = NULL;

GM_Generalize_Code_Data* GM_Generalize_Code_Data::New() const {
  return new GM_Generalize_Code_Data;
}

void GM_Generalize_Code_Data::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_roleid_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    m_headid_ = 0;
    m_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Generalize_Code_Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid_)));
          set_has_m_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_name;
        break;
      }

      // optional string m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_headid;
        break;
      }

      // optional int32 m_headid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_headid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_headid_)));
          set_has_m_headid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_time;
        break;
      }

      // optional int32 m_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_time_)));
          set_has_m_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Generalize_Code_Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_roleid = 1;
  if (has_m_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_roleid(), output);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_name(), output);
  }

  // optional int32 m_headid = 3;
  if (has_m_headid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_headid(), output);
  }

  // optional int32 m_time = 4;
  if (has_m_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Generalize_Code_Data::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_roleid = 1;
  if (has_m_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_roleid(), target);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_name(), target);
  }

  // optional int32 m_headid = 3;
  if (has_m_headid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_headid(), target);
  }

  // optional int32 m_time = 4;
  if (has_m_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Generalize_Code_Data::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_roleid = 1;
    if (has_m_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid());
    }

    // optional string m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional int32 m_headid = 3;
    if (has_m_headid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_headid());
    }

    // optional int32 m_time = 4;
    if (has_m_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Generalize_Code_Data::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Generalize_Code_Data* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Generalize_Code_Data*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Generalize_Code_Data::MergeFrom(const GM_Generalize_Code_Data& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_roleid()) {
      set_m_roleid(from.m_roleid());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_headid()) {
      set_m_headid(from.m_headid());
    }
    if (from.has_m_time()) {
      set_m_time(from.m_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Generalize_Code_Data::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Generalize_Code_Data::CopyFrom(const GM_Generalize_Code_Data& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Generalize_Code_Data::IsInitialized() const {

  return true;
}

void GM_Generalize_Code_Data::Swap(GM_Generalize_Code_Data* other) {
  if (other != this) {
    std::swap(m_roleid_, other->m_roleid_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_headid_, other->m_headid_);
    std::swap(m_time_, other->m_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Generalize_Code_Data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Generalize_Code_Data_descriptor_;
  metadata.reflection = GM_Generalize_Code_Data_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Generalize_Feedback_Return::kMHasgetoneFieldNumber;
const int GM_Generalize_Feedback_Return::kMCangetoneFieldNumber;
const int GM_Generalize_Feedback_Return::kMHasgettwoFieldNumber;
const int GM_Generalize_Feedback_Return::kMCangettwoFieldNumber;
const int GM_Generalize_Feedback_Return::kMVipleveloneFieldNumber;
const int GM_Generalize_Feedback_Return::kMVipleveltwoFieldNumber;
const int GM_Generalize_Feedback_Return::kMFeedbackoneFieldNumber;
const int GM_Generalize_Feedback_Return::kMFeedbacktwoFieldNumber;
#endif  // !_MSC_VER

GM_Generalize_Feedback_Return::GM_Generalize_Feedback_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Generalize_Feedback_Return::InitAsDefaultInstance() {
}

GM_Generalize_Feedback_Return::GM_Generalize_Feedback_Return(const GM_Generalize_Feedback_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Generalize_Feedback_Return::SharedCtor() {
  _cached_size_ = 0;
  m_hasgetone_ = 0;
  m_cangetone_ = 0;
  m_hasgettwo_ = 0;
  m_cangettwo_ = 0;
  m_viplevelone_ = 0;
  m_vipleveltwo_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Generalize_Feedback_Return::~GM_Generalize_Feedback_Return() {
  SharedDtor();
}

void GM_Generalize_Feedback_Return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Generalize_Feedback_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Generalize_Feedback_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Generalize_Feedback_Return_descriptor_;
}

const GM_Generalize_Feedback_Return& GM_Generalize_Feedback_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_generalize_2etxt();
  return *default_instance_;
}

GM_Generalize_Feedback_Return* GM_Generalize_Feedback_Return::default_instance_ = NULL;

GM_Generalize_Feedback_Return* GM_Generalize_Feedback_Return::New() const {
  return new GM_Generalize_Feedback_Return;
}

void GM_Generalize_Feedback_Return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_hasgetone_ = 0;
    m_cangetone_ = 0;
    m_hasgettwo_ = 0;
    m_cangettwo_ = 0;
    m_viplevelone_ = 0;
    m_vipleveltwo_ = 0;
  }
  m_feedbackone_.Clear();
  m_feedbacktwo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Generalize_Feedback_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_hasgetone = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_hasgetone_)));
          set_has_m_hasgetone();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_cangetone;
        break;
      }

      // required int32 m_cangetone = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_cangetone:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_cangetone_)));
          set_has_m_cangetone();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_hasgettwo;
        break;
      }

      // required int32 m_hasgettwo = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_hasgettwo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_hasgettwo_)));
          set_has_m_hasgettwo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_cangettwo;
        break;
      }

      // required int32 m_cangettwo = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_cangettwo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_cangettwo_)));
          set_has_m_cangettwo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_viplevelone;
        break;
      }

      // required int32 m_viplevelone = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_viplevelone:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_viplevelone_)));
          set_has_m_viplevelone();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_vipleveltwo;
        break;
      }

      // required int32 m_vipleveltwo = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_vipleveltwo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_vipleveltwo_)));
          set_has_m_vipleveltwo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_feedbackone;
        break;
      }

      // repeated .GM_Feedback_One_Data m_feedbackone = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_feedbackone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_feedbackone()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_feedbackone;
        if (input->ExpectTag(66)) goto parse_m_feedbacktwo;
        break;
      }

      // repeated .GM_Feedback_Two_Data m_feedbacktwo = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_feedbacktwo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_feedbacktwo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_feedbacktwo;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Generalize_Feedback_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_hasgetone = 1;
  if (has_m_hasgetone()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_hasgetone(), output);
  }

  // required int32 m_cangetone = 2;
  if (has_m_cangetone()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_cangetone(), output);
  }

  // required int32 m_hasgettwo = 3;
  if (has_m_hasgettwo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_hasgettwo(), output);
  }

  // required int32 m_cangettwo = 4;
  if (has_m_cangettwo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_cangettwo(), output);
  }

  // required int32 m_viplevelone = 5;
  if (has_m_viplevelone()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_viplevelone(), output);
  }

  // required int32 m_vipleveltwo = 6;
  if (has_m_vipleveltwo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_vipleveltwo(), output);
  }

  // repeated .GM_Feedback_One_Data m_feedbackone = 7;
  for (int i = 0; i < this->m_feedbackone_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->m_feedbackone(i), output);
  }

  // repeated .GM_Feedback_Two_Data m_feedbacktwo = 8;
  for (int i = 0; i < this->m_feedbacktwo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->m_feedbacktwo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Generalize_Feedback_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_hasgetone = 1;
  if (has_m_hasgetone()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_hasgetone(), target);
  }

  // required int32 m_cangetone = 2;
  if (has_m_cangetone()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_cangetone(), target);
  }

  // required int32 m_hasgettwo = 3;
  if (has_m_hasgettwo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_hasgettwo(), target);
  }

  // required int32 m_cangettwo = 4;
  if (has_m_cangettwo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_cangettwo(), target);
  }

  // required int32 m_viplevelone = 5;
  if (has_m_viplevelone()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_viplevelone(), target);
  }

  // required int32 m_vipleveltwo = 6;
  if (has_m_vipleveltwo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_vipleveltwo(), target);
  }

  // repeated .GM_Feedback_One_Data m_feedbackone = 7;
  for (int i = 0; i < this->m_feedbackone_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->m_feedbackone(i), target);
  }

  // repeated .GM_Feedback_Two_Data m_feedbacktwo = 8;
  for (int i = 0; i < this->m_feedbacktwo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->m_feedbacktwo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Generalize_Feedback_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_hasgetone = 1;
    if (has_m_hasgetone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_hasgetone());
    }

    // required int32 m_cangetone = 2;
    if (has_m_cangetone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_cangetone());
    }

    // required int32 m_hasgettwo = 3;
    if (has_m_hasgettwo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_hasgettwo());
    }

    // required int32 m_cangettwo = 4;
    if (has_m_cangettwo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_cangettwo());
    }

    // required int32 m_viplevelone = 5;
    if (has_m_viplevelone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_viplevelone());
    }

    // required int32 m_vipleveltwo = 6;
    if (has_m_vipleveltwo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_vipleveltwo());
    }

  }
  // repeated .GM_Feedback_One_Data m_feedbackone = 7;
  total_size += 1 * this->m_feedbackone_size();
  for (int i = 0; i < this->m_feedbackone_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_feedbackone(i));
  }

  // repeated .GM_Feedback_Two_Data m_feedbacktwo = 8;
  total_size += 1 * this->m_feedbacktwo_size();
  for (int i = 0; i < this->m_feedbacktwo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_feedbacktwo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Generalize_Feedback_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Generalize_Feedback_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Generalize_Feedback_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Generalize_Feedback_Return::MergeFrom(const GM_Generalize_Feedback_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_feedbackone_.MergeFrom(from.m_feedbackone_);
  m_feedbacktwo_.MergeFrom(from.m_feedbacktwo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_hasgetone()) {
      set_m_hasgetone(from.m_hasgetone());
    }
    if (from.has_m_cangetone()) {
      set_m_cangetone(from.m_cangetone());
    }
    if (from.has_m_hasgettwo()) {
      set_m_hasgettwo(from.m_hasgettwo());
    }
    if (from.has_m_cangettwo()) {
      set_m_cangettwo(from.m_cangettwo());
    }
    if (from.has_m_viplevelone()) {
      set_m_viplevelone(from.m_viplevelone());
    }
    if (from.has_m_vipleveltwo()) {
      set_m_vipleveltwo(from.m_vipleveltwo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Generalize_Feedback_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Generalize_Feedback_Return::CopyFrom(const GM_Generalize_Feedback_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Generalize_Feedback_Return::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void GM_Generalize_Feedback_Return::Swap(GM_Generalize_Feedback_Return* other) {
  if (other != this) {
    std::swap(m_hasgetone_, other->m_hasgetone_);
    std::swap(m_cangetone_, other->m_cangetone_);
    std::swap(m_hasgettwo_, other->m_hasgettwo_);
    std::swap(m_cangettwo_, other->m_cangettwo_);
    std::swap(m_viplevelone_, other->m_viplevelone_);
    std::swap(m_vipleveltwo_, other->m_vipleveltwo_);
    m_feedbackone_.Swap(&other->m_feedbackone_);
    m_feedbacktwo_.Swap(&other->m_feedbacktwo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Generalize_Feedback_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Generalize_Feedback_Return_descriptor_;
  metadata.reflection = GM_Generalize_Feedback_Return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Feedback_One_Data::kMRoleidFieldNumber;
const int GM_Feedback_One_Data::kMNameFieldNumber;
const int GM_Feedback_One_Data::kMHeadidFieldNumber;
const int GM_Feedback_One_Data::kMLevelFieldNumber;
const int GM_Feedback_One_Data::kMViplevelFieldNumber;
const int GM_Feedback_One_Data::kMCangetFieldNumber;
#endif  // !_MSC_VER

GM_Feedback_One_Data::GM_Feedback_One_Data()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Feedback_One_Data::InitAsDefaultInstance() {
}

GM_Feedback_One_Data::GM_Feedback_One_Data(const GM_Feedback_One_Data& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Feedback_One_Data::SharedCtor() {
  _cached_size_ = 0;
  m_roleid_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_headid_ = 0;
  m_level_ = 0;
  m_viplevel_ = 0;
  m_canget_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Feedback_One_Data::~GM_Feedback_One_Data() {
  SharedDtor();
}

void GM_Feedback_One_Data::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (this != default_instance_) {
  }
}

void GM_Feedback_One_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Feedback_One_Data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Feedback_One_Data_descriptor_;
}

const GM_Feedback_One_Data& GM_Feedback_One_Data::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_generalize_2etxt();
  return *default_instance_;
}

GM_Feedback_One_Data* GM_Feedback_One_Data::default_instance_ = NULL;

GM_Feedback_One_Data* GM_Feedback_One_Data::New() const {
  return new GM_Feedback_One_Data;
}

void GM_Feedback_One_Data::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_roleid_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    m_headid_ = 0;
    m_level_ = 0;
    m_viplevel_ = 0;
    m_canget_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Feedback_One_Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid_)));
          set_has_m_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_name;
        break;
      }

      // optional string m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_headid;
        break;
      }

      // optional int32 m_headid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_headid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_headid_)));
          set_has_m_headid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_level;
        break;
      }

      // optional int32 m_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_level_)));
          set_has_m_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_viplevel;
        break;
      }

      // optional int32 m_viplevel = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_viplevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_viplevel_)));
          set_has_m_viplevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(53)) goto parse_m_canget;
        break;
      }

      // optional float m_canget = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_m_canget:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_canget_)));
          set_has_m_canget();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Feedback_One_Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_roleid = 1;
  if (has_m_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_roleid(), output);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_name(), output);
  }

  // optional int32 m_headid = 3;
  if (has_m_headid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_headid(), output);
  }

  // optional int32 m_level = 4;
  if (has_m_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_level(), output);
  }

  // optional int32 m_viplevel = 5;
  if (has_m_viplevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_viplevel(), output);
  }

  // optional float m_canget = 6;
  if (has_m_canget()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->m_canget(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Feedback_One_Data::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_roleid = 1;
  if (has_m_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_roleid(), target);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_name(), target);
  }

  // optional int32 m_headid = 3;
  if (has_m_headid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_headid(), target);
  }

  // optional int32 m_level = 4;
  if (has_m_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_level(), target);
  }

  // optional int32 m_viplevel = 5;
  if (has_m_viplevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_viplevel(), target);
  }

  // optional float m_canget = 6;
  if (has_m_canget()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->m_canget(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Feedback_One_Data::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_roleid = 1;
    if (has_m_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid());
    }

    // optional string m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional int32 m_headid = 3;
    if (has_m_headid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_headid());
    }

    // optional int32 m_level = 4;
    if (has_m_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_level());
    }

    // optional int32 m_viplevel = 5;
    if (has_m_viplevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_viplevel());
    }

    // optional float m_canget = 6;
    if (has_m_canget()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Feedback_One_Data::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Feedback_One_Data* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Feedback_One_Data*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Feedback_One_Data::MergeFrom(const GM_Feedback_One_Data& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_roleid()) {
      set_m_roleid(from.m_roleid());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_headid()) {
      set_m_headid(from.m_headid());
    }
    if (from.has_m_level()) {
      set_m_level(from.m_level());
    }
    if (from.has_m_viplevel()) {
      set_m_viplevel(from.m_viplevel());
    }
    if (from.has_m_canget()) {
      set_m_canget(from.m_canget());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Feedback_One_Data::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Feedback_One_Data::CopyFrom(const GM_Feedback_One_Data& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Feedback_One_Data::IsInitialized() const {

  return true;
}

void GM_Feedback_One_Data::Swap(GM_Feedback_One_Data* other) {
  if (other != this) {
    std::swap(m_roleid_, other->m_roleid_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_headid_, other->m_headid_);
    std::swap(m_level_, other->m_level_);
    std::swap(m_viplevel_, other->m_viplevel_);
    std::swap(m_canget_, other->m_canget_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Feedback_One_Data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Feedback_One_Data_descriptor_;
  metadata.reflection = GM_Feedback_One_Data_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Feedback_Two_Data::kMRoleidFieldNumber;
const int GM_Feedback_Two_Data::kMNameFieldNumber;
const int GM_Feedback_Two_Data::kMHeadidFieldNumber;
const int GM_Feedback_Two_Data::kMLevelFieldNumber;
const int GM_Feedback_Two_Data::kMViplevelFieldNumber;
const int GM_Feedback_Two_Data::kMCangetFieldNumber;
#endif  // !_MSC_VER

GM_Feedback_Two_Data::GM_Feedback_Two_Data()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Feedback_Two_Data::InitAsDefaultInstance() {
}

GM_Feedback_Two_Data::GM_Feedback_Two_Data(const GM_Feedback_Two_Data& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Feedback_Two_Data::SharedCtor() {
  _cached_size_ = 0;
  m_roleid_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_headid_ = 0;
  m_level_ = 0;
  m_viplevel_ = 0;
  m_canget_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Feedback_Two_Data::~GM_Feedback_Two_Data() {
  SharedDtor();
}

void GM_Feedback_Two_Data::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (this != default_instance_) {
  }
}

void GM_Feedback_Two_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Feedback_Two_Data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Feedback_Two_Data_descriptor_;
}

const GM_Feedback_Two_Data& GM_Feedback_Two_Data::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_generalize_2etxt();
  return *default_instance_;
}

GM_Feedback_Two_Data* GM_Feedback_Two_Data::default_instance_ = NULL;

GM_Feedback_Two_Data* GM_Feedback_Two_Data::New() const {
  return new GM_Feedback_Two_Data;
}

void GM_Feedback_Two_Data::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_roleid_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    m_headid_ = 0;
    m_level_ = 0;
    m_viplevel_ = 0;
    m_canget_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Feedback_Two_Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid_)));
          set_has_m_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_name;
        break;
      }

      // optional string m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_headid;
        break;
      }

      // optional int32 m_headid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_headid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_headid_)));
          set_has_m_headid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_level;
        break;
      }

      // optional int32 m_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_level_)));
          set_has_m_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_viplevel;
        break;
      }

      // optional int32 m_viplevel = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_viplevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_viplevel_)));
          set_has_m_viplevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(53)) goto parse_m_canget;
        break;
      }

      // optional float m_canget = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_m_canget:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_canget_)));
          set_has_m_canget();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Feedback_Two_Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_roleid = 1;
  if (has_m_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_roleid(), output);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_name(), output);
  }

  // optional int32 m_headid = 3;
  if (has_m_headid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_headid(), output);
  }

  // optional int32 m_level = 4;
  if (has_m_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_level(), output);
  }

  // optional int32 m_viplevel = 5;
  if (has_m_viplevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_viplevel(), output);
  }

  // optional float m_canget = 6;
  if (has_m_canget()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->m_canget(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Feedback_Two_Data::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_roleid = 1;
  if (has_m_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_roleid(), target);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_name(), target);
  }

  // optional int32 m_headid = 3;
  if (has_m_headid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_headid(), target);
  }

  // optional int32 m_level = 4;
  if (has_m_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_level(), target);
  }

  // optional int32 m_viplevel = 5;
  if (has_m_viplevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_viplevel(), target);
  }

  // optional float m_canget = 6;
  if (has_m_canget()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->m_canget(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Feedback_Two_Data::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_roleid = 1;
    if (has_m_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid());
    }

    // optional string m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional int32 m_headid = 3;
    if (has_m_headid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_headid());
    }

    // optional int32 m_level = 4;
    if (has_m_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_level());
    }

    // optional int32 m_viplevel = 5;
    if (has_m_viplevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_viplevel());
    }

    // optional float m_canget = 6;
    if (has_m_canget()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Feedback_Two_Data::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Feedback_Two_Data* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Feedback_Two_Data*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Feedback_Two_Data::MergeFrom(const GM_Feedback_Two_Data& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_roleid()) {
      set_m_roleid(from.m_roleid());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_headid()) {
      set_m_headid(from.m_headid());
    }
    if (from.has_m_level()) {
      set_m_level(from.m_level());
    }
    if (from.has_m_viplevel()) {
      set_m_viplevel(from.m_viplevel());
    }
    if (from.has_m_canget()) {
      set_m_canget(from.m_canget());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Feedback_Two_Data::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Feedback_Two_Data::CopyFrom(const GM_Feedback_Two_Data& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Feedback_Two_Data::IsInitialized() const {

  return true;
}

void GM_Feedback_Two_Data::Swap(GM_Feedback_Two_Data* other) {
  if (other != this) {
    std::swap(m_roleid_, other->m_roleid_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_headid_, other->m_headid_);
    std::swap(m_level_, other->m_level_);
    std::swap(m_viplevel_, other->m_viplevel_);
    std::swap(m_canget_, other->m_canget_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Feedback_Two_Data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Feedback_Two_Data_descriptor_;
  metadata.reflection = GM_Feedback_Two_Data_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Generalize_GetReward::kMTagFieldNumber;
#endif  // !_MSC_VER

GM_Generalize_GetReward::GM_Generalize_GetReward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Generalize_GetReward::InitAsDefaultInstance() {
}

GM_Generalize_GetReward::GM_Generalize_GetReward(const GM_Generalize_GetReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Generalize_GetReward::SharedCtor() {
  _cached_size_ = 0;
  m_tag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Generalize_GetReward::~GM_Generalize_GetReward() {
  SharedDtor();
}

void GM_Generalize_GetReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Generalize_GetReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Generalize_GetReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Generalize_GetReward_descriptor_;
}

const GM_Generalize_GetReward& GM_Generalize_GetReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_generalize_2etxt();
  return *default_instance_;
}

GM_Generalize_GetReward* GM_Generalize_GetReward::default_instance_ = NULL;

GM_Generalize_GetReward* GM_Generalize_GetReward::New() const {
  return new GM_Generalize_GetReward;
}

void GM_Generalize_GetReward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_tag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Generalize_GetReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_tag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_tag_)));
          set_has_m_tag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Generalize_GetReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_tag = 1;
  if (has_m_tag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_tag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Generalize_GetReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_tag = 1;
  if (has_m_tag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_tag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Generalize_GetReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_tag = 1;
    if (has_m_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_tag());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Generalize_GetReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Generalize_GetReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Generalize_GetReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Generalize_GetReward::MergeFrom(const GM_Generalize_GetReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_tag()) {
      set_m_tag(from.m_tag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Generalize_GetReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Generalize_GetReward::CopyFrom(const GM_Generalize_GetReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Generalize_GetReward::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_Generalize_GetReward::Swap(GM_Generalize_GetReward* other) {
  if (other != this) {
    std::swap(m_tag_, other->m_tag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Generalize_GetReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Generalize_GetReward_descriptor_;
  metadata.reflection = GM_Generalize_GetReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Generalize_GetReward_Result::kMTagFieldNumber;
const int GM_Generalize_GetReward_Result::kMResultFieldNumber;
#endif  // !_MSC_VER

GM_Generalize_GetReward_Result::GM_Generalize_GetReward_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Generalize_GetReward_Result::InitAsDefaultInstance() {
}

GM_Generalize_GetReward_Result::GM_Generalize_GetReward_Result(const GM_Generalize_GetReward_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Generalize_GetReward_Result::SharedCtor() {
  _cached_size_ = 0;
  m_tag_ = 0;
  m_result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Generalize_GetReward_Result::~GM_Generalize_GetReward_Result() {
  SharedDtor();
}

void GM_Generalize_GetReward_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Generalize_GetReward_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Generalize_GetReward_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Generalize_GetReward_Result_descriptor_;
}

const GM_Generalize_GetReward_Result& GM_Generalize_GetReward_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_generalize_2etxt();
  return *default_instance_;
}

GM_Generalize_GetReward_Result* GM_Generalize_GetReward_Result::default_instance_ = NULL;

GM_Generalize_GetReward_Result* GM_Generalize_GetReward_Result::New() const {
  return new GM_Generalize_GetReward_Result;
}

void GM_Generalize_GetReward_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_tag_ = 0;
    m_result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Generalize_GetReward_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_tag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_tag_)));
          set_has_m_tag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_result;
        break;
      }

      // required int32 m_result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_result_)));
          set_has_m_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Generalize_GetReward_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_tag = 1;
  if (has_m_tag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_tag(), output);
  }

  // required int32 m_result = 2;
  if (has_m_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Generalize_GetReward_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_tag = 1;
  if (has_m_tag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_tag(), target);
  }

  // required int32 m_result = 2;
  if (has_m_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Generalize_GetReward_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_tag = 1;
    if (has_m_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_tag());
    }

    // required int32 m_result = 2;
    if (has_m_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Generalize_GetReward_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Generalize_GetReward_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Generalize_GetReward_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Generalize_GetReward_Result::MergeFrom(const GM_Generalize_GetReward_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_tag()) {
      set_m_tag(from.m_tag());
    }
    if (from.has_m_result()) {
      set_m_result(from.m_result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Generalize_GetReward_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Generalize_GetReward_Result::CopyFrom(const GM_Generalize_GetReward_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Generalize_GetReward_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GM_Generalize_GetReward_Result::Swap(GM_Generalize_GetReward_Result* other) {
  if (other != this) {
    std::swap(m_tag_, other->m_tag_);
    std::swap(m_result_, other->m_result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Generalize_GetReward_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Generalize_GetReward_Result_descriptor_;
  metadata.reflection = GM_Generalize_GetReward_Result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Generalize_Bind::kMBindidFieldNumber;
const int GM_Generalize_Bind::kMRoleidFieldNumber;
#endif  // !_MSC_VER

GM_Generalize_Bind::GM_Generalize_Bind()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Generalize_Bind::InitAsDefaultInstance() {
}

GM_Generalize_Bind::GM_Generalize_Bind(const GM_Generalize_Bind& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Generalize_Bind::SharedCtor() {
  _cached_size_ = 0;
  m_bindid_ = 0;
  m_roleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Generalize_Bind::~GM_Generalize_Bind() {
  SharedDtor();
}

void GM_Generalize_Bind::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Generalize_Bind::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Generalize_Bind::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Generalize_Bind_descriptor_;
}

const GM_Generalize_Bind& GM_Generalize_Bind::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_generalize_2etxt();
  return *default_instance_;
}

GM_Generalize_Bind* GM_Generalize_Bind::default_instance_ = NULL;

GM_Generalize_Bind* GM_Generalize_Bind::New() const {
  return new GM_Generalize_Bind;
}

void GM_Generalize_Bind::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_bindid_ = 0;
    m_roleid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Generalize_Bind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_bindid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_bindid_)));
          set_has_m_bindid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_roleid;
        break;
      }

      // required int32 m_roleid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid_)));
          set_has_m_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Generalize_Bind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_bindid = 1;
  if (has_m_bindid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_bindid(), output);
  }

  // required int32 m_roleid = 2;
  if (has_m_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_roleid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Generalize_Bind::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_bindid = 1;
  if (has_m_bindid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_bindid(), target);
  }

  // required int32 m_roleid = 2;
  if (has_m_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_roleid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Generalize_Bind::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_bindid = 1;
    if (has_m_bindid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_bindid());
    }

    // required int32 m_roleid = 2;
    if (has_m_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Generalize_Bind::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Generalize_Bind* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Generalize_Bind*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Generalize_Bind::MergeFrom(const GM_Generalize_Bind& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_bindid()) {
      set_m_bindid(from.m_bindid());
    }
    if (from.has_m_roleid()) {
      set_m_roleid(from.m_roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Generalize_Bind::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Generalize_Bind::CopyFrom(const GM_Generalize_Bind& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Generalize_Bind::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GM_Generalize_Bind::Swap(GM_Generalize_Bind* other) {
  if (other != this) {
    std::swap(m_bindid_, other->m_bindid_);
    std::swap(m_roleid_, other->m_roleid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Generalize_Bind::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Generalize_Bind_descriptor_;
  metadata.reflection = GM_Generalize_Bind_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Generalize_Bind_Return::kMResultFieldNumber;
#endif  // !_MSC_VER

GM_Generalize_Bind_Return::GM_Generalize_Bind_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Generalize_Bind_Return::InitAsDefaultInstance() {
}

GM_Generalize_Bind_Return::GM_Generalize_Bind_Return(const GM_Generalize_Bind_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Generalize_Bind_Return::SharedCtor() {
  _cached_size_ = 0;
  m_result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Generalize_Bind_Return::~GM_Generalize_Bind_Return() {
  SharedDtor();
}

void GM_Generalize_Bind_Return::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Generalize_Bind_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Generalize_Bind_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Generalize_Bind_Return_descriptor_;
}

const GM_Generalize_Bind_Return& GM_Generalize_Bind_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_generalize_2etxt();
  return *default_instance_;
}

GM_Generalize_Bind_Return* GM_Generalize_Bind_Return::default_instance_ = NULL;

GM_Generalize_Bind_Return* GM_Generalize_Bind_Return::New() const {
  return new GM_Generalize_Bind_Return;
}

void GM_Generalize_Bind_Return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Generalize_Bind_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_result_)));
          set_has_m_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Generalize_Bind_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_result = 1;
  if (has_m_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Generalize_Bind_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_result = 1;
  if (has_m_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Generalize_Bind_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_result = 1;
    if (has_m_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Generalize_Bind_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Generalize_Bind_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Generalize_Bind_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Generalize_Bind_Return::MergeFrom(const GM_Generalize_Bind_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_result()) {
      set_m_result(from.m_result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Generalize_Bind_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Generalize_Bind_Return::CopyFrom(const GM_Generalize_Bind_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Generalize_Bind_Return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_Generalize_Bind_Return::Swap(GM_Generalize_Bind_Return* other) {
  if (other != this) {
    std::swap(m_result_, other->m_result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Generalize_Bind_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Generalize_Bind_Return_descriptor_;
  metadata.reflection = GM_Generalize_Bind_Return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Generalize_Center_Data::kMRoleidFieldNumber;
const int GM_Generalize_Center_Data::kMOneDataFieldNumber;
#endif  // !_MSC_VER

GM_Generalize_Center_Data::GM_Generalize_Center_Data()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Generalize_Center_Data::InitAsDefaultInstance() {
}

GM_Generalize_Center_Data::GM_Generalize_Center_Data(const GM_Generalize_Center_Data& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Generalize_Center_Data::SharedCtor() {
  _cached_size_ = 0;
  m_roleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Generalize_Center_Data::~GM_Generalize_Center_Data() {
  SharedDtor();
}

void GM_Generalize_Center_Data::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GM_Generalize_Center_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Generalize_Center_Data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Generalize_Center_Data_descriptor_;
}

const GM_Generalize_Center_Data& GM_Generalize_Center_Data::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_generalize_2etxt();
  return *default_instance_;
}

GM_Generalize_Center_Data* GM_Generalize_Center_Data::default_instance_ = NULL;

GM_Generalize_Center_Data* GM_Generalize_Center_Data::New() const {
  return new GM_Generalize_Center_Data;
}

void GM_Generalize_Center_Data::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_roleid_ = 0;
  }
  m_onedata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Generalize_Center_Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid_)));
          set_has_m_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_OneData;
        break;
      }

      // repeated .GM_Generalize_Center_One_Data m_OneData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_OneData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_onedata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_OneData;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Generalize_Center_Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_roleid = 1;
  if (has_m_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_roleid(), output);
  }

  // repeated .GM_Generalize_Center_One_Data m_OneData = 2;
  for (int i = 0; i < this->m_onedata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_onedata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Generalize_Center_Data::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_roleid = 1;
  if (has_m_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_roleid(), target);
  }

  // repeated .GM_Generalize_Center_One_Data m_OneData = 2;
  for (int i = 0; i < this->m_onedata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_onedata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Generalize_Center_Data::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_roleid = 1;
    if (has_m_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid());
    }

  }
  // repeated .GM_Generalize_Center_One_Data m_OneData = 2;
  total_size += 1 * this->m_onedata_size();
  for (int i = 0; i < this->m_onedata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_onedata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Generalize_Center_Data::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Generalize_Center_Data* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Generalize_Center_Data*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Generalize_Center_Data::MergeFrom(const GM_Generalize_Center_Data& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_onedata_.MergeFrom(from.m_onedata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_roleid()) {
      set_m_roleid(from.m_roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Generalize_Center_Data::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Generalize_Center_Data::CopyFrom(const GM_Generalize_Center_Data& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Generalize_Center_Data::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GM_Generalize_Center_Data::Swap(GM_Generalize_Center_Data* other) {
  if (other != this) {
    std::swap(m_roleid_, other->m_roleid_);
    m_onedata_.Swap(&other->m_onedata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Generalize_Center_Data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Generalize_Center_Data_descriptor_;
  metadata.reflection = GM_Generalize_Center_Data_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GM_Generalize_Center_One_Data::kMRoleidFieldNumber;
const int GM_Generalize_Center_One_Data::kMNameFieldNumber;
const int GM_Generalize_Center_One_Data::kMHeadidFieldNumber;
const int GM_Generalize_Center_One_Data::kMLevelFieldNumber;
const int GM_Generalize_Center_One_Data::kMViplevelFieldNumber;
const int GM_Generalize_Center_One_Data::kMTimenowFieldNumber;
const int GM_Generalize_Center_One_Data::kMCangetFieldNumber;
#endif  // !_MSC_VER

GM_Generalize_Center_One_Data::GM_Generalize_Center_One_Data()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GM_Generalize_Center_One_Data::InitAsDefaultInstance() {
}

GM_Generalize_Center_One_Data::GM_Generalize_Center_One_Data(const GM_Generalize_Center_One_Data& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GM_Generalize_Center_One_Data::SharedCtor() {
  _cached_size_ = 0;
  m_roleid_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_headid_ = 0;
  m_level_ = 0;
  m_viplevel_ = 0;
  m_timenow_ = 0;
  m_canget_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GM_Generalize_Center_One_Data::~GM_Generalize_Center_One_Data() {
  SharedDtor();
}

void GM_Generalize_Center_One_Data::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (this != default_instance_) {
  }
}

void GM_Generalize_Center_One_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Generalize_Center_One_Data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GM_Generalize_Center_One_Data_descriptor_;
}

const GM_Generalize_Center_One_Data& GM_Generalize_Center_One_Data::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_generalize_2etxt();
  return *default_instance_;
}

GM_Generalize_Center_One_Data* GM_Generalize_Center_One_Data::default_instance_ = NULL;

GM_Generalize_Center_One_Data* GM_Generalize_Center_One_Data::New() const {
  return new GM_Generalize_Center_One_Data;
}

void GM_Generalize_Center_One_Data::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_roleid_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    m_headid_ = 0;
    m_level_ = 0;
    m_viplevel_ = 0;
    m_timenow_ = 0;
    m_canget_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GM_Generalize_Center_One_Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid_)));
          set_has_m_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_name;
        break;
      }

      // optional string m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_headid;
        break;
      }

      // optional int32 m_headid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_headid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_headid_)));
          set_has_m_headid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_level;
        break;
      }

      // optional int32 m_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_level_)));
          set_has_m_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_viplevel;
        break;
      }

      // optional int32 m_viplevel = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_viplevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_viplevel_)));
          set_has_m_viplevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_timenow;
        break;
      }

      // optional int32 m_timenow = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_timenow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_timenow_)));
          set_has_m_timenow();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(61)) goto parse_m_canget;
        break;
      }

      // optional float m_canget = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_m_canget:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_canget_)));
          set_has_m_canget();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GM_Generalize_Center_One_Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_roleid = 1;
  if (has_m_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_roleid(), output);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_name(), output);
  }

  // optional int32 m_headid = 3;
  if (has_m_headid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_headid(), output);
  }

  // optional int32 m_level = 4;
  if (has_m_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_level(), output);
  }

  // optional int32 m_viplevel = 5;
  if (has_m_viplevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_viplevel(), output);
  }

  // optional int32 m_timenow = 6;
  if (has_m_timenow()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_timenow(), output);
  }

  // optional float m_canget = 7;
  if (has_m_canget()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->m_canget(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GM_Generalize_Center_One_Data::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_roleid = 1;
  if (has_m_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_roleid(), target);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_name(), target);
  }

  // optional int32 m_headid = 3;
  if (has_m_headid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_headid(), target);
  }

  // optional int32 m_level = 4;
  if (has_m_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_level(), target);
  }

  // optional int32 m_viplevel = 5;
  if (has_m_viplevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_viplevel(), target);
  }

  // optional int32 m_timenow = 6;
  if (has_m_timenow()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_timenow(), target);
  }

  // optional float m_canget = 7;
  if (has_m_canget()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->m_canget(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GM_Generalize_Center_One_Data::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_roleid = 1;
    if (has_m_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid());
    }

    // optional string m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional int32 m_headid = 3;
    if (has_m_headid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_headid());
    }

    // optional int32 m_level = 4;
    if (has_m_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_level());
    }

    // optional int32 m_viplevel = 5;
    if (has_m_viplevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_viplevel());
    }

    // optional int32 m_timenow = 6;
    if (has_m_timenow()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_timenow());
    }

    // optional float m_canget = 7;
    if (has_m_canget()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Generalize_Center_One_Data::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GM_Generalize_Center_One_Data* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GM_Generalize_Center_One_Data*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GM_Generalize_Center_One_Data::MergeFrom(const GM_Generalize_Center_One_Data& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_roleid()) {
      set_m_roleid(from.m_roleid());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_headid()) {
      set_m_headid(from.m_headid());
    }
    if (from.has_m_level()) {
      set_m_level(from.m_level());
    }
    if (from.has_m_viplevel()) {
      set_m_viplevel(from.m_viplevel());
    }
    if (from.has_m_timenow()) {
      set_m_timenow(from.m_timenow());
    }
    if (from.has_m_canget()) {
      set_m_canget(from.m_canget());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GM_Generalize_Center_One_Data::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Generalize_Center_One_Data::CopyFrom(const GM_Generalize_Center_One_Data& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Generalize_Center_One_Data::IsInitialized() const {

  return true;
}

void GM_Generalize_Center_One_Data::Swap(GM_Generalize_Center_One_Data* other) {
  if (other != this) {
    std::swap(m_roleid_, other->m_roleid_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_headid_, other->m_headid_);
    std::swap(m_level_, other->m_level_);
    std::swap(m_viplevel_, other->m_viplevel_);
    std::swap(m_timenow_, other->m_timenow_);
    std::swap(m_canget_, other->m_canget_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GM_Generalize_Center_One_Data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GM_Generalize_Center_One_Data_descriptor_;
  metadata.reflection = GM_Generalize_Center_One_Data_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
