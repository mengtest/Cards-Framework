// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rank.txt

#ifndef PROTOBUF_rank_2etxt__INCLUDED
#define PROTOBUF_rank_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rank_2etxt();
void protobuf_AssignDesc_rank_2etxt();
void protobuf_ShutdownFile_rank_2etxt();

class GM_RankInfo;
class GM_RankPageRequest;
class GM_RankListReturn;
class GM_AllRankListRequest;
class GM_AllRankTypeListReturn;

// ===================================================================

class GM_RankInfo : public ::google::protobuf::Message {
 public:
  GM_RankInfo();
  virtual ~GM_RankInfo();

  GM_RankInfo(const GM_RankInfo& from);

  inline GM_RankInfo& operator=(const GM_RankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RankInfo& default_instance();

  void Swap(GM_RankInfo* other);

  // implements Message ----------------------------------------------

  GM_RankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RankInfo& from);
  void MergeFrom(const GM_RankInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_place = 1;
  inline bool has_m_place() const;
  inline void clear_m_place();
  static const int kMPlaceFieldNumber = 1;
  inline ::google::protobuf::int32 m_place() const;
  inline void set_m_place(::google::protobuf::int32 value);

  // optional int32 m_roleID = 2;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleIDFieldNumber = 2;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional string m_roleName = 3;
  inline bool has_m_rolename() const;
  inline void clear_m_rolename();
  static const int kMRoleNameFieldNumber = 3;
  inline const ::std::string& m_rolename() const;
  inline void set_m_rolename(const ::std::string& value);
  inline void set_m_rolename(const char* value);
  inline void set_m_rolename(const char* value, size_t size);
  inline ::std::string* mutable_m_rolename();
  inline ::std::string* release_m_rolename();
  inline void set_allocated_m_rolename(::std::string* m_rolename);

  // optional int32 m_vip = 4;
  inline bool has_m_vip() const;
  inline void clear_m_vip();
  static const int kMVipFieldNumber = 4;
  inline ::google::protobuf::int32 m_vip() const;
  inline void set_m_vip(::google::protobuf::int32 value);

  // optional int32 m_value = 5;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 5;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_headphoto = 6;
  inline bool has_m_headphoto() const;
  inline void clear_m_headphoto();
  static const int kMHeadphotoFieldNumber = 6;
  inline ::google::protobuf::int32 m_headphoto() const;
  inline void set_m_headphoto(::google::protobuf::int32 value);

  // optional int32 m_headFrame = 7;
  inline bool has_m_headframe() const;
  inline void clear_m_headframe();
  static const int kMHeadFrameFieldNumber = 7;
  inline ::google::protobuf::int32 m_headframe() const;
  inline void set_m_headframe(::google::protobuf::int32 value);

  // optional string m_qqhead = 8;
  inline bool has_m_qqhead() const;
  inline void clear_m_qqhead();
  static const int kMQqheadFieldNumber = 8;
  inline const ::std::string& m_qqhead() const;
  inline void set_m_qqhead(const ::std::string& value);
  inline void set_m_qqhead(const char* value);
  inline void set_m_qqhead(const char* value, size_t size);
  inline ::std::string* mutable_m_qqhead();
  inline ::std::string* release_m_qqhead();
  inline void set_allocated_m_qqhead(::std::string* m_qqhead);

  // optional string m_nickname = 9;
  inline bool has_m_nickname() const;
  inline void clear_m_nickname();
  static const int kMNicknameFieldNumber = 9;
  inline const ::std::string& m_nickname() const;
  inline void set_m_nickname(const ::std::string& value);
  inline void set_m_nickname(const char* value);
  inline void set_m_nickname(const char* value, size_t size);
  inline ::std::string* mutable_m_nickname();
  inline ::std::string* release_m_nickname();
  inline void set_allocated_m_nickname(::std::string* m_nickname);

  // @@protoc_insertion_point(class_scope:GM_RankInfo)
 private:
  inline void set_has_m_place();
  inline void clear_has_m_place();
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_rolename();
  inline void clear_has_m_rolename();
  inline void set_has_m_vip();
  inline void clear_has_m_vip();
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_headphoto();
  inline void clear_has_m_headphoto();
  inline void set_has_m_headframe();
  inline void clear_has_m_headframe();
  inline void set_has_m_qqhead();
  inline void clear_has_m_qqhead();
  inline void set_has_m_nickname();
  inline void clear_has_m_nickname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_place_;
  ::google::protobuf::int32 m_roleid_;
  ::std::string* m_rolename_;
  ::google::protobuf::int32 m_vip_;
  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_headphoto_;
  ::google::protobuf::int32 m_headframe_;
  ::std::string* m_qqhead_;
  ::std::string* m_nickname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_rank_2etxt();
  friend void protobuf_AssignDesc_rank_2etxt();
  friend void protobuf_ShutdownFile_rank_2etxt();

  void InitAsDefaultInstance();
  static GM_RankInfo* default_instance_;
};
// -------------------------------------------------------------------

class GM_RankPageRequest : public ::google::protobuf::Message {
 public:
  GM_RankPageRequest();
  virtual ~GM_RankPageRequest();

  GM_RankPageRequest(const GM_RankPageRequest& from);

  inline GM_RankPageRequest& operator=(const GM_RankPageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RankPageRequest& default_instance();

  void Swap(GM_RankPageRequest* other);

  // implements Message ----------------------------------------------

  GM_RankPageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RankPageRequest& from);
  void MergeFrom(const GM_RankPageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_RoleID = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleIDFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // required int32 m_RankType = 2;
  inline bool has_m_ranktype() const;
  inline void clear_m_ranktype();
  static const int kMRankTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_ranktype() const;
  inline void set_m_ranktype(::google::protobuf::int32 value);

  // required int32 m_pagenum = 3;
  inline bool has_m_pagenum() const;
  inline void clear_m_pagenum();
  static const int kMPagenumFieldNumber = 3;
  inline ::google::protobuf::int32 m_pagenum() const;
  inline void set_m_pagenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_RankPageRequest)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_ranktype();
  inline void clear_has_m_ranktype();
  inline void set_has_m_pagenum();
  inline void clear_has_m_pagenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_ranktype_;
  ::google::protobuf::int32 m_pagenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_rank_2etxt();
  friend void protobuf_AssignDesc_rank_2etxt();
  friend void protobuf_ShutdownFile_rank_2etxt();

  void InitAsDefaultInstance();
  static GM_RankPageRequest* default_instance_;
};
// -------------------------------------------------------------------

class GM_RankListReturn : public ::google::protobuf::Message {
 public:
  GM_RankListReturn();
  virtual ~GM_RankListReturn();

  GM_RankListReturn(const GM_RankListReturn& from);

  inline GM_RankListReturn& operator=(const GM_RankListReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RankListReturn& default_instance();

  void Swap(GM_RankListReturn* other);

  // implements Message ----------------------------------------------

  GM_RankListReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RankListReturn& from);
  void MergeFrom(const GM_RankListReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_RankType = 1;
  inline bool has_m_ranktype() const;
  inline void clear_m_ranktype();
  static const int kMRankTypeFieldNumber = 1;
  inline ::google::protobuf::int32 m_ranktype() const;
  inline void set_m_ranktype(::google::protobuf::int32 value);

  // optional .GM_RankInfo m_SelfInfo = 2;
  inline bool has_m_selfinfo() const;
  inline void clear_m_selfinfo();
  static const int kMSelfInfoFieldNumber = 2;
  inline const ::GM_RankInfo& m_selfinfo() const;
  inline ::GM_RankInfo* mutable_m_selfinfo();
  inline ::GM_RankInfo* release_m_selfinfo();
  inline void set_allocated_m_selfinfo(::GM_RankInfo* m_selfinfo);

  // repeated .GM_RankInfo m_RankInfo = 4;
  inline int m_rankinfo_size() const;
  inline void clear_m_rankinfo();
  static const int kMRankInfoFieldNumber = 4;
  inline const ::GM_RankInfo& m_rankinfo(int index) const;
  inline ::GM_RankInfo* mutable_m_rankinfo(int index);
  inline ::GM_RankInfo* add_m_rankinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_RankInfo >&
      m_rankinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_RankInfo >*
      mutable_m_rankinfo();

  // @@protoc_insertion_point(class_scope:GM_RankListReturn)
 private:
  inline void set_has_m_ranktype();
  inline void clear_has_m_ranktype();
  inline void set_has_m_selfinfo();
  inline void clear_has_m_selfinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GM_RankInfo* m_selfinfo_;
  ::google::protobuf::RepeatedPtrField< ::GM_RankInfo > m_rankinfo_;
  ::google::protobuf::int32 m_ranktype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_rank_2etxt();
  friend void protobuf_AssignDesc_rank_2etxt();
  friend void protobuf_ShutdownFile_rank_2etxt();

  void InitAsDefaultInstance();
  static GM_RankListReturn* default_instance_;
};
// -------------------------------------------------------------------

class GM_AllRankListRequest : public ::google::protobuf::Message {
 public:
  GM_AllRankListRequest();
  virtual ~GM_AllRankListRequest();

  GM_AllRankListRequest(const GM_AllRankListRequest& from);

  inline GM_AllRankListRequest& operator=(const GM_AllRankListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_AllRankListRequest& default_instance();

  void Swap(GM_AllRankListRequest* other);

  // implements Message ----------------------------------------------

  GM_AllRankListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_AllRankListRequest& from);
  void MergeFrom(const GM_AllRankListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_RoleID = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleIDFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_AllRankListRequest)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_rank_2etxt();
  friend void protobuf_AssignDesc_rank_2etxt();
  friend void protobuf_ShutdownFile_rank_2etxt();

  void InitAsDefaultInstance();
  static GM_AllRankListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GM_AllRankTypeListReturn : public ::google::protobuf::Message {
 public:
  GM_AllRankTypeListReturn();
  virtual ~GM_AllRankTypeListReturn();

  GM_AllRankTypeListReturn(const GM_AllRankTypeListReturn& from);

  inline GM_AllRankTypeListReturn& operator=(const GM_AllRankTypeListReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_AllRankTypeListReturn& default_instance();

  void Swap(GM_AllRankTypeListReturn* other);

  // implements Message ----------------------------------------------

  GM_AllRankTypeListReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_AllRankTypeListReturn& from);
  void MergeFrom(const GM_AllRankTypeListReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // repeated .GM_RankListReturn ranklist = 2;
  inline int ranklist_size() const;
  inline void clear_ranklist();
  static const int kRanklistFieldNumber = 2;
  inline const ::GM_RankListReturn& ranklist(int index) const;
  inline ::GM_RankListReturn* mutable_ranklist(int index);
  inline ::GM_RankListReturn* add_ranklist();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_RankListReturn >&
      ranklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_RankListReturn >*
      mutable_ranklist();

  // @@protoc_insertion_point(class_scope:GM_AllRankTypeListReturn)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_RankListReturn > ranklist_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_rank_2etxt();
  friend void protobuf_AssignDesc_rank_2etxt();
  friend void protobuf_ShutdownFile_rank_2etxt();

  void InitAsDefaultInstance();
  static GM_AllRankTypeListReturn* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_RankInfo

// required int32 m_place = 1;
inline bool GM_RankInfo::has_m_place() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RankInfo::set_has_m_place() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RankInfo::clear_has_m_place() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RankInfo::clear_m_place() {
  m_place_ = 0;
  clear_has_m_place();
}
inline ::google::protobuf::int32 GM_RankInfo::m_place() const {
  return m_place_;
}
inline void GM_RankInfo::set_m_place(::google::protobuf::int32 value) {
  set_has_m_place();
  m_place_ = value;
}

// optional int32 m_roleID = 2;
inline bool GM_RankInfo::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RankInfo::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RankInfo::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RankInfo::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_RankInfo::m_roleid() const {
  return m_roleid_;
}
inline void GM_RankInfo::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional string m_roleName = 3;
inline bool GM_RankInfo::has_m_rolename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_RankInfo::set_has_m_rolename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_RankInfo::clear_has_m_rolename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_RankInfo::clear_m_rolename() {
  if (m_rolename_ != &::google::protobuf::internal::kEmptyString) {
    m_rolename_->clear();
  }
  clear_has_m_rolename();
}
inline const ::std::string& GM_RankInfo::m_rolename() const {
  return *m_rolename_;
}
inline void GM_RankInfo::set_m_rolename(const ::std::string& value) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(value);
}
inline void GM_RankInfo::set_m_rolename(const char* value) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(value);
}
inline void GM_RankInfo::set_m_rolename(const char* value, size_t size) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_RankInfo::mutable_m_rolename() {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  return m_rolename_;
}
inline ::std::string* GM_RankInfo::release_m_rolename() {
  clear_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_rolename_;
    m_rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_RankInfo::set_allocated_m_rolename(::std::string* m_rolename) {
  if (m_rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete m_rolename_;
  }
  if (m_rolename) {
    set_has_m_rolename();
    m_rolename_ = m_rolename;
  } else {
    clear_has_m_rolename();
    m_rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_vip = 4;
inline bool GM_RankInfo::has_m_vip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_RankInfo::set_has_m_vip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_RankInfo::clear_has_m_vip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_RankInfo::clear_m_vip() {
  m_vip_ = 0;
  clear_has_m_vip();
}
inline ::google::protobuf::int32 GM_RankInfo::m_vip() const {
  return m_vip_;
}
inline void GM_RankInfo::set_m_vip(::google::protobuf::int32 value) {
  set_has_m_vip();
  m_vip_ = value;
}

// optional int32 m_value = 5;
inline bool GM_RankInfo::has_m_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_RankInfo::set_has_m_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_RankInfo::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_RankInfo::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 GM_RankInfo::m_value() const {
  return m_value_;
}
inline void GM_RankInfo::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_headphoto = 6;
inline bool GM_RankInfo::has_m_headphoto() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_RankInfo::set_has_m_headphoto() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_RankInfo::clear_has_m_headphoto() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_RankInfo::clear_m_headphoto() {
  m_headphoto_ = 0;
  clear_has_m_headphoto();
}
inline ::google::protobuf::int32 GM_RankInfo::m_headphoto() const {
  return m_headphoto_;
}
inline void GM_RankInfo::set_m_headphoto(::google::protobuf::int32 value) {
  set_has_m_headphoto();
  m_headphoto_ = value;
}

// optional int32 m_headFrame = 7;
inline bool GM_RankInfo::has_m_headframe() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_RankInfo::set_has_m_headframe() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_RankInfo::clear_has_m_headframe() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_RankInfo::clear_m_headframe() {
  m_headframe_ = 0;
  clear_has_m_headframe();
}
inline ::google::protobuf::int32 GM_RankInfo::m_headframe() const {
  return m_headframe_;
}
inline void GM_RankInfo::set_m_headframe(::google::protobuf::int32 value) {
  set_has_m_headframe();
  m_headframe_ = value;
}

// optional string m_qqhead = 8;
inline bool GM_RankInfo::has_m_qqhead() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_RankInfo::set_has_m_qqhead() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_RankInfo::clear_has_m_qqhead() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_RankInfo::clear_m_qqhead() {
  if (m_qqhead_ != &::google::protobuf::internal::kEmptyString) {
    m_qqhead_->clear();
  }
  clear_has_m_qqhead();
}
inline const ::std::string& GM_RankInfo::m_qqhead() const {
  return *m_qqhead_;
}
inline void GM_RankInfo::set_m_qqhead(const ::std::string& value) {
  set_has_m_qqhead();
  if (m_qqhead_ == &::google::protobuf::internal::kEmptyString) {
    m_qqhead_ = new ::std::string;
  }
  m_qqhead_->assign(value);
}
inline void GM_RankInfo::set_m_qqhead(const char* value) {
  set_has_m_qqhead();
  if (m_qqhead_ == &::google::protobuf::internal::kEmptyString) {
    m_qqhead_ = new ::std::string;
  }
  m_qqhead_->assign(value);
}
inline void GM_RankInfo::set_m_qqhead(const char* value, size_t size) {
  set_has_m_qqhead();
  if (m_qqhead_ == &::google::protobuf::internal::kEmptyString) {
    m_qqhead_ = new ::std::string;
  }
  m_qqhead_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_RankInfo::mutable_m_qqhead() {
  set_has_m_qqhead();
  if (m_qqhead_ == &::google::protobuf::internal::kEmptyString) {
    m_qqhead_ = new ::std::string;
  }
  return m_qqhead_;
}
inline ::std::string* GM_RankInfo::release_m_qqhead() {
  clear_has_m_qqhead();
  if (m_qqhead_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_qqhead_;
    m_qqhead_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_RankInfo::set_allocated_m_qqhead(::std::string* m_qqhead) {
  if (m_qqhead_ != &::google::protobuf::internal::kEmptyString) {
    delete m_qqhead_;
  }
  if (m_qqhead) {
    set_has_m_qqhead();
    m_qqhead_ = m_qqhead;
  } else {
    clear_has_m_qqhead();
    m_qqhead_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_nickname = 9;
inline bool GM_RankInfo::has_m_nickname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_RankInfo::set_has_m_nickname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_RankInfo::clear_has_m_nickname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_RankInfo::clear_m_nickname() {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    m_nickname_->clear();
  }
  clear_has_m_nickname();
}
inline const ::std::string& GM_RankInfo::m_nickname() const {
  return *m_nickname_;
}
inline void GM_RankInfo::set_m_nickname(const ::std::string& value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void GM_RankInfo::set_m_nickname(const char* value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void GM_RankInfo::set_m_nickname(const char* value, size_t size) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_RankInfo::mutable_m_nickname() {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  return m_nickname_;
}
inline ::std::string* GM_RankInfo::release_m_nickname() {
  clear_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_nickname_;
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_RankInfo::set_allocated_m_nickname(::std::string* m_nickname) {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_nickname_;
  }
  if (m_nickname) {
    set_has_m_nickname();
    m_nickname_ = m_nickname;
  } else {
    clear_has_m_nickname();
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GM_RankPageRequest

// required int32 m_RoleID = 1;
inline bool GM_RankPageRequest::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RankPageRequest::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RankPageRequest::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RankPageRequest::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_RankPageRequest::m_roleid() const {
  return m_roleid_;
}
inline void GM_RankPageRequest::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// required int32 m_RankType = 2;
inline bool GM_RankPageRequest::has_m_ranktype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RankPageRequest::set_has_m_ranktype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RankPageRequest::clear_has_m_ranktype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RankPageRequest::clear_m_ranktype() {
  m_ranktype_ = 0;
  clear_has_m_ranktype();
}
inline ::google::protobuf::int32 GM_RankPageRequest::m_ranktype() const {
  return m_ranktype_;
}
inline void GM_RankPageRequest::set_m_ranktype(::google::protobuf::int32 value) {
  set_has_m_ranktype();
  m_ranktype_ = value;
}

// required int32 m_pagenum = 3;
inline bool GM_RankPageRequest::has_m_pagenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_RankPageRequest::set_has_m_pagenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_RankPageRequest::clear_has_m_pagenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_RankPageRequest::clear_m_pagenum() {
  m_pagenum_ = 0;
  clear_has_m_pagenum();
}
inline ::google::protobuf::int32 GM_RankPageRequest::m_pagenum() const {
  return m_pagenum_;
}
inline void GM_RankPageRequest::set_m_pagenum(::google::protobuf::int32 value) {
  set_has_m_pagenum();
  m_pagenum_ = value;
}

// -------------------------------------------------------------------

// GM_RankListReturn

// required int32 m_RankType = 1;
inline bool GM_RankListReturn::has_m_ranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RankListReturn::set_has_m_ranktype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RankListReturn::clear_has_m_ranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RankListReturn::clear_m_ranktype() {
  m_ranktype_ = 0;
  clear_has_m_ranktype();
}
inline ::google::protobuf::int32 GM_RankListReturn::m_ranktype() const {
  return m_ranktype_;
}
inline void GM_RankListReturn::set_m_ranktype(::google::protobuf::int32 value) {
  set_has_m_ranktype();
  m_ranktype_ = value;
}

// optional .GM_RankInfo m_SelfInfo = 2;
inline bool GM_RankListReturn::has_m_selfinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RankListReturn::set_has_m_selfinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RankListReturn::clear_has_m_selfinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RankListReturn::clear_m_selfinfo() {
  if (m_selfinfo_ != NULL) m_selfinfo_->::GM_RankInfo::Clear();
  clear_has_m_selfinfo();
}
inline const ::GM_RankInfo& GM_RankListReturn::m_selfinfo() const {
  return m_selfinfo_ != NULL ? *m_selfinfo_ : *default_instance_->m_selfinfo_;
}
inline ::GM_RankInfo* GM_RankListReturn::mutable_m_selfinfo() {
  set_has_m_selfinfo();
  if (m_selfinfo_ == NULL) m_selfinfo_ = new ::GM_RankInfo;
  return m_selfinfo_;
}
inline ::GM_RankInfo* GM_RankListReturn::release_m_selfinfo() {
  clear_has_m_selfinfo();
  ::GM_RankInfo* temp = m_selfinfo_;
  m_selfinfo_ = NULL;
  return temp;
}
inline void GM_RankListReturn::set_allocated_m_selfinfo(::GM_RankInfo* m_selfinfo) {
  delete m_selfinfo_;
  m_selfinfo_ = m_selfinfo;
  if (m_selfinfo) {
    set_has_m_selfinfo();
  } else {
    clear_has_m_selfinfo();
  }
}

// repeated .GM_RankInfo m_RankInfo = 4;
inline int GM_RankListReturn::m_rankinfo_size() const {
  return m_rankinfo_.size();
}
inline void GM_RankListReturn::clear_m_rankinfo() {
  m_rankinfo_.Clear();
}
inline const ::GM_RankInfo& GM_RankListReturn::m_rankinfo(int index) const {
  return m_rankinfo_.Get(index);
}
inline ::GM_RankInfo* GM_RankListReturn::mutable_m_rankinfo(int index) {
  return m_rankinfo_.Mutable(index);
}
inline ::GM_RankInfo* GM_RankListReturn::add_m_rankinfo() {
  return m_rankinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_RankInfo >&
GM_RankListReturn::m_rankinfo() const {
  return m_rankinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_RankInfo >*
GM_RankListReturn::mutable_m_rankinfo() {
  return &m_rankinfo_;
}

// -------------------------------------------------------------------

// GM_AllRankListRequest

// required int32 m_RoleID = 1;
inline bool GM_AllRankListRequest::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_AllRankListRequest::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_AllRankListRequest::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_AllRankListRequest::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 GM_AllRankListRequest::m_roleid() const {
  return m_roleid_;
}
inline void GM_AllRankListRequest::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// -------------------------------------------------------------------

// GM_AllRankTypeListReturn

// required int32 count = 1;
inline bool GM_AllRankTypeListReturn::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_AllRankTypeListReturn::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_AllRankTypeListReturn::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_AllRankTypeListReturn::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GM_AllRankTypeListReturn::count() const {
  return count_;
}
inline void GM_AllRankTypeListReturn::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// repeated .GM_RankListReturn ranklist = 2;
inline int GM_AllRankTypeListReturn::ranklist_size() const {
  return ranklist_.size();
}
inline void GM_AllRankTypeListReturn::clear_ranklist() {
  ranklist_.Clear();
}
inline const ::GM_RankListReturn& GM_AllRankTypeListReturn::ranklist(int index) const {
  return ranklist_.Get(index);
}
inline ::GM_RankListReturn* GM_AllRankTypeListReturn::mutable_ranklist(int index) {
  return ranklist_.Mutable(index);
}
inline ::GM_RankListReturn* GM_AllRankTypeListReturn::add_ranklist() {
  return ranklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_RankListReturn >&
GM_AllRankTypeListReturn::ranklist() const {
  return ranklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_RankListReturn >*
GM_AllRankTypeListReturn::mutable_ranklist() {
  return &ranklist_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_rank_2etxt__INCLUDED
