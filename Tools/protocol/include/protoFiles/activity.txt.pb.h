// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: activity.txt

#ifndef PROTOBUF_activity_2etxt__INCLUDED
#define PROTOBUF_activity_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_activity_2etxt();
void protobuf_AssignDesc_activity_2etxt();
void protobuf_ShutdownFile_activity_2etxt();

class GM_RewardObj;
class GM_RewardInfo;
class GM_ChargeInfo;
class GM_GetReward_Result;
class GM_RequestGetReward;
class GM_FristChargeData;
class GM_GetWeaponResult;

// ===================================================================

class GM_RewardObj : public ::google::protobuf::Message {
 public:
  GM_RewardObj();
  virtual ~GM_RewardObj();

  GM_RewardObj(const GM_RewardObj& from);

  inline GM_RewardObj& operator=(const GM_RewardObj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RewardObj& default_instance();

  void Swap(GM_RewardObj* other);

  // implements Message ----------------------------------------------

  GM_RewardObj* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RewardObj& from);
  void MergeFrom(const GM_RewardObj& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objid = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjidFieldNumber = 1;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_RewardObj)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objid_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2etxt();
  friend void protobuf_AssignDesc_activity_2etxt();
  friend void protobuf_ShutdownFile_activity_2etxt();

  void InitAsDefaultInstance();
  static GM_RewardObj* default_instance_;
};
// -------------------------------------------------------------------

class GM_RewardInfo : public ::google::protobuf::Message {
 public:
  GM_RewardInfo();
  virtual ~GM_RewardInfo();

  GM_RewardInfo(const GM_RewardInfo& from);

  inline GM_RewardInfo& operator=(const GM_RewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RewardInfo& default_instance();

  void Swap(GM_RewardInfo* other);

  // implements Message ----------------------------------------------

  GM_RewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RewardInfo& from);
  void MergeFrom(const GM_RewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chargecount = 5;
  inline bool has_chargecount() const;
  inline void clear_chargecount();
  static const int kChargecountFieldNumber = 5;
  inline ::google::protobuf::int32 chargecount() const;
  inline void set_chargecount(::google::protobuf::int32 value);

  // optional int32 gold = 1;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 1;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // optional int32 money = 2;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 2;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // optional int32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 percentgold = 6;
  inline bool has_percentgold() const;
  inline void clear_percentgold();
  static const int kPercentgoldFieldNumber = 6;
  inline ::google::protobuf::int32 percentgold() const;
  inline void set_percentgold(::google::protobuf::int32 value);

  // optional int32 percentmoney = 7;
  inline bool has_percentmoney() const;
  inline void clear_percentmoney();
  static const int kPercentmoneyFieldNumber = 7;
  inline ::google::protobuf::int32 percentmoney() const;
  inline void set_percentmoney(::google::protobuf::int32 value);

  // required int32 giftbag_objid = 8;
  inline bool has_giftbag_objid() const;
  inline void clear_giftbag_objid();
  static const int kGiftbagObjidFieldNumber = 8;
  inline ::google::protobuf::int32 giftbag_objid() const;
  inline void set_giftbag_objid(::google::protobuf::int32 value);

  // repeated .GM_RewardObj objs = 4;
  inline int objs_size() const;
  inline void clear_objs();
  static const int kObjsFieldNumber = 4;
  inline const ::GM_RewardObj& objs(int index) const;
  inline ::GM_RewardObj* mutable_objs(int index);
  inline ::GM_RewardObj* add_objs();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_RewardObj >&
      objs() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_RewardObj >*
      mutable_objs();

  // @@protoc_insertion_point(class_scope:GM_RewardInfo)
 private:
  inline void set_has_chargecount();
  inline void clear_has_chargecount();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_percentgold();
  inline void clear_has_percentgold();
  inline void set_has_percentmoney();
  inline void clear_has_percentmoney();
  inline void set_has_giftbag_objid();
  inline void clear_has_giftbag_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chargecount_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 percentgold_;
  ::google::protobuf::int32 percentmoney_;
  ::google::protobuf::RepeatedPtrField< ::GM_RewardObj > objs_;
  ::google::protobuf::int32 giftbag_objid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2etxt();
  friend void protobuf_AssignDesc_activity_2etxt();
  friend void protobuf_ShutdownFile_activity_2etxt();

  void InitAsDefaultInstance();
  static GM_RewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class GM_ChargeInfo : public ::google::protobuf::Message {
 public:
  GM_ChargeInfo();
  virtual ~GM_ChargeInfo();

  GM_ChargeInfo(const GM_ChargeInfo& from);

  inline GM_ChargeInfo& operator=(const GM_ChargeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_ChargeInfo& default_instance();

  void Swap(GM_ChargeInfo* other);

  // implements Message ----------------------------------------------

  GM_ChargeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_ChargeInfo& from);
  void MergeFrom(const GM_ChargeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 firstchargedata = 1;
  inline bool has_firstchargedata() const;
  inline void clear_firstchargedata();
  static const int kFirstchargedataFieldNumber = 1;
  inline ::google::protobuf::int32 firstchargedata() const;
  inline void set_firstchargedata(::google::protobuf::int32 value);

  // repeated int32 oncechargedata = 2;
  inline int oncechargedata_size() const;
  inline void clear_oncechargedata();
  static const int kOncechargedataFieldNumber = 2;
  inline ::google::protobuf::int32 oncechargedata(int index) const;
  inline void set_oncechargedata(int index, ::google::protobuf::int32 value);
  inline void add_oncechargedata(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      oncechargedata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_oncechargedata();

  // repeated int32 totalchargedata = 3;
  inline int totalchargedata_size() const;
  inline void clear_totalchargedata();
  static const int kTotalchargedataFieldNumber = 3;
  inline ::google::protobuf::int32 totalchargedata(int index) const;
  inline void set_totalchargedata(int index, ::google::protobuf::int32 value);
  inline void add_totalchargedata(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      totalchargedata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_totalchargedata();

  // optional int32 dailychargedata = 8;
  inline bool has_dailychargedata() const;
  inline void clear_dailychargedata();
  static const int kDailychargedataFieldNumber = 8;
  inline ::google::protobuf::int32 dailychargedata() const;
  inline void set_dailychargedata(::google::protobuf::int32 value);

  // optional int32 dailychargecount = 9;
  inline bool has_dailychargecount() const;
  inline void clear_dailychargecount();
  static const int kDailychargecountFieldNumber = 9;
  inline ::google::protobuf::int32 dailychargecount() const;
  inline void set_dailychargecount(::google::protobuf::int32 value);

  // repeated .GM_RewardInfo firstcharge = 4;
  inline int firstcharge_size() const;
  inline void clear_firstcharge();
  static const int kFirstchargeFieldNumber = 4;
  inline const ::GM_RewardInfo& firstcharge(int index) const;
  inline ::GM_RewardInfo* mutable_firstcharge(int index);
  inline ::GM_RewardInfo* add_firstcharge();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo >&
      firstcharge() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo >*
      mutable_firstcharge();

  // repeated .GM_RewardInfo oncecharge = 5;
  inline int oncecharge_size() const;
  inline void clear_oncecharge();
  static const int kOncechargeFieldNumber = 5;
  inline const ::GM_RewardInfo& oncecharge(int index) const;
  inline ::GM_RewardInfo* mutable_oncecharge(int index);
  inline ::GM_RewardInfo* add_oncecharge();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo >&
      oncecharge() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo >*
      mutable_oncecharge();

  // repeated .GM_RewardInfo totalcharge = 6;
  inline int totalcharge_size() const;
  inline void clear_totalcharge();
  static const int kTotalchargeFieldNumber = 6;
  inline const ::GM_RewardInfo& totalcharge(int index) const;
  inline ::GM_RewardInfo* mutable_totalcharge(int index);
  inline ::GM_RewardInfo* add_totalcharge();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo >&
      totalcharge() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo >*
      mutable_totalcharge();

  // repeated .GM_RewardInfo dailycharge = 7;
  inline int dailycharge_size() const;
  inline void clear_dailycharge();
  static const int kDailychargeFieldNumber = 7;
  inline const ::GM_RewardInfo& dailycharge(int index) const;
  inline ::GM_RewardInfo* mutable_dailycharge(int index);
  inline ::GM_RewardInfo* add_dailycharge();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo >&
      dailycharge() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo >*
      mutable_dailycharge();

  // optional string firsttxt1 = 11;
  inline bool has_firsttxt1() const;
  inline void clear_firsttxt1();
  static const int kFirsttxt1FieldNumber = 11;
  inline const ::std::string& firsttxt1() const;
  inline void set_firsttxt1(const ::std::string& value);
  inline void set_firsttxt1(const char* value);
  inline void set_firsttxt1(const char* value, size_t size);
  inline ::std::string* mutable_firsttxt1();
  inline ::std::string* release_firsttxt1();
  inline void set_allocated_firsttxt1(::std::string* firsttxt1);

  // optional string firsttxt2 = 12;
  inline bool has_firsttxt2() const;
  inline void clear_firsttxt2();
  static const int kFirsttxt2FieldNumber = 12;
  inline const ::std::string& firsttxt2() const;
  inline void set_firsttxt2(const ::std::string& value);
  inline void set_firsttxt2(const char* value);
  inline void set_firsttxt2(const char* value, size_t size);
  inline ::std::string* mutable_firsttxt2();
  inline ::std::string* release_firsttxt2();
  inline void set_allocated_firsttxt2(::std::string* firsttxt2);

  // optional string dailytxt1 = 13;
  inline bool has_dailytxt1() const;
  inline void clear_dailytxt1();
  static const int kDailytxt1FieldNumber = 13;
  inline const ::std::string& dailytxt1() const;
  inline void set_dailytxt1(const ::std::string& value);
  inline void set_dailytxt1(const char* value);
  inline void set_dailytxt1(const char* value, size_t size);
  inline ::std::string* mutable_dailytxt1();
  inline ::std::string* release_dailytxt1();
  inline void set_allocated_dailytxt1(::std::string* dailytxt1);

  // optional string dailytxt2 = 14;
  inline bool has_dailytxt2() const;
  inline void clear_dailytxt2();
  static const int kDailytxt2FieldNumber = 14;
  inline const ::std::string& dailytxt2() const;
  inline void set_dailytxt2(const ::std::string& value);
  inline void set_dailytxt2(const char* value);
  inline void set_dailytxt2(const char* value, size_t size);
  inline ::std::string* mutable_dailytxt2();
  inline ::std::string* release_dailytxt2();
  inline void set_allocated_dailytxt2(::std::string* dailytxt2);

  // optional string oncetxt1 = 15;
  inline bool has_oncetxt1() const;
  inline void clear_oncetxt1();
  static const int kOncetxt1FieldNumber = 15;
  inline const ::std::string& oncetxt1() const;
  inline void set_oncetxt1(const ::std::string& value);
  inline void set_oncetxt1(const char* value);
  inline void set_oncetxt1(const char* value, size_t size);
  inline ::std::string* mutable_oncetxt1();
  inline ::std::string* release_oncetxt1();
  inline void set_allocated_oncetxt1(::std::string* oncetxt1);

  // optional string oncetxt2 = 16;
  inline bool has_oncetxt2() const;
  inline void clear_oncetxt2();
  static const int kOncetxt2FieldNumber = 16;
  inline const ::std::string& oncetxt2() const;
  inline void set_oncetxt2(const ::std::string& value);
  inline void set_oncetxt2(const char* value);
  inline void set_oncetxt2(const char* value, size_t size);
  inline ::std::string* mutable_oncetxt2();
  inline ::std::string* release_oncetxt2();
  inline void set_allocated_oncetxt2(::std::string* oncetxt2);

  // optional string totaltxt1 = 17;
  inline bool has_totaltxt1() const;
  inline void clear_totaltxt1();
  static const int kTotaltxt1FieldNumber = 17;
  inline const ::std::string& totaltxt1() const;
  inline void set_totaltxt1(const ::std::string& value);
  inline void set_totaltxt1(const char* value);
  inline void set_totaltxt1(const char* value, size_t size);
  inline ::std::string* mutable_totaltxt1();
  inline ::std::string* release_totaltxt1();
  inline void set_allocated_totaltxt1(::std::string* totaltxt1);

  // optional string totaltxt2 = 18;
  inline bool has_totaltxt2() const;
  inline void clear_totaltxt2();
  static const int kTotaltxt2FieldNumber = 18;
  inline const ::std::string& totaltxt2() const;
  inline void set_totaltxt2(const ::std::string& value);
  inline void set_totaltxt2(const char* value);
  inline void set_totaltxt2(const char* value, size_t size);
  inline ::std::string* mutable_totaltxt2();
  inline ::std::string* release_totaltxt2();
  inline void set_allocated_totaltxt2(::std::string* totaltxt2);

  // optional int32 totalchargecount = 10;
  inline bool has_totalchargecount() const;
  inline void clear_totalchargecount();
  static const int kTotalchargecountFieldNumber = 10;
  inline ::google::protobuf::int32 totalchargecount() const;
  inline void set_totalchargecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_ChargeInfo)
 private:
  inline void set_has_firstchargedata();
  inline void clear_has_firstchargedata();
  inline void set_has_dailychargedata();
  inline void clear_has_dailychargedata();
  inline void set_has_dailychargecount();
  inline void clear_has_dailychargecount();
  inline void set_has_firsttxt1();
  inline void clear_has_firsttxt1();
  inline void set_has_firsttxt2();
  inline void clear_has_firsttxt2();
  inline void set_has_dailytxt1();
  inline void clear_has_dailytxt1();
  inline void set_has_dailytxt2();
  inline void clear_has_dailytxt2();
  inline void set_has_oncetxt1();
  inline void clear_has_oncetxt1();
  inline void set_has_oncetxt2();
  inline void clear_has_oncetxt2();
  inline void set_has_totaltxt1();
  inline void clear_has_totaltxt1();
  inline void set_has_totaltxt2();
  inline void clear_has_totaltxt2();
  inline void set_has_totalchargecount();
  inline void clear_has_totalchargecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > oncechargedata_;
  ::google::protobuf::int32 firstchargedata_;
  ::google::protobuf::int32 dailychargedata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > totalchargedata_;
  ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo > firstcharge_;
  ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo > oncecharge_;
  ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo > totalcharge_;
  ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo > dailycharge_;
  ::std::string* firsttxt1_;
  ::std::string* firsttxt2_;
  ::google::protobuf::int32 dailychargecount_;
  ::google::protobuf::int32 totalchargecount_;
  ::std::string* dailytxt1_;
  ::std::string* dailytxt2_;
  ::std::string* oncetxt1_;
  ::std::string* oncetxt2_;
  ::std::string* totaltxt1_;
  ::std::string* totaltxt2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2etxt();
  friend void protobuf_AssignDesc_activity_2etxt();
  friend void protobuf_ShutdownFile_activity_2etxt();

  void InitAsDefaultInstance();
  static GM_ChargeInfo* default_instance_;
};
// -------------------------------------------------------------------

class GM_GetReward_Result : public ::google::protobuf::Message {
 public:
  GM_GetReward_Result();
  virtual ~GM_GetReward_Result();

  GM_GetReward_Result(const GM_GetReward_Result& from);

  inline GM_GetReward_Result& operator=(const GM_GetReward_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_GetReward_Result& default_instance();

  void Swap(GM_GetReward_Result* other);

  // implements Message ----------------------------------------------

  GM_GetReward_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_GetReward_Result& from);
  void MergeFrom(const GM_GetReward_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint32 leftTimes = 2;
  inline bool has_lefttimes() const;
  inline void clear_lefttimes();
  static const int kLeftTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 lefttimes() const;
  inline void set_lefttimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GM_GetReward_Result)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_lefttimes();
  inline void clear_has_lefttimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 lefttimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2etxt();
  friend void protobuf_AssignDesc_activity_2etxt();
  friend void protobuf_ShutdownFile_activity_2etxt();

  void InitAsDefaultInstance();
  static GM_GetReward_Result* default_instance_;
};
// -------------------------------------------------------------------

class GM_RequestGetReward : public ::google::protobuf::Message {
 public:
  GM_RequestGetReward();
  virtual ~GM_RequestGetReward();

  GM_RequestGetReward(const GM_RequestGetReward& from);

  inline GM_RequestGetReward& operator=(const GM_RequestGetReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_RequestGetReward& default_instance();

  void Swap(GM_RequestGetReward* other);

  // implements Message ----------------------------------------------

  GM_RequestGetReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_RequestGetReward& from);
  void MergeFrom(const GM_RequestGetReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 whichone = 2;
  inline bool has_whichone() const;
  inline void clear_whichone();
  static const int kWhichoneFieldNumber = 2;
  inline ::google::protobuf::int32 whichone() const;
  inline void set_whichone(::google::protobuf::int32 value);

  // optional int32 objectid = 3;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 3;
  inline ::google::protobuf::int32 objectid() const;
  inline void set_objectid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_RequestGetReward)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_whichone();
  inline void clear_has_whichone();
  inline void set_has_objectid();
  inline void clear_has_objectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 whichone_;
  ::google::protobuf::int32 objectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2etxt();
  friend void protobuf_AssignDesc_activity_2etxt();
  friend void protobuf_ShutdownFile_activity_2etxt();

  void InitAsDefaultInstance();
  static GM_RequestGetReward* default_instance_;
};
// -------------------------------------------------------------------

class GM_FristChargeData : public ::google::protobuf::Message {
 public:
  GM_FristChargeData();
  virtual ~GM_FristChargeData();

  GM_FristChargeData(const GM_FristChargeData& from);

  inline GM_FristChargeData& operator=(const GM_FristChargeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_FristChargeData& default_instance();

  void Swap(GM_FristChargeData* other);

  // implements Message ----------------------------------------------

  GM_FristChargeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_FristChargeData& from);
  void MergeFrom(const GM_FristChargeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_firststate = 1;
  inline bool has_m_firststate() const;
  inline void clear_m_firststate();
  static const int kMFirststateFieldNumber = 1;
  inline ::google::protobuf::int32 m_firststate() const;
  inline void set_m_firststate(::google::protobuf::int32 value);

  // repeated .GM_RewardObj m_objectid = 2;
  inline int m_objectid_size() const;
  inline void clear_m_objectid();
  static const int kMObjectidFieldNumber = 2;
  inline const ::GM_RewardObj& m_objectid(int index) const;
  inline ::GM_RewardObj* mutable_m_objectid(int index);
  inline ::GM_RewardObj* add_m_objectid();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_RewardObj >&
      m_objectid() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_RewardObj >*
      mutable_m_objectid();

  // @@protoc_insertion_point(class_scope:GM_FristChargeData)
 private:
  inline void set_has_m_firststate();
  inline void clear_has_m_firststate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_RewardObj > m_objectid_;
  ::google::protobuf::int32 m_firststate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2etxt();
  friend void protobuf_AssignDesc_activity_2etxt();
  friend void protobuf_ShutdownFile_activity_2etxt();

  void InitAsDefaultInstance();
  static GM_FristChargeData* default_instance_;
};
// -------------------------------------------------------------------

class GM_GetWeaponResult : public ::google::protobuf::Message {
 public:
  GM_GetWeaponResult();
  virtual ~GM_GetWeaponResult();

  GM_GetWeaponResult(const GM_GetWeaponResult& from);

  inline GM_GetWeaponResult& operator=(const GM_GetWeaponResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_GetWeaponResult& default_instance();

  void Swap(GM_GetWeaponResult* other);

  // implements Message ----------------------------------------------

  GM_GetWeaponResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_GetWeaponResult& from);
  void MergeFrom(const GM_GetWeaponResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_GetWeaponResult)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_activity_2etxt();
  friend void protobuf_AssignDesc_activity_2etxt();
  friend void protobuf_ShutdownFile_activity_2etxt();

  void InitAsDefaultInstance();
  static GM_GetWeaponResult* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_RewardObj

// required int32 objid = 1;
inline bool GM_RewardObj::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RewardObj::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RewardObj::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RewardObj::clear_objid() {
  objid_ = 0;
  clear_has_objid();
}
inline ::google::protobuf::int32 GM_RewardObj::objid() const {
  return objid_;
}
inline void GM_RewardObj::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// optional int32 count = 2;
inline bool GM_RewardObj::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RewardObj::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RewardObj::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RewardObj::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GM_RewardObj::count() const {
  return count_;
}
inline void GM_RewardObj::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// GM_RewardInfo

// optional int32 chargecount = 5;
inline bool GM_RewardInfo::has_chargecount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RewardInfo::set_has_chargecount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RewardInfo::clear_has_chargecount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RewardInfo::clear_chargecount() {
  chargecount_ = 0;
  clear_has_chargecount();
}
inline ::google::protobuf::int32 GM_RewardInfo::chargecount() const {
  return chargecount_;
}
inline void GM_RewardInfo::set_chargecount(::google::protobuf::int32 value) {
  set_has_chargecount();
  chargecount_ = value;
}

// optional int32 gold = 1;
inline bool GM_RewardInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RewardInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RewardInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RewardInfo::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 GM_RewardInfo::gold() const {
  return gold_;
}
inline void GM_RewardInfo::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// optional int32 money = 2;
inline bool GM_RewardInfo::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_RewardInfo::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_RewardInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_RewardInfo::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 GM_RewardInfo::money() const {
  return money_;
}
inline void GM_RewardInfo::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
}

// optional int32 exp = 3;
inline bool GM_RewardInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_RewardInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_RewardInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_RewardInfo::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 GM_RewardInfo::exp() const {
  return exp_;
}
inline void GM_RewardInfo::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 percentgold = 6;
inline bool GM_RewardInfo::has_percentgold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_RewardInfo::set_has_percentgold() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_RewardInfo::clear_has_percentgold() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_RewardInfo::clear_percentgold() {
  percentgold_ = 0;
  clear_has_percentgold();
}
inline ::google::protobuf::int32 GM_RewardInfo::percentgold() const {
  return percentgold_;
}
inline void GM_RewardInfo::set_percentgold(::google::protobuf::int32 value) {
  set_has_percentgold();
  percentgold_ = value;
}

// optional int32 percentmoney = 7;
inline bool GM_RewardInfo::has_percentmoney() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_RewardInfo::set_has_percentmoney() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_RewardInfo::clear_has_percentmoney() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_RewardInfo::clear_percentmoney() {
  percentmoney_ = 0;
  clear_has_percentmoney();
}
inline ::google::protobuf::int32 GM_RewardInfo::percentmoney() const {
  return percentmoney_;
}
inline void GM_RewardInfo::set_percentmoney(::google::protobuf::int32 value) {
  set_has_percentmoney();
  percentmoney_ = value;
}

// required int32 giftbag_objid = 8;
inline bool GM_RewardInfo::has_giftbag_objid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_RewardInfo::set_has_giftbag_objid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_RewardInfo::clear_has_giftbag_objid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_RewardInfo::clear_giftbag_objid() {
  giftbag_objid_ = 0;
  clear_has_giftbag_objid();
}
inline ::google::protobuf::int32 GM_RewardInfo::giftbag_objid() const {
  return giftbag_objid_;
}
inline void GM_RewardInfo::set_giftbag_objid(::google::protobuf::int32 value) {
  set_has_giftbag_objid();
  giftbag_objid_ = value;
}

// repeated .GM_RewardObj objs = 4;
inline int GM_RewardInfo::objs_size() const {
  return objs_.size();
}
inline void GM_RewardInfo::clear_objs() {
  objs_.Clear();
}
inline const ::GM_RewardObj& GM_RewardInfo::objs(int index) const {
  return objs_.Get(index);
}
inline ::GM_RewardObj* GM_RewardInfo::mutable_objs(int index) {
  return objs_.Mutable(index);
}
inline ::GM_RewardObj* GM_RewardInfo::add_objs() {
  return objs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_RewardObj >&
GM_RewardInfo::objs() const {
  return objs_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_RewardObj >*
GM_RewardInfo::mutable_objs() {
  return &objs_;
}

// -------------------------------------------------------------------

// GM_ChargeInfo

// required int32 firstchargedata = 1;
inline bool GM_ChargeInfo::has_firstchargedata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_ChargeInfo::set_has_firstchargedata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_ChargeInfo::clear_has_firstchargedata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_ChargeInfo::clear_firstchargedata() {
  firstchargedata_ = 0;
  clear_has_firstchargedata();
}
inline ::google::protobuf::int32 GM_ChargeInfo::firstchargedata() const {
  return firstchargedata_;
}
inline void GM_ChargeInfo::set_firstchargedata(::google::protobuf::int32 value) {
  set_has_firstchargedata();
  firstchargedata_ = value;
}

// repeated int32 oncechargedata = 2;
inline int GM_ChargeInfo::oncechargedata_size() const {
  return oncechargedata_.size();
}
inline void GM_ChargeInfo::clear_oncechargedata() {
  oncechargedata_.Clear();
}
inline ::google::protobuf::int32 GM_ChargeInfo::oncechargedata(int index) const {
  return oncechargedata_.Get(index);
}
inline void GM_ChargeInfo::set_oncechargedata(int index, ::google::protobuf::int32 value) {
  oncechargedata_.Set(index, value);
}
inline void GM_ChargeInfo::add_oncechargedata(::google::protobuf::int32 value) {
  oncechargedata_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GM_ChargeInfo::oncechargedata() const {
  return oncechargedata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GM_ChargeInfo::mutable_oncechargedata() {
  return &oncechargedata_;
}

// repeated int32 totalchargedata = 3;
inline int GM_ChargeInfo::totalchargedata_size() const {
  return totalchargedata_.size();
}
inline void GM_ChargeInfo::clear_totalchargedata() {
  totalchargedata_.Clear();
}
inline ::google::protobuf::int32 GM_ChargeInfo::totalchargedata(int index) const {
  return totalchargedata_.Get(index);
}
inline void GM_ChargeInfo::set_totalchargedata(int index, ::google::protobuf::int32 value) {
  totalchargedata_.Set(index, value);
}
inline void GM_ChargeInfo::add_totalchargedata(::google::protobuf::int32 value) {
  totalchargedata_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GM_ChargeInfo::totalchargedata() const {
  return totalchargedata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GM_ChargeInfo::mutable_totalchargedata() {
  return &totalchargedata_;
}

// optional int32 dailychargedata = 8;
inline bool GM_ChargeInfo::has_dailychargedata() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_ChargeInfo::set_has_dailychargedata() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_ChargeInfo::clear_has_dailychargedata() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_ChargeInfo::clear_dailychargedata() {
  dailychargedata_ = 0;
  clear_has_dailychargedata();
}
inline ::google::protobuf::int32 GM_ChargeInfo::dailychargedata() const {
  return dailychargedata_;
}
inline void GM_ChargeInfo::set_dailychargedata(::google::protobuf::int32 value) {
  set_has_dailychargedata();
  dailychargedata_ = value;
}

// optional int32 dailychargecount = 9;
inline bool GM_ChargeInfo::has_dailychargecount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_ChargeInfo::set_has_dailychargecount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_ChargeInfo::clear_has_dailychargecount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_ChargeInfo::clear_dailychargecount() {
  dailychargecount_ = 0;
  clear_has_dailychargecount();
}
inline ::google::protobuf::int32 GM_ChargeInfo::dailychargecount() const {
  return dailychargecount_;
}
inline void GM_ChargeInfo::set_dailychargecount(::google::protobuf::int32 value) {
  set_has_dailychargecount();
  dailychargecount_ = value;
}

// repeated .GM_RewardInfo firstcharge = 4;
inline int GM_ChargeInfo::firstcharge_size() const {
  return firstcharge_.size();
}
inline void GM_ChargeInfo::clear_firstcharge() {
  firstcharge_.Clear();
}
inline const ::GM_RewardInfo& GM_ChargeInfo::firstcharge(int index) const {
  return firstcharge_.Get(index);
}
inline ::GM_RewardInfo* GM_ChargeInfo::mutable_firstcharge(int index) {
  return firstcharge_.Mutable(index);
}
inline ::GM_RewardInfo* GM_ChargeInfo::add_firstcharge() {
  return firstcharge_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo >&
GM_ChargeInfo::firstcharge() const {
  return firstcharge_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo >*
GM_ChargeInfo::mutable_firstcharge() {
  return &firstcharge_;
}

// repeated .GM_RewardInfo oncecharge = 5;
inline int GM_ChargeInfo::oncecharge_size() const {
  return oncecharge_.size();
}
inline void GM_ChargeInfo::clear_oncecharge() {
  oncecharge_.Clear();
}
inline const ::GM_RewardInfo& GM_ChargeInfo::oncecharge(int index) const {
  return oncecharge_.Get(index);
}
inline ::GM_RewardInfo* GM_ChargeInfo::mutable_oncecharge(int index) {
  return oncecharge_.Mutable(index);
}
inline ::GM_RewardInfo* GM_ChargeInfo::add_oncecharge() {
  return oncecharge_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo >&
GM_ChargeInfo::oncecharge() const {
  return oncecharge_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo >*
GM_ChargeInfo::mutable_oncecharge() {
  return &oncecharge_;
}

// repeated .GM_RewardInfo totalcharge = 6;
inline int GM_ChargeInfo::totalcharge_size() const {
  return totalcharge_.size();
}
inline void GM_ChargeInfo::clear_totalcharge() {
  totalcharge_.Clear();
}
inline const ::GM_RewardInfo& GM_ChargeInfo::totalcharge(int index) const {
  return totalcharge_.Get(index);
}
inline ::GM_RewardInfo* GM_ChargeInfo::mutable_totalcharge(int index) {
  return totalcharge_.Mutable(index);
}
inline ::GM_RewardInfo* GM_ChargeInfo::add_totalcharge() {
  return totalcharge_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo >&
GM_ChargeInfo::totalcharge() const {
  return totalcharge_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo >*
GM_ChargeInfo::mutable_totalcharge() {
  return &totalcharge_;
}

// repeated .GM_RewardInfo dailycharge = 7;
inline int GM_ChargeInfo::dailycharge_size() const {
  return dailycharge_.size();
}
inline void GM_ChargeInfo::clear_dailycharge() {
  dailycharge_.Clear();
}
inline const ::GM_RewardInfo& GM_ChargeInfo::dailycharge(int index) const {
  return dailycharge_.Get(index);
}
inline ::GM_RewardInfo* GM_ChargeInfo::mutable_dailycharge(int index) {
  return dailycharge_.Mutable(index);
}
inline ::GM_RewardInfo* GM_ChargeInfo::add_dailycharge() {
  return dailycharge_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo >&
GM_ChargeInfo::dailycharge() const {
  return dailycharge_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_RewardInfo >*
GM_ChargeInfo::mutable_dailycharge() {
  return &dailycharge_;
}

// optional string firsttxt1 = 11;
inline bool GM_ChargeInfo::has_firsttxt1() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GM_ChargeInfo::set_has_firsttxt1() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GM_ChargeInfo::clear_has_firsttxt1() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GM_ChargeInfo::clear_firsttxt1() {
  if (firsttxt1_ != &::google::protobuf::internal::kEmptyString) {
    firsttxt1_->clear();
  }
  clear_has_firsttxt1();
}
inline const ::std::string& GM_ChargeInfo::firsttxt1() const {
  return *firsttxt1_;
}
inline void GM_ChargeInfo::set_firsttxt1(const ::std::string& value) {
  set_has_firsttxt1();
  if (firsttxt1_ == &::google::protobuf::internal::kEmptyString) {
    firsttxt1_ = new ::std::string;
  }
  firsttxt1_->assign(value);
}
inline void GM_ChargeInfo::set_firsttxt1(const char* value) {
  set_has_firsttxt1();
  if (firsttxt1_ == &::google::protobuf::internal::kEmptyString) {
    firsttxt1_ = new ::std::string;
  }
  firsttxt1_->assign(value);
}
inline void GM_ChargeInfo::set_firsttxt1(const char* value, size_t size) {
  set_has_firsttxt1();
  if (firsttxt1_ == &::google::protobuf::internal::kEmptyString) {
    firsttxt1_ = new ::std::string;
  }
  firsttxt1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_ChargeInfo::mutable_firsttxt1() {
  set_has_firsttxt1();
  if (firsttxt1_ == &::google::protobuf::internal::kEmptyString) {
    firsttxt1_ = new ::std::string;
  }
  return firsttxt1_;
}
inline ::std::string* GM_ChargeInfo::release_firsttxt1() {
  clear_has_firsttxt1();
  if (firsttxt1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = firsttxt1_;
    firsttxt1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_ChargeInfo::set_allocated_firsttxt1(::std::string* firsttxt1) {
  if (firsttxt1_ != &::google::protobuf::internal::kEmptyString) {
    delete firsttxt1_;
  }
  if (firsttxt1) {
    set_has_firsttxt1();
    firsttxt1_ = firsttxt1;
  } else {
    clear_has_firsttxt1();
    firsttxt1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string firsttxt2 = 12;
inline bool GM_ChargeInfo::has_firsttxt2() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GM_ChargeInfo::set_has_firsttxt2() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GM_ChargeInfo::clear_has_firsttxt2() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GM_ChargeInfo::clear_firsttxt2() {
  if (firsttxt2_ != &::google::protobuf::internal::kEmptyString) {
    firsttxt2_->clear();
  }
  clear_has_firsttxt2();
}
inline const ::std::string& GM_ChargeInfo::firsttxt2() const {
  return *firsttxt2_;
}
inline void GM_ChargeInfo::set_firsttxt2(const ::std::string& value) {
  set_has_firsttxt2();
  if (firsttxt2_ == &::google::protobuf::internal::kEmptyString) {
    firsttxt2_ = new ::std::string;
  }
  firsttxt2_->assign(value);
}
inline void GM_ChargeInfo::set_firsttxt2(const char* value) {
  set_has_firsttxt2();
  if (firsttxt2_ == &::google::protobuf::internal::kEmptyString) {
    firsttxt2_ = new ::std::string;
  }
  firsttxt2_->assign(value);
}
inline void GM_ChargeInfo::set_firsttxt2(const char* value, size_t size) {
  set_has_firsttxt2();
  if (firsttxt2_ == &::google::protobuf::internal::kEmptyString) {
    firsttxt2_ = new ::std::string;
  }
  firsttxt2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_ChargeInfo::mutable_firsttxt2() {
  set_has_firsttxt2();
  if (firsttxt2_ == &::google::protobuf::internal::kEmptyString) {
    firsttxt2_ = new ::std::string;
  }
  return firsttxt2_;
}
inline ::std::string* GM_ChargeInfo::release_firsttxt2() {
  clear_has_firsttxt2();
  if (firsttxt2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = firsttxt2_;
    firsttxt2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_ChargeInfo::set_allocated_firsttxt2(::std::string* firsttxt2) {
  if (firsttxt2_ != &::google::protobuf::internal::kEmptyString) {
    delete firsttxt2_;
  }
  if (firsttxt2) {
    set_has_firsttxt2();
    firsttxt2_ = firsttxt2;
  } else {
    clear_has_firsttxt2();
    firsttxt2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string dailytxt1 = 13;
inline bool GM_ChargeInfo::has_dailytxt1() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GM_ChargeInfo::set_has_dailytxt1() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GM_ChargeInfo::clear_has_dailytxt1() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GM_ChargeInfo::clear_dailytxt1() {
  if (dailytxt1_ != &::google::protobuf::internal::kEmptyString) {
    dailytxt1_->clear();
  }
  clear_has_dailytxt1();
}
inline const ::std::string& GM_ChargeInfo::dailytxt1() const {
  return *dailytxt1_;
}
inline void GM_ChargeInfo::set_dailytxt1(const ::std::string& value) {
  set_has_dailytxt1();
  if (dailytxt1_ == &::google::protobuf::internal::kEmptyString) {
    dailytxt1_ = new ::std::string;
  }
  dailytxt1_->assign(value);
}
inline void GM_ChargeInfo::set_dailytxt1(const char* value) {
  set_has_dailytxt1();
  if (dailytxt1_ == &::google::protobuf::internal::kEmptyString) {
    dailytxt1_ = new ::std::string;
  }
  dailytxt1_->assign(value);
}
inline void GM_ChargeInfo::set_dailytxt1(const char* value, size_t size) {
  set_has_dailytxt1();
  if (dailytxt1_ == &::google::protobuf::internal::kEmptyString) {
    dailytxt1_ = new ::std::string;
  }
  dailytxt1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_ChargeInfo::mutable_dailytxt1() {
  set_has_dailytxt1();
  if (dailytxt1_ == &::google::protobuf::internal::kEmptyString) {
    dailytxt1_ = new ::std::string;
  }
  return dailytxt1_;
}
inline ::std::string* GM_ChargeInfo::release_dailytxt1() {
  clear_has_dailytxt1();
  if (dailytxt1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dailytxt1_;
    dailytxt1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_ChargeInfo::set_allocated_dailytxt1(::std::string* dailytxt1) {
  if (dailytxt1_ != &::google::protobuf::internal::kEmptyString) {
    delete dailytxt1_;
  }
  if (dailytxt1) {
    set_has_dailytxt1();
    dailytxt1_ = dailytxt1;
  } else {
    clear_has_dailytxt1();
    dailytxt1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string dailytxt2 = 14;
inline bool GM_ChargeInfo::has_dailytxt2() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GM_ChargeInfo::set_has_dailytxt2() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GM_ChargeInfo::clear_has_dailytxt2() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GM_ChargeInfo::clear_dailytxt2() {
  if (dailytxt2_ != &::google::protobuf::internal::kEmptyString) {
    dailytxt2_->clear();
  }
  clear_has_dailytxt2();
}
inline const ::std::string& GM_ChargeInfo::dailytxt2() const {
  return *dailytxt2_;
}
inline void GM_ChargeInfo::set_dailytxt2(const ::std::string& value) {
  set_has_dailytxt2();
  if (dailytxt2_ == &::google::protobuf::internal::kEmptyString) {
    dailytxt2_ = new ::std::string;
  }
  dailytxt2_->assign(value);
}
inline void GM_ChargeInfo::set_dailytxt2(const char* value) {
  set_has_dailytxt2();
  if (dailytxt2_ == &::google::protobuf::internal::kEmptyString) {
    dailytxt2_ = new ::std::string;
  }
  dailytxt2_->assign(value);
}
inline void GM_ChargeInfo::set_dailytxt2(const char* value, size_t size) {
  set_has_dailytxt2();
  if (dailytxt2_ == &::google::protobuf::internal::kEmptyString) {
    dailytxt2_ = new ::std::string;
  }
  dailytxt2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_ChargeInfo::mutable_dailytxt2() {
  set_has_dailytxt2();
  if (dailytxt2_ == &::google::protobuf::internal::kEmptyString) {
    dailytxt2_ = new ::std::string;
  }
  return dailytxt2_;
}
inline ::std::string* GM_ChargeInfo::release_dailytxt2() {
  clear_has_dailytxt2();
  if (dailytxt2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dailytxt2_;
    dailytxt2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_ChargeInfo::set_allocated_dailytxt2(::std::string* dailytxt2) {
  if (dailytxt2_ != &::google::protobuf::internal::kEmptyString) {
    delete dailytxt2_;
  }
  if (dailytxt2) {
    set_has_dailytxt2();
    dailytxt2_ = dailytxt2;
  } else {
    clear_has_dailytxt2();
    dailytxt2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string oncetxt1 = 15;
inline bool GM_ChargeInfo::has_oncetxt1() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GM_ChargeInfo::set_has_oncetxt1() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GM_ChargeInfo::clear_has_oncetxt1() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GM_ChargeInfo::clear_oncetxt1() {
  if (oncetxt1_ != &::google::protobuf::internal::kEmptyString) {
    oncetxt1_->clear();
  }
  clear_has_oncetxt1();
}
inline const ::std::string& GM_ChargeInfo::oncetxt1() const {
  return *oncetxt1_;
}
inline void GM_ChargeInfo::set_oncetxt1(const ::std::string& value) {
  set_has_oncetxt1();
  if (oncetxt1_ == &::google::protobuf::internal::kEmptyString) {
    oncetxt1_ = new ::std::string;
  }
  oncetxt1_->assign(value);
}
inline void GM_ChargeInfo::set_oncetxt1(const char* value) {
  set_has_oncetxt1();
  if (oncetxt1_ == &::google::protobuf::internal::kEmptyString) {
    oncetxt1_ = new ::std::string;
  }
  oncetxt1_->assign(value);
}
inline void GM_ChargeInfo::set_oncetxt1(const char* value, size_t size) {
  set_has_oncetxt1();
  if (oncetxt1_ == &::google::protobuf::internal::kEmptyString) {
    oncetxt1_ = new ::std::string;
  }
  oncetxt1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_ChargeInfo::mutable_oncetxt1() {
  set_has_oncetxt1();
  if (oncetxt1_ == &::google::protobuf::internal::kEmptyString) {
    oncetxt1_ = new ::std::string;
  }
  return oncetxt1_;
}
inline ::std::string* GM_ChargeInfo::release_oncetxt1() {
  clear_has_oncetxt1();
  if (oncetxt1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = oncetxt1_;
    oncetxt1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_ChargeInfo::set_allocated_oncetxt1(::std::string* oncetxt1) {
  if (oncetxt1_ != &::google::protobuf::internal::kEmptyString) {
    delete oncetxt1_;
  }
  if (oncetxt1) {
    set_has_oncetxt1();
    oncetxt1_ = oncetxt1;
  } else {
    clear_has_oncetxt1();
    oncetxt1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string oncetxt2 = 16;
inline bool GM_ChargeInfo::has_oncetxt2() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GM_ChargeInfo::set_has_oncetxt2() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GM_ChargeInfo::clear_has_oncetxt2() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GM_ChargeInfo::clear_oncetxt2() {
  if (oncetxt2_ != &::google::protobuf::internal::kEmptyString) {
    oncetxt2_->clear();
  }
  clear_has_oncetxt2();
}
inline const ::std::string& GM_ChargeInfo::oncetxt2() const {
  return *oncetxt2_;
}
inline void GM_ChargeInfo::set_oncetxt2(const ::std::string& value) {
  set_has_oncetxt2();
  if (oncetxt2_ == &::google::protobuf::internal::kEmptyString) {
    oncetxt2_ = new ::std::string;
  }
  oncetxt2_->assign(value);
}
inline void GM_ChargeInfo::set_oncetxt2(const char* value) {
  set_has_oncetxt2();
  if (oncetxt2_ == &::google::protobuf::internal::kEmptyString) {
    oncetxt2_ = new ::std::string;
  }
  oncetxt2_->assign(value);
}
inline void GM_ChargeInfo::set_oncetxt2(const char* value, size_t size) {
  set_has_oncetxt2();
  if (oncetxt2_ == &::google::protobuf::internal::kEmptyString) {
    oncetxt2_ = new ::std::string;
  }
  oncetxt2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_ChargeInfo::mutable_oncetxt2() {
  set_has_oncetxt2();
  if (oncetxt2_ == &::google::protobuf::internal::kEmptyString) {
    oncetxt2_ = new ::std::string;
  }
  return oncetxt2_;
}
inline ::std::string* GM_ChargeInfo::release_oncetxt2() {
  clear_has_oncetxt2();
  if (oncetxt2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = oncetxt2_;
    oncetxt2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_ChargeInfo::set_allocated_oncetxt2(::std::string* oncetxt2) {
  if (oncetxt2_ != &::google::protobuf::internal::kEmptyString) {
    delete oncetxt2_;
  }
  if (oncetxt2) {
    set_has_oncetxt2();
    oncetxt2_ = oncetxt2;
  } else {
    clear_has_oncetxt2();
    oncetxt2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string totaltxt1 = 17;
inline bool GM_ChargeInfo::has_totaltxt1() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GM_ChargeInfo::set_has_totaltxt1() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GM_ChargeInfo::clear_has_totaltxt1() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GM_ChargeInfo::clear_totaltxt1() {
  if (totaltxt1_ != &::google::protobuf::internal::kEmptyString) {
    totaltxt1_->clear();
  }
  clear_has_totaltxt1();
}
inline const ::std::string& GM_ChargeInfo::totaltxt1() const {
  return *totaltxt1_;
}
inline void GM_ChargeInfo::set_totaltxt1(const ::std::string& value) {
  set_has_totaltxt1();
  if (totaltxt1_ == &::google::protobuf::internal::kEmptyString) {
    totaltxt1_ = new ::std::string;
  }
  totaltxt1_->assign(value);
}
inline void GM_ChargeInfo::set_totaltxt1(const char* value) {
  set_has_totaltxt1();
  if (totaltxt1_ == &::google::protobuf::internal::kEmptyString) {
    totaltxt1_ = new ::std::string;
  }
  totaltxt1_->assign(value);
}
inline void GM_ChargeInfo::set_totaltxt1(const char* value, size_t size) {
  set_has_totaltxt1();
  if (totaltxt1_ == &::google::protobuf::internal::kEmptyString) {
    totaltxt1_ = new ::std::string;
  }
  totaltxt1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_ChargeInfo::mutable_totaltxt1() {
  set_has_totaltxt1();
  if (totaltxt1_ == &::google::protobuf::internal::kEmptyString) {
    totaltxt1_ = new ::std::string;
  }
  return totaltxt1_;
}
inline ::std::string* GM_ChargeInfo::release_totaltxt1() {
  clear_has_totaltxt1();
  if (totaltxt1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = totaltxt1_;
    totaltxt1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_ChargeInfo::set_allocated_totaltxt1(::std::string* totaltxt1) {
  if (totaltxt1_ != &::google::protobuf::internal::kEmptyString) {
    delete totaltxt1_;
  }
  if (totaltxt1) {
    set_has_totaltxt1();
    totaltxt1_ = totaltxt1;
  } else {
    clear_has_totaltxt1();
    totaltxt1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string totaltxt2 = 18;
inline bool GM_ChargeInfo::has_totaltxt2() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GM_ChargeInfo::set_has_totaltxt2() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GM_ChargeInfo::clear_has_totaltxt2() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GM_ChargeInfo::clear_totaltxt2() {
  if (totaltxt2_ != &::google::protobuf::internal::kEmptyString) {
    totaltxt2_->clear();
  }
  clear_has_totaltxt2();
}
inline const ::std::string& GM_ChargeInfo::totaltxt2() const {
  return *totaltxt2_;
}
inline void GM_ChargeInfo::set_totaltxt2(const ::std::string& value) {
  set_has_totaltxt2();
  if (totaltxt2_ == &::google::protobuf::internal::kEmptyString) {
    totaltxt2_ = new ::std::string;
  }
  totaltxt2_->assign(value);
}
inline void GM_ChargeInfo::set_totaltxt2(const char* value) {
  set_has_totaltxt2();
  if (totaltxt2_ == &::google::protobuf::internal::kEmptyString) {
    totaltxt2_ = new ::std::string;
  }
  totaltxt2_->assign(value);
}
inline void GM_ChargeInfo::set_totaltxt2(const char* value, size_t size) {
  set_has_totaltxt2();
  if (totaltxt2_ == &::google::protobuf::internal::kEmptyString) {
    totaltxt2_ = new ::std::string;
  }
  totaltxt2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_ChargeInfo::mutable_totaltxt2() {
  set_has_totaltxt2();
  if (totaltxt2_ == &::google::protobuf::internal::kEmptyString) {
    totaltxt2_ = new ::std::string;
  }
  return totaltxt2_;
}
inline ::std::string* GM_ChargeInfo::release_totaltxt2() {
  clear_has_totaltxt2();
  if (totaltxt2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = totaltxt2_;
    totaltxt2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_ChargeInfo::set_allocated_totaltxt2(::std::string* totaltxt2) {
  if (totaltxt2_ != &::google::protobuf::internal::kEmptyString) {
    delete totaltxt2_;
  }
  if (totaltxt2) {
    set_has_totaltxt2();
    totaltxt2_ = totaltxt2;
  } else {
    clear_has_totaltxt2();
    totaltxt2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 totalchargecount = 10;
inline bool GM_ChargeInfo::has_totalchargecount() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GM_ChargeInfo::set_has_totalchargecount() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GM_ChargeInfo::clear_has_totalchargecount() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GM_ChargeInfo::clear_totalchargecount() {
  totalchargecount_ = 0;
  clear_has_totalchargecount();
}
inline ::google::protobuf::int32 GM_ChargeInfo::totalchargecount() const {
  return totalchargecount_;
}
inline void GM_ChargeInfo::set_totalchargecount(::google::protobuf::int32 value) {
  set_has_totalchargecount();
  totalchargecount_ = value;
}

// -------------------------------------------------------------------

// GM_GetReward_Result

// required int32 result = 1;
inline bool GM_GetReward_Result::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_GetReward_Result::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_GetReward_Result::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_GetReward_Result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_GetReward_Result::result() const {
  return result_;
}
inline void GM_GetReward_Result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint32 leftTimes = 2;
inline bool GM_GetReward_Result::has_lefttimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_GetReward_Result::set_has_lefttimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_GetReward_Result::clear_has_lefttimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_GetReward_Result::clear_lefttimes() {
  lefttimes_ = 0u;
  clear_has_lefttimes();
}
inline ::google::protobuf::uint32 GM_GetReward_Result::lefttimes() const {
  return lefttimes_;
}
inline void GM_GetReward_Result::set_lefttimes(::google::protobuf::uint32 value) {
  set_has_lefttimes();
  lefttimes_ = value;
}

// -------------------------------------------------------------------

// GM_RequestGetReward

// required int32 type = 1;
inline bool GM_RequestGetReward::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_RequestGetReward::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_RequestGetReward::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_RequestGetReward::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GM_RequestGetReward::type() const {
  return type_;
}
inline void GM_RequestGetReward::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 whichone = 2;
inline bool GM_RequestGetReward::has_whichone() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_RequestGetReward::set_has_whichone() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_RequestGetReward::clear_has_whichone() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_RequestGetReward::clear_whichone() {
  whichone_ = 0;
  clear_has_whichone();
}
inline ::google::protobuf::int32 GM_RequestGetReward::whichone() const {
  return whichone_;
}
inline void GM_RequestGetReward::set_whichone(::google::protobuf::int32 value) {
  set_has_whichone();
  whichone_ = value;
}

// optional int32 objectid = 3;
inline bool GM_RequestGetReward::has_objectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_RequestGetReward::set_has_objectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_RequestGetReward::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_RequestGetReward::clear_objectid() {
  objectid_ = 0;
  clear_has_objectid();
}
inline ::google::protobuf::int32 GM_RequestGetReward::objectid() const {
  return objectid_;
}
inline void GM_RequestGetReward::set_objectid(::google::protobuf::int32 value) {
  set_has_objectid();
  objectid_ = value;
}

// -------------------------------------------------------------------

// GM_FristChargeData

// required int32 m_firststate = 1;
inline bool GM_FristChargeData::has_m_firststate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_FristChargeData::set_has_m_firststate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_FristChargeData::clear_has_m_firststate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_FristChargeData::clear_m_firststate() {
  m_firststate_ = 0;
  clear_has_m_firststate();
}
inline ::google::protobuf::int32 GM_FristChargeData::m_firststate() const {
  return m_firststate_;
}
inline void GM_FristChargeData::set_m_firststate(::google::protobuf::int32 value) {
  set_has_m_firststate();
  m_firststate_ = value;
}

// repeated .GM_RewardObj m_objectid = 2;
inline int GM_FristChargeData::m_objectid_size() const {
  return m_objectid_.size();
}
inline void GM_FristChargeData::clear_m_objectid() {
  m_objectid_.Clear();
}
inline const ::GM_RewardObj& GM_FristChargeData::m_objectid(int index) const {
  return m_objectid_.Get(index);
}
inline ::GM_RewardObj* GM_FristChargeData::mutable_m_objectid(int index) {
  return m_objectid_.Mutable(index);
}
inline ::GM_RewardObj* GM_FristChargeData::add_m_objectid() {
  return m_objectid_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_RewardObj >&
GM_FristChargeData::m_objectid() const {
  return m_objectid_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_RewardObj >*
GM_FristChargeData::mutable_m_objectid() {
  return &m_objectid_;
}

// -------------------------------------------------------------------

// GM_GetWeaponResult

// required int32 m_result = 1;
inline bool GM_GetWeaponResult::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_GetWeaponResult::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_GetWeaponResult::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_GetWeaponResult::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GM_GetWeaponResult::m_result() const {
  return m_result_;
}
inline void GM_GetWeaponResult::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_activity_2etxt__INCLUDED
