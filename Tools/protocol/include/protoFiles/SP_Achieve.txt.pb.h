// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_Achieve.txt

#ifndef PROTOBUF_SP_5fAchieve_2etxt__INCLUDED
#define PROTOBUF_SP_5fAchieve_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SP_5fAchieve_2etxt();
void protobuf_AssignDesc_SP_5fAchieve_2etxt();
void protobuf_ShutdownFile_SP_5fAchieve_2etxt();

class GM_db_Achieve_Data;
class GM_db_Achieve_return;
class GM_db_Achieve_request;

// ===================================================================

class GM_db_Achieve_Data : public ::google::protobuf::Message {
 public:
  GM_db_Achieve_Data();
  virtual ~GM_db_Achieve_Data();

  GM_db_Achieve_Data(const GM_db_Achieve_Data& from);

  inline GM_db_Achieve_Data& operator=(const GM_db_Achieve_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_db_Achieve_Data& default_instance();

  void Swap(GM_db_Achieve_Data* other);

  // implements Message ----------------------------------------------

  GM_db_Achieve_Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_db_Achieve_Data& from);
  void MergeFrom(const GM_db_Achieve_Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 channel = 2;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 2;
  inline ::google::protobuf::int32 channel() const;
  inline void set_channel(::google::protobuf::int32 value);

  // optional int32 type_id = 3;
  inline bool has_type_id() const;
  inline void clear_type_id();
  static const int kTypeIdFieldNumber = 3;
  inline ::google::protobuf::int32 type_id() const;
  inline void set_type_id(::google::protobuf::int32 value);

  // optional int32 times = 4;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 4;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_db_Achieve_Data)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_type_id();
  inline void clear_has_type_id();
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 type_id_;
  ::google::protobuf::int32 times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fAchieve_2etxt();
  friend void protobuf_AssignDesc_SP_5fAchieve_2etxt();
  friend void protobuf_ShutdownFile_SP_5fAchieve_2etxt();

  void InitAsDefaultInstance();
  static GM_db_Achieve_Data* default_instance_;
};
// -------------------------------------------------------------------

class GM_db_Achieve_return : public ::google::protobuf::Message {
 public:
  GM_db_Achieve_return();
  virtual ~GM_db_Achieve_return();

  GM_db_Achieve_return(const GM_db_Achieve_return& from);

  inline GM_db_Achieve_return& operator=(const GM_db_Achieve_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_db_Achieve_return& default_instance();

  void Swap(GM_db_Achieve_return* other);

  // implements Message ----------------------------------------------

  GM_db_Achieve_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_db_Achieve_return& from);
  void MergeFrom(const GM_db_Achieve_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // repeated .GM_db_Achieve_Data data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::GM_db_Achieve_Data& data(int index) const;
  inline ::GM_db_Achieve_Data* mutable_data(int index);
  inline ::GM_db_Achieve_Data* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_db_Achieve_Data >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_db_Achieve_Data >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_db_Achieve_return)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_db_Achieve_Data > data_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fAchieve_2etxt();
  friend void protobuf_AssignDesc_SP_5fAchieve_2etxt();
  friend void protobuf_ShutdownFile_SP_5fAchieve_2etxt();

  void InitAsDefaultInstance();
  static GM_db_Achieve_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_db_Achieve_request : public ::google::protobuf::Message {
 public:
  GM_db_Achieve_request();
  virtual ~GM_db_Achieve_request();

  GM_db_Achieve_request(const GM_db_Achieve_request& from);

  inline GM_db_Achieve_request& operator=(const GM_db_Achieve_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_db_Achieve_request& default_instance();

  void Swap(GM_db_Achieve_request* other);

  // implements Message ----------------------------------------------

  GM_db_Achieve_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_db_Achieve_request& from);
  void MergeFrom(const GM_db_Achieve_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_db_Achieve_request)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fAchieve_2etxt();
  friend void protobuf_AssignDesc_SP_5fAchieve_2etxt();
  friend void protobuf_ShutdownFile_SP_5fAchieve_2etxt();

  void InitAsDefaultInstance();
  static GM_db_Achieve_request* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_db_Achieve_Data

// required int32 roleid = 1;
inline bool GM_db_Achieve_Data::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_db_Achieve_Data::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_db_Achieve_Data::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_db_Achieve_Data::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_db_Achieve_Data::roleid() const {
  return roleid_;
}
inline void GM_db_Achieve_Data::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int32 channel = 2;
inline bool GM_db_Achieve_Data::has_channel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_db_Achieve_Data::set_has_channel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_db_Achieve_Data::clear_has_channel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_db_Achieve_Data::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 GM_db_Achieve_Data::channel() const {
  return channel_;
}
inline void GM_db_Achieve_Data::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
}

// optional int32 type_id = 3;
inline bool GM_db_Achieve_Data::has_type_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_db_Achieve_Data::set_has_type_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_db_Achieve_Data::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_db_Achieve_Data::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 GM_db_Achieve_Data::type_id() const {
  return type_id_;
}
inline void GM_db_Achieve_Data::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
}

// optional int32 times = 4;
inline bool GM_db_Achieve_Data::has_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_db_Achieve_Data::set_has_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_db_Achieve_Data::clear_has_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_db_Achieve_Data::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 GM_db_Achieve_Data::times() const {
  return times_;
}
inline void GM_db_Achieve_Data::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// GM_db_Achieve_return

// required int32 roleid = 1;
inline bool GM_db_Achieve_return::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_db_Achieve_return::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_db_Achieve_return::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_db_Achieve_return::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_db_Achieve_return::roleid() const {
  return roleid_;
}
inline void GM_db_Achieve_return::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// repeated .GM_db_Achieve_Data data = 2;
inline int GM_db_Achieve_return::data_size() const {
  return data_.size();
}
inline void GM_db_Achieve_return::clear_data() {
  data_.Clear();
}
inline const ::GM_db_Achieve_Data& GM_db_Achieve_return::data(int index) const {
  return data_.Get(index);
}
inline ::GM_db_Achieve_Data* GM_db_Achieve_return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_db_Achieve_Data* GM_db_Achieve_return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_db_Achieve_Data >&
GM_db_Achieve_return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_db_Achieve_Data >*
GM_db_Achieve_return::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_db_Achieve_request

// required int32 roleid = 1;
inline bool GM_db_Achieve_request::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_db_Achieve_request::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_db_Achieve_request::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_db_Achieve_request::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_db_Achieve_request::roleid() const {
  return roleid_;
}
inline void GM_db_Achieve_request::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_SP_5fAchieve_2etxt__INCLUDED
