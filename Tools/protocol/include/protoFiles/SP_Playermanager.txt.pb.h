// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_Playermanager.txt

#ifndef PROTOBUF_SP_5fPlayermanager_2etxt__INCLUDED
#define PROTOBUF_SP_5fPlayermanager_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SP_5fPlayermanager_2etxt();
void protobuf_AssignDesc_SP_5fPlayermanager_2etxt();
void protobuf_ShutdownFile_SP_5fPlayermanager_2etxt();

class SP_PlayerState;
class SP_PlayerOnlineCheck;
class SP_UpdateIncrement;

// ===================================================================

class SP_PlayerState : public ::google::protobuf::Message {
 public:
  SP_PlayerState();
  virtual ~SP_PlayerState();

  SP_PlayerState(const SP_PlayerState& from);

  inline SP_PlayerState& operator=(const SP_PlayerState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SP_PlayerState& default_instance();

  void Swap(SP_PlayerState* other);

  // implements Message ----------------------------------------------

  SP_PlayerState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SP_PlayerState& from);
  void MergeFrom(const SP_PlayerState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SP_PlayerState)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fPlayermanager_2etxt();
  friend void protobuf_AssignDesc_SP_5fPlayermanager_2etxt();
  friend void protobuf_ShutdownFile_SP_5fPlayermanager_2etxt();

  void InitAsDefaultInstance();
  static SP_PlayerState* default_instance_;
};
// -------------------------------------------------------------------

class SP_PlayerOnlineCheck : public ::google::protobuf::Message {
 public:
  SP_PlayerOnlineCheck();
  virtual ~SP_PlayerOnlineCheck();

  SP_PlayerOnlineCheck(const SP_PlayerOnlineCheck& from);

  inline SP_PlayerOnlineCheck& operator=(const SP_PlayerOnlineCheck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SP_PlayerOnlineCheck& default_instance();

  void Swap(SP_PlayerOnlineCheck* other);

  // implements Message ----------------------------------------------

  SP_PlayerOnlineCheck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SP_PlayerOnlineCheck& from);
  void MergeFrom(const SP_PlayerOnlineCheck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SP_PlayerState playerStateS = 1;
  inline int playerstates_size() const;
  inline void clear_playerstates();
  static const int kPlayerStateSFieldNumber = 1;
  inline const ::SP_PlayerState& playerstates(int index) const;
  inline ::SP_PlayerState* mutable_playerstates(int index);
  inline ::SP_PlayerState* add_playerstates();
  inline const ::google::protobuf::RepeatedPtrField< ::SP_PlayerState >&
      playerstates() const;
  inline ::google::protobuf::RepeatedPtrField< ::SP_PlayerState >*
      mutable_playerstates();

  // @@protoc_insertion_point(class_scope:SP_PlayerOnlineCheck)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SP_PlayerState > playerstates_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fPlayermanager_2etxt();
  friend void protobuf_AssignDesc_SP_5fPlayermanager_2etxt();
  friend void protobuf_ShutdownFile_SP_5fPlayermanager_2etxt();

  void InitAsDefaultInstance();
  static SP_PlayerOnlineCheck* default_instance_;
};
// -------------------------------------------------------------------

class SP_UpdateIncrement : public ::google::protobuf::Message {
 public:
  SP_UpdateIncrement();
  virtual ~SP_UpdateIncrement();

  SP_UpdateIncrement(const SP_UpdateIncrement& from);

  inline SP_UpdateIncrement& operator=(const SP_UpdateIncrement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SP_UpdateIncrement& default_instance();

  void Swap(SP_UpdateIncrement* other);

  // implements Message ----------------------------------------------

  SP_UpdateIncrement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SP_UpdateIncrement& from);
  void MergeFrom(const SP_UpdateIncrement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 incrementid = 1;
  inline bool has_incrementid() const;
  inline void clear_incrementid();
  static const int kIncrementidFieldNumber = 1;
  inline ::google::protobuf::int64 incrementid() const;
  inline void set_incrementid(::google::protobuf::int64 value);

  // required int32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SP_UpdateIncrement)
 private:
  inline void set_has_incrementid();
  inline void clear_has_incrementid();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 incrementid_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fPlayermanager_2etxt();
  friend void protobuf_AssignDesc_SP_5fPlayermanager_2etxt();
  friend void protobuf_ShutdownFile_SP_5fPlayermanager_2etxt();

  void InitAsDefaultInstance();
  static SP_UpdateIncrement* default_instance_;
};
// ===================================================================


// ===================================================================

// SP_PlayerState

// required int32 roleid = 1;
inline bool SP_PlayerState::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SP_PlayerState::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SP_PlayerState::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SP_PlayerState::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SP_PlayerState::roleid() const {
  return roleid_;
}
inline void SP_PlayerState::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required int32 state = 2;
inline bool SP_PlayerState::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SP_PlayerState::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SP_PlayerState::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SP_PlayerState::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 SP_PlayerState::state() const {
  return state_;
}
inline void SP_PlayerState::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// SP_PlayerOnlineCheck

// repeated .SP_PlayerState playerStateS = 1;
inline int SP_PlayerOnlineCheck::playerstates_size() const {
  return playerstates_.size();
}
inline void SP_PlayerOnlineCheck::clear_playerstates() {
  playerstates_.Clear();
}
inline const ::SP_PlayerState& SP_PlayerOnlineCheck::playerstates(int index) const {
  return playerstates_.Get(index);
}
inline ::SP_PlayerState* SP_PlayerOnlineCheck::mutable_playerstates(int index) {
  return playerstates_.Mutable(index);
}
inline ::SP_PlayerState* SP_PlayerOnlineCheck::add_playerstates() {
  return playerstates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SP_PlayerState >&
SP_PlayerOnlineCheck::playerstates() const {
  return playerstates_;
}
inline ::google::protobuf::RepeatedPtrField< ::SP_PlayerState >*
SP_PlayerOnlineCheck::mutable_playerstates() {
  return &playerstates_;
}

// -------------------------------------------------------------------

// SP_UpdateIncrement

// required int64 incrementid = 1;
inline bool SP_UpdateIncrement::has_incrementid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SP_UpdateIncrement::set_has_incrementid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SP_UpdateIncrement::clear_has_incrementid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SP_UpdateIncrement::clear_incrementid() {
  incrementid_ = GOOGLE_LONGLONG(0);
  clear_has_incrementid();
}
inline ::google::protobuf::int64 SP_UpdateIncrement::incrementid() const {
  return incrementid_;
}
inline void SP_UpdateIncrement::set_incrementid(::google::protobuf::int64 value) {
  set_has_incrementid();
  incrementid_ = value;
}

// required int32 roleid = 2;
inline bool SP_UpdateIncrement::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SP_UpdateIncrement::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SP_UpdateIncrement::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SP_UpdateIncrement::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SP_UpdateIncrement::roleid() const {
  return roleid_;
}
inline void SP_UpdateIncrement::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_SP_5fPlayermanager_2etxt__INCLUDED
