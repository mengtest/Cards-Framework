// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_Mail.txt

#ifndef PROTOBUF_SP_5fMail_2etxt__INCLUDED
#define PROTOBUF_SP_5fMail_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SP_5fMail_2etxt();
void protobuf_AssignDesc_SP_5fMail_2etxt();
void protobuf_ShutdownFile_SP_5fMail_2etxt();

class DB_MailDataRequest;
class DB_MailDataReturn;
class DB_MailData;
class DB_GlobalMailCount;
class DB_GlobalMailReturn;
class DB_GlobalMail;
class DB_OfflineMail;

// ===================================================================

class DB_MailDataRequest : public ::google::protobuf::Message {
 public:
  DB_MailDataRequest();
  virtual ~DB_MailDataRequest();

  DB_MailDataRequest(const DB_MailDataRequest& from);

  inline DB_MailDataRequest& operator=(const DB_MailDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_MailDataRequest& default_instance();

  void Swap(DB_MailDataRequest* other);

  // implements Message ----------------------------------------------

  DB_MailDataRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_MailDataRequest& from);
  void MergeFrom(const DB_MailDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleId = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DB_MailDataRequest)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fMail_2etxt();
  friend void protobuf_AssignDesc_SP_5fMail_2etxt();
  friend void protobuf_ShutdownFile_SP_5fMail_2etxt();

  void InitAsDefaultInstance();
  static DB_MailDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class DB_MailDataReturn : public ::google::protobuf::Message {
 public:
  DB_MailDataReturn();
  virtual ~DB_MailDataReturn();

  DB_MailDataReturn(const DB_MailDataReturn& from);

  inline DB_MailDataReturn& operator=(const DB_MailDataReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_MailDataReturn& default_instance();

  void Swap(DB_MailDataReturn* other);

  // implements Message ----------------------------------------------

  DB_MailDataReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_MailDataReturn& from);
  void MergeFrom(const DB_MailDataReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleId = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // repeated .DB_MailData m_mailData = 2;
  inline int m_maildata_size() const;
  inline void clear_m_maildata();
  static const int kMMailDataFieldNumber = 2;
  inline const ::DB_MailData& m_maildata(int index) const;
  inline ::DB_MailData* mutable_m_maildata(int index);
  inline ::DB_MailData* add_m_maildata();
  inline const ::google::protobuf::RepeatedPtrField< ::DB_MailData >&
      m_maildata() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_MailData >*
      mutable_m_maildata();

  // @@protoc_insertion_point(class_scope:DB_MailDataReturn)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DB_MailData > m_maildata_;
  ::google::protobuf::int32 m_roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fMail_2etxt();
  friend void protobuf_AssignDesc_SP_5fMail_2etxt();
  friend void protobuf_ShutdownFile_SP_5fMail_2etxt();

  void InitAsDefaultInstance();
  static DB_MailDataReturn* default_instance_;
};
// -------------------------------------------------------------------

class DB_MailData : public ::google::protobuf::Message {
 public:
  DB_MailData();
  virtual ~DB_MailData();

  DB_MailData(const DB_MailData& from);

  inline DB_MailData& operator=(const DB_MailData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_MailData& default_instance();

  void Swap(DB_MailData* other);

  // implements Message ----------------------------------------------

  DB_MailData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_MailData& from);
  void MergeFrom(const DB_MailData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 m_mailgmid = 1;
  inline bool has_m_mailgmid() const;
  inline void clear_m_mailgmid();
  static const int kMMailgmidFieldNumber = 1;
  inline ::google::protobuf::int64 m_mailgmid() const;
  inline void set_m_mailgmid(::google::protobuf::int64 value);

  // required int32 m_state = 2;
  inline bool has_m_state() const;
  inline void clear_m_state();
  static const int kMStateFieldNumber = 2;
  inline ::google::protobuf::int32 m_state() const;
  inline void set_m_state(::google::protobuf::int32 value);

  // required int32 m_source = 3;
  inline bool has_m_source() const;
  inline void clear_m_source();
  static const int kMSourceFieldNumber = 3;
  inline ::google::protobuf::int32 m_source() const;
  inline void set_m_source(::google::protobuf::int32 value);

  // required int32 m_time = 4;
  inline bool has_m_time() const;
  inline void clear_m_time();
  static const int kMTimeFieldNumber = 4;
  inline ::google::protobuf::int32 m_time() const;
  inline void set_m_time(::google::protobuf::int32 value);

  // required string m_name = 5;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 5;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // required string m_subject = 6;
  inline bool has_m_subject() const;
  inline void clear_m_subject();
  static const int kMSubjectFieldNumber = 6;
  inline const ::std::string& m_subject() const;
  inline void set_m_subject(const ::std::string& value);
  inline void set_m_subject(const char* value);
  inline void set_m_subject(const char* value, size_t size);
  inline ::std::string* mutable_m_subject();
  inline ::std::string* release_m_subject();
  inline void set_allocated_m_subject(::std::string* m_subject);

  // required string m_item = 7;
  inline bool has_m_item() const;
  inline void clear_m_item();
  static const int kMItemFieldNumber = 7;
  inline const ::std::string& m_item() const;
  inline void set_m_item(const ::std::string& value);
  inline void set_m_item(const char* value);
  inline void set_m_item(const char* value, size_t size);
  inline ::std::string* mutable_m_item();
  inline ::std::string* release_m_item();
  inline void set_allocated_m_item(::std::string* m_item);

  // optional int32 m_endtime = 8;
  inline bool has_m_endtime() const;
  inline void clear_m_endtime();
  static const int kMEndtimeFieldNumber = 8;
  inline ::google::protobuf::int32 m_endtime() const;
  inline void set_m_endtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DB_MailData)
 private:
  inline void set_has_m_mailgmid();
  inline void clear_has_m_mailgmid();
  inline void set_has_m_state();
  inline void clear_has_m_state();
  inline void set_has_m_source();
  inline void clear_has_m_source();
  inline void set_has_m_time();
  inline void clear_has_m_time();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_subject();
  inline void clear_has_m_subject();
  inline void set_has_m_item();
  inline void clear_has_m_item();
  inline void set_has_m_endtime();
  inline void clear_has_m_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_mailgmid_;
  ::google::protobuf::int32 m_state_;
  ::google::protobuf::int32 m_source_;
  ::std::string* m_name_;
  ::std::string* m_subject_;
  ::google::protobuf::int32 m_time_;
  ::google::protobuf::int32 m_endtime_;
  ::std::string* m_item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fMail_2etxt();
  friend void protobuf_AssignDesc_SP_5fMail_2etxt();
  friend void protobuf_ShutdownFile_SP_5fMail_2etxt();

  void InitAsDefaultInstance();
  static DB_MailData* default_instance_;
};
// -------------------------------------------------------------------

class DB_GlobalMailCount : public ::google::protobuf::Message {
 public:
  DB_GlobalMailCount();
  virtual ~DB_GlobalMailCount();

  DB_GlobalMailCount(const DB_GlobalMailCount& from);

  inline DB_GlobalMailCount& operator=(const DB_GlobalMailCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_GlobalMailCount& default_instance();

  void Swap(DB_GlobalMailCount* other);

  // implements Message ----------------------------------------------

  DB_GlobalMailCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_GlobalMailCount& from);
  void MergeFrom(const DB_GlobalMailCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_globalcount = 1;
  inline bool has_m_globalcount() const;
  inline void clear_m_globalcount();
  static const int kMGlobalcountFieldNumber = 1;
  inline ::google::protobuf::int32 m_globalcount() const;
  inline void set_m_globalcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DB_GlobalMailCount)
 private:
  inline void set_has_m_globalcount();
  inline void clear_has_m_globalcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_globalcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fMail_2etxt();
  friend void protobuf_AssignDesc_SP_5fMail_2etxt();
  friend void protobuf_ShutdownFile_SP_5fMail_2etxt();

  void InitAsDefaultInstance();
  static DB_GlobalMailCount* default_instance_;
};
// -------------------------------------------------------------------

class DB_GlobalMailReturn : public ::google::protobuf::Message {
 public:
  DB_GlobalMailReturn();
  virtual ~DB_GlobalMailReturn();

  DB_GlobalMailReturn(const DB_GlobalMailReturn& from);

  inline DB_GlobalMailReturn& operator=(const DB_GlobalMailReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_GlobalMailReturn& default_instance();

  void Swap(DB_GlobalMailReturn* other);

  // implements Message ----------------------------------------------

  DB_GlobalMailReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_GlobalMailReturn& from);
  void MergeFrom(const DB_GlobalMailReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_count = 1;
  inline bool has_m_count() const;
  inline void clear_m_count();
  static const int kMCountFieldNumber = 1;
  inline ::google::protobuf::int32 m_count() const;
  inline void set_m_count(::google::protobuf::int32 value);

  // repeated .DB_GlobalMail m_maildatas = 2;
  inline int m_maildatas_size() const;
  inline void clear_m_maildatas();
  static const int kMMaildatasFieldNumber = 2;
  inline const ::DB_GlobalMail& m_maildatas(int index) const;
  inline ::DB_GlobalMail* mutable_m_maildatas(int index);
  inline ::DB_GlobalMail* add_m_maildatas();
  inline const ::google::protobuf::RepeatedPtrField< ::DB_GlobalMail >&
      m_maildatas() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_GlobalMail >*
      mutable_m_maildatas();

  // @@protoc_insertion_point(class_scope:DB_GlobalMailReturn)
 private:
  inline void set_has_m_count();
  inline void clear_has_m_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DB_GlobalMail > m_maildatas_;
  ::google::protobuf::int32 m_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fMail_2etxt();
  friend void protobuf_AssignDesc_SP_5fMail_2etxt();
  friend void protobuf_ShutdownFile_SP_5fMail_2etxt();

  void InitAsDefaultInstance();
  static DB_GlobalMailReturn* default_instance_;
};
// -------------------------------------------------------------------

class DB_GlobalMail : public ::google::protobuf::Message {
 public:
  DB_GlobalMail();
  virtual ~DB_GlobalMail();

  DB_GlobalMail(const DB_GlobalMail& from);

  inline DB_GlobalMail& operator=(const DB_GlobalMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_GlobalMail& default_instance();

  void Swap(DB_GlobalMail* other);

  // implements Message ----------------------------------------------

  DB_GlobalMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_GlobalMail& from);
  void MergeFrom(const DB_GlobalMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_time = 1;
  inline bool has_m_time() const;
  inline void clear_m_time();
  static const int kMTimeFieldNumber = 1;
  inline ::google::protobuf::int32 m_time() const;
  inline void set_m_time(::google::protobuf::int32 value);

  // required string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // required string m_subject = 3;
  inline bool has_m_subject() const;
  inline void clear_m_subject();
  static const int kMSubjectFieldNumber = 3;
  inline const ::std::string& m_subject() const;
  inline void set_m_subject(const ::std::string& value);
  inline void set_m_subject(const char* value);
  inline void set_m_subject(const char* value, size_t size);
  inline ::std::string* mutable_m_subject();
  inline ::std::string* release_m_subject();
  inline void set_allocated_m_subject(::std::string* m_subject);

  // required string m_item = 4;
  inline bool has_m_item() const;
  inline void clear_m_item();
  static const int kMItemFieldNumber = 4;
  inline const ::std::string& m_item() const;
  inline void set_m_item(const ::std::string& value);
  inline void set_m_item(const char* value);
  inline void set_m_item(const char* value, size_t size);
  inline ::std::string* mutable_m_item();
  inline ::std::string* release_m_item();
  inline void set_allocated_m_item(::std::string* m_item);

  // @@protoc_insertion_point(class_scope:DB_GlobalMail)
 private:
  inline void set_has_m_time();
  inline void clear_has_m_time();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_subject();
  inline void clear_has_m_subject();
  inline void set_has_m_item();
  inline void clear_has_m_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_name_;
  ::std::string* m_subject_;
  ::std::string* m_item_;
  ::google::protobuf::int32 m_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fMail_2etxt();
  friend void protobuf_AssignDesc_SP_5fMail_2etxt();
  friend void protobuf_ShutdownFile_SP_5fMail_2etxt();

  void InitAsDefaultInstance();
  static DB_GlobalMail* default_instance_;
};
// -------------------------------------------------------------------

class DB_OfflineMail : public ::google::protobuf::Message {
 public:
  DB_OfflineMail();
  virtual ~DB_OfflineMail();

  DB_OfflineMail(const DB_OfflineMail& from);

  inline DB_OfflineMail& operator=(const DB_OfflineMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_OfflineMail& default_instance();

  void Swap(DB_OfflineMail* other);

  // implements Message ----------------------------------------------

  DB_OfflineMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_OfflineMail& from);
  void MergeFrom(const DB_OfflineMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional string m_rolename = 2;
  inline bool has_m_rolename() const;
  inline void clear_m_rolename();
  static const int kMRolenameFieldNumber = 2;
  inline const ::std::string& m_rolename() const;
  inline void set_m_rolename(const ::std::string& value);
  inline void set_m_rolename(const char* value);
  inline void set_m_rolename(const char* value, size_t size);
  inline ::std::string* mutable_m_rolename();
  inline ::std::string* release_m_rolename();
  inline void set_allocated_m_rolename(::std::string* m_rolename);

  // repeated .DB_MailData m_maildata = 3;
  inline int m_maildata_size() const;
  inline void clear_m_maildata();
  static const int kMMaildataFieldNumber = 3;
  inline const ::DB_MailData& m_maildata(int index) const;
  inline ::DB_MailData* mutable_m_maildata(int index);
  inline ::DB_MailData* add_m_maildata();
  inline const ::google::protobuf::RepeatedPtrField< ::DB_MailData >&
      m_maildata() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_MailData >*
      mutable_m_maildata();

  // @@protoc_insertion_point(class_scope:DB_OfflineMail)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_rolename();
  inline void clear_has_m_rolename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_rolename_;
  ::google::protobuf::RepeatedPtrField< ::DB_MailData > m_maildata_;
  ::google::protobuf::int32 m_roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fMail_2etxt();
  friend void protobuf_AssignDesc_SP_5fMail_2etxt();
  friend void protobuf_ShutdownFile_SP_5fMail_2etxt();

  void InitAsDefaultInstance();
  static DB_OfflineMail* default_instance_;
};
// ===================================================================


// ===================================================================

// DB_MailDataRequest

// required int32 m_roleId = 1;
inline bool DB_MailDataRequest::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB_MailDataRequest::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB_MailDataRequest::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB_MailDataRequest::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 DB_MailDataRequest::m_roleid() const {
  return m_roleid_;
}
inline void DB_MailDataRequest::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// -------------------------------------------------------------------

// DB_MailDataReturn

// required int32 m_roleId = 1;
inline bool DB_MailDataReturn::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB_MailDataReturn::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB_MailDataReturn::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB_MailDataReturn::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 DB_MailDataReturn::m_roleid() const {
  return m_roleid_;
}
inline void DB_MailDataReturn::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// repeated .DB_MailData m_mailData = 2;
inline int DB_MailDataReturn::m_maildata_size() const {
  return m_maildata_.size();
}
inline void DB_MailDataReturn::clear_m_maildata() {
  m_maildata_.Clear();
}
inline const ::DB_MailData& DB_MailDataReturn::m_maildata(int index) const {
  return m_maildata_.Get(index);
}
inline ::DB_MailData* DB_MailDataReturn::mutable_m_maildata(int index) {
  return m_maildata_.Mutable(index);
}
inline ::DB_MailData* DB_MailDataReturn::add_m_maildata() {
  return m_maildata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_MailData >&
DB_MailDataReturn::m_maildata() const {
  return m_maildata_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_MailData >*
DB_MailDataReturn::mutable_m_maildata() {
  return &m_maildata_;
}

// -------------------------------------------------------------------

// DB_MailData

// required int64 m_mailgmid = 1;
inline bool DB_MailData::has_m_mailgmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB_MailData::set_has_m_mailgmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB_MailData::clear_has_m_mailgmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB_MailData::clear_m_mailgmid() {
  m_mailgmid_ = GOOGLE_LONGLONG(0);
  clear_has_m_mailgmid();
}
inline ::google::protobuf::int64 DB_MailData::m_mailgmid() const {
  return m_mailgmid_;
}
inline void DB_MailData::set_m_mailgmid(::google::protobuf::int64 value) {
  set_has_m_mailgmid();
  m_mailgmid_ = value;
}

// required int32 m_state = 2;
inline bool DB_MailData::has_m_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB_MailData::set_has_m_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB_MailData::clear_has_m_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB_MailData::clear_m_state() {
  m_state_ = 0;
  clear_has_m_state();
}
inline ::google::protobuf::int32 DB_MailData::m_state() const {
  return m_state_;
}
inline void DB_MailData::set_m_state(::google::protobuf::int32 value) {
  set_has_m_state();
  m_state_ = value;
}

// required int32 m_source = 3;
inline bool DB_MailData::has_m_source() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB_MailData::set_has_m_source() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB_MailData::clear_has_m_source() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB_MailData::clear_m_source() {
  m_source_ = 0;
  clear_has_m_source();
}
inline ::google::protobuf::int32 DB_MailData::m_source() const {
  return m_source_;
}
inline void DB_MailData::set_m_source(::google::protobuf::int32 value) {
  set_has_m_source();
  m_source_ = value;
}

// required int32 m_time = 4;
inline bool DB_MailData::has_m_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DB_MailData::set_has_m_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DB_MailData::clear_has_m_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DB_MailData::clear_m_time() {
  m_time_ = 0;
  clear_has_m_time();
}
inline ::google::protobuf::int32 DB_MailData::m_time() const {
  return m_time_;
}
inline void DB_MailData::set_m_time(::google::protobuf::int32 value) {
  set_has_m_time();
  m_time_ = value;
}

// required string m_name = 5;
inline bool DB_MailData::has_m_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DB_MailData::set_has_m_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DB_MailData::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DB_MailData::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& DB_MailData::m_name() const {
  return *m_name_;
}
inline void DB_MailData::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void DB_MailData::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void DB_MailData::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_MailData::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* DB_MailData::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DB_MailData::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string m_subject = 6;
inline bool DB_MailData::has_m_subject() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DB_MailData::set_has_m_subject() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DB_MailData::clear_has_m_subject() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DB_MailData::clear_m_subject() {
  if (m_subject_ != &::google::protobuf::internal::kEmptyString) {
    m_subject_->clear();
  }
  clear_has_m_subject();
}
inline const ::std::string& DB_MailData::m_subject() const {
  return *m_subject_;
}
inline void DB_MailData::set_m_subject(const ::std::string& value) {
  set_has_m_subject();
  if (m_subject_ == &::google::protobuf::internal::kEmptyString) {
    m_subject_ = new ::std::string;
  }
  m_subject_->assign(value);
}
inline void DB_MailData::set_m_subject(const char* value) {
  set_has_m_subject();
  if (m_subject_ == &::google::protobuf::internal::kEmptyString) {
    m_subject_ = new ::std::string;
  }
  m_subject_->assign(value);
}
inline void DB_MailData::set_m_subject(const char* value, size_t size) {
  set_has_m_subject();
  if (m_subject_ == &::google::protobuf::internal::kEmptyString) {
    m_subject_ = new ::std::string;
  }
  m_subject_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_MailData::mutable_m_subject() {
  set_has_m_subject();
  if (m_subject_ == &::google::protobuf::internal::kEmptyString) {
    m_subject_ = new ::std::string;
  }
  return m_subject_;
}
inline ::std::string* DB_MailData::release_m_subject() {
  clear_has_m_subject();
  if (m_subject_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_subject_;
    m_subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DB_MailData::set_allocated_m_subject(::std::string* m_subject) {
  if (m_subject_ != &::google::protobuf::internal::kEmptyString) {
    delete m_subject_;
  }
  if (m_subject) {
    set_has_m_subject();
    m_subject_ = m_subject;
  } else {
    clear_has_m_subject();
    m_subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string m_item = 7;
inline bool DB_MailData::has_m_item() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DB_MailData::set_has_m_item() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DB_MailData::clear_has_m_item() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DB_MailData::clear_m_item() {
  if (m_item_ != &::google::protobuf::internal::kEmptyString) {
    m_item_->clear();
  }
  clear_has_m_item();
}
inline const ::std::string& DB_MailData::m_item() const {
  return *m_item_;
}
inline void DB_MailData::set_m_item(const ::std::string& value) {
  set_has_m_item();
  if (m_item_ == &::google::protobuf::internal::kEmptyString) {
    m_item_ = new ::std::string;
  }
  m_item_->assign(value);
}
inline void DB_MailData::set_m_item(const char* value) {
  set_has_m_item();
  if (m_item_ == &::google::protobuf::internal::kEmptyString) {
    m_item_ = new ::std::string;
  }
  m_item_->assign(value);
}
inline void DB_MailData::set_m_item(const char* value, size_t size) {
  set_has_m_item();
  if (m_item_ == &::google::protobuf::internal::kEmptyString) {
    m_item_ = new ::std::string;
  }
  m_item_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_MailData::mutable_m_item() {
  set_has_m_item();
  if (m_item_ == &::google::protobuf::internal::kEmptyString) {
    m_item_ = new ::std::string;
  }
  return m_item_;
}
inline ::std::string* DB_MailData::release_m_item() {
  clear_has_m_item();
  if (m_item_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_item_;
    m_item_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DB_MailData::set_allocated_m_item(::std::string* m_item) {
  if (m_item_ != &::google::protobuf::internal::kEmptyString) {
    delete m_item_;
  }
  if (m_item) {
    set_has_m_item();
    m_item_ = m_item;
  } else {
    clear_has_m_item();
    m_item_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_endtime = 8;
inline bool DB_MailData::has_m_endtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DB_MailData::set_has_m_endtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DB_MailData::clear_has_m_endtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DB_MailData::clear_m_endtime() {
  m_endtime_ = 0;
  clear_has_m_endtime();
}
inline ::google::protobuf::int32 DB_MailData::m_endtime() const {
  return m_endtime_;
}
inline void DB_MailData::set_m_endtime(::google::protobuf::int32 value) {
  set_has_m_endtime();
  m_endtime_ = value;
}

// -------------------------------------------------------------------

// DB_GlobalMailCount

// required int32 m_globalcount = 1;
inline bool DB_GlobalMailCount::has_m_globalcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB_GlobalMailCount::set_has_m_globalcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB_GlobalMailCount::clear_has_m_globalcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB_GlobalMailCount::clear_m_globalcount() {
  m_globalcount_ = 0;
  clear_has_m_globalcount();
}
inline ::google::protobuf::int32 DB_GlobalMailCount::m_globalcount() const {
  return m_globalcount_;
}
inline void DB_GlobalMailCount::set_m_globalcount(::google::protobuf::int32 value) {
  set_has_m_globalcount();
  m_globalcount_ = value;
}

// -------------------------------------------------------------------

// DB_GlobalMailReturn

// required int32 m_count = 1;
inline bool DB_GlobalMailReturn::has_m_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB_GlobalMailReturn::set_has_m_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB_GlobalMailReturn::clear_has_m_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB_GlobalMailReturn::clear_m_count() {
  m_count_ = 0;
  clear_has_m_count();
}
inline ::google::protobuf::int32 DB_GlobalMailReturn::m_count() const {
  return m_count_;
}
inline void DB_GlobalMailReturn::set_m_count(::google::protobuf::int32 value) {
  set_has_m_count();
  m_count_ = value;
}

// repeated .DB_GlobalMail m_maildatas = 2;
inline int DB_GlobalMailReturn::m_maildatas_size() const {
  return m_maildatas_.size();
}
inline void DB_GlobalMailReturn::clear_m_maildatas() {
  m_maildatas_.Clear();
}
inline const ::DB_GlobalMail& DB_GlobalMailReturn::m_maildatas(int index) const {
  return m_maildatas_.Get(index);
}
inline ::DB_GlobalMail* DB_GlobalMailReturn::mutable_m_maildatas(int index) {
  return m_maildatas_.Mutable(index);
}
inline ::DB_GlobalMail* DB_GlobalMailReturn::add_m_maildatas() {
  return m_maildatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_GlobalMail >&
DB_GlobalMailReturn::m_maildatas() const {
  return m_maildatas_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_GlobalMail >*
DB_GlobalMailReturn::mutable_m_maildatas() {
  return &m_maildatas_;
}

// -------------------------------------------------------------------

// DB_GlobalMail

// required int32 m_time = 1;
inline bool DB_GlobalMail::has_m_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB_GlobalMail::set_has_m_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB_GlobalMail::clear_has_m_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB_GlobalMail::clear_m_time() {
  m_time_ = 0;
  clear_has_m_time();
}
inline ::google::protobuf::int32 DB_GlobalMail::m_time() const {
  return m_time_;
}
inline void DB_GlobalMail::set_m_time(::google::protobuf::int32 value) {
  set_has_m_time();
  m_time_ = value;
}

// required string m_name = 2;
inline bool DB_GlobalMail::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB_GlobalMail::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB_GlobalMail::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB_GlobalMail::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& DB_GlobalMail::m_name() const {
  return *m_name_;
}
inline void DB_GlobalMail::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void DB_GlobalMail::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void DB_GlobalMail::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_GlobalMail::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* DB_GlobalMail::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DB_GlobalMail::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string m_subject = 3;
inline bool DB_GlobalMail::has_m_subject() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB_GlobalMail::set_has_m_subject() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB_GlobalMail::clear_has_m_subject() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB_GlobalMail::clear_m_subject() {
  if (m_subject_ != &::google::protobuf::internal::kEmptyString) {
    m_subject_->clear();
  }
  clear_has_m_subject();
}
inline const ::std::string& DB_GlobalMail::m_subject() const {
  return *m_subject_;
}
inline void DB_GlobalMail::set_m_subject(const ::std::string& value) {
  set_has_m_subject();
  if (m_subject_ == &::google::protobuf::internal::kEmptyString) {
    m_subject_ = new ::std::string;
  }
  m_subject_->assign(value);
}
inline void DB_GlobalMail::set_m_subject(const char* value) {
  set_has_m_subject();
  if (m_subject_ == &::google::protobuf::internal::kEmptyString) {
    m_subject_ = new ::std::string;
  }
  m_subject_->assign(value);
}
inline void DB_GlobalMail::set_m_subject(const char* value, size_t size) {
  set_has_m_subject();
  if (m_subject_ == &::google::protobuf::internal::kEmptyString) {
    m_subject_ = new ::std::string;
  }
  m_subject_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_GlobalMail::mutable_m_subject() {
  set_has_m_subject();
  if (m_subject_ == &::google::protobuf::internal::kEmptyString) {
    m_subject_ = new ::std::string;
  }
  return m_subject_;
}
inline ::std::string* DB_GlobalMail::release_m_subject() {
  clear_has_m_subject();
  if (m_subject_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_subject_;
    m_subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DB_GlobalMail::set_allocated_m_subject(::std::string* m_subject) {
  if (m_subject_ != &::google::protobuf::internal::kEmptyString) {
    delete m_subject_;
  }
  if (m_subject) {
    set_has_m_subject();
    m_subject_ = m_subject;
  } else {
    clear_has_m_subject();
    m_subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string m_item = 4;
inline bool DB_GlobalMail::has_m_item() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DB_GlobalMail::set_has_m_item() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DB_GlobalMail::clear_has_m_item() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DB_GlobalMail::clear_m_item() {
  if (m_item_ != &::google::protobuf::internal::kEmptyString) {
    m_item_->clear();
  }
  clear_has_m_item();
}
inline const ::std::string& DB_GlobalMail::m_item() const {
  return *m_item_;
}
inline void DB_GlobalMail::set_m_item(const ::std::string& value) {
  set_has_m_item();
  if (m_item_ == &::google::protobuf::internal::kEmptyString) {
    m_item_ = new ::std::string;
  }
  m_item_->assign(value);
}
inline void DB_GlobalMail::set_m_item(const char* value) {
  set_has_m_item();
  if (m_item_ == &::google::protobuf::internal::kEmptyString) {
    m_item_ = new ::std::string;
  }
  m_item_->assign(value);
}
inline void DB_GlobalMail::set_m_item(const char* value, size_t size) {
  set_has_m_item();
  if (m_item_ == &::google::protobuf::internal::kEmptyString) {
    m_item_ = new ::std::string;
  }
  m_item_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_GlobalMail::mutable_m_item() {
  set_has_m_item();
  if (m_item_ == &::google::protobuf::internal::kEmptyString) {
    m_item_ = new ::std::string;
  }
  return m_item_;
}
inline ::std::string* DB_GlobalMail::release_m_item() {
  clear_has_m_item();
  if (m_item_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_item_;
    m_item_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DB_GlobalMail::set_allocated_m_item(::std::string* m_item) {
  if (m_item_ != &::google::protobuf::internal::kEmptyString) {
    delete m_item_;
  }
  if (m_item) {
    set_has_m_item();
    m_item_ = m_item;
  } else {
    clear_has_m_item();
    m_item_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// DB_OfflineMail

// optional int32 m_roleid = 1;
inline bool DB_OfflineMail::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB_OfflineMail::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB_OfflineMail::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB_OfflineMail::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 DB_OfflineMail::m_roleid() const {
  return m_roleid_;
}
inline void DB_OfflineMail::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional string m_rolename = 2;
inline bool DB_OfflineMail::has_m_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB_OfflineMail::set_has_m_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB_OfflineMail::clear_has_m_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB_OfflineMail::clear_m_rolename() {
  if (m_rolename_ != &::google::protobuf::internal::kEmptyString) {
    m_rolename_->clear();
  }
  clear_has_m_rolename();
}
inline const ::std::string& DB_OfflineMail::m_rolename() const {
  return *m_rolename_;
}
inline void DB_OfflineMail::set_m_rolename(const ::std::string& value) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(value);
}
inline void DB_OfflineMail::set_m_rolename(const char* value) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(value);
}
inline void DB_OfflineMail::set_m_rolename(const char* value, size_t size) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_OfflineMail::mutable_m_rolename() {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  return m_rolename_;
}
inline ::std::string* DB_OfflineMail::release_m_rolename() {
  clear_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_rolename_;
    m_rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DB_OfflineMail::set_allocated_m_rolename(::std::string* m_rolename) {
  if (m_rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete m_rolename_;
  }
  if (m_rolename) {
    set_has_m_rolename();
    m_rolename_ = m_rolename;
  } else {
    clear_has_m_rolename();
    m_rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .DB_MailData m_maildata = 3;
inline int DB_OfflineMail::m_maildata_size() const {
  return m_maildata_.size();
}
inline void DB_OfflineMail::clear_m_maildata() {
  m_maildata_.Clear();
}
inline const ::DB_MailData& DB_OfflineMail::m_maildata(int index) const {
  return m_maildata_.Get(index);
}
inline ::DB_MailData* DB_OfflineMail::mutable_m_maildata(int index) {
  return m_maildata_.Mutable(index);
}
inline ::DB_MailData* DB_OfflineMail::add_m_maildata() {
  return m_maildata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_MailData >&
DB_OfflineMail::m_maildata() const {
  return m_maildata_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_MailData >*
DB_OfflineMail::mutable_m_maildata() {
  return &m_maildata_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_SP_5fMail_2etxt__INCLUDED
