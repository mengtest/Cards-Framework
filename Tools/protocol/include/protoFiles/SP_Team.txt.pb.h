// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_Team.txt

#ifndef PROTOBUF_SP_5fTeam_2etxt__INCLUDED
#define PROTOBUF_SP_5fTeam_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SP_5fTeam_2etxt();
void protobuf_AssignDesc_SP_5fTeam_2etxt();
void protobuf_ShutdownFile_SP_5fTeam_2etxt();

class SM_CS_MatchReuslt;
class SM_CS_CancelMatch;
class SM_TeamFB_InFB;
class SM_TeamFight_FirstBlood;
class SM_FirstBlood_Member;

// ===================================================================

class SM_CS_MatchReuslt : public ::google::protobuf::Message {
 public:
  SM_CS_MatchReuslt();
  virtual ~SM_CS_MatchReuslt();

  SM_CS_MatchReuslt(const SM_CS_MatchReuslt& from);

  inline SM_CS_MatchReuslt& operator=(const SM_CS_MatchReuslt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_CS_MatchReuslt& default_instance();

  void Swap(SM_CS_MatchReuslt* other);

  // implements Message ----------------------------------------------

  SM_CS_MatchReuslt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_CS_MatchReuslt& from);
  void MergeFrom(const SM_CS_MatchReuslt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_nresult = 1;
  inline bool has_m_nresult() const;
  inline void clear_m_nresult();
  static const int kMNresultFieldNumber = 1;
  inline ::google::protobuf::int32 m_nresult() const;
  inline void set_m_nresult(::google::protobuf::int32 value);

  // required int32 m_nleaderid = 2;
  inline bool has_m_nleaderid() const;
  inline void clear_m_nleaderid();
  static const int kMNleaderidFieldNumber = 2;
  inline ::google::protobuf::int32 m_nleaderid() const;
  inline void set_m_nleaderid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_CS_MatchReuslt)
 private:
  inline void set_has_m_nresult();
  inline void clear_has_m_nresult();
  inline void set_has_m_nleaderid();
  inline void clear_has_m_nleaderid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_nresult_;
  ::google::protobuf::int32 m_nleaderid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fTeam_2etxt();
  friend void protobuf_AssignDesc_SP_5fTeam_2etxt();
  friend void protobuf_ShutdownFile_SP_5fTeam_2etxt();

  void InitAsDefaultInstance();
  static SM_CS_MatchReuslt* default_instance_;
};
// -------------------------------------------------------------------

class SM_CS_CancelMatch : public ::google::protobuf::Message {
 public:
  SM_CS_CancelMatch();
  virtual ~SM_CS_CancelMatch();

  SM_CS_CancelMatch(const SM_CS_CancelMatch& from);

  inline SM_CS_CancelMatch& operator=(const SM_CS_CancelMatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_CS_CancelMatch& default_instance();

  void Swap(SM_CS_CancelMatch* other);

  // implements Message ----------------------------------------------

  SM_CS_CancelMatch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_CS_CancelMatch& from);
  void MergeFrom(const SM_CS_CancelMatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_nroleid = 1;
  inline bool has_m_nroleid() const;
  inline void clear_m_nroleid();
  static const int kMNroleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_nroleid() const;
  inline void set_m_nroleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_CS_CancelMatch)
 private:
  inline void set_has_m_nroleid();
  inline void clear_has_m_nroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_nroleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fTeam_2etxt();
  friend void protobuf_AssignDesc_SP_5fTeam_2etxt();
  friend void protobuf_ShutdownFile_SP_5fTeam_2etxt();

  void InitAsDefaultInstance();
  static SM_CS_CancelMatch* default_instance_;
};
// -------------------------------------------------------------------

class SM_TeamFB_InFB : public ::google::protobuf::Message {
 public:
  SM_TeamFB_InFB();
  virtual ~SM_TeamFB_InFB();

  SM_TeamFB_InFB(const SM_TeamFB_InFB& from);

  inline SM_TeamFB_InFB& operator=(const SM_TeamFB_InFB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_TeamFB_InFB& default_instance();

  void Swap(SM_TeamFB_InFB* other);

  // implements Message ----------------------------------------------

  SM_TeamFB_InFB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_TeamFB_InFB& from);
  void MergeFrom(const SM_TeamFB_InFB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_nleaderid = 1;
  inline bool has_m_nleaderid() const;
  inline void clear_m_nleaderid();
  static const int kMNleaderidFieldNumber = 1;
  inline ::google::protobuf::int32 m_nleaderid() const;
  inline void set_m_nleaderid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_TeamFB_InFB)
 private:
  inline void set_has_m_nleaderid();
  inline void clear_has_m_nleaderid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_nleaderid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fTeam_2etxt();
  friend void protobuf_AssignDesc_SP_5fTeam_2etxt();
  friend void protobuf_ShutdownFile_SP_5fTeam_2etxt();

  void InitAsDefaultInstance();
  static SM_TeamFB_InFB* default_instance_;
};
// -------------------------------------------------------------------

class SM_TeamFight_FirstBlood : public ::google::protobuf::Message {
 public:
  SM_TeamFight_FirstBlood();
  virtual ~SM_TeamFight_FirstBlood();

  SM_TeamFight_FirstBlood(const SM_TeamFight_FirstBlood& from);

  inline SM_TeamFight_FirstBlood& operator=(const SM_TeamFight_FirstBlood& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_TeamFight_FirstBlood& default_instance();

  void Swap(SM_TeamFight_FirstBlood* other);

  // implements Message ----------------------------------------------

  SM_TeamFight_FirstBlood* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_TeamFight_FirstBlood& from);
  void MergeFrom(const SM_TeamFight_FirstBlood& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_nleaderid = 1;
  inline bool has_m_nleaderid() const;
  inline void clear_m_nleaderid();
  static const int kMNleaderidFieldNumber = 1;
  inline ::google::protobuf::int32 m_nleaderid() const;
  inline void set_m_nleaderid(::google::protobuf::int32 value);

  // required int32 m_nfbtypeid = 2;
  inline bool has_m_nfbtypeid() const;
  inline void clear_m_nfbtypeid();
  static const int kMNfbtypeidFieldNumber = 2;
  inline ::google::protobuf::int32 m_nfbtypeid() const;
  inline void set_m_nfbtypeid(::google::protobuf::int32 value);

  // required int64 m_nfighttime = 3;
  inline bool has_m_nfighttime() const;
  inline void clear_m_nfighttime();
  static const int kMNfighttimeFieldNumber = 3;
  inline ::google::protobuf::int64 m_nfighttime() const;
  inline void set_m_nfighttime(::google::protobuf::int64 value);

  // repeated .SM_FirstBlood_Member m_member = 10;
  inline int m_member_size() const;
  inline void clear_m_member();
  static const int kMMemberFieldNumber = 10;
  inline const ::SM_FirstBlood_Member& m_member(int index) const;
  inline ::SM_FirstBlood_Member* mutable_m_member(int index);
  inline ::SM_FirstBlood_Member* add_m_member();
  inline const ::google::protobuf::RepeatedPtrField< ::SM_FirstBlood_Member >&
      m_member() const;
  inline ::google::protobuf::RepeatedPtrField< ::SM_FirstBlood_Member >*
      mutable_m_member();

  // @@protoc_insertion_point(class_scope:SM_TeamFight_FirstBlood)
 private:
  inline void set_has_m_nleaderid();
  inline void clear_has_m_nleaderid();
  inline void set_has_m_nfbtypeid();
  inline void clear_has_m_nfbtypeid();
  inline void set_has_m_nfighttime();
  inline void clear_has_m_nfighttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_nleaderid_;
  ::google::protobuf::int32 m_nfbtypeid_;
  ::google::protobuf::int64 m_nfighttime_;
  ::google::protobuf::RepeatedPtrField< ::SM_FirstBlood_Member > m_member_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fTeam_2etxt();
  friend void protobuf_AssignDesc_SP_5fTeam_2etxt();
  friend void protobuf_ShutdownFile_SP_5fTeam_2etxt();

  void InitAsDefaultInstance();
  static SM_TeamFight_FirstBlood* default_instance_;
};
// -------------------------------------------------------------------

class SM_FirstBlood_Member : public ::google::protobuf::Message {
 public:
  SM_FirstBlood_Member();
  virtual ~SM_FirstBlood_Member();

  SM_FirstBlood_Member(const SM_FirstBlood_Member& from);

  inline SM_FirstBlood_Member& operator=(const SM_FirstBlood_Member& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_FirstBlood_Member& default_instance();

  void Swap(SM_FirstBlood_Member* other);

  // implements Message ----------------------------------------------

  SM_FirstBlood_Member* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_FirstBlood_Member& from);
  void MergeFrom(const SM_FirstBlood_Member& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_roleid = 1;
  inline bool has_m_roleid() const;
  inline void clear_m_roleid();
  static const int kMRoleidFieldNumber = 1;
  inline ::google::protobuf::int32 m_roleid() const;
  inline void set_m_roleid(::google::protobuf::int32 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional int32 m_rolelv = 3;
  inline bool has_m_rolelv() const;
  inline void clear_m_rolelv();
  static const int kMRolelvFieldNumber = 3;
  inline ::google::protobuf::int32 m_rolelv() const;
  inline void set_m_rolelv(::google::protobuf::int32 value);

  // optional int32 m_fightpow = 4;
  inline bool has_m_fightpow() const;
  inline void clear_m_fightpow();
  static const int kMFightpowFieldNumber = 4;
  inline ::google::protobuf::int32 m_fightpow() const;
  inline void set_m_fightpow(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_FirstBlood_Member)
 private:
  inline void set_has_m_roleid();
  inline void clear_has_m_roleid();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_rolelv();
  inline void clear_has_m_rolelv();
  inline void set_has_m_fightpow();
  inline void clear_has_m_fightpow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_name_;
  ::google::protobuf::int32 m_roleid_;
  ::google::protobuf::int32 m_rolelv_;
  ::google::protobuf::int32 m_fightpow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5fTeam_2etxt();
  friend void protobuf_AssignDesc_SP_5fTeam_2etxt();
  friend void protobuf_ShutdownFile_SP_5fTeam_2etxt();

  void InitAsDefaultInstance();
  static SM_FirstBlood_Member* default_instance_;
};
// ===================================================================


// ===================================================================

// SM_CS_MatchReuslt

// required int32 m_nresult = 1;
inline bool SM_CS_MatchReuslt::has_m_nresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_CS_MatchReuslt::set_has_m_nresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_CS_MatchReuslt::clear_has_m_nresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_CS_MatchReuslt::clear_m_nresult() {
  m_nresult_ = 0;
  clear_has_m_nresult();
}
inline ::google::protobuf::int32 SM_CS_MatchReuslt::m_nresult() const {
  return m_nresult_;
}
inline void SM_CS_MatchReuslt::set_m_nresult(::google::protobuf::int32 value) {
  set_has_m_nresult();
  m_nresult_ = value;
}

// required int32 m_nleaderid = 2;
inline bool SM_CS_MatchReuslt::has_m_nleaderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_CS_MatchReuslt::set_has_m_nleaderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_CS_MatchReuslt::clear_has_m_nleaderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_CS_MatchReuslt::clear_m_nleaderid() {
  m_nleaderid_ = 0;
  clear_has_m_nleaderid();
}
inline ::google::protobuf::int32 SM_CS_MatchReuslt::m_nleaderid() const {
  return m_nleaderid_;
}
inline void SM_CS_MatchReuslt::set_m_nleaderid(::google::protobuf::int32 value) {
  set_has_m_nleaderid();
  m_nleaderid_ = value;
}

// -------------------------------------------------------------------

// SM_CS_CancelMatch

// required int32 m_nroleid = 1;
inline bool SM_CS_CancelMatch::has_m_nroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_CS_CancelMatch::set_has_m_nroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_CS_CancelMatch::clear_has_m_nroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_CS_CancelMatch::clear_m_nroleid() {
  m_nroleid_ = 0;
  clear_has_m_nroleid();
}
inline ::google::protobuf::int32 SM_CS_CancelMatch::m_nroleid() const {
  return m_nroleid_;
}
inline void SM_CS_CancelMatch::set_m_nroleid(::google::protobuf::int32 value) {
  set_has_m_nroleid();
  m_nroleid_ = value;
}

// -------------------------------------------------------------------

// SM_TeamFB_InFB

// required int32 m_nleaderid = 1;
inline bool SM_TeamFB_InFB::has_m_nleaderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_TeamFB_InFB::set_has_m_nleaderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_TeamFB_InFB::clear_has_m_nleaderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_TeamFB_InFB::clear_m_nleaderid() {
  m_nleaderid_ = 0;
  clear_has_m_nleaderid();
}
inline ::google::protobuf::int32 SM_TeamFB_InFB::m_nleaderid() const {
  return m_nleaderid_;
}
inline void SM_TeamFB_InFB::set_m_nleaderid(::google::protobuf::int32 value) {
  set_has_m_nleaderid();
  m_nleaderid_ = value;
}

// -------------------------------------------------------------------

// SM_TeamFight_FirstBlood

// required int32 m_nleaderid = 1;
inline bool SM_TeamFight_FirstBlood::has_m_nleaderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_TeamFight_FirstBlood::set_has_m_nleaderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_TeamFight_FirstBlood::clear_has_m_nleaderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_TeamFight_FirstBlood::clear_m_nleaderid() {
  m_nleaderid_ = 0;
  clear_has_m_nleaderid();
}
inline ::google::protobuf::int32 SM_TeamFight_FirstBlood::m_nleaderid() const {
  return m_nleaderid_;
}
inline void SM_TeamFight_FirstBlood::set_m_nleaderid(::google::protobuf::int32 value) {
  set_has_m_nleaderid();
  m_nleaderid_ = value;
}

// required int32 m_nfbtypeid = 2;
inline bool SM_TeamFight_FirstBlood::has_m_nfbtypeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_TeamFight_FirstBlood::set_has_m_nfbtypeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_TeamFight_FirstBlood::clear_has_m_nfbtypeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_TeamFight_FirstBlood::clear_m_nfbtypeid() {
  m_nfbtypeid_ = 0;
  clear_has_m_nfbtypeid();
}
inline ::google::protobuf::int32 SM_TeamFight_FirstBlood::m_nfbtypeid() const {
  return m_nfbtypeid_;
}
inline void SM_TeamFight_FirstBlood::set_m_nfbtypeid(::google::protobuf::int32 value) {
  set_has_m_nfbtypeid();
  m_nfbtypeid_ = value;
}

// required int64 m_nfighttime = 3;
inline bool SM_TeamFight_FirstBlood::has_m_nfighttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_TeamFight_FirstBlood::set_has_m_nfighttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_TeamFight_FirstBlood::clear_has_m_nfighttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_TeamFight_FirstBlood::clear_m_nfighttime() {
  m_nfighttime_ = GOOGLE_LONGLONG(0);
  clear_has_m_nfighttime();
}
inline ::google::protobuf::int64 SM_TeamFight_FirstBlood::m_nfighttime() const {
  return m_nfighttime_;
}
inline void SM_TeamFight_FirstBlood::set_m_nfighttime(::google::protobuf::int64 value) {
  set_has_m_nfighttime();
  m_nfighttime_ = value;
}

// repeated .SM_FirstBlood_Member m_member = 10;
inline int SM_TeamFight_FirstBlood::m_member_size() const {
  return m_member_.size();
}
inline void SM_TeamFight_FirstBlood::clear_m_member() {
  m_member_.Clear();
}
inline const ::SM_FirstBlood_Member& SM_TeamFight_FirstBlood::m_member(int index) const {
  return m_member_.Get(index);
}
inline ::SM_FirstBlood_Member* SM_TeamFight_FirstBlood::mutable_m_member(int index) {
  return m_member_.Mutable(index);
}
inline ::SM_FirstBlood_Member* SM_TeamFight_FirstBlood::add_m_member() {
  return m_member_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SM_FirstBlood_Member >&
SM_TeamFight_FirstBlood::m_member() const {
  return m_member_;
}
inline ::google::protobuf::RepeatedPtrField< ::SM_FirstBlood_Member >*
SM_TeamFight_FirstBlood::mutable_m_member() {
  return &m_member_;
}

// -------------------------------------------------------------------

// SM_FirstBlood_Member

// required int32 m_roleid = 1;
inline bool SM_FirstBlood_Member::has_m_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_FirstBlood_Member::set_has_m_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_FirstBlood_Member::clear_has_m_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_FirstBlood_Member::clear_m_roleid() {
  m_roleid_ = 0;
  clear_has_m_roleid();
}
inline ::google::protobuf::int32 SM_FirstBlood_Member::m_roleid() const {
  return m_roleid_;
}
inline void SM_FirstBlood_Member::set_m_roleid(::google::protobuf::int32 value) {
  set_has_m_roleid();
  m_roleid_ = value;
}

// optional string m_name = 2;
inline bool SM_FirstBlood_Member::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_FirstBlood_Member::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_FirstBlood_Member::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_FirstBlood_Member::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& SM_FirstBlood_Member::m_name() const {
  return *m_name_;
}
inline void SM_FirstBlood_Member::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void SM_FirstBlood_Member::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void SM_FirstBlood_Member::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SM_FirstBlood_Member::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* SM_FirstBlood_Member::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SM_FirstBlood_Member::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_rolelv = 3;
inline bool SM_FirstBlood_Member::has_m_rolelv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_FirstBlood_Member::set_has_m_rolelv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_FirstBlood_Member::clear_has_m_rolelv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_FirstBlood_Member::clear_m_rolelv() {
  m_rolelv_ = 0;
  clear_has_m_rolelv();
}
inline ::google::protobuf::int32 SM_FirstBlood_Member::m_rolelv() const {
  return m_rolelv_;
}
inline void SM_FirstBlood_Member::set_m_rolelv(::google::protobuf::int32 value) {
  set_has_m_rolelv();
  m_rolelv_ = value;
}

// optional int32 m_fightpow = 4;
inline bool SM_FirstBlood_Member::has_m_fightpow() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SM_FirstBlood_Member::set_has_m_fightpow() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SM_FirstBlood_Member::clear_has_m_fightpow() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SM_FirstBlood_Member::clear_m_fightpow() {
  m_fightpow_ = 0;
  clear_has_m_fightpow();
}
inline ::google::protobuf::int32 SM_FirstBlood_Member::m_fightpow() const {
  return m_fightpow_;
}
inline void SM_FirstBlood_Member::set_m_fightpow(::google::protobuf::int32 value) {
  set_has_m_fightpow();
  m_fightpow_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_SP_5fTeam_2etxt__INCLUDED
