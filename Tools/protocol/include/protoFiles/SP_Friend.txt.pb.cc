// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_Friend.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SP_Friend.txt.pb.h"
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* SM_SendFriendToGs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SM_SendFriendToGs_reflection_ = NULL;
const ::google::protobuf::Descriptor* SM_FriendData_Proto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SM_FriendData_Proto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SM_FriendReciveToGs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SM_FriendReciveToGs_reflection_ = NULL;
const ::google::protobuf::Descriptor* SM_ChangeFriendData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SM_ChangeFriendData_reflection_ = NULL;
const ::google::protobuf::Descriptor* SM_ChangeFriendDataReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SM_ChangeFriendDataReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* SM_GetFriendNumReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SM_GetFriendNumReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* SM_GetFriendNumALL_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SM_GetFriendNumALL_reflection_ = NULL;
const ::google::protobuf::Descriptor* SM_GetFriendNumALLRetuen_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SM_GetFriendNumALLRetuen_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_SP_5fFriend_2etxt() {
  protobuf_AddDesc_SP_5fFriend_2etxt();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SP_Friend.txt");
  GOOGLE_CHECK(file != NULL);
  SM_SendFriendToGs_descriptor_ = file->message_type(0);
  static const int SM_SendFriendToGs_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendFriendToGs, m_roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendFriendToGs, m_frienddata_),
  };
  SM_SendFriendToGs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SM_SendFriendToGs_descriptor_,
      SM_SendFriendToGs::default_instance_,
      SM_SendFriendToGs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendFriendToGs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_SendFriendToGs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SM_SendFriendToGs));
  SM_FriendData_Proto_descriptor_ = file->message_type(1);
  static const int SM_FriendData_Proto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_FriendData_Proto, m_roleid1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_FriendData_Proto, m_roleid2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_FriendData_Proto, m_friend_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_FriendData_Proto, m_friend_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_FriendData_Proto, m_give_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_FriendData_Proto, m_receive_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_FriendData_Proto, m_receive_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_FriendData_Proto, m_friend_content_),
  };
  SM_FriendData_Proto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SM_FriendData_Proto_descriptor_,
      SM_FriendData_Proto::default_instance_,
      SM_FriendData_Proto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_FriendData_Proto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_FriendData_Proto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SM_FriendData_Proto));
  SM_FriendReciveToGs_descriptor_ = file->message_type(2);
  static const int SM_FriendReciveToGs_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_FriendReciveToGs, m_roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_FriendReciveToGs, m_recieve_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_FriendReciveToGs, m_invite_times_),
  };
  SM_FriendReciveToGs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SM_FriendReciveToGs_descriptor_,
      SM_FriendReciveToGs::default_instance_,
      SM_FriendReciveToGs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_FriendReciveToGs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_FriendReciveToGs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SM_FriendReciveToGs));
  SM_ChangeFriendData_descriptor_ = file->message_type(3);
  static const int SM_ChangeFriendData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_ChangeFriendData, m_event_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_ChangeFriendData, m_roleid1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_ChangeFriendData, m_roleid2_),
  };
  SM_ChangeFriendData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SM_ChangeFriendData_descriptor_,
      SM_ChangeFriendData::default_instance_,
      SM_ChangeFriendData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_ChangeFriendData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_ChangeFriendData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SM_ChangeFriendData));
  SM_ChangeFriendDataReturn_descriptor_ = file->message_type(4);
  static const int SM_ChangeFriendDataReturn_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_ChangeFriendDataReturn, m_result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_ChangeFriendDataReturn, m_roleid1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_ChangeFriendDataReturn, m_roleid2_),
  };
  SM_ChangeFriendDataReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SM_ChangeFriendDataReturn_descriptor_,
      SM_ChangeFriendDataReturn::default_instance_,
      SM_ChangeFriendDataReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_ChangeFriendDataReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_ChangeFriendDataReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SM_ChangeFriendDataReturn));
  SM_GetFriendNumReturn_descriptor_ = file->message_type(5);
  static const int SM_GetFriendNumReturn_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_GetFriendNumReturn, m_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_GetFriendNumReturn, m_roleid_),
  };
  SM_GetFriendNumReturn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SM_GetFriendNumReturn_descriptor_,
      SM_GetFriendNumReturn::default_instance_,
      SM_GetFriendNumReturn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_GetFriendNumReturn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_GetFriendNumReturn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SM_GetFriendNumReturn));
  SM_GetFriendNumALL_descriptor_ = file->message_type(6);
  static const int SM_GetFriendNumALL_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_GetFriendNumALL, m_friendnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_GetFriendNumALL, m_roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_GetFriendNumALL, m_roleid2_),
  };
  SM_GetFriendNumALL_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SM_GetFriendNumALL_descriptor_,
      SM_GetFriendNumALL::default_instance_,
      SM_GetFriendNumALL_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_GetFriendNumALL, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_GetFriendNumALL, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SM_GetFriendNumALL));
  SM_GetFriendNumALLRetuen_descriptor_ = file->message_type(7);
  static const int SM_GetFriendNumALLRetuen_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_GetFriendNumALLRetuen, m_roleid_),
  };
  SM_GetFriendNumALLRetuen_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SM_GetFriendNumALLRetuen_descriptor_,
      SM_GetFriendNumALLRetuen::default_instance_,
      SM_GetFriendNumALLRetuen_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_GetFriendNumALLRetuen, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SM_GetFriendNumALLRetuen, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SM_GetFriendNumALLRetuen));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SP_5fFriend_2etxt);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SM_SendFriendToGs_descriptor_, &SM_SendFriendToGs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SM_FriendData_Proto_descriptor_, &SM_FriendData_Proto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SM_FriendReciveToGs_descriptor_, &SM_FriendReciveToGs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SM_ChangeFriendData_descriptor_, &SM_ChangeFriendData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SM_ChangeFriendDataReturn_descriptor_, &SM_ChangeFriendDataReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SM_GetFriendNumReturn_descriptor_, &SM_GetFriendNumReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SM_GetFriendNumALL_descriptor_, &SM_GetFriendNumALL::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SM_GetFriendNumALLRetuen_descriptor_, &SM_GetFriendNumALLRetuen::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SP_5fFriend_2etxt() {
  delete SM_SendFriendToGs::default_instance_;
  delete SM_SendFriendToGs_reflection_;
  delete SM_FriendData_Proto::default_instance_;
  delete SM_FriendData_Proto_reflection_;
  delete SM_FriendReciveToGs::default_instance_;
  delete SM_FriendReciveToGs_reflection_;
  delete SM_ChangeFriendData::default_instance_;
  delete SM_ChangeFriendData_reflection_;
  delete SM_ChangeFriendDataReturn::default_instance_;
  delete SM_ChangeFriendDataReturn_reflection_;
  delete SM_GetFriendNumReturn::default_instance_;
  delete SM_GetFriendNumReturn_reflection_;
  delete SM_GetFriendNumALL::default_instance_;
  delete SM_GetFriendNumALL_reflection_;
  delete SM_GetFriendNumALLRetuen::default_instance_;
  delete SM_GetFriendNumALLRetuen_reflection_;
}

void protobuf_AddDesc_SP_5fFriend_2etxt() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rSP_Friend.txt\"Q\n\021SM_SendFriendToGs\022\020\n\010"
    "m_roleid\030\001 \002(\005\022*\n\014m_frienddata\030\002 \003(\0132\024.S"
    "M_FriendData_Proto\"\313\001\n\023SM_FriendData_Pro"
    "to\022\021\n\tm_roleid1\030\001 \002(\005\022\021\n\tm_roleid2\030\002 \002(\005"
    "\022\026\n\016m_friend_state\030\003 \002(\005\022\025\n\rm_friend_tim"
    "e\030\004 \002(\005\022\024\n\014m_give_state\030\005 \002(\005\022\027\n\017m_recei"
    "ve_state\030\006 \002(\005\022\026\n\016m_receive_time\030\007 \002(\005\022\030"
    "\n\020m_friend_content\030\010 \002(\t\"X\n\023SM_FriendRec"
    "iveToGs\022\020\n\010m_roleid\030\001 \002(\005\022\027\n\017m_recieve_t"
    "imes\030\002 \002(\005\022\026\n\016m_invite_times\030\003 \002(\005\"L\n\023SM"
    "_ChangeFriendData\022\017\n\007m_event\030\001 \002(\005\022\021\n\tm_"
    "roleid1\030\002 \002(\005\022\021\n\tm_roleid2\030\003 \002(\005\"S\n\031SM_C"
    "hangeFriendDataReturn\022\020\n\010m_result\030\001 \002(\005\022"
    "\021\n\tm_roleid1\030\002 \002(\005\022\021\n\tm_roleid2\030\003 \002(\005\":\n"
    "\025SM_GetFriendNumReturn\022\017\n\007m_state\030\001 \002(\005\022"
    "\020\n\010m_roleid\030\002 \002(\005\"N\n\022SM_GetFriendNumALL\022"
    "\023\n\013m_friendnum\030\001 \002(\005\022\020\n\010m_roleid\030\002 \003(\005\022\021"
    "\n\tm_roleid2\030\003 \003(\005\",\n\030SM_GetFriendNumALLR"
    "etuen\022\020\n\010m_roleid\030\001 \003(\005", 743);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SP_Friend.txt", &protobuf_RegisterTypes);
  SM_SendFriendToGs::default_instance_ = new SM_SendFriendToGs();
  SM_FriendData_Proto::default_instance_ = new SM_FriendData_Proto();
  SM_FriendReciveToGs::default_instance_ = new SM_FriendReciveToGs();
  SM_ChangeFriendData::default_instance_ = new SM_ChangeFriendData();
  SM_ChangeFriendDataReturn::default_instance_ = new SM_ChangeFriendDataReturn();
  SM_GetFriendNumReturn::default_instance_ = new SM_GetFriendNumReturn();
  SM_GetFriendNumALL::default_instance_ = new SM_GetFriendNumALL();
  SM_GetFriendNumALLRetuen::default_instance_ = new SM_GetFriendNumALLRetuen();
  SM_SendFriendToGs::default_instance_->InitAsDefaultInstance();
  SM_FriendData_Proto::default_instance_->InitAsDefaultInstance();
  SM_FriendReciveToGs::default_instance_->InitAsDefaultInstance();
  SM_ChangeFriendData::default_instance_->InitAsDefaultInstance();
  SM_ChangeFriendDataReturn::default_instance_->InitAsDefaultInstance();
  SM_GetFriendNumReturn::default_instance_->InitAsDefaultInstance();
  SM_GetFriendNumALL::default_instance_->InitAsDefaultInstance();
  SM_GetFriendNumALLRetuen::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SP_5fFriend_2etxt);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SP_5fFriend_2etxt {
  StaticDescriptorInitializer_SP_5fFriend_2etxt() {
    protobuf_AddDesc_SP_5fFriend_2etxt();
  }
} static_descriptor_initializer_SP_5fFriend_2etxt_;

// ===================================================================

#ifndef _MSC_VER
const int SM_SendFriendToGs::kMRoleidFieldNumber;
const int SM_SendFriendToGs::kMFrienddataFieldNumber;
#endif  // !_MSC_VER

SM_SendFriendToGs::SM_SendFriendToGs()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SM_SendFriendToGs::InitAsDefaultInstance() {
}

SM_SendFriendToGs::SM_SendFriendToGs(const SM_SendFriendToGs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SM_SendFriendToGs::SharedCtor() {
  _cached_size_ = 0;
  m_roleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SM_SendFriendToGs::~SM_SendFriendToGs() {
  SharedDtor();
}

void SM_SendFriendToGs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SM_SendFriendToGs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SM_SendFriendToGs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SM_SendFriendToGs_descriptor_;
}

const SM_SendFriendToGs& SM_SendFriendToGs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fFriend_2etxt();
  return *default_instance_;
}

SM_SendFriendToGs* SM_SendFriendToGs::default_instance_ = NULL;

SM_SendFriendToGs* SM_SendFriendToGs::New() const {
  return new SM_SendFriendToGs;
}

void SM_SendFriendToGs::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_roleid_ = 0;
  }
  m_frienddata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SM_SendFriendToGs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid_)));
          set_has_m_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_frienddata;
        break;
      }

      // repeated .SM_FriendData_Proto m_frienddata = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_frienddata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_frienddata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_frienddata;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SM_SendFriendToGs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_roleid = 1;
  if (has_m_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_roleid(), output);
  }

  // repeated .SM_FriendData_Proto m_frienddata = 2;
  for (int i = 0; i < this->m_frienddata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_frienddata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SM_SendFriendToGs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_roleid = 1;
  if (has_m_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_roleid(), target);
  }

  // repeated .SM_FriendData_Proto m_frienddata = 2;
  for (int i = 0; i < this->m_frienddata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_frienddata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SM_SendFriendToGs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_roleid = 1;
    if (has_m_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid());
    }

  }
  // repeated .SM_FriendData_Proto m_frienddata = 2;
  total_size += 1 * this->m_frienddata_size();
  for (int i = 0; i < this->m_frienddata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_frienddata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SM_SendFriendToGs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SM_SendFriendToGs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SM_SendFriendToGs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SM_SendFriendToGs::MergeFrom(const SM_SendFriendToGs& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_frienddata_.MergeFrom(from.m_frienddata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_roleid()) {
      set_m_roleid(from.m_roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SM_SendFriendToGs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SM_SendFriendToGs::CopyFrom(const SM_SendFriendToGs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SM_SendFriendToGs::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < m_frienddata_size(); i++) {
    if (!this->m_frienddata(i).IsInitialized()) return false;
  }
  return true;
}

void SM_SendFriendToGs::Swap(SM_SendFriendToGs* other) {
  if (other != this) {
    std::swap(m_roleid_, other->m_roleid_);
    m_frienddata_.Swap(&other->m_frienddata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SM_SendFriendToGs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SM_SendFriendToGs_descriptor_;
  metadata.reflection = SM_SendFriendToGs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SM_FriendData_Proto::kMRoleid1FieldNumber;
const int SM_FriendData_Proto::kMRoleid2FieldNumber;
const int SM_FriendData_Proto::kMFriendStateFieldNumber;
const int SM_FriendData_Proto::kMFriendTimeFieldNumber;
const int SM_FriendData_Proto::kMGiveStateFieldNumber;
const int SM_FriendData_Proto::kMReceiveStateFieldNumber;
const int SM_FriendData_Proto::kMReceiveTimeFieldNumber;
const int SM_FriendData_Proto::kMFriendContentFieldNumber;
#endif  // !_MSC_VER

SM_FriendData_Proto::SM_FriendData_Proto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SM_FriendData_Proto::InitAsDefaultInstance() {
}

SM_FriendData_Proto::SM_FriendData_Proto(const SM_FriendData_Proto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SM_FriendData_Proto::SharedCtor() {
  _cached_size_ = 0;
  m_roleid1_ = 0;
  m_roleid2_ = 0;
  m_friend_state_ = 0;
  m_friend_time_ = 0;
  m_give_state_ = 0;
  m_receive_state_ = 0;
  m_receive_time_ = 0;
  m_friend_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SM_FriendData_Proto::~SM_FriendData_Proto() {
  SharedDtor();
}

void SM_FriendData_Proto::SharedDtor() {
  if (m_friend_content_ != &::google::protobuf::internal::kEmptyString) {
    delete m_friend_content_;
  }
  if (this != default_instance_) {
  }
}

void SM_FriendData_Proto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SM_FriendData_Proto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SM_FriendData_Proto_descriptor_;
}

const SM_FriendData_Proto& SM_FriendData_Proto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fFriend_2etxt();
  return *default_instance_;
}

SM_FriendData_Proto* SM_FriendData_Proto::default_instance_ = NULL;

SM_FriendData_Proto* SM_FriendData_Proto::New() const {
  return new SM_FriendData_Proto;
}

void SM_FriendData_Proto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_roleid1_ = 0;
    m_roleid2_ = 0;
    m_friend_state_ = 0;
    m_friend_time_ = 0;
    m_give_state_ = 0;
    m_receive_state_ = 0;
    m_receive_time_ = 0;
    if (has_m_friend_content()) {
      if (m_friend_content_ != &::google::protobuf::internal::kEmptyString) {
        m_friend_content_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SM_FriendData_Proto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_roleid1 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid1_)));
          set_has_m_roleid1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_roleid2;
        break;
      }

      // required int32 m_roleid2 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_roleid2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid2_)));
          set_has_m_roleid2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_friend_state;
        break;
      }

      // required int32 m_friend_state = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_friend_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_friend_state_)));
          set_has_m_friend_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_friend_time;
        break;
      }

      // required int32 m_friend_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_friend_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_friend_time_)));
          set_has_m_friend_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_give_state;
        break;
      }

      // required int32 m_give_state = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_give_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_give_state_)));
          set_has_m_give_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_receive_state;
        break;
      }

      // required int32 m_receive_state = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_receive_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_receive_state_)));
          set_has_m_receive_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_receive_time;
        break;
      }

      // required int32 m_receive_time = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_receive_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_receive_time_)));
          set_has_m_receive_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_friend_content;
        break;
      }

      // required string m_friend_content = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_friend_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_friend_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_friend_content().data(), this->m_friend_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SM_FriendData_Proto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_roleid1 = 1;
  if (has_m_roleid1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_roleid1(), output);
  }

  // required int32 m_roleid2 = 2;
  if (has_m_roleid2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_roleid2(), output);
  }

  // required int32 m_friend_state = 3;
  if (has_m_friend_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_friend_state(), output);
  }

  // required int32 m_friend_time = 4;
  if (has_m_friend_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_friend_time(), output);
  }

  // required int32 m_give_state = 5;
  if (has_m_give_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_give_state(), output);
  }

  // required int32 m_receive_state = 6;
  if (has_m_receive_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_receive_state(), output);
  }

  // required int32 m_receive_time = 7;
  if (has_m_receive_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_receive_time(), output);
  }

  // required string m_friend_content = 8;
  if (has_m_friend_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_friend_content().data(), this->m_friend_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->m_friend_content(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SM_FriendData_Proto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_roleid1 = 1;
  if (has_m_roleid1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_roleid1(), target);
  }

  // required int32 m_roleid2 = 2;
  if (has_m_roleid2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_roleid2(), target);
  }

  // required int32 m_friend_state = 3;
  if (has_m_friend_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_friend_state(), target);
  }

  // required int32 m_friend_time = 4;
  if (has_m_friend_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_friend_time(), target);
  }

  // required int32 m_give_state = 5;
  if (has_m_give_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_give_state(), target);
  }

  // required int32 m_receive_state = 6;
  if (has_m_receive_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_receive_state(), target);
  }

  // required int32 m_receive_time = 7;
  if (has_m_receive_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_receive_time(), target);
  }

  // required string m_friend_content = 8;
  if (has_m_friend_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_friend_content().data(), this->m_friend_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->m_friend_content(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SM_FriendData_Proto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_roleid1 = 1;
    if (has_m_roleid1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid1());
    }

    // required int32 m_roleid2 = 2;
    if (has_m_roleid2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid2());
    }

    // required int32 m_friend_state = 3;
    if (has_m_friend_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_friend_state());
    }

    // required int32 m_friend_time = 4;
    if (has_m_friend_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_friend_time());
    }

    // required int32 m_give_state = 5;
    if (has_m_give_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_give_state());
    }

    // required int32 m_receive_state = 6;
    if (has_m_receive_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_receive_state());
    }

    // required int32 m_receive_time = 7;
    if (has_m_receive_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_receive_time());
    }

    // required string m_friend_content = 8;
    if (has_m_friend_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_friend_content());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SM_FriendData_Proto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SM_FriendData_Proto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SM_FriendData_Proto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SM_FriendData_Proto::MergeFrom(const SM_FriendData_Proto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_roleid1()) {
      set_m_roleid1(from.m_roleid1());
    }
    if (from.has_m_roleid2()) {
      set_m_roleid2(from.m_roleid2());
    }
    if (from.has_m_friend_state()) {
      set_m_friend_state(from.m_friend_state());
    }
    if (from.has_m_friend_time()) {
      set_m_friend_time(from.m_friend_time());
    }
    if (from.has_m_give_state()) {
      set_m_give_state(from.m_give_state());
    }
    if (from.has_m_receive_state()) {
      set_m_receive_state(from.m_receive_state());
    }
    if (from.has_m_receive_time()) {
      set_m_receive_time(from.m_receive_time());
    }
    if (from.has_m_friend_content()) {
      set_m_friend_content(from.m_friend_content());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SM_FriendData_Proto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SM_FriendData_Proto::CopyFrom(const SM_FriendData_Proto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SM_FriendData_Proto::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void SM_FriendData_Proto::Swap(SM_FriendData_Proto* other) {
  if (other != this) {
    std::swap(m_roleid1_, other->m_roleid1_);
    std::swap(m_roleid2_, other->m_roleid2_);
    std::swap(m_friend_state_, other->m_friend_state_);
    std::swap(m_friend_time_, other->m_friend_time_);
    std::swap(m_give_state_, other->m_give_state_);
    std::swap(m_receive_state_, other->m_receive_state_);
    std::swap(m_receive_time_, other->m_receive_time_);
    std::swap(m_friend_content_, other->m_friend_content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SM_FriendData_Proto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SM_FriendData_Proto_descriptor_;
  metadata.reflection = SM_FriendData_Proto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SM_FriendReciveToGs::kMRoleidFieldNumber;
const int SM_FriendReciveToGs::kMRecieveTimesFieldNumber;
const int SM_FriendReciveToGs::kMInviteTimesFieldNumber;
#endif  // !_MSC_VER

SM_FriendReciveToGs::SM_FriendReciveToGs()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SM_FriendReciveToGs::InitAsDefaultInstance() {
}

SM_FriendReciveToGs::SM_FriendReciveToGs(const SM_FriendReciveToGs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SM_FriendReciveToGs::SharedCtor() {
  _cached_size_ = 0;
  m_roleid_ = 0;
  m_recieve_times_ = 0;
  m_invite_times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SM_FriendReciveToGs::~SM_FriendReciveToGs() {
  SharedDtor();
}

void SM_FriendReciveToGs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SM_FriendReciveToGs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SM_FriendReciveToGs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SM_FriendReciveToGs_descriptor_;
}

const SM_FriendReciveToGs& SM_FriendReciveToGs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fFriend_2etxt();
  return *default_instance_;
}

SM_FriendReciveToGs* SM_FriendReciveToGs::default_instance_ = NULL;

SM_FriendReciveToGs* SM_FriendReciveToGs::New() const {
  return new SM_FriendReciveToGs;
}

void SM_FriendReciveToGs::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_roleid_ = 0;
    m_recieve_times_ = 0;
    m_invite_times_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SM_FriendReciveToGs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid_)));
          set_has_m_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_recieve_times;
        break;
      }

      // required int32 m_recieve_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_recieve_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_recieve_times_)));
          set_has_m_recieve_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_invite_times;
        break;
      }

      // required int32 m_invite_times = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_invite_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_invite_times_)));
          set_has_m_invite_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SM_FriendReciveToGs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_roleid = 1;
  if (has_m_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_roleid(), output);
  }

  // required int32 m_recieve_times = 2;
  if (has_m_recieve_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_recieve_times(), output);
  }

  // required int32 m_invite_times = 3;
  if (has_m_invite_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_invite_times(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SM_FriendReciveToGs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_roleid = 1;
  if (has_m_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_roleid(), target);
  }

  // required int32 m_recieve_times = 2;
  if (has_m_recieve_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_recieve_times(), target);
  }

  // required int32 m_invite_times = 3;
  if (has_m_invite_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_invite_times(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SM_FriendReciveToGs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_roleid = 1;
    if (has_m_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid());
    }

    // required int32 m_recieve_times = 2;
    if (has_m_recieve_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_recieve_times());
    }

    // required int32 m_invite_times = 3;
    if (has_m_invite_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_invite_times());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SM_FriendReciveToGs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SM_FriendReciveToGs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SM_FriendReciveToGs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SM_FriendReciveToGs::MergeFrom(const SM_FriendReciveToGs& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_roleid()) {
      set_m_roleid(from.m_roleid());
    }
    if (from.has_m_recieve_times()) {
      set_m_recieve_times(from.m_recieve_times());
    }
    if (from.has_m_invite_times()) {
      set_m_invite_times(from.m_invite_times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SM_FriendReciveToGs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SM_FriendReciveToGs::CopyFrom(const SM_FriendReciveToGs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SM_FriendReciveToGs::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void SM_FriendReciveToGs::Swap(SM_FriendReciveToGs* other) {
  if (other != this) {
    std::swap(m_roleid_, other->m_roleid_);
    std::swap(m_recieve_times_, other->m_recieve_times_);
    std::swap(m_invite_times_, other->m_invite_times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SM_FriendReciveToGs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SM_FriendReciveToGs_descriptor_;
  metadata.reflection = SM_FriendReciveToGs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SM_ChangeFriendData::kMEventFieldNumber;
const int SM_ChangeFriendData::kMRoleid1FieldNumber;
const int SM_ChangeFriendData::kMRoleid2FieldNumber;
#endif  // !_MSC_VER

SM_ChangeFriendData::SM_ChangeFriendData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SM_ChangeFriendData::InitAsDefaultInstance() {
}

SM_ChangeFriendData::SM_ChangeFriendData(const SM_ChangeFriendData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SM_ChangeFriendData::SharedCtor() {
  _cached_size_ = 0;
  m_event_ = 0;
  m_roleid1_ = 0;
  m_roleid2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SM_ChangeFriendData::~SM_ChangeFriendData() {
  SharedDtor();
}

void SM_ChangeFriendData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SM_ChangeFriendData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SM_ChangeFriendData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SM_ChangeFriendData_descriptor_;
}

const SM_ChangeFriendData& SM_ChangeFriendData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fFriend_2etxt();
  return *default_instance_;
}

SM_ChangeFriendData* SM_ChangeFriendData::default_instance_ = NULL;

SM_ChangeFriendData* SM_ChangeFriendData::New() const {
  return new SM_ChangeFriendData;
}

void SM_ChangeFriendData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_event_ = 0;
    m_roleid1_ = 0;
    m_roleid2_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SM_ChangeFriendData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_event = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_event_)));
          set_has_m_event();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_roleid1;
        break;
      }

      // required int32 m_roleid1 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_roleid1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid1_)));
          set_has_m_roleid1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_roleid2;
        break;
      }

      // required int32 m_roleid2 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_roleid2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid2_)));
          set_has_m_roleid2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SM_ChangeFriendData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_event = 1;
  if (has_m_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_event(), output);
  }

  // required int32 m_roleid1 = 2;
  if (has_m_roleid1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_roleid1(), output);
  }

  // required int32 m_roleid2 = 3;
  if (has_m_roleid2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_roleid2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SM_ChangeFriendData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_event = 1;
  if (has_m_event()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_event(), target);
  }

  // required int32 m_roleid1 = 2;
  if (has_m_roleid1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_roleid1(), target);
  }

  // required int32 m_roleid2 = 3;
  if (has_m_roleid2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_roleid2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SM_ChangeFriendData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_event = 1;
    if (has_m_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_event());
    }

    // required int32 m_roleid1 = 2;
    if (has_m_roleid1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid1());
    }

    // required int32 m_roleid2 = 3;
    if (has_m_roleid2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SM_ChangeFriendData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SM_ChangeFriendData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SM_ChangeFriendData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SM_ChangeFriendData::MergeFrom(const SM_ChangeFriendData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_event()) {
      set_m_event(from.m_event());
    }
    if (from.has_m_roleid1()) {
      set_m_roleid1(from.m_roleid1());
    }
    if (from.has_m_roleid2()) {
      set_m_roleid2(from.m_roleid2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SM_ChangeFriendData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SM_ChangeFriendData::CopyFrom(const SM_ChangeFriendData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SM_ChangeFriendData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void SM_ChangeFriendData::Swap(SM_ChangeFriendData* other) {
  if (other != this) {
    std::swap(m_event_, other->m_event_);
    std::swap(m_roleid1_, other->m_roleid1_);
    std::swap(m_roleid2_, other->m_roleid2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SM_ChangeFriendData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SM_ChangeFriendData_descriptor_;
  metadata.reflection = SM_ChangeFriendData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SM_ChangeFriendDataReturn::kMResultFieldNumber;
const int SM_ChangeFriendDataReturn::kMRoleid1FieldNumber;
const int SM_ChangeFriendDataReturn::kMRoleid2FieldNumber;
#endif  // !_MSC_VER

SM_ChangeFriendDataReturn::SM_ChangeFriendDataReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SM_ChangeFriendDataReturn::InitAsDefaultInstance() {
}

SM_ChangeFriendDataReturn::SM_ChangeFriendDataReturn(const SM_ChangeFriendDataReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SM_ChangeFriendDataReturn::SharedCtor() {
  _cached_size_ = 0;
  m_result_ = 0;
  m_roleid1_ = 0;
  m_roleid2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SM_ChangeFriendDataReturn::~SM_ChangeFriendDataReturn() {
  SharedDtor();
}

void SM_ChangeFriendDataReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SM_ChangeFriendDataReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SM_ChangeFriendDataReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SM_ChangeFriendDataReturn_descriptor_;
}

const SM_ChangeFriendDataReturn& SM_ChangeFriendDataReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fFriend_2etxt();
  return *default_instance_;
}

SM_ChangeFriendDataReturn* SM_ChangeFriendDataReturn::default_instance_ = NULL;

SM_ChangeFriendDataReturn* SM_ChangeFriendDataReturn::New() const {
  return new SM_ChangeFriendDataReturn;
}

void SM_ChangeFriendDataReturn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_result_ = 0;
    m_roleid1_ = 0;
    m_roleid2_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SM_ChangeFriendDataReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_result_)));
          set_has_m_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_roleid1;
        break;
      }

      // required int32 m_roleid1 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_roleid1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid1_)));
          set_has_m_roleid1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_roleid2;
        break;
      }

      // required int32 m_roleid2 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_roleid2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid2_)));
          set_has_m_roleid2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SM_ChangeFriendDataReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_result = 1;
  if (has_m_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_result(), output);
  }

  // required int32 m_roleid1 = 2;
  if (has_m_roleid1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_roleid1(), output);
  }

  // required int32 m_roleid2 = 3;
  if (has_m_roleid2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_roleid2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SM_ChangeFriendDataReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_result = 1;
  if (has_m_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_result(), target);
  }

  // required int32 m_roleid1 = 2;
  if (has_m_roleid1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_roleid1(), target);
  }

  // required int32 m_roleid2 = 3;
  if (has_m_roleid2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_roleid2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SM_ChangeFriendDataReturn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_result = 1;
    if (has_m_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_result());
    }

    // required int32 m_roleid1 = 2;
    if (has_m_roleid1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid1());
    }

    // required int32 m_roleid2 = 3;
    if (has_m_roleid2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SM_ChangeFriendDataReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SM_ChangeFriendDataReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SM_ChangeFriendDataReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SM_ChangeFriendDataReturn::MergeFrom(const SM_ChangeFriendDataReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_result()) {
      set_m_result(from.m_result());
    }
    if (from.has_m_roleid1()) {
      set_m_roleid1(from.m_roleid1());
    }
    if (from.has_m_roleid2()) {
      set_m_roleid2(from.m_roleid2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SM_ChangeFriendDataReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SM_ChangeFriendDataReturn::CopyFrom(const SM_ChangeFriendDataReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SM_ChangeFriendDataReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void SM_ChangeFriendDataReturn::Swap(SM_ChangeFriendDataReturn* other) {
  if (other != this) {
    std::swap(m_result_, other->m_result_);
    std::swap(m_roleid1_, other->m_roleid1_);
    std::swap(m_roleid2_, other->m_roleid2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SM_ChangeFriendDataReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SM_ChangeFriendDataReturn_descriptor_;
  metadata.reflection = SM_ChangeFriendDataReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SM_GetFriendNumReturn::kMStateFieldNumber;
const int SM_GetFriendNumReturn::kMRoleidFieldNumber;
#endif  // !_MSC_VER

SM_GetFriendNumReturn::SM_GetFriendNumReturn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SM_GetFriendNumReturn::InitAsDefaultInstance() {
}

SM_GetFriendNumReturn::SM_GetFriendNumReturn(const SM_GetFriendNumReturn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SM_GetFriendNumReturn::SharedCtor() {
  _cached_size_ = 0;
  m_state_ = 0;
  m_roleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SM_GetFriendNumReturn::~SM_GetFriendNumReturn() {
  SharedDtor();
}

void SM_GetFriendNumReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SM_GetFriendNumReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SM_GetFriendNumReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SM_GetFriendNumReturn_descriptor_;
}

const SM_GetFriendNumReturn& SM_GetFriendNumReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fFriend_2etxt();
  return *default_instance_;
}

SM_GetFriendNumReturn* SM_GetFriendNumReturn::default_instance_ = NULL;

SM_GetFriendNumReturn* SM_GetFriendNumReturn::New() const {
  return new SM_GetFriendNumReturn;
}

void SM_GetFriendNumReturn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_state_ = 0;
    m_roleid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SM_GetFriendNumReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_state_)));
          set_has_m_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_roleid;
        break;
      }

      // required int32 m_roleid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roleid_)));
          set_has_m_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SM_GetFriendNumReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_state = 1;
  if (has_m_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_state(), output);
  }

  // required int32 m_roleid = 2;
  if (has_m_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_roleid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SM_GetFriendNumReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_state = 1;
  if (has_m_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_state(), target);
  }

  // required int32 m_roleid = 2;
  if (has_m_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_roleid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SM_GetFriendNumReturn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_state = 1;
    if (has_m_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_state());
    }

    // required int32 m_roleid = 2;
    if (has_m_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roleid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SM_GetFriendNumReturn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SM_GetFriendNumReturn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SM_GetFriendNumReturn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SM_GetFriendNumReturn::MergeFrom(const SM_GetFriendNumReturn& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_state()) {
      set_m_state(from.m_state());
    }
    if (from.has_m_roleid()) {
      set_m_roleid(from.m_roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SM_GetFriendNumReturn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SM_GetFriendNumReturn::CopyFrom(const SM_GetFriendNumReturn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SM_GetFriendNumReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SM_GetFriendNumReturn::Swap(SM_GetFriendNumReturn* other) {
  if (other != this) {
    std::swap(m_state_, other->m_state_);
    std::swap(m_roleid_, other->m_roleid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SM_GetFriendNumReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SM_GetFriendNumReturn_descriptor_;
  metadata.reflection = SM_GetFriendNumReturn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SM_GetFriendNumALL::kMFriendnumFieldNumber;
const int SM_GetFriendNumALL::kMRoleidFieldNumber;
const int SM_GetFriendNumALL::kMRoleid2FieldNumber;
#endif  // !_MSC_VER

SM_GetFriendNumALL::SM_GetFriendNumALL()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SM_GetFriendNumALL::InitAsDefaultInstance() {
}

SM_GetFriendNumALL::SM_GetFriendNumALL(const SM_GetFriendNumALL& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SM_GetFriendNumALL::SharedCtor() {
  _cached_size_ = 0;
  m_friendnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SM_GetFriendNumALL::~SM_GetFriendNumALL() {
  SharedDtor();
}

void SM_GetFriendNumALL::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SM_GetFriendNumALL::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SM_GetFriendNumALL::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SM_GetFriendNumALL_descriptor_;
}

const SM_GetFriendNumALL& SM_GetFriendNumALL::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fFriend_2etxt();
  return *default_instance_;
}

SM_GetFriendNumALL* SM_GetFriendNumALL::default_instance_ = NULL;

SM_GetFriendNumALL* SM_GetFriendNumALL::New() const {
  return new SM_GetFriendNumALL;
}

void SM_GetFriendNumALL::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_friendnum_ = 0;
  }
  m_roleid_.Clear();
  m_roleid2_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SM_GetFriendNumALL::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m_friendnum = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_friendnum_)));
          set_has_m_friendnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_roleid;
        break;
      }

      // repeated int32 m_roleid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_m_roleid())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_roleid())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_roleid;
        if (input->ExpectTag(24)) goto parse_m_roleid2;
        break;
      }

      // repeated int32 m_roleid2 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_roleid2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_m_roleid2())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_roleid2())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_roleid2;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SM_GetFriendNumALL::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 m_friendnum = 1;
  if (has_m_friendnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_friendnum(), output);
  }

  // repeated int32 m_roleid = 2;
  for (int i = 0; i < this->m_roleid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->m_roleid(i), output);
  }

  // repeated int32 m_roleid2 = 3;
  for (int i = 0; i < this->m_roleid2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->m_roleid2(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SM_GetFriendNumALL::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 m_friendnum = 1;
  if (has_m_friendnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_friendnum(), target);
  }

  // repeated int32 m_roleid = 2;
  for (int i = 0; i < this->m_roleid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->m_roleid(i), target);
  }

  // repeated int32 m_roleid2 = 3;
  for (int i = 0; i < this->m_roleid2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->m_roleid2(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SM_GetFriendNumALL::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 m_friendnum = 1;
    if (has_m_friendnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_friendnum());
    }

  }
  // repeated int32 m_roleid = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_roleid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_roleid(i));
    }
    total_size += 1 * this->m_roleid_size() + data_size;
  }

  // repeated int32 m_roleid2 = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_roleid2_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_roleid2(i));
    }
    total_size += 1 * this->m_roleid2_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SM_GetFriendNumALL::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SM_GetFriendNumALL* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SM_GetFriendNumALL*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SM_GetFriendNumALL::MergeFrom(const SM_GetFriendNumALL& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_roleid_.MergeFrom(from.m_roleid_);
  m_roleid2_.MergeFrom(from.m_roleid2_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_friendnum()) {
      set_m_friendnum(from.m_friendnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SM_GetFriendNumALL::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SM_GetFriendNumALL::CopyFrom(const SM_GetFriendNumALL& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SM_GetFriendNumALL::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SM_GetFriendNumALL::Swap(SM_GetFriendNumALL* other) {
  if (other != this) {
    std::swap(m_friendnum_, other->m_friendnum_);
    m_roleid_.Swap(&other->m_roleid_);
    m_roleid2_.Swap(&other->m_roleid2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SM_GetFriendNumALL::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SM_GetFriendNumALL_descriptor_;
  metadata.reflection = SM_GetFriendNumALL_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SM_GetFriendNumALLRetuen::kMRoleidFieldNumber;
#endif  // !_MSC_VER

SM_GetFriendNumALLRetuen::SM_GetFriendNumALLRetuen()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SM_GetFriendNumALLRetuen::InitAsDefaultInstance() {
}

SM_GetFriendNumALLRetuen::SM_GetFriendNumALLRetuen(const SM_GetFriendNumALLRetuen& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SM_GetFriendNumALLRetuen::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SM_GetFriendNumALLRetuen::~SM_GetFriendNumALLRetuen() {
  SharedDtor();
}

void SM_GetFriendNumALLRetuen::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SM_GetFriendNumALLRetuen::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SM_GetFriendNumALLRetuen::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SM_GetFriendNumALLRetuen_descriptor_;
}

const SM_GetFriendNumALLRetuen& SM_GetFriendNumALLRetuen::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SP_5fFriend_2etxt();
  return *default_instance_;
}

SM_GetFriendNumALLRetuen* SM_GetFriendNumALLRetuen::default_instance_ = NULL;

SM_GetFriendNumALLRetuen* SM_GetFriendNumALLRetuen::New() const {
  return new SM_GetFriendNumALLRetuen;
}

void SM_GetFriendNumALLRetuen::Clear() {
  m_roleid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SM_GetFriendNumALLRetuen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 m_roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_m_roleid())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_roleid())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_m_roleid;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SM_GetFriendNumALLRetuen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 m_roleid = 1;
  for (int i = 0; i < this->m_roleid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->m_roleid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SM_GetFriendNumALLRetuen::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 m_roleid = 1;
  for (int i = 0; i < this->m_roleid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->m_roleid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SM_GetFriendNumALLRetuen::ByteSize() const {
  int total_size = 0;

  // repeated int32 m_roleid = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_roleid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_roleid(i));
    }
    total_size += 1 * this->m_roleid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SM_GetFriendNumALLRetuen::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SM_GetFriendNumALLRetuen* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SM_GetFriendNumALLRetuen*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SM_GetFriendNumALLRetuen::MergeFrom(const SM_GetFriendNumALLRetuen& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_roleid_.MergeFrom(from.m_roleid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SM_GetFriendNumALLRetuen::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SM_GetFriendNumALLRetuen::CopyFrom(const SM_GetFriendNumALLRetuen& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SM_GetFriendNumALLRetuen::IsInitialized() const {

  return true;
}

void SM_GetFriendNumALLRetuen::Swap(SM_GetFriendNumALLRetuen* other) {
  if (other != this) {
    m_roleid_.Swap(&other->m_roleid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SM_GetFriendNumALLRetuen::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SM_GetFriendNumALLRetuen_descriptor_;
  metadata.reflection = SM_GetFriendNumALLRetuen_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
