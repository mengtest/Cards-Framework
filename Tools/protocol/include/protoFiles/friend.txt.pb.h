// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: friend.txt

#ifndef PROTOBUF_friend_2etxt__INCLUDED
#define PROTOBUF_friend_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_friend_2etxt();
void protobuf_AssignDesc_friend_2etxt();
void protobuf_ShutdownFile_friend_2etxt();

class GM_Friend;
class GM_FriendData;
class GM_Friend_recommend_return;
class GM_Friend_single_recommend_return;
class GM_FriendRecommend;
class GM_Friend_Exprecieve_Return;
class GM_Friend_Invite_return;
class GM_Friend_Delete_Request;
class GM_Friend_Delete_return;
class GM_Friend_recieve_return;
class GM_Friendrecieve;
class GM_One_Friend_Recieve_return;
class GM_All_Friend_Recieve_return;
class GM_Invitelist_return;
class GM_Invitelist;
class GM_Invite_Agree_Return;
class GM_Invite_AgreeAll_Return;
class GM_Invite_Refuse_Return;
class GM_Single_Friend_Recommend;
class GM_Friend_Invite_Request;
class GM_Friend_Request;
class GM_Friend_Notice_Return;

// ===================================================================

class GM_Friend : public ::google::protobuf::Message {
 public:
  GM_Friend();
  virtual ~GM_Friend();

  GM_Friend(const GM_Friend& from);

  inline GM_Friend& operator=(const GM_Friend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Friend& default_instance();

  void Swap(GM_Friend* other);

  // implements Message ----------------------------------------------

  GM_Friend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Friend& from);
  void MergeFrom(const GM_Friend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_count = 1;
  inline bool has_m_count() const;
  inline void clear_m_count();
  static const int kMCountFieldNumber = 1;
  inline ::google::protobuf::int32 m_count() const;
  inline void set_m_count(::google::protobuf::int32 value);

  // optional int32 coldtime = 2;
  inline bool has_coldtime() const;
  inline void clear_coldtime();
  static const int kColdtimeFieldNumber = 2;
  inline ::google::protobuf::int32 coldtime() const;
  inline void set_coldtime(::google::protobuf::int32 value);

  // repeated .GM_FriendData m_FriendData = 3;
  inline int m_frienddata_size() const;
  inline void clear_m_frienddata();
  static const int kMFriendDataFieldNumber = 3;
  inline const ::GM_FriendData& m_frienddata(int index) const;
  inline ::GM_FriendData* mutable_m_frienddata(int index);
  inline ::GM_FriendData* add_m_frienddata();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_FriendData >&
      m_frienddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_FriendData >*
      mutable_m_frienddata();

  // @@protoc_insertion_point(class_scope:GM_Friend)
 private:
  inline void set_has_m_count();
  inline void clear_has_m_count();
  inline void set_has_coldtime();
  inline void clear_has_coldtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_count_;
  ::google::protobuf::int32 coldtime_;
  ::google::protobuf::RepeatedPtrField< ::GM_FriendData > m_frienddata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Friend* default_instance_;
};
// -------------------------------------------------------------------

class GM_FriendData : public ::google::protobuf::Message {
 public:
  GM_FriendData();
  virtual ~GM_FriendData();

  GM_FriendData(const GM_FriendData& from);

  inline GM_FriendData& operator=(const GM_FriendData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_FriendData& default_instance();

  void Swap(GM_FriendData* other);

  // implements Message ----------------------------------------------

  GM_FriendData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_FriendData& from);
  void MergeFrom(const GM_FriendData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_frendid = 1;
  inline bool has_m_frendid() const;
  inline void clear_m_frendid();
  static const int kMFrendidFieldNumber = 1;
  inline ::google::protobuf::int32 m_frendid() const;
  inline void set_m_frendid(::google::protobuf::int32 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional int32 m_viplevel = 3;
  inline bool has_m_viplevel() const;
  inline void clear_m_viplevel();
  static const int kMViplevelFieldNumber = 3;
  inline ::google::protobuf::int32 m_viplevel() const;
  inline void set_m_viplevel(::google::protobuf::int32 value);

  // optional int32 m_level = 4;
  inline bool has_m_level() const;
  inline void clear_m_level();
  static const int kMLevelFieldNumber = 4;
  inline ::google::protobuf::int32 m_level() const;
  inline void set_m_level(::google::protobuf::int32 value);

  // optional int32 m_sex = 5;
  inline bool has_m_sex() const;
  inline void clear_m_sex();
  static const int kMSexFieldNumber = 5;
  inline ::google::protobuf::int32 m_sex() const;
  inline void set_m_sex(::google::protobuf::int32 value);

  // optional int32 m_online = 6;
  inline bool has_m_online() const;
  inline void clear_m_online();
  static const int kMOnlineFieldNumber = 6;
  inline ::google::protobuf::int32 m_online() const;
  inline void set_m_online(::google::protobuf::int32 value);

  // optional int32 m_give = 7;
  inline bool has_m_give() const;
  inline void clear_m_give();
  static const int kMGiveFieldNumber = 7;
  inline ::google::protobuf::int32 m_give() const;
  inline void set_m_give(::google::protobuf::int32 value);

  // optional int32 m_isCouple = 8;
  inline bool has_m_iscouple() const;
  inline void clear_m_iscouple();
  static const int kMIsCoupleFieldNumber = 8;
  inline ::google::protobuf::int32 m_iscouple() const;
  inline void set_m_iscouple(::google::protobuf::int32 value);

  // optional int32 m_headPhoto = 9;
  inline bool has_m_headphoto() const;
  inline void clear_m_headphoto();
  static const int kMHeadPhotoFieldNumber = 9;
  inline ::google::protobuf::int32 m_headphoto() const;
  inline void set_m_headphoto(::google::protobuf::int32 value);

  // optional int32 m_headFrame = 10;
  inline bool has_m_headframe() const;
  inline void clear_m_headframe();
  static const int kMHeadFrameFieldNumber = 10;
  inline ::google::protobuf::int32 m_headframe() const;
  inline void set_m_headframe(::google::protobuf::int32 value);

  // optional string m_NickName = 11;
  inline bool has_m_nickname() const;
  inline void clear_m_nickname();
  static const int kMNickNameFieldNumber = 11;
  inline const ::std::string& m_nickname() const;
  inline void set_m_nickname(const ::std::string& value);
  inline void set_m_nickname(const char* value);
  inline void set_m_nickname(const char* value, size_t size);
  inline ::std::string* mutable_m_nickname();
  inline ::std::string* release_m_nickname();
  inline void set_allocated_m_nickname(::std::string* m_nickname);

  // optional string m_HeadPhotoUrl = 12;
  inline bool has_m_headphotourl() const;
  inline void clear_m_headphotourl();
  static const int kMHeadPhotoUrlFieldNumber = 12;
  inline const ::std::string& m_headphotourl() const;
  inline void set_m_headphotourl(const ::std::string& value);
  inline void set_m_headphotourl(const char* value);
  inline void set_m_headphotourl(const char* value, size_t size);
  inline ::std::string* mutable_m_headphotourl();
  inline ::std::string* release_m_headphotourl();
  inline void set_allocated_m_headphotourl(::std::string* m_headphotourl);

  // @@protoc_insertion_point(class_scope:GM_FriendData)
 private:
  inline void set_has_m_frendid();
  inline void clear_has_m_frendid();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_viplevel();
  inline void clear_has_m_viplevel();
  inline void set_has_m_level();
  inline void clear_has_m_level();
  inline void set_has_m_sex();
  inline void clear_has_m_sex();
  inline void set_has_m_online();
  inline void clear_has_m_online();
  inline void set_has_m_give();
  inline void clear_has_m_give();
  inline void set_has_m_iscouple();
  inline void clear_has_m_iscouple();
  inline void set_has_m_headphoto();
  inline void clear_has_m_headphoto();
  inline void set_has_m_headframe();
  inline void clear_has_m_headframe();
  inline void set_has_m_nickname();
  inline void clear_has_m_nickname();
  inline void set_has_m_headphotourl();
  inline void clear_has_m_headphotourl();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_name_;
  ::google::protobuf::int32 m_frendid_;
  ::google::protobuf::int32 m_viplevel_;
  ::google::protobuf::int32 m_level_;
  ::google::protobuf::int32 m_sex_;
  ::google::protobuf::int32 m_online_;
  ::google::protobuf::int32 m_give_;
  ::google::protobuf::int32 m_iscouple_;
  ::google::protobuf::int32 m_headphoto_;
  ::std::string* m_nickname_;
  ::std::string* m_headphotourl_;
  ::google::protobuf::int32 m_headframe_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_FriendData* default_instance_;
};
// -------------------------------------------------------------------

class GM_Friend_recommend_return : public ::google::protobuf::Message {
 public:
  GM_Friend_recommend_return();
  virtual ~GM_Friend_recommend_return();

  GM_Friend_recommend_return(const GM_Friend_recommend_return& from);

  inline GM_Friend_recommend_return& operator=(const GM_Friend_recommend_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Friend_recommend_return& default_instance();

  void Swap(GM_Friend_recommend_return* other);

  // implements Message ----------------------------------------------

  GM_Friend_recommend_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Friend_recommend_return& from);
  void MergeFrom(const GM_Friend_recommend_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_count = 1;
  inline bool has_m_count() const;
  inline void clear_m_count();
  static const int kMCountFieldNumber = 1;
  inline ::google::protobuf::int32 m_count() const;
  inline void set_m_count(::google::protobuf::int32 value);

  // repeated .GM_FriendRecommend m_FriendRecommendData = 2;
  inline int m_friendrecommenddata_size() const;
  inline void clear_m_friendrecommenddata();
  static const int kMFriendRecommendDataFieldNumber = 2;
  inline const ::GM_FriendRecommend& m_friendrecommenddata(int index) const;
  inline ::GM_FriendRecommend* mutable_m_friendrecommenddata(int index);
  inline ::GM_FriendRecommend* add_m_friendrecommenddata();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_FriendRecommend >&
      m_friendrecommenddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_FriendRecommend >*
      mutable_m_friendrecommenddata();

  // @@protoc_insertion_point(class_scope:GM_Friend_recommend_return)
 private:
  inline void set_has_m_count();
  inline void clear_has_m_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_FriendRecommend > m_friendrecommenddata_;
  ::google::protobuf::int32 m_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Friend_recommend_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Friend_single_recommend_return : public ::google::protobuf::Message {
 public:
  GM_Friend_single_recommend_return();
  virtual ~GM_Friend_single_recommend_return();

  GM_Friend_single_recommend_return(const GM_Friend_single_recommend_return& from);

  inline GM_Friend_single_recommend_return& operator=(const GM_Friend_single_recommend_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Friend_single_recommend_return& default_instance();

  void Swap(GM_Friend_single_recommend_return* other);

  // implements Message ----------------------------------------------

  GM_Friend_single_recommend_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Friend_single_recommend_return& from);
  void MergeFrom(const GM_Friend_single_recommend_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_count = 1;
  inline bool has_m_count() const;
  inline void clear_m_count();
  static const int kMCountFieldNumber = 1;
  inline ::google::protobuf::int32 m_count() const;
  inline void set_m_count(::google::protobuf::int32 value);

  // repeated .GM_FriendRecommend m_FriendRecommendData = 2;
  inline int m_friendrecommenddata_size() const;
  inline void clear_m_friendrecommenddata();
  static const int kMFriendRecommendDataFieldNumber = 2;
  inline const ::GM_FriendRecommend& m_friendrecommenddata(int index) const;
  inline ::GM_FriendRecommend* mutable_m_friendrecommenddata(int index);
  inline ::GM_FriendRecommend* add_m_friendrecommenddata();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_FriendRecommend >&
      m_friendrecommenddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_FriendRecommend >*
      mutable_m_friendrecommenddata();

  // @@protoc_insertion_point(class_scope:GM_Friend_single_recommend_return)
 private:
  inline void set_has_m_count();
  inline void clear_has_m_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_FriendRecommend > m_friendrecommenddata_;
  ::google::protobuf::int32 m_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Friend_single_recommend_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_FriendRecommend : public ::google::protobuf::Message {
 public:
  GM_FriendRecommend();
  virtual ~GM_FriendRecommend();

  GM_FriendRecommend(const GM_FriendRecommend& from);

  inline GM_FriendRecommend& operator=(const GM_FriendRecommend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_FriendRecommend& default_instance();

  void Swap(GM_FriendRecommend* other);

  // implements Message ----------------------------------------------

  GM_FriendRecommend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_FriendRecommend& from);
  void MergeFrom(const GM_FriendRecommend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_frendid = 1;
  inline bool has_m_frendid() const;
  inline void clear_m_frendid();
  static const int kMFrendidFieldNumber = 1;
  inline ::google::protobuf::int32 m_frendid() const;
  inline void set_m_frendid(::google::protobuf::int32 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional int32 m_sex = 3;
  inline bool has_m_sex() const;
  inline void clear_m_sex();
  static const int kMSexFieldNumber = 3;
  inline ::google::protobuf::int32 m_sex() const;
  inline void set_m_sex(::google::protobuf::int32 value);

  // optional int32 m_level = 4;
  inline bool has_m_level() const;
  inline void clear_m_level();
  static const int kMLevelFieldNumber = 4;
  inline ::google::protobuf::int32 m_level() const;
  inline void set_m_level(::google::protobuf::int32 value);

  // optional int32 m_viplevel = 5;
  inline bool has_m_viplevel() const;
  inline void clear_m_viplevel();
  static const int kMViplevelFieldNumber = 5;
  inline ::google::protobuf::int32 m_viplevel() const;
  inline void set_m_viplevel(::google::protobuf::int32 value);

  // optional int32 m_headPhoto = 6;
  inline bool has_m_headphoto() const;
  inline void clear_m_headphoto();
  static const int kMHeadPhotoFieldNumber = 6;
  inline ::google::protobuf::int32 m_headphoto() const;
  inline void set_m_headphoto(::google::protobuf::int32 value);

  // optional int32 m_headFrame = 7;
  inline bool has_m_headframe() const;
  inline void clear_m_headframe();
  static const int kMHeadFrameFieldNumber = 7;
  inline ::google::protobuf::int32 m_headframe() const;
  inline void set_m_headframe(::google::protobuf::int32 value);

  // optional string m_NickName = 8;
  inline bool has_m_nickname() const;
  inline void clear_m_nickname();
  static const int kMNickNameFieldNumber = 8;
  inline const ::std::string& m_nickname() const;
  inline void set_m_nickname(const ::std::string& value);
  inline void set_m_nickname(const char* value);
  inline void set_m_nickname(const char* value, size_t size);
  inline ::std::string* mutable_m_nickname();
  inline ::std::string* release_m_nickname();
  inline void set_allocated_m_nickname(::std::string* m_nickname);

  // optional string m_HeadPhotoUrl = 9;
  inline bool has_m_headphotourl() const;
  inline void clear_m_headphotourl();
  static const int kMHeadPhotoUrlFieldNumber = 9;
  inline const ::std::string& m_headphotourl() const;
  inline void set_m_headphotourl(const ::std::string& value);
  inline void set_m_headphotourl(const char* value);
  inline void set_m_headphotourl(const char* value, size_t size);
  inline ::std::string* mutable_m_headphotourl();
  inline ::std::string* release_m_headphotourl();
  inline void set_allocated_m_headphotourl(::std::string* m_headphotourl);

  // @@protoc_insertion_point(class_scope:GM_FriendRecommend)
 private:
  inline void set_has_m_frendid();
  inline void clear_has_m_frendid();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_sex();
  inline void clear_has_m_sex();
  inline void set_has_m_level();
  inline void clear_has_m_level();
  inline void set_has_m_viplevel();
  inline void clear_has_m_viplevel();
  inline void set_has_m_headphoto();
  inline void clear_has_m_headphoto();
  inline void set_has_m_headframe();
  inline void clear_has_m_headframe();
  inline void set_has_m_nickname();
  inline void clear_has_m_nickname();
  inline void set_has_m_headphotourl();
  inline void clear_has_m_headphotourl();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_name_;
  ::google::protobuf::int32 m_frendid_;
  ::google::protobuf::int32 m_sex_;
  ::google::protobuf::int32 m_level_;
  ::google::protobuf::int32 m_viplevel_;
  ::google::protobuf::int32 m_headphoto_;
  ::google::protobuf::int32 m_headframe_;
  ::std::string* m_nickname_;
  ::std::string* m_headphotourl_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_FriendRecommend* default_instance_;
};
// -------------------------------------------------------------------

class GM_Friend_Exprecieve_Return : public ::google::protobuf::Message {
 public:
  GM_Friend_Exprecieve_Return();
  virtual ~GM_Friend_Exprecieve_Return();

  GM_Friend_Exprecieve_Return(const GM_Friend_Exprecieve_Return& from);

  inline GM_Friend_Exprecieve_Return& operator=(const GM_Friend_Exprecieve_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Friend_Exprecieve_Return& default_instance();

  void Swap(GM_Friend_Exprecieve_Return* other);

  // implements Message ----------------------------------------------

  GM_Friend_Exprecieve_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Friend_Exprecieve_Return& from);
  void MergeFrom(const GM_Friend_Exprecieve_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_state = 1;
  inline bool has_m_state() const;
  inline void clear_m_state();
  static const int kMStateFieldNumber = 1;
  inline ::google::protobuf::int32 m_state() const;
  inline void set_m_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Friend_Exprecieve_Return)
 private:
  inline void set_has_m_state();
  inline void clear_has_m_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Friend_Exprecieve_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Friend_Invite_return : public ::google::protobuf::Message {
 public:
  GM_Friend_Invite_return();
  virtual ~GM_Friend_Invite_return();

  GM_Friend_Invite_return(const GM_Friend_Invite_return& from);

  inline GM_Friend_Invite_return& operator=(const GM_Friend_Invite_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Friend_Invite_return& default_instance();

  void Swap(GM_Friend_Invite_return* other);

  // implements Message ----------------------------------------------

  GM_Friend_Invite_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Friend_Invite_return& from);
  void MergeFrom(const GM_Friend_Invite_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_state = 1;
  inline bool has_m_state() const;
  inline void clear_m_state();
  static const int kMStateFieldNumber = 1;
  inline ::google::protobuf::int32 m_state() const;
  inline void set_m_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Friend_Invite_return)
 private:
  inline void set_has_m_state();
  inline void clear_has_m_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Friend_Invite_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Friend_Delete_Request : public ::google::protobuf::Message {
 public:
  GM_Friend_Delete_Request();
  virtual ~GM_Friend_Delete_Request();

  GM_Friend_Delete_Request(const GM_Friend_Delete_Request& from);

  inline GM_Friend_Delete_Request& operator=(const GM_Friend_Delete_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Friend_Delete_Request& default_instance();

  void Swap(GM_Friend_Delete_Request* other);

  // implements Message ----------------------------------------------

  GM_Friend_Delete_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Friend_Delete_Request& from);
  void MergeFrom(const GM_Friend_Delete_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_friendid = 1;
  inline bool has_m_friendid() const;
  inline void clear_m_friendid();
  static const int kMFriendidFieldNumber = 1;
  inline ::google::protobuf::int32 m_friendid() const;
  inline void set_m_friendid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Friend_Delete_Request)
 private:
  inline void set_has_m_friendid();
  inline void clear_has_m_friendid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_friendid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Friend_Delete_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Friend_Delete_return : public ::google::protobuf::Message {
 public:
  GM_Friend_Delete_return();
  virtual ~GM_Friend_Delete_return();

  GM_Friend_Delete_return(const GM_Friend_Delete_return& from);

  inline GM_Friend_Delete_return& operator=(const GM_Friend_Delete_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Friend_Delete_return& default_instance();

  void Swap(GM_Friend_Delete_return* other);

  // implements Message ----------------------------------------------

  GM_Friend_Delete_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Friend_Delete_return& from);
  void MergeFrom(const GM_Friend_Delete_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_state = 1;
  inline bool has_m_state() const;
  inline void clear_m_state();
  static const int kMStateFieldNumber = 1;
  inline ::google::protobuf::int32 m_state() const;
  inline void set_m_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Friend_Delete_return)
 private:
  inline void set_has_m_state();
  inline void clear_has_m_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Friend_Delete_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Friend_recieve_return : public ::google::protobuf::Message {
 public:
  GM_Friend_recieve_return();
  virtual ~GM_Friend_recieve_return();

  GM_Friend_recieve_return(const GM_Friend_recieve_return& from);

  inline GM_Friend_recieve_return& operator=(const GM_Friend_recieve_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Friend_recieve_return& default_instance();

  void Swap(GM_Friend_recieve_return* other);

  // implements Message ----------------------------------------------

  GM_Friend_recieve_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Friend_recieve_return& from);
  void MergeFrom(const GM_Friend_recieve_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_count = 1;
  inline bool has_m_count() const;
  inline void clear_m_count();
  static const int kMCountFieldNumber = 1;
  inline ::google::protobuf::int32 m_count() const;
  inline void set_m_count(::google::protobuf::int32 value);

  // required int32 m_recievetime = 2;
  inline bool has_m_recievetime() const;
  inline void clear_m_recievetime();
  static const int kMRecievetimeFieldNumber = 2;
  inline ::google::protobuf::int32 m_recievetime() const;
  inline void set_m_recievetime(::google::protobuf::int32 value);

  // repeated .GM_Friendrecieve m_FriendrecieveData = 3;
  inline int m_friendrecievedata_size() const;
  inline void clear_m_friendrecievedata();
  static const int kMFriendrecieveDataFieldNumber = 3;
  inline const ::GM_Friendrecieve& m_friendrecievedata(int index) const;
  inline ::GM_Friendrecieve* mutable_m_friendrecievedata(int index);
  inline ::GM_Friendrecieve* add_m_friendrecievedata();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Friendrecieve >&
      m_friendrecievedata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Friendrecieve >*
      mutable_m_friendrecievedata();

  // @@protoc_insertion_point(class_scope:GM_Friend_recieve_return)
 private:
  inline void set_has_m_count();
  inline void clear_has_m_count();
  inline void set_has_m_recievetime();
  inline void clear_has_m_recievetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_count_;
  ::google::protobuf::int32 m_recievetime_;
  ::google::protobuf::RepeatedPtrField< ::GM_Friendrecieve > m_friendrecievedata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Friend_recieve_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Friendrecieve : public ::google::protobuf::Message {
 public:
  GM_Friendrecieve();
  virtual ~GM_Friendrecieve();

  GM_Friendrecieve(const GM_Friendrecieve& from);

  inline GM_Friendrecieve& operator=(const GM_Friendrecieve& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Friendrecieve& default_instance();

  void Swap(GM_Friendrecieve* other);

  // implements Message ----------------------------------------------

  GM_Friendrecieve* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Friendrecieve& from);
  void MergeFrom(const GM_Friendrecieve& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_friendid = 1;
  inline bool has_m_friendid() const;
  inline void clear_m_friendid();
  static const int kMFriendidFieldNumber = 1;
  inline ::google::protobuf::int32 m_friendid() const;
  inline void set_m_friendid(::google::protobuf::int32 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional int32 m_sex = 3;
  inline bool has_m_sex() const;
  inline void clear_m_sex();
  static const int kMSexFieldNumber = 3;
  inline ::google::protobuf::int32 m_sex() const;
  inline void set_m_sex(::google::protobuf::int32 value);

  // optional int32 m_level = 4;
  inline bool has_m_level() const;
  inline void clear_m_level();
  static const int kMLevelFieldNumber = 4;
  inline ::google::protobuf::int32 m_level() const;
  inline void set_m_level(::google::protobuf::int32 value);

  // optional int32 m_viplevel = 5;
  inline bool has_m_viplevel() const;
  inline void clear_m_viplevel();
  static const int kMViplevelFieldNumber = 5;
  inline ::google::protobuf::int32 m_viplevel() const;
  inline void set_m_viplevel(::google::protobuf::int32 value);

  // optional int32 m_time = 6;
  inline bool has_m_time() const;
  inline void clear_m_time();
  static const int kMTimeFieldNumber = 6;
  inline ::google::protobuf::int32 m_time() const;
  inline void set_m_time(::google::protobuf::int32 value);

  // optional int32 m_headPhoto = 7;
  inline bool has_m_headphoto() const;
  inline void clear_m_headphoto();
  static const int kMHeadPhotoFieldNumber = 7;
  inline ::google::protobuf::int32 m_headphoto() const;
  inline void set_m_headphoto(::google::protobuf::int32 value);

  // optional int32 m_headFrame = 8;
  inline bool has_m_headframe() const;
  inline void clear_m_headframe();
  static const int kMHeadFrameFieldNumber = 8;
  inline ::google::protobuf::int32 m_headframe() const;
  inline void set_m_headframe(::google::protobuf::int32 value);

  // optional string m_NickName = 9;
  inline bool has_m_nickname() const;
  inline void clear_m_nickname();
  static const int kMNickNameFieldNumber = 9;
  inline const ::std::string& m_nickname() const;
  inline void set_m_nickname(const ::std::string& value);
  inline void set_m_nickname(const char* value);
  inline void set_m_nickname(const char* value, size_t size);
  inline ::std::string* mutable_m_nickname();
  inline ::std::string* release_m_nickname();
  inline void set_allocated_m_nickname(::std::string* m_nickname);

  // optional string m_HeadPhotoUrl = 10;
  inline bool has_m_headphotourl() const;
  inline void clear_m_headphotourl();
  static const int kMHeadPhotoUrlFieldNumber = 10;
  inline const ::std::string& m_headphotourl() const;
  inline void set_m_headphotourl(const ::std::string& value);
  inline void set_m_headphotourl(const char* value);
  inline void set_m_headphotourl(const char* value, size_t size);
  inline ::std::string* mutable_m_headphotourl();
  inline ::std::string* release_m_headphotourl();
  inline void set_allocated_m_headphotourl(::std::string* m_headphotourl);

  // @@protoc_insertion_point(class_scope:GM_Friendrecieve)
 private:
  inline void set_has_m_friendid();
  inline void clear_has_m_friendid();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_sex();
  inline void clear_has_m_sex();
  inline void set_has_m_level();
  inline void clear_has_m_level();
  inline void set_has_m_viplevel();
  inline void clear_has_m_viplevel();
  inline void set_has_m_time();
  inline void clear_has_m_time();
  inline void set_has_m_headphoto();
  inline void clear_has_m_headphoto();
  inline void set_has_m_headframe();
  inline void clear_has_m_headframe();
  inline void set_has_m_nickname();
  inline void clear_has_m_nickname();
  inline void set_has_m_headphotourl();
  inline void clear_has_m_headphotourl();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_name_;
  ::google::protobuf::int32 m_friendid_;
  ::google::protobuf::int32 m_sex_;
  ::google::protobuf::int32 m_level_;
  ::google::protobuf::int32 m_viplevel_;
  ::google::protobuf::int32 m_time_;
  ::google::protobuf::int32 m_headphoto_;
  ::std::string* m_nickname_;
  ::std::string* m_headphotourl_;
  ::google::protobuf::int32 m_headframe_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Friendrecieve* default_instance_;
};
// -------------------------------------------------------------------

class GM_One_Friend_Recieve_return : public ::google::protobuf::Message {
 public:
  GM_One_Friend_Recieve_return();
  virtual ~GM_One_Friend_Recieve_return();

  GM_One_Friend_Recieve_return(const GM_One_Friend_Recieve_return& from);

  inline GM_One_Friend_Recieve_return& operator=(const GM_One_Friend_Recieve_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_One_Friend_Recieve_return& default_instance();

  void Swap(GM_One_Friend_Recieve_return* other);

  // implements Message ----------------------------------------------

  GM_One_Friend_Recieve_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_One_Friend_Recieve_return& from);
  void MergeFrom(const GM_One_Friend_Recieve_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_state = 1;
  inline bool has_m_state() const;
  inline void clear_m_state();
  static const int kMStateFieldNumber = 1;
  inline ::google::protobuf::int32 m_state() const;
  inline void set_m_state(::google::protobuf::int32 value);

  // required int32 m_num = 2;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 2;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // required int32 m_friendid = 3;
  inline bool has_m_friendid() const;
  inline void clear_m_friendid();
  static const int kMFriendidFieldNumber = 3;
  inline ::google::protobuf::int32 m_friendid() const;
  inline void set_m_friendid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_One_Friend_Recieve_return)
 private:
  inline void set_has_m_state();
  inline void clear_has_m_state();
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_friendid();
  inline void clear_has_m_friendid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_state_;
  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_friendid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_One_Friend_Recieve_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_All_Friend_Recieve_return : public ::google::protobuf::Message {
 public:
  GM_All_Friend_Recieve_return();
  virtual ~GM_All_Friend_Recieve_return();

  GM_All_Friend_Recieve_return(const GM_All_Friend_Recieve_return& from);

  inline GM_All_Friend_Recieve_return& operator=(const GM_All_Friend_Recieve_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_All_Friend_Recieve_return& default_instance();

  void Swap(GM_All_Friend_Recieve_return* other);

  // implements Message ----------------------------------------------

  GM_All_Friend_Recieve_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_All_Friend_Recieve_return& from);
  void MergeFrom(const GM_All_Friend_Recieve_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_state = 1;
  inline bool has_m_state() const;
  inline void clear_m_state();
  static const int kMStateFieldNumber = 1;
  inline ::google::protobuf::int32 m_state() const;
  inline void set_m_state(::google::protobuf::int32 value);

  // required int32 m_num = 2;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 2;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // repeated int32 m_friendid = 3;
  inline int m_friendid_size() const;
  inline void clear_m_friendid();
  static const int kMFriendidFieldNumber = 3;
  inline ::google::protobuf::int32 m_friendid(int index) const;
  inline void set_m_friendid(int index, ::google::protobuf::int32 value);
  inline void add_m_friendid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_friendid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_friendid();

  // @@protoc_insertion_point(class_scope:GM_All_Friend_Recieve_return)
 private:
  inline void set_has_m_state();
  inline void clear_has_m_state();
  inline void set_has_m_num();
  inline void clear_has_m_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_state_;
  ::google::protobuf::int32 m_num_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_friendid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_All_Friend_Recieve_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Invitelist_return : public ::google::protobuf::Message {
 public:
  GM_Invitelist_return();
  virtual ~GM_Invitelist_return();

  GM_Invitelist_return(const GM_Invitelist_return& from);

  inline GM_Invitelist_return& operator=(const GM_Invitelist_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Invitelist_return& default_instance();

  void Swap(GM_Invitelist_return* other);

  // implements Message ----------------------------------------------

  GM_Invitelist_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Invitelist_return& from);
  void MergeFrom(const GM_Invitelist_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_count = 1;
  inline bool has_m_count() const;
  inline void clear_m_count();
  static const int kMCountFieldNumber = 1;
  inline ::google::protobuf::int32 m_count() const;
  inline void set_m_count(::google::protobuf::int32 value);

  // repeated .GM_Invitelist m_InvitelistData = 2;
  inline int m_invitelistdata_size() const;
  inline void clear_m_invitelistdata();
  static const int kMInvitelistDataFieldNumber = 2;
  inline const ::GM_Invitelist& m_invitelistdata(int index) const;
  inline ::GM_Invitelist* mutable_m_invitelistdata(int index);
  inline ::GM_Invitelist* add_m_invitelistdata();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Invitelist >&
      m_invitelistdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Invitelist >*
      mutable_m_invitelistdata();

  // @@protoc_insertion_point(class_scope:GM_Invitelist_return)
 private:
  inline void set_has_m_count();
  inline void clear_has_m_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_Invitelist > m_invitelistdata_;
  ::google::protobuf::int32 m_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Invitelist_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Invitelist : public ::google::protobuf::Message {
 public:
  GM_Invitelist();
  virtual ~GM_Invitelist();

  GM_Invitelist(const GM_Invitelist& from);

  inline GM_Invitelist& operator=(const GM_Invitelist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Invitelist& default_instance();

  void Swap(GM_Invitelist* other);

  // implements Message ----------------------------------------------

  GM_Invitelist* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Invitelist& from);
  void MergeFrom(const GM_Invitelist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_friendid = 1;
  inline bool has_m_friendid() const;
  inline void clear_m_friendid();
  static const int kMFriendidFieldNumber = 1;
  inline ::google::protobuf::int32 m_friendid() const;
  inline void set_m_friendid(::google::protobuf::int32 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional int32 m_sex = 3;
  inline bool has_m_sex() const;
  inline void clear_m_sex();
  static const int kMSexFieldNumber = 3;
  inline ::google::protobuf::int32 m_sex() const;
  inline void set_m_sex(::google::protobuf::int32 value);

  // optional int32 m_level = 4;
  inline bool has_m_level() const;
  inline void clear_m_level();
  static const int kMLevelFieldNumber = 4;
  inline ::google::protobuf::int32 m_level() const;
  inline void set_m_level(::google::protobuf::int32 value);

  // optional int32 m_viplevel = 5;
  inline bool has_m_viplevel() const;
  inline void clear_m_viplevel();
  static const int kMViplevelFieldNumber = 5;
  inline ::google::protobuf::int32 m_viplevel() const;
  inline void set_m_viplevel(::google::protobuf::int32 value);

  // optional string m_content = 6;
  inline bool has_m_content() const;
  inline void clear_m_content();
  static const int kMContentFieldNumber = 6;
  inline const ::std::string& m_content() const;
  inline void set_m_content(const ::std::string& value);
  inline void set_m_content(const char* value);
  inline void set_m_content(const char* value, size_t size);
  inline ::std::string* mutable_m_content();
  inline ::std::string* release_m_content();
  inline void set_allocated_m_content(::std::string* m_content);

  // optional int32 m_headPhoto = 7;
  inline bool has_m_headphoto() const;
  inline void clear_m_headphoto();
  static const int kMHeadPhotoFieldNumber = 7;
  inline ::google::protobuf::int32 m_headphoto() const;
  inline void set_m_headphoto(::google::protobuf::int32 value);

  // optional int32 m_headFrame = 8;
  inline bool has_m_headframe() const;
  inline void clear_m_headframe();
  static const int kMHeadFrameFieldNumber = 8;
  inline ::google::protobuf::int32 m_headframe() const;
  inline void set_m_headframe(::google::protobuf::int32 value);

  // optional string m_NickName = 9;
  inline bool has_m_nickname() const;
  inline void clear_m_nickname();
  static const int kMNickNameFieldNumber = 9;
  inline const ::std::string& m_nickname() const;
  inline void set_m_nickname(const ::std::string& value);
  inline void set_m_nickname(const char* value);
  inline void set_m_nickname(const char* value, size_t size);
  inline ::std::string* mutable_m_nickname();
  inline ::std::string* release_m_nickname();
  inline void set_allocated_m_nickname(::std::string* m_nickname);

  // optional string m_HeadPhotoUrl = 10;
  inline bool has_m_headphotourl() const;
  inline void clear_m_headphotourl();
  static const int kMHeadPhotoUrlFieldNumber = 10;
  inline const ::std::string& m_headphotourl() const;
  inline void set_m_headphotourl(const ::std::string& value);
  inline void set_m_headphotourl(const char* value);
  inline void set_m_headphotourl(const char* value, size_t size);
  inline ::std::string* mutable_m_headphotourl();
  inline ::std::string* release_m_headphotourl();
  inline void set_allocated_m_headphotourl(::std::string* m_headphotourl);

  // @@protoc_insertion_point(class_scope:GM_Invitelist)
 private:
  inline void set_has_m_friendid();
  inline void clear_has_m_friendid();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_sex();
  inline void clear_has_m_sex();
  inline void set_has_m_level();
  inline void clear_has_m_level();
  inline void set_has_m_viplevel();
  inline void clear_has_m_viplevel();
  inline void set_has_m_content();
  inline void clear_has_m_content();
  inline void set_has_m_headphoto();
  inline void clear_has_m_headphoto();
  inline void set_has_m_headframe();
  inline void clear_has_m_headframe();
  inline void set_has_m_nickname();
  inline void clear_has_m_nickname();
  inline void set_has_m_headphotourl();
  inline void clear_has_m_headphotourl();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_name_;
  ::google::protobuf::int32 m_friendid_;
  ::google::protobuf::int32 m_sex_;
  ::google::protobuf::int32 m_level_;
  ::google::protobuf::int32 m_viplevel_;
  ::std::string* m_content_;
  ::google::protobuf::int32 m_headphoto_;
  ::google::protobuf::int32 m_headframe_;
  ::std::string* m_nickname_;
  ::std::string* m_headphotourl_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Invitelist* default_instance_;
};
// -------------------------------------------------------------------

class GM_Invite_Agree_Return : public ::google::protobuf::Message {
 public:
  GM_Invite_Agree_Return();
  virtual ~GM_Invite_Agree_Return();

  GM_Invite_Agree_Return(const GM_Invite_Agree_Return& from);

  inline GM_Invite_Agree_Return& operator=(const GM_Invite_Agree_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Invite_Agree_Return& default_instance();

  void Swap(GM_Invite_Agree_Return* other);

  // implements Message ----------------------------------------------

  GM_Invite_Agree_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Invite_Agree_Return& from);
  void MergeFrom(const GM_Invite_Agree_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // required int32 m_friendid = 2;
  inline bool has_m_friendid() const;
  inline void clear_m_friendid();
  static const int kMFriendidFieldNumber = 2;
  inline ::google::protobuf::int32 m_friendid() const;
  inline void set_m_friendid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Invite_Agree_Return)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();
  inline void set_has_m_friendid();
  inline void clear_has_m_friendid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_result_;
  ::google::protobuf::int32 m_friendid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Invite_Agree_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Invite_AgreeAll_Return : public ::google::protobuf::Message {
 public:
  GM_Invite_AgreeAll_Return();
  virtual ~GM_Invite_AgreeAll_Return();

  GM_Invite_AgreeAll_Return(const GM_Invite_AgreeAll_Return& from);

  inline GM_Invite_AgreeAll_Return& operator=(const GM_Invite_AgreeAll_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Invite_AgreeAll_Return& default_instance();

  void Swap(GM_Invite_AgreeAll_Return* other);

  // implements Message ----------------------------------------------

  GM_Invite_AgreeAll_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Invite_AgreeAll_Return& from);
  void MergeFrom(const GM_Invite_AgreeAll_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // repeated int32 m_friendid = 2;
  inline int m_friendid_size() const;
  inline void clear_m_friendid();
  static const int kMFriendidFieldNumber = 2;
  inline ::google::protobuf::int32 m_friendid(int index) const;
  inline void set_m_friendid(int index, ::google::protobuf::int32 value);
  inline void add_m_friendid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_friendid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_friendid();

  // @@protoc_insertion_point(class_scope:GM_Invite_AgreeAll_Return)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_friendid_;
  ::google::protobuf::int32 m_result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Invite_AgreeAll_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Invite_Refuse_Return : public ::google::protobuf::Message {
 public:
  GM_Invite_Refuse_Return();
  virtual ~GM_Invite_Refuse_Return();

  GM_Invite_Refuse_Return(const GM_Invite_Refuse_Return& from);

  inline GM_Invite_Refuse_Return& operator=(const GM_Invite_Refuse_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Invite_Refuse_Return& default_instance();

  void Swap(GM_Invite_Refuse_Return* other);

  // implements Message ----------------------------------------------

  GM_Invite_Refuse_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Invite_Refuse_Return& from);
  void MergeFrom(const GM_Invite_Refuse_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // required int32 m_friendid = 2;
  inline bool has_m_friendid() const;
  inline void clear_m_friendid();
  static const int kMFriendidFieldNumber = 2;
  inline ::google::protobuf::int32 m_friendid() const;
  inline void set_m_friendid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Invite_Refuse_Return)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();
  inline void set_has_m_friendid();
  inline void clear_has_m_friendid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_result_;
  ::google::protobuf::int32 m_friendid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Invite_Refuse_Return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Single_Friend_Recommend : public ::google::protobuf::Message {
 public:
  GM_Single_Friend_Recommend();
  virtual ~GM_Single_Friend_Recommend();

  GM_Single_Friend_Recommend(const GM_Single_Friend_Recommend& from);

  inline GM_Single_Friend_Recommend& operator=(const GM_Single_Friend_Recommend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Single_Friend_Recommend& default_instance();

  void Swap(GM_Single_Friend_Recommend* other);

  // implements Message ----------------------------------------------

  GM_Single_Friend_Recommend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Single_Friend_Recommend& from);
  void MergeFrom(const GM_Single_Friend_Recommend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string m_name = 1;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 1;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // @@protoc_insertion_point(class_scope:GM_Single_Friend_Recommend)
 private:
  inline void set_has_m_name();
  inline void clear_has_m_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Single_Friend_Recommend* default_instance_;
};
// -------------------------------------------------------------------

class GM_Friend_Invite_Request : public ::google::protobuf::Message {
 public:
  GM_Friend_Invite_Request();
  virtual ~GM_Friend_Invite_Request();

  GM_Friend_Invite_Request(const GM_Friend_Invite_Request& from);

  inline GM_Friend_Invite_Request& operator=(const GM_Friend_Invite_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Friend_Invite_Request& default_instance();

  void Swap(GM_Friend_Invite_Request* other);

  // implements Message ----------------------------------------------

  GM_Friend_Invite_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Friend_Invite_Request& from);
  void MergeFrom(const GM_Friend_Invite_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_friendid = 1;
  inline bool has_m_friendid() const;
  inline void clear_m_friendid();
  static const int kMFriendidFieldNumber = 1;
  inline ::google::protobuf::int32 m_friendid() const;
  inline void set_m_friendid(::google::protobuf::int32 value);

  // required string m_content = 2;
  inline bool has_m_content() const;
  inline void clear_m_content();
  static const int kMContentFieldNumber = 2;
  inline const ::std::string& m_content() const;
  inline void set_m_content(const ::std::string& value);
  inline void set_m_content(const char* value);
  inline void set_m_content(const char* value, size_t size);
  inline ::std::string* mutable_m_content();
  inline ::std::string* release_m_content();
  inline void set_allocated_m_content(::std::string* m_content);

  // @@protoc_insertion_point(class_scope:GM_Friend_Invite_Request)
 private:
  inline void set_has_m_friendid();
  inline void clear_has_m_friendid();
  inline void set_has_m_content();
  inline void clear_has_m_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_content_;
  ::google::protobuf::int32 m_friendid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Friend_Invite_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Friend_Request : public ::google::protobuf::Message {
 public:
  GM_Friend_Request();
  virtual ~GM_Friend_Request();

  GM_Friend_Request(const GM_Friend_Request& from);

  inline GM_Friend_Request& operator=(const GM_Friend_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Friend_Request& default_instance();

  void Swap(GM_Friend_Request* other);

  // implements Message ----------------------------------------------

  GM_Friend_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Friend_Request& from);
  void MergeFrom(const GM_Friend_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_friendid = 1;
  inline bool has_m_friendid() const;
  inline void clear_m_friendid();
  static const int kMFriendidFieldNumber = 1;
  inline ::google::protobuf::int32 m_friendid() const;
  inline void set_m_friendid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Friend_Request)
 private:
  inline void set_has_m_friendid();
  inline void clear_has_m_friendid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_friendid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Friend_Request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Friend_Notice_Return : public ::google::protobuf::Message {
 public:
  GM_Friend_Notice_Return();
  virtual ~GM_Friend_Notice_Return();

  GM_Friend_Notice_Return(const GM_Friend_Notice_Return& from);

  inline GM_Friend_Notice_Return& operator=(const GM_Friend_Notice_Return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Friend_Notice_Return& default_instance();

  void Swap(GM_Friend_Notice_Return* other);

  // implements Message ----------------------------------------------

  GM_Friend_Notice_Return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Friend_Notice_Return& from);
  void MergeFrom(const GM_Friend_Notice_Return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // required string m_rolename = 2;
  inline bool has_m_rolename() const;
  inline void clear_m_rolename();
  static const int kMRolenameFieldNumber = 2;
  inline const ::std::string& m_rolename() const;
  inline void set_m_rolename(const ::std::string& value);
  inline void set_m_rolename(const char* value);
  inline void set_m_rolename(const char* value, size_t size);
  inline ::std::string* mutable_m_rolename();
  inline ::std::string* release_m_rolename();
  inline void set_allocated_m_rolename(::std::string* m_rolename);

  // @@protoc_insertion_point(class_scope:GM_Friend_Notice_Return)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_rolename();
  inline void clear_has_m_rolename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_rolename_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_friend_2etxt();
  friend void protobuf_AssignDesc_friend_2etxt();
  friend void protobuf_ShutdownFile_friend_2etxt();

  void InitAsDefaultInstance();
  static GM_Friend_Notice_Return* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_Friend

// required int32 m_count = 1;
inline bool GM_Friend::has_m_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Friend::set_has_m_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Friend::clear_has_m_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Friend::clear_m_count() {
  m_count_ = 0;
  clear_has_m_count();
}
inline ::google::protobuf::int32 GM_Friend::m_count() const {
  return m_count_;
}
inline void GM_Friend::set_m_count(::google::protobuf::int32 value) {
  set_has_m_count();
  m_count_ = value;
}

// optional int32 coldtime = 2;
inline bool GM_Friend::has_coldtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Friend::set_has_coldtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Friend::clear_has_coldtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Friend::clear_coldtime() {
  coldtime_ = 0;
  clear_has_coldtime();
}
inline ::google::protobuf::int32 GM_Friend::coldtime() const {
  return coldtime_;
}
inline void GM_Friend::set_coldtime(::google::protobuf::int32 value) {
  set_has_coldtime();
  coldtime_ = value;
}

// repeated .GM_FriendData m_FriendData = 3;
inline int GM_Friend::m_frienddata_size() const {
  return m_frienddata_.size();
}
inline void GM_Friend::clear_m_frienddata() {
  m_frienddata_.Clear();
}
inline const ::GM_FriendData& GM_Friend::m_frienddata(int index) const {
  return m_frienddata_.Get(index);
}
inline ::GM_FriendData* GM_Friend::mutable_m_frienddata(int index) {
  return m_frienddata_.Mutable(index);
}
inline ::GM_FriendData* GM_Friend::add_m_frienddata() {
  return m_frienddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_FriendData >&
GM_Friend::m_frienddata() const {
  return m_frienddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_FriendData >*
GM_Friend::mutable_m_frienddata() {
  return &m_frienddata_;
}

// -------------------------------------------------------------------

// GM_FriendData

// required int32 m_frendid = 1;
inline bool GM_FriendData::has_m_frendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_FriendData::set_has_m_frendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_FriendData::clear_has_m_frendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_FriendData::clear_m_frendid() {
  m_frendid_ = 0;
  clear_has_m_frendid();
}
inline ::google::protobuf::int32 GM_FriendData::m_frendid() const {
  return m_frendid_;
}
inline void GM_FriendData::set_m_frendid(::google::protobuf::int32 value) {
  set_has_m_frendid();
  m_frendid_ = value;
}

// optional string m_name = 2;
inline bool GM_FriendData::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_FriendData::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_FriendData::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_FriendData::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& GM_FriendData::m_name() const {
  return *m_name_;
}
inline void GM_FriendData::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GM_FriendData::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GM_FriendData::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_FriendData::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* GM_FriendData::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_FriendData::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_viplevel = 3;
inline bool GM_FriendData::has_m_viplevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_FriendData::set_has_m_viplevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_FriendData::clear_has_m_viplevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_FriendData::clear_m_viplevel() {
  m_viplevel_ = 0;
  clear_has_m_viplevel();
}
inline ::google::protobuf::int32 GM_FriendData::m_viplevel() const {
  return m_viplevel_;
}
inline void GM_FriendData::set_m_viplevel(::google::protobuf::int32 value) {
  set_has_m_viplevel();
  m_viplevel_ = value;
}

// optional int32 m_level = 4;
inline bool GM_FriendData::has_m_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_FriendData::set_has_m_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_FriendData::clear_has_m_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_FriendData::clear_m_level() {
  m_level_ = 0;
  clear_has_m_level();
}
inline ::google::protobuf::int32 GM_FriendData::m_level() const {
  return m_level_;
}
inline void GM_FriendData::set_m_level(::google::protobuf::int32 value) {
  set_has_m_level();
  m_level_ = value;
}

// optional int32 m_sex = 5;
inline bool GM_FriendData::has_m_sex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_FriendData::set_has_m_sex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_FriendData::clear_has_m_sex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_FriendData::clear_m_sex() {
  m_sex_ = 0;
  clear_has_m_sex();
}
inline ::google::protobuf::int32 GM_FriendData::m_sex() const {
  return m_sex_;
}
inline void GM_FriendData::set_m_sex(::google::protobuf::int32 value) {
  set_has_m_sex();
  m_sex_ = value;
}

// optional int32 m_online = 6;
inline bool GM_FriendData::has_m_online() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_FriendData::set_has_m_online() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_FriendData::clear_has_m_online() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_FriendData::clear_m_online() {
  m_online_ = 0;
  clear_has_m_online();
}
inline ::google::protobuf::int32 GM_FriendData::m_online() const {
  return m_online_;
}
inline void GM_FriendData::set_m_online(::google::protobuf::int32 value) {
  set_has_m_online();
  m_online_ = value;
}

// optional int32 m_give = 7;
inline bool GM_FriendData::has_m_give() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_FriendData::set_has_m_give() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_FriendData::clear_has_m_give() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_FriendData::clear_m_give() {
  m_give_ = 0;
  clear_has_m_give();
}
inline ::google::protobuf::int32 GM_FriendData::m_give() const {
  return m_give_;
}
inline void GM_FriendData::set_m_give(::google::protobuf::int32 value) {
  set_has_m_give();
  m_give_ = value;
}

// optional int32 m_isCouple = 8;
inline bool GM_FriendData::has_m_iscouple() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_FriendData::set_has_m_iscouple() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_FriendData::clear_has_m_iscouple() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_FriendData::clear_m_iscouple() {
  m_iscouple_ = 0;
  clear_has_m_iscouple();
}
inline ::google::protobuf::int32 GM_FriendData::m_iscouple() const {
  return m_iscouple_;
}
inline void GM_FriendData::set_m_iscouple(::google::protobuf::int32 value) {
  set_has_m_iscouple();
  m_iscouple_ = value;
}

// optional int32 m_headPhoto = 9;
inline bool GM_FriendData::has_m_headphoto() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_FriendData::set_has_m_headphoto() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_FriendData::clear_has_m_headphoto() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_FriendData::clear_m_headphoto() {
  m_headphoto_ = 0;
  clear_has_m_headphoto();
}
inline ::google::protobuf::int32 GM_FriendData::m_headphoto() const {
  return m_headphoto_;
}
inline void GM_FriendData::set_m_headphoto(::google::protobuf::int32 value) {
  set_has_m_headphoto();
  m_headphoto_ = value;
}

// optional int32 m_headFrame = 10;
inline bool GM_FriendData::has_m_headframe() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GM_FriendData::set_has_m_headframe() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GM_FriendData::clear_has_m_headframe() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GM_FriendData::clear_m_headframe() {
  m_headframe_ = 0;
  clear_has_m_headframe();
}
inline ::google::protobuf::int32 GM_FriendData::m_headframe() const {
  return m_headframe_;
}
inline void GM_FriendData::set_m_headframe(::google::protobuf::int32 value) {
  set_has_m_headframe();
  m_headframe_ = value;
}

// optional string m_NickName = 11;
inline bool GM_FriendData::has_m_nickname() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GM_FriendData::set_has_m_nickname() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GM_FriendData::clear_has_m_nickname() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GM_FriendData::clear_m_nickname() {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    m_nickname_->clear();
  }
  clear_has_m_nickname();
}
inline const ::std::string& GM_FriendData::m_nickname() const {
  return *m_nickname_;
}
inline void GM_FriendData::set_m_nickname(const ::std::string& value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void GM_FriendData::set_m_nickname(const char* value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void GM_FriendData::set_m_nickname(const char* value, size_t size) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_FriendData::mutable_m_nickname() {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  return m_nickname_;
}
inline ::std::string* GM_FriendData::release_m_nickname() {
  clear_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_nickname_;
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_FriendData::set_allocated_m_nickname(::std::string* m_nickname) {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_nickname_;
  }
  if (m_nickname) {
    set_has_m_nickname();
    m_nickname_ = m_nickname;
  } else {
    clear_has_m_nickname();
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_HeadPhotoUrl = 12;
inline bool GM_FriendData::has_m_headphotourl() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GM_FriendData::set_has_m_headphotourl() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GM_FriendData::clear_has_m_headphotourl() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GM_FriendData::clear_m_headphotourl() {
  if (m_headphotourl_ != &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_->clear();
  }
  clear_has_m_headphotourl();
}
inline const ::std::string& GM_FriendData::m_headphotourl() const {
  return *m_headphotourl_;
}
inline void GM_FriendData::set_m_headphotourl(const ::std::string& value) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(value);
}
inline void GM_FriendData::set_m_headphotourl(const char* value) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(value);
}
inline void GM_FriendData::set_m_headphotourl(const char* value, size_t size) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_FriendData::mutable_m_headphotourl() {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  return m_headphotourl_;
}
inline ::std::string* GM_FriendData::release_m_headphotourl() {
  clear_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_headphotourl_;
    m_headphotourl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_FriendData::set_allocated_m_headphotourl(::std::string* m_headphotourl) {
  if (m_headphotourl_ != &::google::protobuf::internal::kEmptyString) {
    delete m_headphotourl_;
  }
  if (m_headphotourl) {
    set_has_m_headphotourl();
    m_headphotourl_ = m_headphotourl;
  } else {
    clear_has_m_headphotourl();
    m_headphotourl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GM_Friend_recommend_return

// required int32 m_count = 1;
inline bool GM_Friend_recommend_return::has_m_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Friend_recommend_return::set_has_m_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Friend_recommend_return::clear_has_m_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Friend_recommend_return::clear_m_count() {
  m_count_ = 0;
  clear_has_m_count();
}
inline ::google::protobuf::int32 GM_Friend_recommend_return::m_count() const {
  return m_count_;
}
inline void GM_Friend_recommend_return::set_m_count(::google::protobuf::int32 value) {
  set_has_m_count();
  m_count_ = value;
}

// repeated .GM_FriendRecommend m_FriendRecommendData = 2;
inline int GM_Friend_recommend_return::m_friendrecommenddata_size() const {
  return m_friendrecommenddata_.size();
}
inline void GM_Friend_recommend_return::clear_m_friendrecommenddata() {
  m_friendrecommenddata_.Clear();
}
inline const ::GM_FriendRecommend& GM_Friend_recommend_return::m_friendrecommenddata(int index) const {
  return m_friendrecommenddata_.Get(index);
}
inline ::GM_FriendRecommend* GM_Friend_recommend_return::mutable_m_friendrecommenddata(int index) {
  return m_friendrecommenddata_.Mutable(index);
}
inline ::GM_FriendRecommend* GM_Friend_recommend_return::add_m_friendrecommenddata() {
  return m_friendrecommenddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_FriendRecommend >&
GM_Friend_recommend_return::m_friendrecommenddata() const {
  return m_friendrecommenddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_FriendRecommend >*
GM_Friend_recommend_return::mutable_m_friendrecommenddata() {
  return &m_friendrecommenddata_;
}

// -------------------------------------------------------------------

// GM_Friend_single_recommend_return

// required int32 m_count = 1;
inline bool GM_Friend_single_recommend_return::has_m_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Friend_single_recommend_return::set_has_m_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Friend_single_recommend_return::clear_has_m_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Friend_single_recommend_return::clear_m_count() {
  m_count_ = 0;
  clear_has_m_count();
}
inline ::google::protobuf::int32 GM_Friend_single_recommend_return::m_count() const {
  return m_count_;
}
inline void GM_Friend_single_recommend_return::set_m_count(::google::protobuf::int32 value) {
  set_has_m_count();
  m_count_ = value;
}

// repeated .GM_FriendRecommend m_FriendRecommendData = 2;
inline int GM_Friend_single_recommend_return::m_friendrecommenddata_size() const {
  return m_friendrecommenddata_.size();
}
inline void GM_Friend_single_recommend_return::clear_m_friendrecommenddata() {
  m_friendrecommenddata_.Clear();
}
inline const ::GM_FriendRecommend& GM_Friend_single_recommend_return::m_friendrecommenddata(int index) const {
  return m_friendrecommenddata_.Get(index);
}
inline ::GM_FriendRecommend* GM_Friend_single_recommend_return::mutable_m_friendrecommenddata(int index) {
  return m_friendrecommenddata_.Mutable(index);
}
inline ::GM_FriendRecommend* GM_Friend_single_recommend_return::add_m_friendrecommenddata() {
  return m_friendrecommenddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_FriendRecommend >&
GM_Friend_single_recommend_return::m_friendrecommenddata() const {
  return m_friendrecommenddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_FriendRecommend >*
GM_Friend_single_recommend_return::mutable_m_friendrecommenddata() {
  return &m_friendrecommenddata_;
}

// -------------------------------------------------------------------

// GM_FriendRecommend

// required int32 m_frendid = 1;
inline bool GM_FriendRecommend::has_m_frendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_FriendRecommend::set_has_m_frendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_FriendRecommend::clear_has_m_frendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_FriendRecommend::clear_m_frendid() {
  m_frendid_ = 0;
  clear_has_m_frendid();
}
inline ::google::protobuf::int32 GM_FriendRecommend::m_frendid() const {
  return m_frendid_;
}
inline void GM_FriendRecommend::set_m_frendid(::google::protobuf::int32 value) {
  set_has_m_frendid();
  m_frendid_ = value;
}

// optional string m_name = 2;
inline bool GM_FriendRecommend::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_FriendRecommend::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_FriendRecommend::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_FriendRecommend::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& GM_FriendRecommend::m_name() const {
  return *m_name_;
}
inline void GM_FriendRecommend::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GM_FriendRecommend::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GM_FriendRecommend::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_FriendRecommend::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* GM_FriendRecommend::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_FriendRecommend::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_sex = 3;
inline bool GM_FriendRecommend::has_m_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_FriendRecommend::set_has_m_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_FriendRecommend::clear_has_m_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_FriendRecommend::clear_m_sex() {
  m_sex_ = 0;
  clear_has_m_sex();
}
inline ::google::protobuf::int32 GM_FriendRecommend::m_sex() const {
  return m_sex_;
}
inline void GM_FriendRecommend::set_m_sex(::google::protobuf::int32 value) {
  set_has_m_sex();
  m_sex_ = value;
}

// optional int32 m_level = 4;
inline bool GM_FriendRecommend::has_m_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_FriendRecommend::set_has_m_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_FriendRecommend::clear_has_m_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_FriendRecommend::clear_m_level() {
  m_level_ = 0;
  clear_has_m_level();
}
inline ::google::protobuf::int32 GM_FriendRecommend::m_level() const {
  return m_level_;
}
inline void GM_FriendRecommend::set_m_level(::google::protobuf::int32 value) {
  set_has_m_level();
  m_level_ = value;
}

// optional int32 m_viplevel = 5;
inline bool GM_FriendRecommend::has_m_viplevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_FriendRecommend::set_has_m_viplevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_FriendRecommend::clear_has_m_viplevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_FriendRecommend::clear_m_viplevel() {
  m_viplevel_ = 0;
  clear_has_m_viplevel();
}
inline ::google::protobuf::int32 GM_FriendRecommend::m_viplevel() const {
  return m_viplevel_;
}
inline void GM_FriendRecommend::set_m_viplevel(::google::protobuf::int32 value) {
  set_has_m_viplevel();
  m_viplevel_ = value;
}

// optional int32 m_headPhoto = 6;
inline bool GM_FriendRecommend::has_m_headphoto() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_FriendRecommend::set_has_m_headphoto() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_FriendRecommend::clear_has_m_headphoto() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_FriendRecommend::clear_m_headphoto() {
  m_headphoto_ = 0;
  clear_has_m_headphoto();
}
inline ::google::protobuf::int32 GM_FriendRecommend::m_headphoto() const {
  return m_headphoto_;
}
inline void GM_FriendRecommend::set_m_headphoto(::google::protobuf::int32 value) {
  set_has_m_headphoto();
  m_headphoto_ = value;
}

// optional int32 m_headFrame = 7;
inline bool GM_FriendRecommend::has_m_headframe() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_FriendRecommend::set_has_m_headframe() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_FriendRecommend::clear_has_m_headframe() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_FriendRecommend::clear_m_headframe() {
  m_headframe_ = 0;
  clear_has_m_headframe();
}
inline ::google::protobuf::int32 GM_FriendRecommend::m_headframe() const {
  return m_headframe_;
}
inline void GM_FriendRecommend::set_m_headframe(::google::protobuf::int32 value) {
  set_has_m_headframe();
  m_headframe_ = value;
}

// optional string m_NickName = 8;
inline bool GM_FriendRecommend::has_m_nickname() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_FriendRecommend::set_has_m_nickname() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_FriendRecommend::clear_has_m_nickname() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_FriendRecommend::clear_m_nickname() {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    m_nickname_->clear();
  }
  clear_has_m_nickname();
}
inline const ::std::string& GM_FriendRecommend::m_nickname() const {
  return *m_nickname_;
}
inline void GM_FriendRecommend::set_m_nickname(const ::std::string& value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void GM_FriendRecommend::set_m_nickname(const char* value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void GM_FriendRecommend::set_m_nickname(const char* value, size_t size) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_FriendRecommend::mutable_m_nickname() {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  return m_nickname_;
}
inline ::std::string* GM_FriendRecommend::release_m_nickname() {
  clear_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_nickname_;
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_FriendRecommend::set_allocated_m_nickname(::std::string* m_nickname) {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_nickname_;
  }
  if (m_nickname) {
    set_has_m_nickname();
    m_nickname_ = m_nickname;
  } else {
    clear_has_m_nickname();
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_HeadPhotoUrl = 9;
inline bool GM_FriendRecommend::has_m_headphotourl() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_FriendRecommend::set_has_m_headphotourl() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_FriendRecommend::clear_has_m_headphotourl() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_FriendRecommend::clear_m_headphotourl() {
  if (m_headphotourl_ != &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_->clear();
  }
  clear_has_m_headphotourl();
}
inline const ::std::string& GM_FriendRecommend::m_headphotourl() const {
  return *m_headphotourl_;
}
inline void GM_FriendRecommend::set_m_headphotourl(const ::std::string& value) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(value);
}
inline void GM_FriendRecommend::set_m_headphotourl(const char* value) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(value);
}
inline void GM_FriendRecommend::set_m_headphotourl(const char* value, size_t size) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_FriendRecommend::mutable_m_headphotourl() {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  return m_headphotourl_;
}
inline ::std::string* GM_FriendRecommend::release_m_headphotourl() {
  clear_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_headphotourl_;
    m_headphotourl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_FriendRecommend::set_allocated_m_headphotourl(::std::string* m_headphotourl) {
  if (m_headphotourl_ != &::google::protobuf::internal::kEmptyString) {
    delete m_headphotourl_;
  }
  if (m_headphotourl) {
    set_has_m_headphotourl();
    m_headphotourl_ = m_headphotourl;
  } else {
    clear_has_m_headphotourl();
    m_headphotourl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GM_Friend_Exprecieve_Return

// required int32 m_state = 1;
inline bool GM_Friend_Exprecieve_Return::has_m_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Friend_Exprecieve_Return::set_has_m_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Friend_Exprecieve_Return::clear_has_m_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Friend_Exprecieve_Return::clear_m_state() {
  m_state_ = 0;
  clear_has_m_state();
}
inline ::google::protobuf::int32 GM_Friend_Exprecieve_Return::m_state() const {
  return m_state_;
}
inline void GM_Friend_Exprecieve_Return::set_m_state(::google::protobuf::int32 value) {
  set_has_m_state();
  m_state_ = value;
}

// -------------------------------------------------------------------

// GM_Friend_Invite_return

// required int32 m_state = 1;
inline bool GM_Friend_Invite_return::has_m_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Friend_Invite_return::set_has_m_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Friend_Invite_return::clear_has_m_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Friend_Invite_return::clear_m_state() {
  m_state_ = 0;
  clear_has_m_state();
}
inline ::google::protobuf::int32 GM_Friend_Invite_return::m_state() const {
  return m_state_;
}
inline void GM_Friend_Invite_return::set_m_state(::google::protobuf::int32 value) {
  set_has_m_state();
  m_state_ = value;
}

// -------------------------------------------------------------------

// GM_Friend_Delete_Request

// required int32 m_friendid = 1;
inline bool GM_Friend_Delete_Request::has_m_friendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Friend_Delete_Request::set_has_m_friendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Friend_Delete_Request::clear_has_m_friendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Friend_Delete_Request::clear_m_friendid() {
  m_friendid_ = 0;
  clear_has_m_friendid();
}
inline ::google::protobuf::int32 GM_Friend_Delete_Request::m_friendid() const {
  return m_friendid_;
}
inline void GM_Friend_Delete_Request::set_m_friendid(::google::protobuf::int32 value) {
  set_has_m_friendid();
  m_friendid_ = value;
}

// -------------------------------------------------------------------

// GM_Friend_Delete_return

// required int32 m_state = 1;
inline bool GM_Friend_Delete_return::has_m_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Friend_Delete_return::set_has_m_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Friend_Delete_return::clear_has_m_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Friend_Delete_return::clear_m_state() {
  m_state_ = 0;
  clear_has_m_state();
}
inline ::google::protobuf::int32 GM_Friend_Delete_return::m_state() const {
  return m_state_;
}
inline void GM_Friend_Delete_return::set_m_state(::google::protobuf::int32 value) {
  set_has_m_state();
  m_state_ = value;
}

// -------------------------------------------------------------------

// GM_Friend_recieve_return

// required int32 m_count = 1;
inline bool GM_Friend_recieve_return::has_m_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Friend_recieve_return::set_has_m_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Friend_recieve_return::clear_has_m_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Friend_recieve_return::clear_m_count() {
  m_count_ = 0;
  clear_has_m_count();
}
inline ::google::protobuf::int32 GM_Friend_recieve_return::m_count() const {
  return m_count_;
}
inline void GM_Friend_recieve_return::set_m_count(::google::protobuf::int32 value) {
  set_has_m_count();
  m_count_ = value;
}

// required int32 m_recievetime = 2;
inline bool GM_Friend_recieve_return::has_m_recievetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Friend_recieve_return::set_has_m_recievetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Friend_recieve_return::clear_has_m_recievetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Friend_recieve_return::clear_m_recievetime() {
  m_recievetime_ = 0;
  clear_has_m_recievetime();
}
inline ::google::protobuf::int32 GM_Friend_recieve_return::m_recievetime() const {
  return m_recievetime_;
}
inline void GM_Friend_recieve_return::set_m_recievetime(::google::protobuf::int32 value) {
  set_has_m_recievetime();
  m_recievetime_ = value;
}

// repeated .GM_Friendrecieve m_FriendrecieveData = 3;
inline int GM_Friend_recieve_return::m_friendrecievedata_size() const {
  return m_friendrecievedata_.size();
}
inline void GM_Friend_recieve_return::clear_m_friendrecievedata() {
  m_friendrecievedata_.Clear();
}
inline const ::GM_Friendrecieve& GM_Friend_recieve_return::m_friendrecievedata(int index) const {
  return m_friendrecievedata_.Get(index);
}
inline ::GM_Friendrecieve* GM_Friend_recieve_return::mutable_m_friendrecievedata(int index) {
  return m_friendrecievedata_.Mutable(index);
}
inline ::GM_Friendrecieve* GM_Friend_recieve_return::add_m_friendrecievedata() {
  return m_friendrecievedata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Friendrecieve >&
GM_Friend_recieve_return::m_friendrecievedata() const {
  return m_friendrecievedata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Friendrecieve >*
GM_Friend_recieve_return::mutable_m_friendrecievedata() {
  return &m_friendrecievedata_;
}

// -------------------------------------------------------------------

// GM_Friendrecieve

// required int32 m_friendid = 1;
inline bool GM_Friendrecieve::has_m_friendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Friendrecieve::set_has_m_friendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Friendrecieve::clear_has_m_friendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Friendrecieve::clear_m_friendid() {
  m_friendid_ = 0;
  clear_has_m_friendid();
}
inline ::google::protobuf::int32 GM_Friendrecieve::m_friendid() const {
  return m_friendid_;
}
inline void GM_Friendrecieve::set_m_friendid(::google::protobuf::int32 value) {
  set_has_m_friendid();
  m_friendid_ = value;
}

// optional string m_name = 2;
inline bool GM_Friendrecieve::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Friendrecieve::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Friendrecieve::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Friendrecieve::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& GM_Friendrecieve::m_name() const {
  return *m_name_;
}
inline void GM_Friendrecieve::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GM_Friendrecieve::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GM_Friendrecieve::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Friendrecieve::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* GM_Friendrecieve::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Friendrecieve::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_sex = 3;
inline bool GM_Friendrecieve::has_m_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Friendrecieve::set_has_m_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Friendrecieve::clear_has_m_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Friendrecieve::clear_m_sex() {
  m_sex_ = 0;
  clear_has_m_sex();
}
inline ::google::protobuf::int32 GM_Friendrecieve::m_sex() const {
  return m_sex_;
}
inline void GM_Friendrecieve::set_m_sex(::google::protobuf::int32 value) {
  set_has_m_sex();
  m_sex_ = value;
}

// optional int32 m_level = 4;
inline bool GM_Friendrecieve::has_m_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Friendrecieve::set_has_m_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Friendrecieve::clear_has_m_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Friendrecieve::clear_m_level() {
  m_level_ = 0;
  clear_has_m_level();
}
inline ::google::protobuf::int32 GM_Friendrecieve::m_level() const {
  return m_level_;
}
inline void GM_Friendrecieve::set_m_level(::google::protobuf::int32 value) {
  set_has_m_level();
  m_level_ = value;
}

// optional int32 m_viplevel = 5;
inline bool GM_Friendrecieve::has_m_viplevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Friendrecieve::set_has_m_viplevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Friendrecieve::clear_has_m_viplevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Friendrecieve::clear_m_viplevel() {
  m_viplevel_ = 0;
  clear_has_m_viplevel();
}
inline ::google::protobuf::int32 GM_Friendrecieve::m_viplevel() const {
  return m_viplevel_;
}
inline void GM_Friendrecieve::set_m_viplevel(::google::protobuf::int32 value) {
  set_has_m_viplevel();
  m_viplevel_ = value;
}

// optional int32 m_time = 6;
inline bool GM_Friendrecieve::has_m_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_Friendrecieve::set_has_m_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_Friendrecieve::clear_has_m_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_Friendrecieve::clear_m_time() {
  m_time_ = 0;
  clear_has_m_time();
}
inline ::google::protobuf::int32 GM_Friendrecieve::m_time() const {
  return m_time_;
}
inline void GM_Friendrecieve::set_m_time(::google::protobuf::int32 value) {
  set_has_m_time();
  m_time_ = value;
}

// optional int32 m_headPhoto = 7;
inline bool GM_Friendrecieve::has_m_headphoto() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_Friendrecieve::set_has_m_headphoto() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_Friendrecieve::clear_has_m_headphoto() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_Friendrecieve::clear_m_headphoto() {
  m_headphoto_ = 0;
  clear_has_m_headphoto();
}
inline ::google::protobuf::int32 GM_Friendrecieve::m_headphoto() const {
  return m_headphoto_;
}
inline void GM_Friendrecieve::set_m_headphoto(::google::protobuf::int32 value) {
  set_has_m_headphoto();
  m_headphoto_ = value;
}

// optional int32 m_headFrame = 8;
inline bool GM_Friendrecieve::has_m_headframe() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_Friendrecieve::set_has_m_headframe() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_Friendrecieve::clear_has_m_headframe() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_Friendrecieve::clear_m_headframe() {
  m_headframe_ = 0;
  clear_has_m_headframe();
}
inline ::google::protobuf::int32 GM_Friendrecieve::m_headframe() const {
  return m_headframe_;
}
inline void GM_Friendrecieve::set_m_headframe(::google::protobuf::int32 value) {
  set_has_m_headframe();
  m_headframe_ = value;
}

// optional string m_NickName = 9;
inline bool GM_Friendrecieve::has_m_nickname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_Friendrecieve::set_has_m_nickname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_Friendrecieve::clear_has_m_nickname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_Friendrecieve::clear_m_nickname() {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    m_nickname_->clear();
  }
  clear_has_m_nickname();
}
inline const ::std::string& GM_Friendrecieve::m_nickname() const {
  return *m_nickname_;
}
inline void GM_Friendrecieve::set_m_nickname(const ::std::string& value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void GM_Friendrecieve::set_m_nickname(const char* value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void GM_Friendrecieve::set_m_nickname(const char* value, size_t size) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Friendrecieve::mutable_m_nickname() {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  return m_nickname_;
}
inline ::std::string* GM_Friendrecieve::release_m_nickname() {
  clear_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_nickname_;
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Friendrecieve::set_allocated_m_nickname(::std::string* m_nickname) {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_nickname_;
  }
  if (m_nickname) {
    set_has_m_nickname();
    m_nickname_ = m_nickname;
  } else {
    clear_has_m_nickname();
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_HeadPhotoUrl = 10;
inline bool GM_Friendrecieve::has_m_headphotourl() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GM_Friendrecieve::set_has_m_headphotourl() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GM_Friendrecieve::clear_has_m_headphotourl() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GM_Friendrecieve::clear_m_headphotourl() {
  if (m_headphotourl_ != &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_->clear();
  }
  clear_has_m_headphotourl();
}
inline const ::std::string& GM_Friendrecieve::m_headphotourl() const {
  return *m_headphotourl_;
}
inline void GM_Friendrecieve::set_m_headphotourl(const ::std::string& value) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(value);
}
inline void GM_Friendrecieve::set_m_headphotourl(const char* value) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(value);
}
inline void GM_Friendrecieve::set_m_headphotourl(const char* value, size_t size) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Friendrecieve::mutable_m_headphotourl() {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  return m_headphotourl_;
}
inline ::std::string* GM_Friendrecieve::release_m_headphotourl() {
  clear_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_headphotourl_;
    m_headphotourl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Friendrecieve::set_allocated_m_headphotourl(::std::string* m_headphotourl) {
  if (m_headphotourl_ != &::google::protobuf::internal::kEmptyString) {
    delete m_headphotourl_;
  }
  if (m_headphotourl) {
    set_has_m_headphotourl();
    m_headphotourl_ = m_headphotourl;
  } else {
    clear_has_m_headphotourl();
    m_headphotourl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GM_One_Friend_Recieve_return

// required int32 m_state = 1;
inline bool GM_One_Friend_Recieve_return::has_m_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_One_Friend_Recieve_return::set_has_m_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_One_Friend_Recieve_return::clear_has_m_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_One_Friend_Recieve_return::clear_m_state() {
  m_state_ = 0;
  clear_has_m_state();
}
inline ::google::protobuf::int32 GM_One_Friend_Recieve_return::m_state() const {
  return m_state_;
}
inline void GM_One_Friend_Recieve_return::set_m_state(::google::protobuf::int32 value) {
  set_has_m_state();
  m_state_ = value;
}

// required int32 m_num = 2;
inline bool GM_One_Friend_Recieve_return::has_m_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_One_Friend_Recieve_return::set_has_m_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_One_Friend_Recieve_return::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_One_Friend_Recieve_return::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 GM_One_Friend_Recieve_return::m_num() const {
  return m_num_;
}
inline void GM_One_Friend_Recieve_return::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// required int32 m_friendid = 3;
inline bool GM_One_Friend_Recieve_return::has_m_friendid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_One_Friend_Recieve_return::set_has_m_friendid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_One_Friend_Recieve_return::clear_has_m_friendid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_One_Friend_Recieve_return::clear_m_friendid() {
  m_friendid_ = 0;
  clear_has_m_friendid();
}
inline ::google::protobuf::int32 GM_One_Friend_Recieve_return::m_friendid() const {
  return m_friendid_;
}
inline void GM_One_Friend_Recieve_return::set_m_friendid(::google::protobuf::int32 value) {
  set_has_m_friendid();
  m_friendid_ = value;
}

// -------------------------------------------------------------------

// GM_All_Friend_Recieve_return

// required int32 m_state = 1;
inline bool GM_All_Friend_Recieve_return::has_m_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_All_Friend_Recieve_return::set_has_m_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_All_Friend_Recieve_return::clear_has_m_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_All_Friend_Recieve_return::clear_m_state() {
  m_state_ = 0;
  clear_has_m_state();
}
inline ::google::protobuf::int32 GM_All_Friend_Recieve_return::m_state() const {
  return m_state_;
}
inline void GM_All_Friend_Recieve_return::set_m_state(::google::protobuf::int32 value) {
  set_has_m_state();
  m_state_ = value;
}

// required int32 m_num = 2;
inline bool GM_All_Friend_Recieve_return::has_m_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_All_Friend_Recieve_return::set_has_m_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_All_Friend_Recieve_return::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_All_Friend_Recieve_return::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 GM_All_Friend_Recieve_return::m_num() const {
  return m_num_;
}
inline void GM_All_Friend_Recieve_return::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// repeated int32 m_friendid = 3;
inline int GM_All_Friend_Recieve_return::m_friendid_size() const {
  return m_friendid_.size();
}
inline void GM_All_Friend_Recieve_return::clear_m_friendid() {
  m_friendid_.Clear();
}
inline ::google::protobuf::int32 GM_All_Friend_Recieve_return::m_friendid(int index) const {
  return m_friendid_.Get(index);
}
inline void GM_All_Friend_Recieve_return::set_m_friendid(int index, ::google::protobuf::int32 value) {
  m_friendid_.Set(index, value);
}
inline void GM_All_Friend_Recieve_return::add_m_friendid(::google::protobuf::int32 value) {
  m_friendid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GM_All_Friend_Recieve_return::m_friendid() const {
  return m_friendid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GM_All_Friend_Recieve_return::mutable_m_friendid() {
  return &m_friendid_;
}

// -------------------------------------------------------------------

// GM_Invitelist_return

// required int32 m_count = 1;
inline bool GM_Invitelist_return::has_m_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Invitelist_return::set_has_m_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Invitelist_return::clear_has_m_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Invitelist_return::clear_m_count() {
  m_count_ = 0;
  clear_has_m_count();
}
inline ::google::protobuf::int32 GM_Invitelist_return::m_count() const {
  return m_count_;
}
inline void GM_Invitelist_return::set_m_count(::google::protobuf::int32 value) {
  set_has_m_count();
  m_count_ = value;
}

// repeated .GM_Invitelist m_InvitelistData = 2;
inline int GM_Invitelist_return::m_invitelistdata_size() const {
  return m_invitelistdata_.size();
}
inline void GM_Invitelist_return::clear_m_invitelistdata() {
  m_invitelistdata_.Clear();
}
inline const ::GM_Invitelist& GM_Invitelist_return::m_invitelistdata(int index) const {
  return m_invitelistdata_.Get(index);
}
inline ::GM_Invitelist* GM_Invitelist_return::mutable_m_invitelistdata(int index) {
  return m_invitelistdata_.Mutable(index);
}
inline ::GM_Invitelist* GM_Invitelist_return::add_m_invitelistdata() {
  return m_invitelistdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Invitelist >&
GM_Invitelist_return::m_invitelistdata() const {
  return m_invitelistdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Invitelist >*
GM_Invitelist_return::mutable_m_invitelistdata() {
  return &m_invitelistdata_;
}

// -------------------------------------------------------------------

// GM_Invitelist

// required int32 m_friendid = 1;
inline bool GM_Invitelist::has_m_friendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Invitelist::set_has_m_friendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Invitelist::clear_has_m_friendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Invitelist::clear_m_friendid() {
  m_friendid_ = 0;
  clear_has_m_friendid();
}
inline ::google::protobuf::int32 GM_Invitelist::m_friendid() const {
  return m_friendid_;
}
inline void GM_Invitelist::set_m_friendid(::google::protobuf::int32 value) {
  set_has_m_friendid();
  m_friendid_ = value;
}

// optional string m_name = 2;
inline bool GM_Invitelist::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Invitelist::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Invitelist::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Invitelist::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& GM_Invitelist::m_name() const {
  return *m_name_;
}
inline void GM_Invitelist::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GM_Invitelist::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GM_Invitelist::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Invitelist::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* GM_Invitelist::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Invitelist::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_sex = 3;
inline bool GM_Invitelist::has_m_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Invitelist::set_has_m_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Invitelist::clear_has_m_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Invitelist::clear_m_sex() {
  m_sex_ = 0;
  clear_has_m_sex();
}
inline ::google::protobuf::int32 GM_Invitelist::m_sex() const {
  return m_sex_;
}
inline void GM_Invitelist::set_m_sex(::google::protobuf::int32 value) {
  set_has_m_sex();
  m_sex_ = value;
}

// optional int32 m_level = 4;
inline bool GM_Invitelist::has_m_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Invitelist::set_has_m_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Invitelist::clear_has_m_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Invitelist::clear_m_level() {
  m_level_ = 0;
  clear_has_m_level();
}
inline ::google::protobuf::int32 GM_Invitelist::m_level() const {
  return m_level_;
}
inline void GM_Invitelist::set_m_level(::google::protobuf::int32 value) {
  set_has_m_level();
  m_level_ = value;
}

// optional int32 m_viplevel = 5;
inline bool GM_Invitelist::has_m_viplevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Invitelist::set_has_m_viplevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Invitelist::clear_has_m_viplevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Invitelist::clear_m_viplevel() {
  m_viplevel_ = 0;
  clear_has_m_viplevel();
}
inline ::google::protobuf::int32 GM_Invitelist::m_viplevel() const {
  return m_viplevel_;
}
inline void GM_Invitelist::set_m_viplevel(::google::protobuf::int32 value) {
  set_has_m_viplevel();
  m_viplevel_ = value;
}

// optional string m_content = 6;
inline bool GM_Invitelist::has_m_content() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GM_Invitelist::set_has_m_content() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GM_Invitelist::clear_has_m_content() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GM_Invitelist::clear_m_content() {
  if (m_content_ != &::google::protobuf::internal::kEmptyString) {
    m_content_->clear();
  }
  clear_has_m_content();
}
inline const ::std::string& GM_Invitelist::m_content() const {
  return *m_content_;
}
inline void GM_Invitelist::set_m_content(const ::std::string& value) {
  set_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    m_content_ = new ::std::string;
  }
  m_content_->assign(value);
}
inline void GM_Invitelist::set_m_content(const char* value) {
  set_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    m_content_ = new ::std::string;
  }
  m_content_->assign(value);
}
inline void GM_Invitelist::set_m_content(const char* value, size_t size) {
  set_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    m_content_ = new ::std::string;
  }
  m_content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Invitelist::mutable_m_content() {
  set_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    m_content_ = new ::std::string;
  }
  return m_content_;
}
inline ::std::string* GM_Invitelist::release_m_content() {
  clear_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_content_;
    m_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Invitelist::set_allocated_m_content(::std::string* m_content) {
  if (m_content_ != &::google::protobuf::internal::kEmptyString) {
    delete m_content_;
  }
  if (m_content) {
    set_has_m_content();
    m_content_ = m_content;
  } else {
    clear_has_m_content();
    m_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_headPhoto = 7;
inline bool GM_Invitelist::has_m_headphoto() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GM_Invitelist::set_has_m_headphoto() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GM_Invitelist::clear_has_m_headphoto() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GM_Invitelist::clear_m_headphoto() {
  m_headphoto_ = 0;
  clear_has_m_headphoto();
}
inline ::google::protobuf::int32 GM_Invitelist::m_headphoto() const {
  return m_headphoto_;
}
inline void GM_Invitelist::set_m_headphoto(::google::protobuf::int32 value) {
  set_has_m_headphoto();
  m_headphoto_ = value;
}

// optional int32 m_headFrame = 8;
inline bool GM_Invitelist::has_m_headframe() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GM_Invitelist::set_has_m_headframe() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GM_Invitelist::clear_has_m_headframe() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GM_Invitelist::clear_m_headframe() {
  m_headframe_ = 0;
  clear_has_m_headframe();
}
inline ::google::protobuf::int32 GM_Invitelist::m_headframe() const {
  return m_headframe_;
}
inline void GM_Invitelist::set_m_headframe(::google::protobuf::int32 value) {
  set_has_m_headframe();
  m_headframe_ = value;
}

// optional string m_NickName = 9;
inline bool GM_Invitelist::has_m_nickname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GM_Invitelist::set_has_m_nickname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GM_Invitelist::clear_has_m_nickname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GM_Invitelist::clear_m_nickname() {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    m_nickname_->clear();
  }
  clear_has_m_nickname();
}
inline const ::std::string& GM_Invitelist::m_nickname() const {
  return *m_nickname_;
}
inline void GM_Invitelist::set_m_nickname(const ::std::string& value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void GM_Invitelist::set_m_nickname(const char* value) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(value);
}
inline void GM_Invitelist::set_m_nickname(const char* value, size_t size) {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  m_nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Invitelist::mutable_m_nickname() {
  set_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    m_nickname_ = new ::std::string;
  }
  return m_nickname_;
}
inline ::std::string* GM_Invitelist::release_m_nickname() {
  clear_has_m_nickname();
  if (m_nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_nickname_;
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Invitelist::set_allocated_m_nickname(::std::string* m_nickname) {
  if (m_nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_nickname_;
  }
  if (m_nickname) {
    set_has_m_nickname();
    m_nickname_ = m_nickname;
  } else {
    clear_has_m_nickname();
    m_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_HeadPhotoUrl = 10;
inline bool GM_Invitelist::has_m_headphotourl() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GM_Invitelist::set_has_m_headphotourl() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GM_Invitelist::clear_has_m_headphotourl() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GM_Invitelist::clear_m_headphotourl() {
  if (m_headphotourl_ != &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_->clear();
  }
  clear_has_m_headphotourl();
}
inline const ::std::string& GM_Invitelist::m_headphotourl() const {
  return *m_headphotourl_;
}
inline void GM_Invitelist::set_m_headphotourl(const ::std::string& value) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(value);
}
inline void GM_Invitelist::set_m_headphotourl(const char* value) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(value);
}
inline void GM_Invitelist::set_m_headphotourl(const char* value, size_t size) {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  m_headphotourl_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Invitelist::mutable_m_headphotourl() {
  set_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    m_headphotourl_ = new ::std::string;
  }
  return m_headphotourl_;
}
inline ::std::string* GM_Invitelist::release_m_headphotourl() {
  clear_has_m_headphotourl();
  if (m_headphotourl_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_headphotourl_;
    m_headphotourl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Invitelist::set_allocated_m_headphotourl(::std::string* m_headphotourl) {
  if (m_headphotourl_ != &::google::protobuf::internal::kEmptyString) {
    delete m_headphotourl_;
  }
  if (m_headphotourl) {
    set_has_m_headphotourl();
    m_headphotourl_ = m_headphotourl;
  } else {
    clear_has_m_headphotourl();
    m_headphotourl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GM_Invite_Agree_Return

// required int32 m_result = 1;
inline bool GM_Invite_Agree_Return::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Invite_Agree_Return::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Invite_Agree_Return::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Invite_Agree_Return::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GM_Invite_Agree_Return::m_result() const {
  return m_result_;
}
inline void GM_Invite_Agree_Return::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// required int32 m_friendid = 2;
inline bool GM_Invite_Agree_Return::has_m_friendid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Invite_Agree_Return::set_has_m_friendid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Invite_Agree_Return::clear_has_m_friendid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Invite_Agree_Return::clear_m_friendid() {
  m_friendid_ = 0;
  clear_has_m_friendid();
}
inline ::google::protobuf::int32 GM_Invite_Agree_Return::m_friendid() const {
  return m_friendid_;
}
inline void GM_Invite_Agree_Return::set_m_friendid(::google::protobuf::int32 value) {
  set_has_m_friendid();
  m_friendid_ = value;
}

// -------------------------------------------------------------------

// GM_Invite_AgreeAll_Return

// required int32 m_result = 1;
inline bool GM_Invite_AgreeAll_Return::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Invite_AgreeAll_Return::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Invite_AgreeAll_Return::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Invite_AgreeAll_Return::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GM_Invite_AgreeAll_Return::m_result() const {
  return m_result_;
}
inline void GM_Invite_AgreeAll_Return::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// repeated int32 m_friendid = 2;
inline int GM_Invite_AgreeAll_Return::m_friendid_size() const {
  return m_friendid_.size();
}
inline void GM_Invite_AgreeAll_Return::clear_m_friendid() {
  m_friendid_.Clear();
}
inline ::google::protobuf::int32 GM_Invite_AgreeAll_Return::m_friendid(int index) const {
  return m_friendid_.Get(index);
}
inline void GM_Invite_AgreeAll_Return::set_m_friendid(int index, ::google::protobuf::int32 value) {
  m_friendid_.Set(index, value);
}
inline void GM_Invite_AgreeAll_Return::add_m_friendid(::google::protobuf::int32 value) {
  m_friendid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GM_Invite_AgreeAll_Return::m_friendid() const {
  return m_friendid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GM_Invite_AgreeAll_Return::mutable_m_friendid() {
  return &m_friendid_;
}

// -------------------------------------------------------------------

// GM_Invite_Refuse_Return

// required int32 m_result = 1;
inline bool GM_Invite_Refuse_Return::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Invite_Refuse_Return::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Invite_Refuse_Return::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Invite_Refuse_Return::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GM_Invite_Refuse_Return::m_result() const {
  return m_result_;
}
inline void GM_Invite_Refuse_Return::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// required int32 m_friendid = 2;
inline bool GM_Invite_Refuse_Return::has_m_friendid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Invite_Refuse_Return::set_has_m_friendid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Invite_Refuse_Return::clear_has_m_friendid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Invite_Refuse_Return::clear_m_friendid() {
  m_friendid_ = 0;
  clear_has_m_friendid();
}
inline ::google::protobuf::int32 GM_Invite_Refuse_Return::m_friendid() const {
  return m_friendid_;
}
inline void GM_Invite_Refuse_Return::set_m_friendid(::google::protobuf::int32 value) {
  set_has_m_friendid();
  m_friendid_ = value;
}

// -------------------------------------------------------------------

// GM_Single_Friend_Recommend

// required string m_name = 1;
inline bool GM_Single_Friend_Recommend::has_m_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Single_Friend_Recommend::set_has_m_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Single_Friend_Recommend::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Single_Friend_Recommend::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& GM_Single_Friend_Recommend::m_name() const {
  return *m_name_;
}
inline void GM_Single_Friend_Recommend::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GM_Single_Friend_Recommend::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void GM_Single_Friend_Recommend::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Single_Friend_Recommend::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* GM_Single_Friend_Recommend::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Single_Friend_Recommend::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GM_Friend_Invite_Request

// required int32 m_friendid = 1;
inline bool GM_Friend_Invite_Request::has_m_friendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Friend_Invite_Request::set_has_m_friendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Friend_Invite_Request::clear_has_m_friendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Friend_Invite_Request::clear_m_friendid() {
  m_friendid_ = 0;
  clear_has_m_friendid();
}
inline ::google::protobuf::int32 GM_Friend_Invite_Request::m_friendid() const {
  return m_friendid_;
}
inline void GM_Friend_Invite_Request::set_m_friendid(::google::protobuf::int32 value) {
  set_has_m_friendid();
  m_friendid_ = value;
}

// required string m_content = 2;
inline bool GM_Friend_Invite_Request::has_m_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Friend_Invite_Request::set_has_m_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Friend_Invite_Request::clear_has_m_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Friend_Invite_Request::clear_m_content() {
  if (m_content_ != &::google::protobuf::internal::kEmptyString) {
    m_content_->clear();
  }
  clear_has_m_content();
}
inline const ::std::string& GM_Friend_Invite_Request::m_content() const {
  return *m_content_;
}
inline void GM_Friend_Invite_Request::set_m_content(const ::std::string& value) {
  set_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    m_content_ = new ::std::string;
  }
  m_content_->assign(value);
}
inline void GM_Friend_Invite_Request::set_m_content(const char* value) {
  set_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    m_content_ = new ::std::string;
  }
  m_content_->assign(value);
}
inline void GM_Friend_Invite_Request::set_m_content(const char* value, size_t size) {
  set_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    m_content_ = new ::std::string;
  }
  m_content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Friend_Invite_Request::mutable_m_content() {
  set_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    m_content_ = new ::std::string;
  }
  return m_content_;
}
inline ::std::string* GM_Friend_Invite_Request::release_m_content() {
  clear_has_m_content();
  if (m_content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_content_;
    m_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Friend_Invite_Request::set_allocated_m_content(::std::string* m_content) {
  if (m_content_ != &::google::protobuf::internal::kEmptyString) {
    delete m_content_;
  }
  if (m_content) {
    set_has_m_content();
    m_content_ = m_content;
  } else {
    clear_has_m_content();
    m_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GM_Friend_Request

// required int32 m_friendid = 1;
inline bool GM_Friend_Request::has_m_friendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Friend_Request::set_has_m_friendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Friend_Request::clear_has_m_friendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Friend_Request::clear_m_friendid() {
  m_friendid_ = 0;
  clear_has_m_friendid();
}
inline ::google::protobuf::int32 GM_Friend_Request::m_friendid() const {
  return m_friendid_;
}
inline void GM_Friend_Request::set_m_friendid(::google::protobuf::int32 value) {
  set_has_m_friendid();
  m_friendid_ = value;
}

// -------------------------------------------------------------------

// GM_Friend_Notice_Return

// required int32 m_id = 1;
inline bool GM_Friend_Notice_Return::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Friend_Notice_Return::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Friend_Notice_Return::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Friend_Notice_Return::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 GM_Friend_Notice_Return::m_id() const {
  return m_id_;
}
inline void GM_Friend_Notice_Return::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// required string m_rolename = 2;
inline bool GM_Friend_Notice_Return::has_m_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Friend_Notice_Return::set_has_m_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Friend_Notice_Return::clear_has_m_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Friend_Notice_Return::clear_m_rolename() {
  if (m_rolename_ != &::google::protobuf::internal::kEmptyString) {
    m_rolename_->clear();
  }
  clear_has_m_rolename();
}
inline const ::std::string& GM_Friend_Notice_Return::m_rolename() const {
  return *m_rolename_;
}
inline void GM_Friend_Notice_Return::set_m_rolename(const ::std::string& value) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(value);
}
inline void GM_Friend_Notice_Return::set_m_rolename(const char* value) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(value);
}
inline void GM_Friend_Notice_Return::set_m_rolename(const char* value, size_t size) {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  m_rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Friend_Notice_Return::mutable_m_rolename() {
  set_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    m_rolename_ = new ::std::string;
  }
  return m_rolename_;
}
inline ::std::string* GM_Friend_Notice_Return::release_m_rolename() {
  clear_has_m_rolename();
  if (m_rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_rolename_;
    m_rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Friend_Notice_Return::set_allocated_m_rolename(::std::string* m_rolename) {
  if (m_rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete m_rolename_;
  }
  if (m_rolename) {
    set_has_m_rolename();
    m_rolename_ = m_rolename;
  } else {
    clear_has_m_rolename();
    m_rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_friend_2etxt__INCLUDED
