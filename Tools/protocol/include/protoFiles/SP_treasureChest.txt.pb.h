// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SP_treasureChest.txt

#ifndef PROTOBUF_SP_5ftreasureChest_2etxt__INCLUDED
#define PROTOBUF_SP_5ftreasureChest_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SP_5ftreasureChest_2etxt();
void protobuf_AssignDesc_SP_5ftreasureChest_2etxt();
void protobuf_ShutdownFile_SP_5ftreasureChest_2etxt();

class SM_TreasureChestDatabaseInfo;
class SM_TreasureChestDatabaseInfoReturn;

// ===================================================================

class SM_TreasureChestDatabaseInfo : public ::google::protobuf::Message {
 public:
  SM_TreasureChestDatabaseInfo();
  virtual ~SM_TreasureChestDatabaseInfo();

  SM_TreasureChestDatabaseInfo(const SM_TreasureChestDatabaseInfo& from);

  inline SM_TreasureChestDatabaseInfo& operator=(const SM_TreasureChestDatabaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_TreasureChestDatabaseInfo& default_instance();

  void Swap(SM_TreasureChestDatabaseInfo* other);

  // implements Message ----------------------------------------------

  SM_TreasureChestDatabaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_TreasureChestDatabaseInfo& from);
  void MergeFrom(const SM_TreasureChestDatabaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_nChestType = 1;
  inline bool has_m_nchesttype() const;
  inline void clear_m_nchesttype();
  static const int kMNChestTypeFieldNumber = 1;
  inline ::google::protobuf::int32 m_nchesttype() const;
  inline void set_m_nchesttype(::google::protobuf::int32 value);

  // optional int32 m_nFreeTimes = 2;
  inline bool has_m_nfreetimes() const;
  inline void clear_m_nfreetimes();
  static const int kMNFreeTimesFieldNumber = 2;
  inline ::google::protobuf::int32 m_nfreetimes() const;
  inline void set_m_nfreetimes(::google::protobuf::int32 value);

  // optional int32 m_nStartTime = 3;
  inline bool has_m_nstarttime() const;
  inline void clear_m_nstarttime();
  static const int kMNStartTimeFieldNumber = 3;
  inline ::google::protobuf::int32 m_nstarttime() const;
  inline void set_m_nstarttime(::google::protobuf::int32 value);

  // optional int64 m_nOpenCount = 4;
  inline bool has_m_nopencount() const;
  inline void clear_m_nopencount();
  static const int kMNOpenCountFieldNumber = 4;
  inline ::google::protobuf::int64 m_nopencount() const;
  inline void set_m_nopencount(::google::protobuf::int64 value);

  // optional int32 bronze = 5;
  inline bool has_bronze() const;
  inline void clear_bronze();
  static const int kBronzeFieldNumber = 5;
  inline ::google::protobuf::int32 bronze() const;
  inline void set_bronze(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SM_TreasureChestDatabaseInfo)
 private:
  inline void set_has_m_nchesttype();
  inline void clear_has_m_nchesttype();
  inline void set_has_m_nfreetimes();
  inline void clear_has_m_nfreetimes();
  inline void set_has_m_nstarttime();
  inline void clear_has_m_nstarttime();
  inline void set_has_m_nopencount();
  inline void clear_has_m_nopencount();
  inline void set_has_bronze();
  inline void clear_has_bronze();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_nchesttype_;
  ::google::protobuf::int32 m_nfreetimes_;
  ::google::protobuf::int64 m_nopencount_;
  ::google::protobuf::int32 m_nstarttime_;
  ::google::protobuf::int32 bronze_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5ftreasureChest_2etxt();
  friend void protobuf_AssignDesc_SP_5ftreasureChest_2etxt();
  friend void protobuf_ShutdownFile_SP_5ftreasureChest_2etxt();

  void InitAsDefaultInstance();
  static SM_TreasureChestDatabaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class SM_TreasureChestDatabaseInfoReturn : public ::google::protobuf::Message {
 public:
  SM_TreasureChestDatabaseInfoReturn();
  virtual ~SM_TreasureChestDatabaseInfoReturn();

  SM_TreasureChestDatabaseInfoReturn(const SM_TreasureChestDatabaseInfoReturn& from);

  inline SM_TreasureChestDatabaseInfoReturn& operator=(const SM_TreasureChestDatabaseInfoReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_TreasureChestDatabaseInfoReturn& default_instance();

  void Swap(SM_TreasureChestDatabaseInfoReturn* other);

  // implements Message ----------------------------------------------

  SM_TreasureChestDatabaseInfoReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_TreasureChestDatabaseInfoReturn& from);
  void MergeFrom(const SM_TreasureChestDatabaseInfoReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_nRoleId = 1;
  inline bool has_m_nroleid() const;
  inline void clear_m_nroleid();
  static const int kMNRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_nroleid() const;
  inline void set_m_nroleid(::google::protobuf::int32 value);

  // optional int32 m_nCount = 2;
  inline bool has_m_ncount() const;
  inline void clear_m_ncount();
  static const int kMNCountFieldNumber = 2;
  inline ::google::protobuf::int32 m_ncount() const;
  inline void set_m_ncount(::google::protobuf::int32 value);

  // repeated .SM_TreasureChestDatabaseInfo m_stTreasureChestInfo = 3;
  inline int m_sttreasurechestinfo_size() const;
  inline void clear_m_sttreasurechestinfo();
  static const int kMStTreasureChestInfoFieldNumber = 3;
  inline const ::SM_TreasureChestDatabaseInfo& m_sttreasurechestinfo(int index) const;
  inline ::SM_TreasureChestDatabaseInfo* mutable_m_sttreasurechestinfo(int index);
  inline ::SM_TreasureChestDatabaseInfo* add_m_sttreasurechestinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SM_TreasureChestDatabaseInfo >&
      m_sttreasurechestinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SM_TreasureChestDatabaseInfo >*
      mutable_m_sttreasurechestinfo();

  // @@protoc_insertion_point(class_scope:SM_TreasureChestDatabaseInfoReturn)
 private:
  inline void set_has_m_nroleid();
  inline void clear_has_m_nroleid();
  inline void set_has_m_ncount();
  inline void clear_has_m_ncount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_nroleid_;
  ::google::protobuf::int32 m_ncount_;
  ::google::protobuf::RepeatedPtrField< ::SM_TreasureChestDatabaseInfo > m_sttreasurechestinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_SP_5ftreasureChest_2etxt();
  friend void protobuf_AssignDesc_SP_5ftreasureChest_2etxt();
  friend void protobuf_ShutdownFile_SP_5ftreasureChest_2etxt();

  void InitAsDefaultInstance();
  static SM_TreasureChestDatabaseInfoReturn* default_instance_;
};
// ===================================================================


// ===================================================================

// SM_TreasureChestDatabaseInfo

// required int32 m_nChestType = 1;
inline bool SM_TreasureChestDatabaseInfo::has_m_nchesttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_TreasureChestDatabaseInfo::set_has_m_nchesttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_TreasureChestDatabaseInfo::clear_has_m_nchesttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_TreasureChestDatabaseInfo::clear_m_nchesttype() {
  m_nchesttype_ = 0;
  clear_has_m_nchesttype();
}
inline ::google::protobuf::int32 SM_TreasureChestDatabaseInfo::m_nchesttype() const {
  return m_nchesttype_;
}
inline void SM_TreasureChestDatabaseInfo::set_m_nchesttype(::google::protobuf::int32 value) {
  set_has_m_nchesttype();
  m_nchesttype_ = value;
}

// optional int32 m_nFreeTimes = 2;
inline bool SM_TreasureChestDatabaseInfo::has_m_nfreetimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_TreasureChestDatabaseInfo::set_has_m_nfreetimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_TreasureChestDatabaseInfo::clear_has_m_nfreetimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_TreasureChestDatabaseInfo::clear_m_nfreetimes() {
  m_nfreetimes_ = 0;
  clear_has_m_nfreetimes();
}
inline ::google::protobuf::int32 SM_TreasureChestDatabaseInfo::m_nfreetimes() const {
  return m_nfreetimes_;
}
inline void SM_TreasureChestDatabaseInfo::set_m_nfreetimes(::google::protobuf::int32 value) {
  set_has_m_nfreetimes();
  m_nfreetimes_ = value;
}

// optional int32 m_nStartTime = 3;
inline bool SM_TreasureChestDatabaseInfo::has_m_nstarttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SM_TreasureChestDatabaseInfo::set_has_m_nstarttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SM_TreasureChestDatabaseInfo::clear_has_m_nstarttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SM_TreasureChestDatabaseInfo::clear_m_nstarttime() {
  m_nstarttime_ = 0;
  clear_has_m_nstarttime();
}
inline ::google::protobuf::int32 SM_TreasureChestDatabaseInfo::m_nstarttime() const {
  return m_nstarttime_;
}
inline void SM_TreasureChestDatabaseInfo::set_m_nstarttime(::google::protobuf::int32 value) {
  set_has_m_nstarttime();
  m_nstarttime_ = value;
}

// optional int64 m_nOpenCount = 4;
inline bool SM_TreasureChestDatabaseInfo::has_m_nopencount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SM_TreasureChestDatabaseInfo::set_has_m_nopencount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SM_TreasureChestDatabaseInfo::clear_has_m_nopencount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SM_TreasureChestDatabaseInfo::clear_m_nopencount() {
  m_nopencount_ = GOOGLE_LONGLONG(0);
  clear_has_m_nopencount();
}
inline ::google::protobuf::int64 SM_TreasureChestDatabaseInfo::m_nopencount() const {
  return m_nopencount_;
}
inline void SM_TreasureChestDatabaseInfo::set_m_nopencount(::google::protobuf::int64 value) {
  set_has_m_nopencount();
  m_nopencount_ = value;
}

// optional int32 bronze = 5;
inline bool SM_TreasureChestDatabaseInfo::has_bronze() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SM_TreasureChestDatabaseInfo::set_has_bronze() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SM_TreasureChestDatabaseInfo::clear_has_bronze() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SM_TreasureChestDatabaseInfo::clear_bronze() {
  bronze_ = 0;
  clear_has_bronze();
}
inline ::google::protobuf::int32 SM_TreasureChestDatabaseInfo::bronze() const {
  return bronze_;
}
inline void SM_TreasureChestDatabaseInfo::set_bronze(::google::protobuf::int32 value) {
  set_has_bronze();
  bronze_ = value;
}

// -------------------------------------------------------------------

// SM_TreasureChestDatabaseInfoReturn

// required int32 m_nRoleId = 1;
inline bool SM_TreasureChestDatabaseInfoReturn::has_m_nroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_TreasureChestDatabaseInfoReturn::set_has_m_nroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_TreasureChestDatabaseInfoReturn::clear_has_m_nroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_TreasureChestDatabaseInfoReturn::clear_m_nroleid() {
  m_nroleid_ = 0;
  clear_has_m_nroleid();
}
inline ::google::protobuf::int32 SM_TreasureChestDatabaseInfoReturn::m_nroleid() const {
  return m_nroleid_;
}
inline void SM_TreasureChestDatabaseInfoReturn::set_m_nroleid(::google::protobuf::int32 value) {
  set_has_m_nroleid();
  m_nroleid_ = value;
}

// optional int32 m_nCount = 2;
inline bool SM_TreasureChestDatabaseInfoReturn::has_m_ncount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_TreasureChestDatabaseInfoReturn::set_has_m_ncount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_TreasureChestDatabaseInfoReturn::clear_has_m_ncount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_TreasureChestDatabaseInfoReturn::clear_m_ncount() {
  m_ncount_ = 0;
  clear_has_m_ncount();
}
inline ::google::protobuf::int32 SM_TreasureChestDatabaseInfoReturn::m_ncount() const {
  return m_ncount_;
}
inline void SM_TreasureChestDatabaseInfoReturn::set_m_ncount(::google::protobuf::int32 value) {
  set_has_m_ncount();
  m_ncount_ = value;
}

// repeated .SM_TreasureChestDatabaseInfo m_stTreasureChestInfo = 3;
inline int SM_TreasureChestDatabaseInfoReturn::m_sttreasurechestinfo_size() const {
  return m_sttreasurechestinfo_.size();
}
inline void SM_TreasureChestDatabaseInfoReturn::clear_m_sttreasurechestinfo() {
  m_sttreasurechestinfo_.Clear();
}
inline const ::SM_TreasureChestDatabaseInfo& SM_TreasureChestDatabaseInfoReturn::m_sttreasurechestinfo(int index) const {
  return m_sttreasurechestinfo_.Get(index);
}
inline ::SM_TreasureChestDatabaseInfo* SM_TreasureChestDatabaseInfoReturn::mutable_m_sttreasurechestinfo(int index) {
  return m_sttreasurechestinfo_.Mutable(index);
}
inline ::SM_TreasureChestDatabaseInfo* SM_TreasureChestDatabaseInfoReturn::add_m_sttreasurechestinfo() {
  return m_sttreasurechestinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SM_TreasureChestDatabaseInfo >&
SM_TreasureChestDatabaseInfoReturn::m_sttreasurechestinfo() const {
  return m_sttreasurechestinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SM_TreasureChestDatabaseInfo >*
SM_TreasureChestDatabaseInfoReturn::mutable_m_sttreasurechestinfo() {
  return &m_sttreasurechestinfo_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_SP_5ftreasureChest_2etxt__INCLUDED
