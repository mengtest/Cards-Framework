// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mess.txt

#ifndef PROTOBUF_mess_2etxt__INCLUDED
#define PROTOBUF_mess_2etxt__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267 4996)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_mess_2etxt();
void protobuf_AssignDesc_mess_2etxt();
void protobuf_ShutdownFile_mess_2etxt();

class GM_Room_record_request;
class GM_Room_role;
class GM_Room_playerCount;
class GM_Room_room;
class GM_Room_record_return;
class GM_Room_dayscore_return;
class GM_PlayBack;
class SM_PlayBack;

// ===================================================================

class GM_Room_record_request : public ::google::protobuf::Message {
 public:
  GM_Room_record_request();
  virtual ~GM_Room_record_request();

  GM_Room_record_request(const GM_Room_record_request& from);

  inline GM_Room_record_request& operator=(const GM_Room_record_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Room_record_request& default_instance();

  void Swap(GM_Room_record_request* other);

  // implements Message ----------------------------------------------

  GM_Room_record_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Room_record_request& from);
  void MergeFrom(const GM_Room_record_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 page = 1;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 1;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);

  // optional int32 battletype = 2;
  inline bool has_battletype() const;
  inline void clear_battletype();
  static const int kBattletypeFieldNumber = 2;
  inline ::google::protobuf::int32 battletype() const;
  inline void set_battletype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Room_record_request)
 private:
  inline void set_has_page();
  inline void clear_has_page();
  inline void set_has_battletype();
  inline void clear_has_battletype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 page_;
  ::google::protobuf::int32 battletype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mess_2etxt();
  friend void protobuf_AssignDesc_mess_2etxt();
  friend void protobuf_ShutdownFile_mess_2etxt();

  void InitAsDefaultInstance();
  static GM_Room_record_request* default_instance_;
};
// -------------------------------------------------------------------

class GM_Room_role : public ::google::protobuf::Message {
 public:
  GM_Room_role();
  virtual ~GM_Room_role();

  GM_Room_role(const GM_Room_role& from);

  inline GM_Room_role& operator=(const GM_Room_role& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Room_role& default_instance();

  void Swap(GM_Room_role* other);

  // implements Message ----------------------------------------------

  GM_Room_role* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Room_role& from);
  void MergeFrom(const GM_Room_role& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string rolename = 1;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 1;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // optional int32 wingolde = 2;
  inline bool has_wingolde() const;
  inline void clear_wingolde();
  static const int kWingoldeFieldNumber = 2;
  inline ::google::protobuf::int32 wingolde() const;
  inline void set_wingolde(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Room_role)
 private:
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_wingolde();
  inline void clear_has_wingolde();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rolename_;
  ::google::protobuf::int32 wingolde_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mess_2etxt();
  friend void protobuf_AssignDesc_mess_2etxt();
  friend void protobuf_ShutdownFile_mess_2etxt();

  void InitAsDefaultInstance();
  static GM_Room_role* default_instance_;
};
// -------------------------------------------------------------------

class GM_Room_playerCount : public ::google::protobuf::Message {
 public:
  GM_Room_playerCount();
  virtual ~GM_Room_playerCount();

  GM_Room_playerCount(const GM_Room_playerCount& from);

  inline GM_Room_playerCount& operator=(const GM_Room_playerCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Room_playerCount& default_instance();

  void Swap(GM_Room_playerCount* other);

  // implements Message ----------------------------------------------

  GM_Room_playerCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Room_playerCount& from);
  void MergeFrom(const GM_Room_playerCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 begintime = 1;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBegintimeFieldNumber = 1;
  inline ::google::protobuf::int32 begintime() const;
  inline void set_begintime(::google::protobuf::int32 value);

  // optional int32 endtime = 2;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 2;
  inline ::google::protobuf::int32 endtime() const;
  inline void set_endtime(::google::protobuf::int32 value);

  // repeated .GM_Room_role role = 3;
  inline int role_size() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 3;
  inline const ::GM_Room_role& role(int index) const;
  inline ::GM_Room_role* mutable_role(int index);
  inline ::GM_Room_role* add_role();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Room_role >&
      role() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Room_role >*
      mutable_role();

  // optional int32 increid = 4;
  inline bool has_increid() const;
  inline void clear_increid();
  static const int kIncreidFieldNumber = 4;
  inline ::google::protobuf::int32 increid() const;
  inline void set_increid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Room_playerCount)
 private:
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_increid();
  inline void clear_has_increid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 begintime_;
  ::google::protobuf::int32 endtime_;
  ::google::protobuf::RepeatedPtrField< ::GM_Room_role > role_;
  ::google::protobuf::int32 increid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_mess_2etxt();
  friend void protobuf_AssignDesc_mess_2etxt();
  friend void protobuf_ShutdownFile_mess_2etxt();

  void InitAsDefaultInstance();
  static GM_Room_playerCount* default_instance_;
};
// -------------------------------------------------------------------

class GM_Room_room : public ::google::protobuf::Message {
 public:
  GM_Room_room();
  virtual ~GM_Room_room();

  GM_Room_room(const GM_Room_room& from);

  inline GM_Room_room& operator=(const GM_Room_room& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Room_room& default_instance();

  void Swap(GM_Room_room* other);

  // implements Message ----------------------------------------------

  GM_Room_room* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Room_room& from);
  void MergeFrom(const GM_Room_room& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 begintime = 1;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBegintimeFieldNumber = 1;
  inline ::google::protobuf::int32 begintime() const;
  inline void set_begintime(::google::protobuf::int32 value);

  // optional int32 endtime = 2;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 2;
  inline ::google::protobuf::int32 endtime() const;
  inline void set_endtime(::google::protobuf::int32 value);

  // optional int32 rate = 3;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 3;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // optional int32 roleid = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 4;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .GM_Room_playerCount playercount = 6;
  inline int playercount_size() const;
  inline void clear_playercount();
  static const int kPlayercountFieldNumber = 6;
  inline const ::GM_Room_playerCount& playercount(int index) const;
  inline ::GM_Room_playerCount* mutable_playercount(int index);
  inline ::GM_Room_playerCount* add_playercount();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Room_playerCount >&
      playercount() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Room_playerCount >*
      mutable_playercount();

  // @@protoc_insertion_point(class_scope:GM_Room_room)
 private:
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 begintime_;
  ::google::protobuf::int32 endtime_;
  ::google::protobuf::int32 rate_;
  ::google::protobuf::int32 roleid_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::GM_Room_playerCount > playercount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_mess_2etxt();
  friend void protobuf_AssignDesc_mess_2etxt();
  friend void protobuf_ShutdownFile_mess_2etxt();

  void InitAsDefaultInstance();
  static GM_Room_room* default_instance_;
};
// -------------------------------------------------------------------

class GM_Room_record_return : public ::google::protobuf::Message {
 public:
  GM_Room_record_return();
  virtual ~GM_Room_record_return();

  GM_Room_record_return(const GM_Room_record_return& from);

  inline GM_Room_record_return& operator=(const GM_Room_record_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Room_record_return& default_instance();

  void Swap(GM_Room_record_return* other);

  // implements Message ----------------------------------------------

  GM_Room_record_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Room_record_return& from);
  void MergeFrom(const GM_Room_record_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorid = 1;
  inline bool has_errorid() const;
  inline void clear_errorid();
  static const int kErroridFieldNumber = 1;
  inline ::google::protobuf::int32 errorid() const;
  inline void set_errorid(::google::protobuf::int32 value);

  // repeated .GM_Room_room data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::GM_Room_room& data(int index) const;
  inline ::GM_Room_room* mutable_data(int index);
  inline ::GM_Room_room* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::GM_Room_room >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM_Room_room >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:GM_Room_record_return)
 private:
  inline void set_has_errorid();
  inline void clear_has_errorid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GM_Room_room > data_;
  ::google::protobuf::int32 errorid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mess_2etxt();
  friend void protobuf_AssignDesc_mess_2etxt();
  friend void protobuf_ShutdownFile_mess_2etxt();

  void InitAsDefaultInstance();
  static GM_Room_record_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_Room_dayscore_return : public ::google::protobuf::Message {
 public:
  GM_Room_dayscore_return();
  virtual ~GM_Room_dayscore_return();

  GM_Room_dayscore_return(const GM_Room_dayscore_return& from);

  inline GM_Room_dayscore_return& operator=(const GM_Room_dayscore_return& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Room_dayscore_return& default_instance();

  void Swap(GM_Room_dayscore_return* other);

  // implements Message ----------------------------------------------

  GM_Room_dayscore_return* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_Room_dayscore_return& from);
  void MergeFrom(const GM_Room_dayscore_return& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Room_dayscore_return)
 private:
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_mess_2etxt();
  friend void protobuf_AssignDesc_mess_2etxt();
  friend void protobuf_ShutdownFile_mess_2etxt();

  void InitAsDefaultInstance();
  static GM_Room_dayscore_return* default_instance_;
};
// -------------------------------------------------------------------

class GM_PlayBack : public ::google::protobuf::Message {
 public:
  GM_PlayBack();
  virtual ~GM_PlayBack();

  GM_PlayBack(const GM_PlayBack& from);

  inline GM_PlayBack& operator=(const GM_PlayBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_PlayBack& default_instance();

  void Swap(GM_PlayBack* other);

  // implements Message ----------------------------------------------

  GM_PlayBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GM_PlayBack& from);
  void MergeFrom(const GM_PlayBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_Result = 1;
  inline bool has_m_result() const;
  inline void clear_m_result();
  static const int kMResultFieldNumber = 1;
  inline ::google::protobuf::int32 m_result() const;
  inline void set_m_result(::google::protobuf::int32 value);

  // repeated int32 m_MessageID = 2;
  inline int m_messageid_size() const;
  inline void clear_m_messageid();
  static const int kMMessageIDFieldNumber = 2;
  inline ::google::protobuf::int32 m_messageid(int index) const;
  inline void set_m_messageid(int index, ::google::protobuf::int32 value);
  inline void add_m_messageid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_messageid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_messageid();

  // repeated bytes m_ByteData = 3;
  inline int m_bytedata_size() const;
  inline void clear_m_bytedata();
  static const int kMByteDataFieldNumber = 3;
  inline const ::std::string& m_bytedata(int index) const;
  inline ::std::string* mutable_m_bytedata(int index);
  inline void set_m_bytedata(int index, const ::std::string& value);
  inline void set_m_bytedata(int index, const char* value);
  inline void set_m_bytedata(int index, const void* value, size_t size);
  inline ::std::string* add_m_bytedata();
  inline void add_m_bytedata(const ::std::string& value);
  inline void add_m_bytedata(const char* value);
  inline void add_m_bytedata(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& m_bytedata() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_m_bytedata();

  // @@protoc_insertion_point(class_scope:GM_PlayBack)
 private:
  inline void set_has_m_result();
  inline void clear_has_m_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_messageid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> m_bytedata_;
  ::google::protobuf::int32 m_result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_mess_2etxt();
  friend void protobuf_AssignDesc_mess_2etxt();
  friend void protobuf_ShutdownFile_mess_2etxt();

  void InitAsDefaultInstance();
  static GM_PlayBack* default_instance_;
};
// -------------------------------------------------------------------

class SM_PlayBack : public ::google::protobuf::Message {
 public:
  SM_PlayBack();
  virtual ~SM_PlayBack();

  SM_PlayBack(const SM_PlayBack& from);

  inline SM_PlayBack& operator=(const SM_PlayBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SM_PlayBack& default_instance();

  void Swap(SM_PlayBack* other);

  // implements Message ----------------------------------------------

  SM_PlayBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SM_PlayBack& from);
  void MergeFrom(const SM_PlayBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m_Increid = 1;
  inline bool has_m_increid() const;
  inline void clear_m_increid();
  static const int kMIncreidFieldNumber = 1;
  inline ::google::protobuf::int32 m_increid() const;
  inline void set_m_increid(::google::protobuf::int32 value);

  // optional .GM_PlayBack m_PlaybackData = 2;
  inline bool has_m_playbackdata() const;
  inline void clear_m_playbackdata();
  static const int kMPlaybackDataFieldNumber = 2;
  inline const ::GM_PlayBack& m_playbackdata() const;
  inline ::GM_PlayBack* mutable_m_playbackdata();
  inline ::GM_PlayBack* release_m_playbackdata();
  inline void set_allocated_m_playbackdata(::GM_PlayBack* m_playbackdata);

  // @@protoc_insertion_point(class_scope:SM_PlayBack)
 private:
  inline void set_has_m_increid();
  inline void clear_has_m_increid();
  inline void set_has_m_playbackdata();
  inline void clear_has_m_playbackdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GM_PlayBack* m_playbackdata_;
  ::google::protobuf::int32 m_increid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mess_2etxt();
  friend void protobuf_AssignDesc_mess_2etxt();
  friend void protobuf_ShutdownFile_mess_2etxt();

  void InitAsDefaultInstance();
  static SM_PlayBack* default_instance_;
};
// ===================================================================


// ===================================================================

// GM_Room_record_request

// required int32 page = 1;
inline bool GM_Room_record_request::has_page() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Room_record_request::set_has_page() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Room_record_request::clear_has_page() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Room_record_request::clear_page() {
  page_ = 0;
  clear_has_page();
}
inline ::google::protobuf::int32 GM_Room_record_request::page() const {
  return page_;
}
inline void GM_Room_record_request::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
}

// optional int32 battletype = 2;
inline bool GM_Room_record_request::has_battletype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Room_record_request::set_has_battletype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Room_record_request::clear_has_battletype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Room_record_request::clear_battletype() {
  battletype_ = 0;
  clear_has_battletype();
}
inline ::google::protobuf::int32 GM_Room_record_request::battletype() const {
  return battletype_;
}
inline void GM_Room_record_request::set_battletype(::google::protobuf::int32 value) {
  set_has_battletype();
  battletype_ = value;
}

// -------------------------------------------------------------------

// GM_Room_role

// required string rolename = 1;
inline bool GM_Room_role::has_rolename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Room_role::set_has_rolename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Room_role::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Room_role::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& GM_Room_role::rolename() const {
  return *rolename_;
}
inline void GM_Room_role::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void GM_Room_role::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void GM_Room_role::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Room_role::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* GM_Room_role::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Room_role::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 wingolde = 2;
inline bool GM_Room_role::has_wingolde() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Room_role::set_has_wingolde() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Room_role::clear_has_wingolde() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Room_role::clear_wingolde() {
  wingolde_ = 0;
  clear_has_wingolde();
}
inline ::google::protobuf::int32 GM_Room_role::wingolde() const {
  return wingolde_;
}
inline void GM_Room_role::set_wingolde(::google::protobuf::int32 value) {
  set_has_wingolde();
  wingolde_ = value;
}

// -------------------------------------------------------------------

// GM_Room_playerCount

// required int32 begintime = 1;
inline bool GM_Room_playerCount::has_begintime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Room_playerCount::set_has_begintime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Room_playerCount::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Room_playerCount::clear_begintime() {
  begintime_ = 0;
  clear_has_begintime();
}
inline ::google::protobuf::int32 GM_Room_playerCount::begintime() const {
  return begintime_;
}
inline void GM_Room_playerCount::set_begintime(::google::protobuf::int32 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int32 endtime = 2;
inline bool GM_Room_playerCount::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Room_playerCount::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Room_playerCount::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Room_playerCount::clear_endtime() {
  endtime_ = 0;
  clear_has_endtime();
}
inline ::google::protobuf::int32 GM_Room_playerCount::endtime() const {
  return endtime_;
}
inline void GM_Room_playerCount::set_endtime(::google::protobuf::int32 value) {
  set_has_endtime();
  endtime_ = value;
}

// repeated .GM_Room_role role = 3;
inline int GM_Room_playerCount::role_size() const {
  return role_.size();
}
inline void GM_Room_playerCount::clear_role() {
  role_.Clear();
}
inline const ::GM_Room_role& GM_Room_playerCount::role(int index) const {
  return role_.Get(index);
}
inline ::GM_Room_role* GM_Room_playerCount::mutable_role(int index) {
  return role_.Mutable(index);
}
inline ::GM_Room_role* GM_Room_playerCount::add_role() {
  return role_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Room_role >&
GM_Room_playerCount::role() const {
  return role_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Room_role >*
GM_Room_playerCount::mutable_role() {
  return &role_;
}

// optional int32 increid = 4;
inline bool GM_Room_playerCount::has_increid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Room_playerCount::set_has_increid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Room_playerCount::clear_has_increid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Room_playerCount::clear_increid() {
  increid_ = 0;
  clear_has_increid();
}
inline ::google::protobuf::int32 GM_Room_playerCount::increid() const {
  return increid_;
}
inline void GM_Room_playerCount::set_increid(::google::protobuf::int32 value) {
  set_has_increid();
  increid_ = value;
}

// -------------------------------------------------------------------

// GM_Room_room

// required int32 begintime = 1;
inline bool GM_Room_room::has_begintime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Room_room::set_has_begintime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Room_room::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Room_room::clear_begintime() {
  begintime_ = 0;
  clear_has_begintime();
}
inline ::google::protobuf::int32 GM_Room_room::begintime() const {
  return begintime_;
}
inline void GM_Room_room::set_begintime(::google::protobuf::int32 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int32 endtime = 2;
inline bool GM_Room_room::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Room_room::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Room_room::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Room_room::clear_endtime() {
  endtime_ = 0;
  clear_has_endtime();
}
inline ::google::protobuf::int32 GM_Room_room::endtime() const {
  return endtime_;
}
inline void GM_Room_room::set_endtime(::google::protobuf::int32 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional int32 rate = 3;
inline bool GM_Room_room::has_rate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Room_room::set_has_rate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Room_room::clear_has_rate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Room_room::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 GM_Room_room::rate() const {
  return rate_;
}
inline void GM_Room_room::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
}

// optional int32 roleid = 4;
inline bool GM_Room_room::has_roleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GM_Room_room::set_has_roleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GM_Room_room::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GM_Room_room::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Room_room::roleid() const {
  return roleid_;
}
inline void GM_Room_room::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional string name = 5;
inline bool GM_Room_room::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GM_Room_room::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GM_Room_room::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GM_Room_room::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GM_Room_room::name() const {
  return *name_;
}
inline void GM_Room_room::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GM_Room_room::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GM_Room_room::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_Room_room::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GM_Room_room::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GM_Room_room::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .GM_Room_playerCount playercount = 6;
inline int GM_Room_room::playercount_size() const {
  return playercount_.size();
}
inline void GM_Room_room::clear_playercount() {
  playercount_.Clear();
}
inline const ::GM_Room_playerCount& GM_Room_room::playercount(int index) const {
  return playercount_.Get(index);
}
inline ::GM_Room_playerCount* GM_Room_room::mutable_playercount(int index) {
  return playercount_.Mutable(index);
}
inline ::GM_Room_playerCount* GM_Room_room::add_playercount() {
  return playercount_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Room_playerCount >&
GM_Room_room::playercount() const {
  return playercount_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Room_playerCount >*
GM_Room_room::mutable_playercount() {
  return &playercount_;
}

// -------------------------------------------------------------------

// GM_Room_record_return

// required int32 errorid = 1;
inline bool GM_Room_record_return::has_errorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Room_record_return::set_has_errorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Room_record_return::clear_has_errorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Room_record_return::clear_errorid() {
  errorid_ = 0;
  clear_has_errorid();
}
inline ::google::protobuf::int32 GM_Room_record_return::errorid() const {
  return errorid_;
}
inline void GM_Room_record_return::set_errorid(::google::protobuf::int32 value) {
  set_has_errorid();
  errorid_ = value;
}

// repeated .GM_Room_room data = 2;
inline int GM_Room_record_return::data_size() const {
  return data_.size();
}
inline void GM_Room_record_return::clear_data() {
  data_.Clear();
}
inline const ::GM_Room_room& GM_Room_record_return::data(int index) const {
  return data_.Get(index);
}
inline ::GM_Room_room* GM_Room_record_return::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::GM_Room_room* GM_Room_record_return::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM_Room_room >&
GM_Room_record_return::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM_Room_room >*
GM_Room_record_return::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GM_Room_dayscore_return

// required int32 score = 1;
inline bool GM_Room_dayscore_return::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Room_dayscore_return::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Room_dayscore_return::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Room_dayscore_return::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 GM_Room_dayscore_return::score() const {
  return score_;
}
inline void GM_Room_dayscore_return::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// GM_PlayBack

// required int32 m_Result = 1;
inline bool GM_PlayBack::has_m_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_PlayBack::set_has_m_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_PlayBack::clear_has_m_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_PlayBack::clear_m_result() {
  m_result_ = 0;
  clear_has_m_result();
}
inline ::google::protobuf::int32 GM_PlayBack::m_result() const {
  return m_result_;
}
inline void GM_PlayBack::set_m_result(::google::protobuf::int32 value) {
  set_has_m_result();
  m_result_ = value;
}

// repeated int32 m_MessageID = 2;
inline int GM_PlayBack::m_messageid_size() const {
  return m_messageid_.size();
}
inline void GM_PlayBack::clear_m_messageid() {
  m_messageid_.Clear();
}
inline ::google::protobuf::int32 GM_PlayBack::m_messageid(int index) const {
  return m_messageid_.Get(index);
}
inline void GM_PlayBack::set_m_messageid(int index, ::google::protobuf::int32 value) {
  m_messageid_.Set(index, value);
}
inline void GM_PlayBack::add_m_messageid(::google::protobuf::int32 value) {
  m_messageid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GM_PlayBack::m_messageid() const {
  return m_messageid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GM_PlayBack::mutable_m_messageid() {
  return &m_messageid_;
}

// repeated bytes m_ByteData = 3;
inline int GM_PlayBack::m_bytedata_size() const {
  return m_bytedata_.size();
}
inline void GM_PlayBack::clear_m_bytedata() {
  m_bytedata_.Clear();
}
inline const ::std::string& GM_PlayBack::m_bytedata(int index) const {
  return m_bytedata_.Get(index);
}
inline ::std::string* GM_PlayBack::mutable_m_bytedata(int index) {
  return m_bytedata_.Mutable(index);
}
inline void GM_PlayBack::set_m_bytedata(int index, const ::std::string& value) {
  m_bytedata_.Mutable(index)->assign(value);
}
inline void GM_PlayBack::set_m_bytedata(int index, const char* value) {
  m_bytedata_.Mutable(index)->assign(value);
}
inline void GM_PlayBack::set_m_bytedata(int index, const void* value, size_t size) {
  m_bytedata_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GM_PlayBack::add_m_bytedata() {
  return m_bytedata_.Add();
}
inline void GM_PlayBack::add_m_bytedata(const ::std::string& value) {
  m_bytedata_.Add()->assign(value);
}
inline void GM_PlayBack::add_m_bytedata(const char* value) {
  m_bytedata_.Add()->assign(value);
}
inline void GM_PlayBack::add_m_bytedata(const void* value, size_t size) {
  m_bytedata_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GM_PlayBack::m_bytedata() const {
  return m_bytedata_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GM_PlayBack::mutable_m_bytedata() {
  return &m_bytedata_;
}

// -------------------------------------------------------------------

// SM_PlayBack

// required int32 m_Increid = 1;
inline bool SM_PlayBack::has_m_increid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SM_PlayBack::set_has_m_increid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SM_PlayBack::clear_has_m_increid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SM_PlayBack::clear_m_increid() {
  m_increid_ = 0;
  clear_has_m_increid();
}
inline ::google::protobuf::int32 SM_PlayBack::m_increid() const {
  return m_increid_;
}
inline void SM_PlayBack::set_m_increid(::google::protobuf::int32 value) {
  set_has_m_increid();
  m_increid_ = value;
}

// optional .GM_PlayBack m_PlaybackData = 2;
inline bool SM_PlayBack::has_m_playbackdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SM_PlayBack::set_has_m_playbackdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SM_PlayBack::clear_has_m_playbackdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SM_PlayBack::clear_m_playbackdata() {
  if (m_playbackdata_ != NULL) m_playbackdata_->::GM_PlayBack::Clear();
  clear_has_m_playbackdata();
}
inline const ::GM_PlayBack& SM_PlayBack::m_playbackdata() const {
  return m_playbackdata_ != NULL ? *m_playbackdata_ : *default_instance_->m_playbackdata_;
}
inline ::GM_PlayBack* SM_PlayBack::mutable_m_playbackdata() {
  set_has_m_playbackdata();
  if (m_playbackdata_ == NULL) m_playbackdata_ = new ::GM_PlayBack;
  return m_playbackdata_;
}
inline ::GM_PlayBack* SM_PlayBack::release_m_playbackdata() {
  clear_has_m_playbackdata();
  ::GM_PlayBack* temp = m_playbackdata_;
  m_playbackdata_ = NULL;
  return temp;
}
inline void SM_PlayBack::set_allocated_m_playbackdata(::GM_PlayBack* m_playbackdata) {
  delete m_playbackdata_;
  m_playbackdata_ = m_playbackdata;
  if (m_playbackdata) {
    set_has_m_playbackdata();
  } else {
    clear_has_m_playbackdata();
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_mess_2etxt__INCLUDED
