//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class NCSpeedLight_UIManager_DialogTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(NCSpeedLight.UIManager.DialogType));
		L.RegVar("StandardDialog", get_StandardDialog, null);
		L.RegVar("ProgressDialog", get_ProgressDialog, null);
		L.RegVar("TipsDialog", get_TipsDialog, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_StandardDialog(IntPtr L)
	{
		ToLua.Push(L, NCSpeedLight.UIManager.DialogType.StandardDialog);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ProgressDialog(IntPtr L)
	{
		ToLua.Push(L, NCSpeedLight.UIManager.DialogType.ProgressDialog);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TipsDialog(IntPtr L)
	{
		ToLua.Push(L, NCSpeedLight.UIManager.DialogType.TipsDialog);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		NCSpeedLight.UIManager.DialogType o = (NCSpeedLight.UIManager.DialogType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

