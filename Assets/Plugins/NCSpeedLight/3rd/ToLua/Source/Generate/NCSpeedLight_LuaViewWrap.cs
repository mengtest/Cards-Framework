//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class NCSpeedLight_LuaViewWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(NCSpeedLight.LuaView), typeof(NCSpeedLight.LuaBehaviour));
		L.RegFunction("RegisterNetEvent", RegisterNetEvent);
		L.RegFunction("UnregisterNetEvent", UnregisterNetEvent);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterNetEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			NCSpeedLight.LuaView obj = (NCSpeedLight.LuaView)ToLua.CheckObject(L, 1, typeof(NCSpeedLight.LuaView));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			NCSpeedLight.EventHandlerDelegate arg1 = null;
			LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

			if (funcType3 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (NCSpeedLight.EventHandlerDelegate)ToLua.CheckObject(L, 3, typeof(NCSpeedLight.EventHandlerDelegate));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 3);
				arg1 = DelegateFactory.CreateDelegate(typeof(NCSpeedLight.EventHandlerDelegate), func) as NCSpeedLight.EventHandlerDelegate;
			}

			obj.RegisterNetEvent(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnregisterNetEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			NCSpeedLight.LuaView obj = (NCSpeedLight.LuaView)ToLua.CheckObject(L, 1, typeof(NCSpeedLight.LuaView));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			NCSpeedLight.EventHandlerDelegate arg1 = null;
			LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

			if (funcType3 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (NCSpeedLight.EventHandlerDelegate)ToLua.CheckObject(L, 3, typeof(NCSpeedLight.EventHandlerDelegate));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 3);
				arg1 = DelegateFactory.CreateDelegate(typeof(NCSpeedLight.EventHandlerDelegate), func) as NCSpeedLight.EventHandlerDelegate;
			}

			obj.UnregisterNetEvent(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

