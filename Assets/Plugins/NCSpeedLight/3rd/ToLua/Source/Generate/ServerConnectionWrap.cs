//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ServerConnectionWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ServerConnection), typeof(System.Object));
		L.RegFunction("GetStateListener", GetStateListener);
		L.RegFunction("SetNetStateListener", SetNetStateListener);
		L.RegFunction("IsConnected", IsConnected);
		L.RegFunction("Connect", Connect);
		L.RegFunction("Reconnect", Reconnect);
		L.RegFunction("Disconnect", Disconnect);
		L.RegFunction("Update", Update);
		L.RegFunction("SendMessage", SendMessage);
		L.RegFunction("SendEmpty", SendEmpty);
		L.RegFunction("New", _CreateServerConnection);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateServerConnection(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				ServerConnection obj = new ServerConnection();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: ServerConnection.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetStateListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ServerConnection obj = (ServerConnection)ToLua.CheckObject(L, 1, typeof(ServerConnection));
			ServerConnection.Listener o = obj.GetStateListener();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetNetStateListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ServerConnection obj = (ServerConnection)ToLua.CheckObject(L, 1, typeof(ServerConnection));
			ServerConnection.Listener arg0 = (ServerConnection.Listener)ToLua.CheckObject(L, 2, typeof(ServerConnection.Listener));
			obj.SetNetStateListener(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsConnected(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ServerConnection obj = (ServerConnection)ToLua.CheckObject(L, 1, typeof(ServerConnection));
			bool o = obj.IsConnected();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Connect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ServerConnection obj = (ServerConnection)ToLua.CheckObject(L, 1, typeof(ServerConnection));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			bool o = obj.Connect(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Reconnect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ServerConnection obj = (ServerConnection)ToLua.CheckObject(L, 1, typeof(ServerConnection));
			bool o = obj.Reconnect();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Disconnect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ServerConnection obj = (ServerConnection)ToLua.CheckObject(L, 1, typeof(ServerConnection));
			obj.Disconnect();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ServerConnection obj = (ServerConnection)ToLua.CheckObject(L, 1, typeof(ServerConnection));
			obj.Update();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			ServerConnection obj = (ServerConnection)ToLua.CheckObject(L, 1, typeof(ServerConnection));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			bool o = obj.SendMessage(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendEmpty(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ServerConnection obj = (ServerConnection)ToLua.CheckObject(L, 1, typeof(ServerConnection));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.SendEmpty(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

