//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class RCloud_RCErrorCodeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(RCloud.RCErrorCode));
		L.RegVar("ERRORCODE_UNKNOWN", get_ERRORCODE_UNKNOWN, null);
		L.RegVar("REJECTED_BY_BLACKLIST", get_REJECTED_BY_BLACKLIST, null);
		L.RegVar("ERRORCODE_TIMEOUT", get_ERRORCODE_TIMEOUT, null);
		L.RegVar("SEND_MSG_FREQUENCY_OVERRUN", get_SEND_MSG_FREQUENCY_OVERRUN, null);
		L.RegVar("NOT_IN_DISCUSSION", get_NOT_IN_DISCUSSION, null);
		L.RegVar("NOT_IN_GROUP", get_NOT_IN_GROUP, null);
		L.RegVar("FORBIDDEN_IN_GROUP", get_FORBIDDEN_IN_GROUP, null);
		L.RegVar("NOT_IN_CHATROOM", get_NOT_IN_CHATROOM, null);
		L.RegVar("FORBIDDEN_IN_CHATROOM", get_FORBIDDEN_IN_CHATROOM, null);
		L.RegVar("KICKED_FROM_CHATROOM", get_KICKED_FROM_CHATROOM, null);
		L.RegVar("RC_CHATROOM_NOT_EXIST", get_RC_CHATROOM_NOT_EXIST, null);
		L.RegVar("RC_CHATROOM_IS_FULL", get_RC_CHATROOM_IS_FULL, null);
		L.RegVar("RC_CHANNEL_INVALID", get_RC_CHANNEL_INVALID, null);
		L.RegVar("RC_NETWORK_UNAVAILABLE", get_RC_NETWORK_UNAVAILABLE, null);
		L.RegVar("CLIENT_NOT_INIT", get_CLIENT_NOT_INIT, null);
		L.RegVar("DATABASE_ERROR", get_DATABASE_ERROR, null);
		L.RegVar("INVALID_PARAMETER", get_INVALID_PARAMETER, null);
		L.RegVar("MSG_ROAMING_SERVICE_UNAVAILABLE", get_MSG_ROAMING_SERVICE_UNAVAILABLE, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ERRORCODE_UNKNOWN(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.ERRORCODE_UNKNOWN);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_REJECTED_BY_BLACKLIST(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.REJECTED_BY_BLACKLIST);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ERRORCODE_TIMEOUT(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.ERRORCODE_TIMEOUT);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SEND_MSG_FREQUENCY_OVERRUN(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.SEND_MSG_FREQUENCY_OVERRUN);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NOT_IN_DISCUSSION(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.NOT_IN_DISCUSSION);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NOT_IN_GROUP(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.NOT_IN_GROUP);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FORBIDDEN_IN_GROUP(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.FORBIDDEN_IN_GROUP);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NOT_IN_CHATROOM(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.NOT_IN_CHATROOM);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FORBIDDEN_IN_CHATROOM(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.FORBIDDEN_IN_CHATROOM);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_KICKED_FROM_CHATROOM(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.KICKED_FROM_CHATROOM);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RC_CHATROOM_NOT_EXIST(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.RC_CHATROOM_NOT_EXIST);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RC_CHATROOM_IS_FULL(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.RC_CHATROOM_IS_FULL);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RC_CHANNEL_INVALID(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.RC_CHANNEL_INVALID);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RC_NETWORK_UNAVAILABLE(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.RC_NETWORK_UNAVAILABLE);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CLIENT_NOT_INIT(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.CLIENT_NOT_INIT);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DATABASE_ERROR(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.DATABASE_ERROR);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_INVALID_PARAMETER(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.INVALID_PARAMETER);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MSG_ROAMING_SERVICE_UNAVAILABLE(IntPtr L)
	{
		ToLua.Push(L, RCloud.RCErrorCode.MSG_ROAMING_SERVICE_UNAVAILABLE);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		RCloud.RCErrorCode o = (RCloud.RCErrorCode)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

