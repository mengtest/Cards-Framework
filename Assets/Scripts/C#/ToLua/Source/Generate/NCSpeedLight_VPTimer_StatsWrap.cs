//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class NCSpeedLight_VPTimer_StatsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(NCSpeedLight.VPTimer.Stats), null);
		L.RegFunction("New", _CreateNCSpeedLight_VPTimer_Stats);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Created", get_Created, set_Created);
		L.RegVar("Inactive", get_Inactive, set_Inactive);
		L.RegVar("Active", get_Active, set_Active);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateNCSpeedLight_VPTimer_Stats(IntPtr L)
	{
		NCSpeedLight.VPTimer.Stats obj = new NCSpeedLight.VPTimer.Stats();
		ToLua.PushValue(L, obj);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Created(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NCSpeedLight.VPTimer.Stats obj = (NCSpeedLight.VPTimer.Stats)o;
			int ret = obj.Created;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Created on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Inactive(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NCSpeedLight.VPTimer.Stats obj = (NCSpeedLight.VPTimer.Stats)o;
			int ret = obj.Inactive;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Inactive on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Active(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NCSpeedLight.VPTimer.Stats obj = (NCSpeedLight.VPTimer.Stats)o;
			int ret = obj.Active;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Active on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Created(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NCSpeedLight.VPTimer.Stats obj = (NCSpeedLight.VPTimer.Stats)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Created = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Created on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Inactive(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NCSpeedLight.VPTimer.Stats obj = (NCSpeedLight.VPTimer.Stats)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Inactive = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Inactive on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Active(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NCSpeedLight.VPTimer.Stats obj = (NCSpeedLight.VPTimer.Stats)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Active = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Active on a nil value" : e.Message);
		}
	}
}

